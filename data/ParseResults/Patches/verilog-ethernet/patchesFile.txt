CommitId: 16fec34ddc2262d6206731e214698d7c3611e95b
Default FIFO size at least 2 MTU (3000 bytes)
--- a/rtl/eth_mac_1g_fifo.v
+++ b/rtl/eth_mac_1g_fifo.v
@@ -33,8 +33,8 @@ module eth_mac_1g_fifo #
 (
     parameter ENABLE_PADDING = 1,
     parameter MIN_FRAME_LENGTH = 64,
-    parameter TX_FIFO_ADDR_WIDTH = 9,
-    parameter RX_FIFO_ADDR_WIDTH = 9
+    parameter TX_FIFO_ADDR_WIDTH = 12,
+    parameter RX_FIFO_ADDR_WIDTH = 12
 )
 (
     input  wire        rx_clk,
ParseResult:
UPD HdlIdDef@@TX_FIFO_ADDR_WIDTH to TX_FIFO_ADDR_WIDTH
    UPD HdlValueInt@@9 to 12

UPD HdlIdDef@@RX_FIFO_ADDR_WIDTH to RX_FIFO_ADDR_WIDTH
    UPD HdlValueInt@@9 to 12


CommitId: 1bec4857660fd25745f00a82511b2e25cca778b9
Fix constants
--- a/rtl/arp.v
+++ b/rtl/arp.v
@@ -284,7 +284,7 @@ always @* begin
                     outgoing_arp_tha_next = incoming_arp_sha;
                     outgoing_arp_tpa_next = incoming_arp_spa;
                 end
-            end else if (incoming_arp_oper == ARP_OPER_INARP_REPLY) begin
+            end else if (incoming_arp_oper == ARP_OPER_INARP_REQUEST) begin
                 // INARP request
                 if (incoming_arp_tha == local_mac) begin
                     // send reply frame to valid incoming request
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        UPD HdlValueId@@ARP_OPER_INARP_REPLY to ARP_OPER_INARP_REQUEST


CommitId: 6795c25e7ffd5d8380e3fc1f8b34e30179a24df7
Fix use before define
--- a/rtl/axis_cobs_encode.v
+++ b/rtl/axis_cobs_encode.v
@@ -86,8 +86,6 @@ wire      m_axis_tready_int_early;
 
 reg s_axis_tready_mask;
 
-assign s_axis_tready = code_fifo_in_tready && data_fifo_in_tready && s_axis_tready_mask;
-
 reg [7:0] code_fifo_in_tdata;
 reg code_fifo_in_tvalid;
 reg code_fifo_in_tlast;

ParseResult:
MOV HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: AND_LOG
        list: ops
            HdlOp: AND_LOG
                list: ops
                    HdlValueId: code_fifo_in_tready
                    HdlValueId: data_fifo_in_tready
            HdlValueId: s_axis_tready_mask
    HdlValueId: s_axis_tready


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_eth_fcs_64.v
+++ b/rtl/axis_eth_fcs_64.v
@@ -52,8 +52,8 @@ module axis_eth_fcs_64
 );
 
 reg [31:0] crc_state = 32'hFFFFFFFF;
-reg [31:0] fcs_reg = 0;
-reg fcs_valid_reg = 0;
+reg [31:0] fcs_reg = 32'h00000000;
+reg fcs_valid_reg = 1'b0;
 
 wire [31:0] crc_next0;
 wire [31:0] crc_next1;

ParseResult:
UPD HdlIdDef@@fcs_reg to fcs_reg
    UPD HdlValueInt@@0 to 00000000


CommitId: 0691c9d61b102cdbb3ed73a449786ba096d86a08
Fix output pipeline issue
--- a/rtl/axis_async_fifo_64.v
+++ b/rtl/axis_async_fifo_64.v
@@ -201,7 +201,7 @@ always @* begin
 
     mem_read_data_valid_next = mem_read_data_valid_reg;
 
-    if (output_axis_tready | ~output_axis_tvalid) begin
+    if (store_output | ~mem_read_data_valid_reg) begin
         // output data not valid OR currently being transferred
         if (~empty) begin
             // not empty, perform read
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@OR to OR
        UPD HdlValueId@@output_axis_tready to store_output
        UPD HdlOp@@NEG to NEG
            UPD HdlValueId@@output_axis_tvalid to mem_read_data_valid_reg


CommitId: ca504230360bc04bd532e4d5fbffe61fc13f8f7a
Change default data width
--- a/rtl/axis_register_64.v
+++ b/rtl/axis_register_64.v
@@ -31,7 +31,7 @@ THE SOFTWARE.
  */
 module axis_register_64 #
 (
-    parameter DATA_WIDTH = 8,
+    parameter DATA_WIDTH = 64,
     parameter KEEP_WIDTH = (DATA_WIDTH/8)
 )
 (
ParseResult:
UPD HdlIdDef@@DATA_WIDTH to DATA_WIDTH
    UPD HdlValueInt@@8 to 64


CommitId: cab7d367f2f571c24a999fc65f933d32faa7f6f5
Fix default width
--- a/rtl/axis_frame_length_adjust_fifo_64.v
+++ b/rtl/axis_frame_length_adjust_fifo_64.v
@@ -31,7 +31,7 @@ THE SOFTWARE.
  */
 module axis_frame_length_adjust_fifo_64 #
 (
-    parameter DATA_WIDTH = 8,
+    parameter DATA_WIDTH = 64,
     parameter KEEP_WIDTH = (DATA_WIDTH/8),
     parameter FRAME_FIFO_ADDR_WIDTH = 12,
     parameter HEADER_FIFO_ADDR_WIDTH = 3
ParseResult:
UPD HdlIdDef@@DATA_WIDTH to DATA_WIDTH
    UPD HdlValueInt@@8 to 64


CommitId: 585ccefa1534cba00ee915f54baf491a0b49df82
Add TX underflow error signal
--- a/rtl/axis_xgmii_tx_64.v
+++ b/rtl/axis_xgmii_tx_64.v
@@ -64,7 +64,8 @@ module axis_xgmii_tx_64 #
      * Status
      */
     output wire        start_packet_0,
-    output wire        start_packet_4
+    output wire        start_packet_4,
+    output wire        error_underflow
 );
 
 localparam MIN_FL_NOCRC = MIN_FRAME_LENGTH-4;

ParseResult:
INS HdlIdDef@@error_underflow to ports
HdlIdDef: error_underflow
    HdlDirection: OUT


CommitId: 585ccefa1534cba00ee915f54baf491a0b49df82
Add TX underflow error signal
--- a/rtl/axis_xgmii_tx_64.v
+++ b/rtl/axis_xgmii_tx_64.v
@@ -140,6 +141,7 @@ reg [7:0] xgmii_txc_reg = 8'b11111111, xgmii_txc_next;
 
 reg start_packet_0_reg = 1'b0, start_packet_0_next;
 reg start_packet_4_reg = 1'b0, start_packet_4_next;
+reg error_underflow_reg = 1'b0, error_underflow_next;
 
 assign s_axis_tready = s_axis_tready_reg;
 

ParseResult:
INS HdlIdDef@@error_underflow_reg to objs
HdlIdDef: error_underflow_reg
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@error_underflow_next to objs
HdlIdDef: error_underflow_next
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL


CommitId: 585ccefa1534cba00ee915f54baf491a0b49df82
Add TX underflow error signal
--- a/rtl/axis_xgmii_tx_64.v
+++ b/rtl/axis_xgmii_tx_64.v
@@ -148,6 +150,7 @@ assign xgmii_txc = xgmii_txc_reg;
 
 assign start_packet_0 = start_packet_0_reg;
 assign start_packet_4 = start_packet_4_reg;
+assign error_underflow = error_underflow_reg;
 
 lfsr #(
     .LFSR_WIDTH(32),

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: error_underflow_reg
    HdlValueId: error_underflow


CommitId: 585ccefa1534cba00ee915f54baf491a0b49df82
Add TX underflow error signal
--- a/rtl/axis_xgmii_tx_64.v
+++ b/rtl/axis_xgmii_tx_64.v
@@ -404,6 +407,7 @@ always @* begin
 
     start_packet_0_next = 1'b0;
     start_packet_4_next = 1'b0;
+    error_underflow_next = 1'b0;
 
     case (state_reg)
         STATE_IDLE: begin

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: error_underflow_next
                HdlValueInt: 0


CommitId: 585ccefa1534cba00ee915f54baf491a0b49df82
Add TX underflow error signal
--- a/rtl/axis_xgmii_tx_64.v
+++ b/rtl/axis_xgmii_tx_64.v
@@ -491,6 +495,7 @@ always @* begin
                 xgmii_txc_next = 8'b11111111;
                 frame_ptr_next = 16'd0;
                 ifg_count_next = 8'd8;
+                error_underflow_next = 1'b1;
                 state_next = STATE_WAIT_END;
             end
         end

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: error_underflow_next
                HdlValueInt: 0

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: error_underflow_next
                HdlValueInt: 1


CommitId: 585ccefa1534cba00ee915f54baf491a0b49df82
Add TX underflow error signal
--- a/rtl/axis_xgmii_tx_64.v
+++ b/rtl/axis_xgmii_tx_64.v
@@ -658,6 +663,7 @@ always @(posedge clk) begin
 
         start_packet_0_reg <= 1'b0;
         start_packet_4_reg <= 1'b0;
+        error_underflow_reg <= 1'b0;
 
         crc_state <= 32'hFFFFFFFF;
 

ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: error_underflow_reg


CommitId: 585ccefa1534cba00ee915f54baf491a0b49df82
Add TX underflow error signal
--- a/rtl/axis_xgmii_tx_64.v
+++ b/rtl/axis_xgmii_tx_64.v
@@ -674,6 +680,7 @@ always @(posedge clk) begin
 
         start_packet_0_reg <= start_packet_0_next;
         start_packet_4_reg <= start_packet_4_next;
+        error_underflow_reg <= error_underflow_next;
 
         if (swap_lanes || (lanes_swapped && !unswap_lanes)) begin
             lanes_swapped <= 1'b1;
ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: error_underflow_next
    HdlValueId: error_underflow_reg


CommitId: 6ab2a86e13279003877e0ba6557fb1c950a4e201
Change default data width
--- a/rtl/axis_register_64.v
+++ b/rtl/axis_register_64.v
@@ -31,7 +31,7 @@ THE SOFTWARE.
  */
 module axis_register_64 #
 (
-    parameter DATA_WIDTH = 8,
+    parameter DATA_WIDTH = 64,
     parameter KEEP_WIDTH = (DATA_WIDTH/8)
 )
 (
ParseResult:
UPD HdlIdDef@@DATA_WIDTH to DATA_WIDTH
    UPD HdlValueInt@@8 to 64


CommitId: 51b5335318c83e2662a0edb768b05ac7cbcd6603
Remove z from default states for FSM inference
--- a/rtl/ip_eth_rx.v
+++ b/rtl/ip_eth_rx.v
@@ -227,7 +227,7 @@ function [15:0] add1c16b;
 endfunction
 
 always @* begin
-    state_next = 2'bz;
+    state_next = STATE_IDLE;
 
     input_eth_hdr_ready_next = 0;
     input_eth_payload_tready_next = 0;
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueId@@STATE_IDLE to ops

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            DEL HdlValueInt@@z from ops


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/ip_mux_64_2.v
+++ b/rtl/ip_mux_64_2.v
@@ -240,6 +240,25 @@ always @* begin
             selected_input_ip_source_ip = input_1_ip_source_ip;
             selected_input_ip_dest_ip = input_1_ip_dest_ip;
         end
+        default: begin
+            selected_input_ip_hdr_valid = 1'b0;
+            selected_input_eth_dest_mac = 48'd0;
+            selected_input_eth_src_mac = 48'd0;
+            selected_input_eth_type = 16'd0;
+            selected_input_ip_version = 4'd0;
+            selected_input_ip_ihl = 4'd0;
+            selected_input_ip_dscp = 6'd0;
+            selected_input_ip_ecn = 2'd0;
+            selected_input_ip_length = 16'd0;
+            selected_input_ip_identification = 16'd0;
+            selected_input_ip_flags = 3'd0;
+            selected_input_ip_fragment_offset = 13'd0;
+            selected_input_ip_ttl = 8'd0;
+            selected_input_ip_protocol = 8'd0;
+            selected_input_ip_header_checksum = 16'd0;
+            selected_input_ip_source_ip = 32'd0;
+            selected_input_ip_dest_ip = 32'd0;
+        end
     endcase
 end
 

ParseResult:
UPD HdlStmCase@@select to select
    INS HdlStmBlock@@SEQ to select
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_hdr_valid
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_eth_dest_mac
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_eth_src_mac
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_eth_type
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_version
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_ihl
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_dscp
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_ecn
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_length
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_identification
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_flags
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_fragment_offset
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_ttl
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_protocol
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_header_checksum
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_source_ip
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_dest_ip
                    HdlValueInt: 0


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/ip_mux_64_2.v
+++ b/rtl/ip_mux_64_2.v
@@ -268,6 +287,14 @@ always @* begin
             current_input_tlast = input_1_ip_payload_tlast;
             current_input_tuser = input_1_ip_payload_tuser;
         end
+        default: begin
+            current_input_tdata = 64'd0;
+            current_input_tkeep = 8'd0;
+            current_input_tvalid = 1'b0;
+            current_input_tready = 1'b0;
+            current_input_tlast = 1'b0;
+            current_input_tuser = 1'b0;
+        end
     endcase
 end
 

ParseResult:
UPD HdlStmCase@@select to select
    INS HdlStmBlock@@SEQ to select
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_hdr_valid
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_eth_dest_mac
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_eth_src_mac
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_eth_type
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_version
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_ihl
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_dscp
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_ecn
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_length
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_identification
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_flags
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_fragment_offset
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_ttl
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_protocol
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_header_checksum
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_source_ip
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_dest_ip
                    HdlValueInt: 0


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/ip_mux_64_2.v
+++ b/rtl/ip_mux_64_2.v
@@ -278,8 +305,8 @@ always @* begin
     input_0_ip_hdr_ready_next = input_0_ip_hdr_ready_reg & ~input_0_ip_hdr_valid;
     input_1_ip_hdr_ready_next = input_1_ip_hdr_ready_reg & ~input_1_ip_hdr_valid;
 
-    input_0_ip_payload_tready_next = 0;
-    input_1_ip_payload_tready_next = 0;
+    input_0_ip_payload_tready_next = 1'b0;
+    input_1_ip_payload_tready_next = 1'b0;
 
     output_ip_hdr_valid_next = output_ip_hdr_valid_reg & ~output_ip_hdr_ready;
     output_eth_dest_mac_next = output_eth_dest_mac_reg;

ParseResult:
UPD HdlStmCase@@select_reg to select_reg
    INS HdlStmBlock@@SEQ to select_reg
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tdata
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tkeep
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tvalid
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tready
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tlast
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tuser
                    HdlValueInt: 0


CommitId: d3e30d0a73604e3b873661ceee1877b59021d38c
Fix padding bug
--- a/rtl/axis_eth_fcs_insert.v
+++ b/rtl/axis_eth_fcs_insert.v
@@ -158,7 +158,7 @@ always @* begin
                         state_next = STATE_IDLE;
                     end else begin
                         input_axis_tready_next = 0;
-                        if (ENABLE_PADDING && frame_ptr_next < MIN_FRAME_LENGTH-5) begin
+                        if (ENABLE_PADDING && frame_ptr_reg < MIN_FRAME_LENGTH-5) begin
                             state_next = STATE_PAD;
                         end else begin
                             frame_ptr_next = 0;

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@LT to LT
            UPD HdlValueId@@frame_ptr_next to frame_ptr_reg


CommitId: d3e30d0a73604e3b873661ceee1877b59021d38c
Fix padding bug
--- a/rtl/axis_eth_fcs_insert.v
+++ b/rtl/axis_eth_fcs_insert.v
@@ -184,12 +184,14 @@ always @* begin
             if (output_axis_tready_int) begin
                 frame_ptr_next = frame_ptr_reg + 1;
                 update_crc = 1;
-                if (frame_ptr_next < MIN_FRAME_LENGTH-5) begin
+                if (frame_ptr_reg < MIN_FRAME_LENGTH-5) begin
                     state_next = STATE_PAD;
                 end else begin
                     frame_ptr_next = 0;
                     state_next = STATE_FCS;
                 end
+            end else begin
+                state_next = STATE_PAD;
             end
         end
         STATE_FCS: begin
ParseResult:
UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: state_next
                    HdlValueId: STATE_PAD

UPD HdlStmIf@@ to 
    UPD HdlOp@@LT to LT
        UPD HdlValueId@@frame_ptr_next to frame_ptr_reg


CommitId: a9c04a465150ae5fc9cd8f32906213d9ba9afb06
Fix frame FIFO drop
--- a/rtl/axis_async_fifo.v
+++ b/rtl/axis_async_fifo.v
@@ -280,7 +280,7 @@ end
 always @* begin
     write = 1'b0;
 
-    drop_frame_next = 1'b0;
+    drop_frame_next = drop_frame_reg;
     overflow_next = 1'b0;
     bad_frame_next = 1'b0;
     good_frame_next = 1'b0;
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueId@@drop_frame_reg to ops

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            DEL HdlValueInt@@0 from ops


CommitId: 0d22a35bd855a7f08b34a3f1c24ebb143289d91d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_mux_4.v
+++ b/rtl/axis_mux_4.v
@@ -80,18 +80,18 @@ module axis_mux_4 #
     input  wire [1:0]             select
 );
 
-reg [1:0] select_reg = 0, select_next;
-reg frame_reg = 0, frame_next;
+reg [1:0] select_reg = 2'd0, select_next;
+reg frame_reg = 1'b0, frame_next;
 
-reg input_0_axis_tready_reg = 0, input_0_axis_tready_next;
-reg input_1_axis_tready_reg = 0, input_1_axis_tready_next;
-reg input_2_axis_tready_reg = 0, input_2_axis_tready_next;
-reg input_3_axis_tready_reg = 0, input_3_axis_tready_next;
+reg input_0_axis_tready_reg = 1'b0, input_0_axis_tready_next;
+reg input_1_axis_tready_reg = 1'b0, input_1_axis_tready_next;
+reg input_2_axis_tready_reg = 1'b0, input_2_axis_tready_next;
+reg input_3_axis_tready_reg = 1'b0, input_3_axis_tready_next;
 
 // internal datapath
 reg [DATA_WIDTH-1:0] output_axis_tdata_int;
 reg                  output_axis_tvalid_int;
-reg                  output_axis_tready_int = 0;
+reg                  output_axis_tready_int_reg = 1'b0;
 reg                  output_axis_tlast_int;
 reg                  output_axis_tuser_int;
 wire                 output_axis_tready_int_early;

ParseResult:
UPD HdlIdDef@@output_axis_tready_int to output_axis_tready_int_reg


CommitId: 0d22a35bd855a7f08b34a3f1c24ebb143289d91d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_frame_length_adjust.v
+++ b/rtl/axis_frame_length_adjust.v
@@ -98,33 +98,33 @@ reg [2:0] state_reg = STATE_IDLE, state_next;
 // datapath control signals
 reg store_last_word;
 
-reg [15:0] frame_ptr_reg = 0, frame_ptr_next;
+reg [15:0] frame_ptr_reg = 16'd0, frame_ptr_next;
 
 // frame length counters
-reg [15:0] short_counter_reg = 0, short_counter_next = 0;
-reg [15:0] long_counter_reg = 0, long_counter_next = 0;
+reg [15:0] short_counter_reg = 16'd0, short_counter_next = 16'd0;
+reg [15:0] long_counter_reg = 16'd0, long_counter_next = 16'd0;
 
-reg [DATA_WIDTH-1:0] last_word_data_reg = 0;
-reg [KEEP_WIDTH-1:0] last_word_keep_reg = 0;
+reg [DATA_WIDTH-1:0] last_word_data_reg = {DATA_WIDTH{1'b0}};
+reg [KEEP_WIDTH-1:0] last_word_keep_reg = {KEEP_WIDTH{1'b0}};
 
-reg last_cycle_tuser_reg = 0, last_cycle_tuser_next;
+reg last_cycle_tuser_reg = 1'b0, last_cycle_tuser_next;
 
-reg status_valid_reg = 0, status_valid_next;
-reg status_frame_pad_reg = 0, status_frame_pad_next;
-reg status_frame_truncate_reg = 0, status_frame_truncate_next;
-reg [15:0] status_frame_length_reg = 0, status_frame_length_next;
-reg [15:0] status_frame_original_length_reg = 0, status_frame_original_length_next;
+reg status_valid_reg = 1'b0, status_valid_next;
+reg status_frame_pad_reg = 1'b0, status_frame_pad_next;
+reg status_frame_truncate_reg = 1'b0, status_frame_truncate_next;
+reg [15:0] status_frame_length_reg = 16'd0, status_frame_length_next;
+reg [15:0] status_frame_original_length_reg = 16'd0, status_frame_original_length_next;
 
 // internal datapath
 reg [DATA_WIDTH-1:0] output_axis_tdata_int;
 reg [KEEP_WIDTH-1:0] output_axis_tkeep_int;
 reg                  output_axis_tvalid_int;
-reg                  output_axis_tready_int = 0;
+reg                  output_axis_tready_int_reg = 1'b0;
 reg                  output_axis_tlast_int;
 reg                  output_axis_tuser_int;
 wire                 output_axis_tready_int_early;
 
-reg input_axis_tready_reg = 0, input_axis_tready_next;
+reg input_axis_tready_reg = 1'b0, input_axis_tready_next;
 assign input_axis_tready = input_axis_tready_reg;
 
 assign status_valid = status_valid_reg;

ParseResult:
UPD HdlIdDef@@output_axis_tready_int to output_axis_tready_int_reg

UPD HdlIdDef@@last_word_data_reg to last_word_data_reg
    INS HdlOp@@REPL_CONCAT to last_word_data_reg
    UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
        INS list@@ops to REPL_CONCAT
        INS HdlValueId@@DATA_WIDTH to ops

UPD HdlIdDef@@last_word_keep_reg to last_word_keep_reg
    INS HdlOp@@REPL_CONCAT to last_word_keep_reg
    UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
        INS list@@ops to REPL_CONCAT
        INS HdlValueId@@KEEP_WIDTH to ops

UPD HdlIdDef@@last_word_data_reg to last_word_data_reg
    MOV HdlValueInt@@0 to last_word_data_reg
    HdlValueInt: 0

UPD HdlIdDef@@last_word_keep_reg to last_word_keep_reg
    MOV HdlValueInt@@0 to last_word_keep_reg
    HdlValueInt: 0


CommitId: 0d22a35bd855a7f08b34a3f1c24ebb143289d91d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_frame_length_adjust.v
+++ b/rtl/axis_frame_length_adjust.v
@@ -138,20 +138,20 @@ integer i, word_cnt;
 always @* begin
     state_next = STATE_IDLE;
 
-    store_last_word = 0;
+    store_last_word = 1'b0;
 
     frame_ptr_next = frame_ptr_reg;
 
     short_counter_next = short_counter_reg;
     long_counter_next = long_counter_reg;
 
-    output_axis_tdata_int = 0;
-    output_axis_tkeep_int = 0;
-    output_axis_tvalid_int = 0;
-    output_axis_tlast_int = 0;
-    output_axis_tuser_int = 0;
+    output_axis_tdata_int = {DATA_WIDTH{1'b0}};
+    output_axis_tkeep_int = {KEEP_WIDTH{1'b0}};
+    output_axis_tvalid_int = 1'b0;
+    output_axis_tlast_int = 1'b0;
+    output_axis_tuser_int = 1'b0;
 
-    input_axis_tready_next = 0;
+    input_axis_tready_next = 1'b0;
 
     last_cycle_tuser_next = last_cycle_tuser_reg;
 

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: output_axis_tdata_int
                HdlOp: REPL_CONCAT
                    list: ops
                        HdlValueId: DATA_WIDTH
                        HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: output_axis_tkeep_int
                HdlOp: REPL_CONCAT
                    list: ops
                        HdlValueId: KEEP_WIDTH
                        HdlValueInt: 0

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: output_axis_tdata_int
                HdlValueInt: 0
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: output_axis_tkeep_int
                HdlValueInt: 0


CommitId: 0d22a35bd855a7f08b34a3f1c24ebb143289d91d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_frame_length_adjust.v
+++ b/rtl/axis_frame_length_adjust.v
@@ -188,31 +188,31 @@ always @* begin
                 if (short_counter_reg > KEEP_WIDTH) begin
                     short_counter_next = short_counter_reg - KEEP_WIDTH;
                 end else begin
-                    short_counter_next = 0;
+                    short_counter_next = 16'd0;
                 end
 
                 if (long_counter_reg > KEEP_WIDTH) begin
                     long_counter_next = long_counter_reg - KEEP_WIDTH;
                 end else begin
-                    long_counter_next = 0;
+                    long_counter_next = 16'd0;
                 end
 
                 if (long_counter_reg <= word_cnt) begin
                     output_axis_tkeep_int = ({KEEP_WIDTH{1'b1}}) >> (KEEP_WIDTH-long_counter_reg);
                     if (input_axis_tlast) begin
-                        status_valid_next = 1;
-                        status_frame_pad_next = 0;
+                        status_valid_next = 1'b1;
+                        status_frame_pad_next = 1'b0;
                         status_frame_truncate_next = word_cnt > long_counter_reg;
                         status_frame_length_next = length_max;
                         status_frame_original_length_next = frame_ptr_reg+word_cnt;
                         input_axis_tready_next = output_axis_tready_int_early & status_ready;
-                        frame_ptr_next = 0;
+                        frame_ptr_next = 16'd0;
                         short_counter_next = length_min;
                         long_counter_next = length_max;
                         state_next = STATE_IDLE;
                     end else begin
-                        output_axis_tvalid_int = 0;
-                        store_last_word = 1;
+                        output_axis_tvalid_int = 1'b0;
+                        store_last_word = 1'b1;
                         state_next = STATE_TRUNCATE;
                     end
                 end else begin

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: output_axis_tdata_int
                HdlOp: REPL_CONCAT
                    list: ops
                        HdlValueId: DATA_WIDTH
                        HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: output_axis_tkeep_int
                HdlOp: REPL_CONCAT
                    list: ops
                        HdlValueId: KEEP_WIDTH
                        HdlValueInt: 0

UPD HdlStmCase@@state_reg to state_reg
    INS HdlStmCaseType@@CASE to state_reg
    INS HdlValueId@@state_reg to state_reg
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@REPL_CONCAT to ops
            UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                INS list@@ops to REPL_CONCAT
                INS HdlValueId@@DATA_WIDTH to ops

UPD HdlStmCase@@state_reg to state_reg
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlValueInt@@0 to ops
            HdlValueInt: 0
    DEL HdlStmCaseType@@CASE from state_reg
    DEL HdlValueId@@state_reg from state_reg

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: output_axis_tdata_int
                HdlValueInt: 0
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: output_axis_tkeep_int
                HdlValueInt: 0


CommitId: 0d22a35bd855a7f08b34a3f1c24ebb143289d91d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_frame_length_adjust.v
+++ b/rtl/axis_frame_length_adjust.v
@@ -221,32 +221,32 @@ always @* begin
                         if (short_counter_reg > word_cnt) begin
                             if (short_counter_reg > KEEP_WIDTH) begin
                                 frame_ptr_next = frame_ptr_reg + KEEP_WIDTH;
-                                input_axis_tready_next = 0;
+                                input_axis_tready_next = 1'b0;
                                 output_axis_tkeep_int = {KEEP_WIDTH{1'b1}};
-                                output_axis_tlast_int = 0;
-                                output_axis_tuser_int = 0;
+                                output_axis_tlast_int = 1'b0;
+                                output_axis_tuser_int = 1'b0;
                                 last_cycle_tuser_next = input_axis_tuser;
                                 state_next = STATE_PAD;
                             end else begin
-                                status_valid_next = 1;
-                                status_frame_pad_next = 1;
-                                status_frame_truncate_next = 0;
+                                status_valid_next = 1'b1;
+                                status_frame_pad_next = 1'b1;
+                                status_frame_truncate_next = 1'b0;
                                 status_frame_length_next = length_min;
                                 input_axis_tready_next = output_axis_tready_int_early & status_ready;
                                 output_axis_tkeep_int = ({KEEP_WIDTH{1'b1}}) >> (KEEP_WIDTH-(length_min - frame_ptr_reg));
-                                frame_ptr_next = 0;
+                                frame_ptr_next = 16'd0;
                                 short_counter_next = length_min;
                                 long_counter_next = length_max;
                                 state_next = STATE_IDLE;
                             end
                         end else begin
-                            status_valid_next = 1;
-                            status_frame_pad_next = 0;
-                            status_frame_truncate_next = 0;
+                            status_valid_next = 1'b1;
+                            status_frame_pad_next = 1'b0;
+                            status_frame_truncate_next = 1'b0;
                             status_frame_length_next = frame_ptr_reg+word_cnt;
                             status_frame_original_length_next = frame_ptr_reg+word_cnt;
                             input_axis_tready_next = output_axis_tready_int_early & status_ready;
-                            frame_ptr_next = 0;
+                            frame_ptr_next = 16'd0;
                             short_counter_next = length_min;
                             long_counter_next = length_max;
                             state_next = STATE_IDLE;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: output_axis_tdata_int
                HdlOp: REPL_CONCAT
                    list: ops
                        HdlValueId: DATA_WIDTH
                        HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: output_axis_tkeep_int
                HdlOp: REPL_CONCAT
                    list: ops
                        HdlValueId: KEEP_WIDTH
                        HdlValueInt: 0

UPD HdlStmCase@@state_reg to state_reg
    INS HdlStmCaseType@@CASE to state_reg
    INS HdlValueId@@state_reg to state_reg
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@REPL_CONCAT to ops
            UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                INS list@@ops to REPL_CONCAT
                INS HdlValueId@@DATA_WIDTH to ops

UPD HdlStmCase@@state_reg to state_reg
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlValueInt@@0 to ops
            HdlValueInt: 0
    DEL HdlStmCaseType@@CASE from state_reg
    DEL HdlValueId@@state_reg from state_reg

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: output_axis_tdata_int
                HdlValueInt: 0
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: output_axis_tkeep_int
                HdlValueInt: 0


CommitId: 0d22a35bd855a7f08b34a3f1c24ebb143289d91d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_frame_length_adjust.v
+++ b/rtl/axis_frame_length_adjust.v
@@ -282,31 +282,31 @@ always @* begin
                 if (short_counter_reg > KEEP_WIDTH) begin
                     short_counter_next = short_counter_reg - KEEP_WIDTH;
                 end else begin
-                    short_counter_next = 0;
+                    short_counter_next = 16'd0;
                 end
 
                 if (long_counter_reg > KEEP_WIDTH) begin
                     long_counter_next = long_counter_reg - KEEP_WIDTH;
                 end else begin
-                    long_counter_next = 0;
+                    long_counter_next = 16'd0;
                 end
 
                 if (long_counter_reg <= word_cnt) begin
                     output_axis_tkeep_int = ({KEEP_WIDTH{1'b1}}) >> (KEEP_WIDTH-long_counter_reg);
                     if (input_axis_tlast) begin
-                        status_valid_next = 1;
-                        status_frame_pad_next = 0;
+                        status_valid_next = 1'b1;
+                        status_frame_pad_next = 1'b0;
                         status_frame_truncate_next = word_cnt > long_counter_reg;
                         status_frame_length_next = length_max;
                         status_frame_original_length_next = frame_ptr_reg+word_cnt;
                         input_axis_tready_next = output_axis_tready_int_early & status_ready;
-                        frame_ptr_next = 0;
+                        frame_ptr_next = 16'd0;
                         short_counter_next = length_min;
                         long_counter_next = length_max;
                         state_next = STATE_IDLE;
                     end else begin
-                        output_axis_tvalid_int = 0;
-                        store_last_word = 1;
+                        output_axis_tvalid_int = 1'b0;
+                        store_last_word = 1'b1;
                         state_next = STATE_TRUNCATE;
                     end
                 end else begin

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: output_axis_tdata_int
                HdlOp: REPL_CONCAT
                    list: ops
                        HdlValueId: DATA_WIDTH
                        HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: output_axis_tkeep_int
                HdlOp: REPL_CONCAT
                    list: ops
                        HdlValueId: KEEP_WIDTH
                        HdlValueInt: 0

UPD HdlStmCase@@state_reg to state_reg
    INS HdlStmCaseType@@CASE to state_reg
    INS HdlValueId@@state_reg to state_reg
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@REPL_CONCAT to ops
            UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                INS list@@ops to REPL_CONCAT
                INS HdlValueId@@DATA_WIDTH to ops

UPD HdlStmCase@@state_reg to state_reg
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlValueInt@@0 to ops
            HdlValueInt: 0
    DEL HdlStmCaseType@@CASE from state_reg
    DEL HdlValueId@@state_reg from state_reg

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: output_axis_tdata_int
                HdlValueInt: 0
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: output_axis_tkeep_int
                HdlValueInt: 0


CommitId: 0d22a35bd855a7f08b34a3f1c24ebb143289d91d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_frame_length_adjust.v
+++ b/rtl/axis_frame_length_adjust.v
@@ -315,32 +315,32 @@ always @* begin
                         if (short_counter_reg > word_cnt) begin
                             if (short_counter_reg > KEEP_WIDTH) begin
                                 frame_ptr_next = frame_ptr_reg + KEEP_WIDTH;
-                                input_axis_tready_next = 0;
+                                input_axis_tready_next = 1'b0;
                                 output_axis_tkeep_int = {KEEP_WIDTH{1'b1}};
-                                output_axis_tlast_int = 0;
-                                output_axis_tuser_int = 0;
+                                output_axis_tlast_int = 1'b0;
+                                output_axis_tuser_int = 1'b0;
                                 last_cycle_tuser_next = input_axis_tuser;
                                 state_next = STATE_PAD;
                             end else begin
-                                status_valid_next = 1;
-                                status_frame_pad_next = 1;
-                                status_frame_truncate_next = 0;
+                                status_valid_next = 1'b1;
+                                status_frame_pad_next = 1'b1;
+                                status_frame_truncate_next = 1'b0;
                                 status_frame_length_next = length_min;
                                 input_axis_tready_next = output_axis_tready_int_early & status_ready;
                                 output_axis_tkeep_int = ({KEEP_WIDTH{1'b1}}) >> (KEEP_WIDTH-short_counter_reg);
-                                frame_ptr_next = 0;
+                                frame_ptr_next = 16'd0;
                                 short_counter_next = length_min;
                                 long_counter_next = length_max;
                                 state_next = STATE_IDLE;
                             end
                         end else begin
-                            status_valid_next = 1;
-                            status_frame_pad_next = 0;
-                            status_frame_truncate_next = 0;
+                            status_valid_next = 1'b1;
+                            status_frame_pad_next = 1'b0;
+                            status_frame_truncate_next = 1'b0;
                             status_frame_length_next = frame_ptr_reg+word_cnt;
                             status_frame_original_length_next = frame_ptr_reg+word_cnt;
                             input_axis_tready_next = output_axis_tready_int_early & status_ready;
-                            frame_ptr_next = 0;
+                            frame_ptr_next = 16'd0;
                             short_counter_next = length_min;
                             long_counter_next = length_max;
                             state_next = STATE_IDLE;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: output_axis_tdata_int
                HdlOp: REPL_CONCAT
                    list: ops
                        HdlValueId: DATA_WIDTH
                        HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: output_axis_tkeep_int
                HdlOp: REPL_CONCAT
                    list: ops
                        HdlValueId: KEEP_WIDTH
                        HdlValueInt: 0

UPD HdlStmCase@@state_reg to state_reg
    INS HdlStmCaseType@@CASE to state_reg
    INS HdlValueId@@state_reg to state_reg
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@REPL_CONCAT to ops
            UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                INS list@@ops to REPL_CONCAT
                INS HdlValueId@@DATA_WIDTH to ops

UPD HdlStmCase@@state_reg to state_reg
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlValueInt@@0 to ops
            HdlValueInt: 0
    DEL HdlStmCaseType@@CASE from state_reg
    DEL HdlValueId@@state_reg from state_reg

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: output_axis_tdata_int
                HdlValueInt: 0
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: output_axis_tkeep_int
                HdlValueInt: 0


CommitId: 0d22a35bd855a7f08b34a3f1c24ebb143289d91d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_frame_length_adjust.v
+++ b/rtl/axis_frame_length_adjust.v
@@ -355,39 +355,39 @@ always @* begin
         end
         STATE_PAD: begin
             // pad to minimum length
-            input_axis_tready_next = 0;
+            input_axis_tready_next = 1'b0;
 
-            output_axis_tdata_int = 0;
+            output_axis_tdata_int = {DATA_WIDTH{1'b0}};
             output_axis_tkeep_int = {KEEP_WIDTH{1'b1}};
-            output_axis_tvalid_int = 1;
-            output_axis_tlast_int = 0;
-            output_axis_tuser_int = 0;
+            output_axis_tvalid_int = 1'b1;
+            output_axis_tlast_int = 1'b0;
+            output_axis_tuser_int = 1'b0;
 
-            if (output_axis_tready_int) begin
+            if (output_axis_tready_int_reg) begin
                 frame_ptr_next = frame_ptr_reg + KEEP_WIDTH;
 
                 if (short_counter_reg > KEEP_WIDTH) begin
                     short_counter_next = short_counter_reg - KEEP_WIDTH;
                 end else begin
-                    short_counter_next = 0;
+                    short_counter_next = 16'd0;
                 end
 
                 if (long_counter_reg > KEEP_WIDTH) begin
                     long_counter_next = long_counter_reg - KEEP_WIDTH;
                 end else begin
-                    long_counter_next = 0;
+                    long_counter_next = 16'd0;
                 end
 
                 if (short_counter_reg <= KEEP_WIDTH) begin
-                    status_valid_next = 1;
-                    status_frame_pad_next = 1;
-                    status_frame_truncate_next = 0;
+                    status_valid_next = 1'b1;
+                    status_frame_pad_next = 1'b1;
+                    status_frame_truncate_next = 1'b0;
                     status_frame_length_next = length_min;
                     input_axis_tready_next = output_axis_tready_int_early & status_ready;
                     output_axis_tkeep_int = ({KEEP_WIDTH{1'b1}}) >> (KEEP_WIDTH-short_counter_reg);
-                    output_axis_tlast_int = 1;
+                    output_axis_tlast_int = 1'b1;
                     output_axis_tuser_int = last_cycle_tuser_reg;
-                    frame_ptr_next = 0;
+                    frame_ptr_next = 16'd0;
                     short_counter_next = length_min;
                     long_counter_next = length_max;
                     state_next = STATE_IDLE;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: output_axis_tdata_int
                HdlOp: REPL_CONCAT
                    list: ops
                        HdlValueId: DATA_WIDTH
                        HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: output_axis_tkeep_int
                HdlOp: REPL_CONCAT
                    list: ops
                        HdlValueId: KEEP_WIDTH
                        HdlValueInt: 0

UPD HdlStmCase@@state_reg to state_reg
    INS HdlStmCaseType@@CASE to state_reg
    INS HdlValueId@@state_reg to state_reg
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@REPL_CONCAT to ops
            UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                INS list@@ops to REPL_CONCAT
                INS HdlValueId@@DATA_WIDTH to ops

UPD HdlStmIf@@ to 
    UPD HdlValueId@@output_axis_tready_int to output_axis_tready_int_reg

UPD HdlStmCase@@state_reg to state_reg
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlValueInt@@0 to ops
            HdlValueInt: 0
    DEL HdlStmCaseType@@CASE from state_reg
    DEL HdlValueId@@state_reg from state_reg

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: output_axis_tdata_int
                HdlValueInt: 0
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: output_axis_tkeep_int
                HdlValueInt: 0


CommitId: 0d22a35bd855a7f08b34a3f1c24ebb143289d91d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_frame_length_adjust.v
+++ b/rtl/axis_frame_length_adjust.v
@@ -417,13 +417,13 @@ always @* begin
                 frame_ptr_next = frame_ptr_reg+KEEP_WIDTH;
 
                 if (input_axis_tlast) begin
-                    status_valid_next = 1;
-                    status_frame_pad_next = 0;
-                    status_frame_truncate_next = 1;
+                    status_valid_next = 1'b1;
+                    status_frame_pad_next = 1'b0;
+                    status_frame_truncate_next = 1'b1;
                     status_frame_length_next = length_max;
                     status_frame_original_length_next = frame_ptr_reg+word_cnt;
                     input_axis_tready_next = output_axis_tready_int_early & status_ready;
-                    frame_ptr_next = 0;
+                    frame_ptr_next = 16'd0;
                     short_counter_next = length_min;
                     long_counter_next = length_max;
                     state_next = STATE_IDLE;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: output_axis_tdata_int
                HdlOp: REPL_CONCAT
                    list: ops
                        HdlValueId: DATA_WIDTH
                        HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: output_axis_tkeep_int
                HdlOp: REPL_CONCAT
                    list: ops
                        HdlValueId: KEEP_WIDTH
                        HdlValueInt: 0

UPD HdlStmCase@@state_reg to state_reg
    INS HdlStmCaseType@@CASE to state_reg
    INS HdlValueId@@state_reg to state_reg
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@REPL_CONCAT to ops
            UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                INS list@@ops to REPL_CONCAT
                INS HdlValueId@@DATA_WIDTH to ops

UPD HdlStmCase@@state_reg to state_reg
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlValueInt@@0 to ops
            HdlValueInt: 0
    DEL HdlStmCaseType@@CASE from state_reg
    DEL HdlValueId@@state_reg from state_reg

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: output_axis_tdata_int
                HdlValueInt: 0
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: output_axis_tkeep_int
                HdlValueInt: 0


CommitId: 0d22a35bd855a7f08b34a3f1c24ebb143289d91d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_frame_length_adjust.v
+++ b/rtl/axis_frame_length_adjust.v
@@ -440,18 +440,11 @@ end
 always @(posedge clk) begin
     if (rst) begin
         state_reg <= STATE_IDLE;
-        frame_ptr_reg <= 0;
-        short_counter_reg <= 0;
-        long_counter_reg <= 0;
-        input_axis_tready_reg <= 0;
-        last_word_data_reg <= 0;
-        last_word_keep_reg <= 0;
-        last_cycle_tuser_reg <= 0;
-        status_valid_reg <= 0;
-        status_frame_pad_reg <= 0;
-        status_frame_truncate_reg <= 0;
-        status_frame_length_reg <= 0;
-        status_frame_original_length_reg <= 0;
+        frame_ptr_reg <= 16'd0;
+        short_counter_reg <= 16'd0;
+        long_counter_reg <= 16'd0;
+        input_axis_tready_reg <= 1'b0;
+        status_valid_reg <= 1'b0;
     end else begin
         state_reg <= state_next;
 

ParseResult:
UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueId: state_next
                HdlValueId: state_reg
            HdlStmAssign
                HdlValueId: frame_ptr_next
                HdlValueId: frame_ptr_reg
            HdlStmAssign
                HdlValueId: short_counter_next
                HdlValueId: short_counter_reg
            HdlStmAssign
                HdlValueId: long_counter_next
                HdlValueId: long_counter_reg
            HdlStmAssign
                HdlValueId: input_axis_tready_next
                HdlValueId: input_axis_tready_reg
            HdlStmAssign
                HdlValueId: last_cycle_tuser_next
                HdlValueId: last_cycle_tuser_reg
            HdlStmAssign
                HdlValueId: status_valid_next
                HdlValueId: status_valid_reg
            HdlStmAssign
                HdlValueId: status_frame_pad_next
                HdlValueId: status_frame_pad_reg
            HdlStmAssign
                HdlValueId: status_frame_truncate_next
                HdlValueId: status_frame_truncate_reg
            HdlStmAssign
                HdlValueId: status_frame_length_next
                HdlValueId: status_frame_length_reg
            HdlStmAssign
                HdlValueId: status_frame_original_length_next
                HdlValueId: status_frame_original_length_reg
            HdlStmIf
                HdlValueId: store_last_word
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueId: output_axis_tdata_int
                            HdlValueId: last_word_data_reg
                        HdlStmAssign
                            HdlValueId: output_axis_tkeep_int
                            HdlValueId: last_word_keep_reg
                list: elifs

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: output_axis_tdata_int
                HdlOp: REPL_CONCAT
                    list: ops
                        HdlValueId: DATA_WIDTH
                        HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: output_axis_tkeep_int
                HdlOp: REPL_CONCAT
                    list: ops
                        HdlValueId: KEEP_WIDTH
                        HdlValueInt: 0

MOV HdlStmIf@@ to body
HdlStmIf
    HdlValueId: rst
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueId: STATE_IDLE
                HdlValueId: state_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: frame_ptr_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: short_counter_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: long_counter_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: input_axis_tready_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: last_word_data_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: last_word_keep_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: last_cycle_tuser_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: status_valid_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: status_frame_pad_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: status_frame_truncate_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: status_frame_length_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: status_frame_original_length_reg
    list: elifs
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueId: state_next
                HdlValueId: state_reg
            HdlStmAssign
                HdlValueId: frame_ptr_next
                HdlValueId: frame_ptr_reg
            HdlStmAssign
                HdlValueId: short_counter_next
                HdlValueId: short_counter_reg
            HdlStmAssign
                HdlValueId: long_counter_next
                HdlValueId: long_counter_reg
            HdlStmAssign
                HdlValueId: input_axis_tready_next
                HdlValueId: input_axis_tready_reg
            HdlStmAssign
                HdlValueId: last_cycle_tuser_next
                HdlValueId: last_cycle_tuser_reg
            HdlStmAssign
                HdlValueId: status_valid_next
                HdlValueId: status_valid_reg
            HdlStmAssign
                HdlValueId: status_frame_pad_next
                HdlValueId: status_frame_pad_reg
            HdlStmAssign
                HdlValueId: status_frame_truncate_next
                HdlValueId: status_frame_truncate_reg
            HdlStmAssign
                HdlValueId: status_frame_length_next
                HdlValueId: status_frame_length_reg
            HdlStmAssign
                HdlValueId: status_frame_original_length_next
                HdlValueId: status_frame_original_length_reg
            HdlStmIf
                HdlValueId: store_last_word
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueId: output_axis_tdata_int
                            HdlValueId: last_word_data_reg
                        HdlStmAssign
                            HdlValueId: output_axis_tkeep_int
                            HdlValueId: last_word_keep_reg
                list: elifs

UPD HdlStmCase@@state_reg to state_reg
    INS HdlStmCaseType@@CASE to state_reg
    INS HdlValueId@@state_reg to state_reg
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@REPL_CONCAT to ops
            UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                INS list@@ops to REPL_CONCAT
                INS HdlValueId@@DATA_WIDTH to ops

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: state_next
    HdlValueId: state_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: last_word_data_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: last_word_keep_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: last_cycle_tuser_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: status_frame_pad_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: status_frame_truncate_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: status_frame_length_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: status_frame_original_length_reg

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 


CommitId: 0d22a35bd855a7f08b34a3f1c24ebb143289d91d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_adapter.v
+++ b/rtl/axis_adapter.v
@@ -101,25 +101,26 @@ localparam [2:0]
 
 reg [2:0] state_reg = STATE_IDLE, state_next;
 
-reg [7:0] cycle_count_reg = 0, cycle_count_next;
+reg [7:0] cycle_count_reg = 8'd0, cycle_count_next;
 
 reg last_cycle;
 
-reg [DATA_WIDTH-1:0] temp_tdata_reg = 0, temp_tdata_next;
-reg [KEEP_WIDTH-1:0] temp_tkeep_reg = 0, temp_tkeep_next;
-reg                  temp_tlast_reg = 0, temp_tlast_next;
-reg                  temp_tuser_reg = 0, temp_tuser_next;
+reg [DATA_WIDTH-1:0] temp_tdata_reg = {DATA_WIDTH{1'b0}}, temp_tdata_next;
+reg [KEEP_WIDTH-1:0] temp_tkeep_reg = {KEEP_WIDTH{1'b0}}, temp_tkeep_next;
+reg                  temp_tlast_reg = 1'b0, temp_tlast_next;
+reg                  temp_tuser_reg = 1'b0, temp_tuser_next;
 
 // internal datapath
 reg [OUTPUT_DATA_WIDTH-1:0] output_axis_tdata_int;
 reg [OUTPUT_KEEP_WIDTH-1:0] output_axis_tkeep_int;
 reg                         output_axis_tvalid_int;
-reg                         output_axis_tready_int = 0;
+reg                         output_axis_tready_int_reg = 1'b0;
 reg                         output_axis_tlast_int;
 reg                         output_axis_tuser_int;
 wire                        output_axis_tready_int_early;
 
-reg input_axis_tready_reg = 0, input_axis_tready_next;
+reg input_axis_tready_reg = 1'b0, input_axis_tready_next;
+
 assign input_axis_tready = input_axis_tready_reg;
 
 always @* begin

ParseResult:
UPD HdlIdDef@@output_axis_tready_int to output_axis_tready_int_reg

UPD HdlIdDef@@temp_tdata_reg to temp_tdata_reg
    INS HdlOp@@REPL_CONCAT to temp_tdata_reg
    UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
        INS list@@ops to REPL_CONCAT
        INS HdlValueId@@DATA_WIDTH to ops

UPD HdlIdDef@@temp_tkeep_reg to temp_tkeep_reg
    INS HdlOp@@REPL_CONCAT to temp_tkeep_reg
    UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
        INS list@@ops to REPL_CONCAT
        INS HdlValueId@@KEEP_WIDTH to ops

UPD HdlIdDef@@temp_tdata_reg to temp_tdata_reg
    MOV HdlValueInt@@0 to temp_tdata_reg
    HdlValueInt: 0

UPD HdlIdDef@@temp_tkeep_reg to temp_tkeep_reg
    MOV HdlValueInt@@0 to temp_tkeep_reg
    HdlValueInt: 0

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlValueInt@@0 to ops
            HdlValueInt: 0
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlValueInt@@0 to ops
            HdlValueInt: 0


CommitId: 0d22a35bd855a7f08b34a3f1c24ebb143289d91d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_adapter.v
+++ b/rtl/axis_adapter.v
@@ -132,13 +133,13 @@ always @* begin
     temp_tlast_next = temp_tlast_reg;
     temp_tuser_next = temp_tuser_reg;
 
-    output_axis_tdata_int = 0;
-    output_axis_tkeep_int = 0;
-    output_axis_tvalid_int = 0;
-    output_axis_tlast_int = 0;
-    output_axis_tuser_int = 0;
+    output_axis_tdata_int = {OUTPUT_DATA_WIDTH{1'b0}};
+    output_axis_tkeep_int = {OUTPUT_KEEP_WIDTH{1'b0}};
+    output_axis_tvalid_int = 1'b0;
+    output_axis_tlast_int = 1'b0;
+    output_axis_tuser_int = 1'b0;
 
-    input_axis_tready_next = 0;
+    input_axis_tready_next = 1'b0;
 
     case (state_reg)
         STATE_IDLE: begin

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@REPL_CONCAT to ops
            UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                INS list@@ops to REPL_CONCAT
                INS HdlValueId@@OUTPUT_DATA_WIDTH to ops
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@REPL_CONCAT to ops
            UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                INS list@@ops to REPL_CONCAT
                INS HdlValueId@@OUTPUT_KEEP_WIDTH to ops

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlValueInt@@0 to ops
            HdlValueInt: 0
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlValueInt@@0 to ops
            HdlValueInt: 0


CommitId: 0d22a35bd855a7f08b34a3f1c24ebb143289d91d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_adapter.v
+++ b/rtl/axis_adapter.v
@@ -161,7 +162,7 @@ always @* begin
                 // output bus is wider
 
                 // accept new data
-                input_axis_tready_next = 1;
+                input_axis_tready_next = 1'b1;
 
                 if (input_axis_tready & input_axis_tvalid) begin
                     // word transfer in - store it in data register

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@REPL_CONCAT to ops
            UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                INS list@@ops to REPL_CONCAT
                INS HdlValueId@@OUTPUT_DATA_WIDTH to ops
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@REPL_CONCAT to ops
            UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                INS list@@ops to REPL_CONCAT
                INS HdlValueId@@OUTPUT_KEEP_WIDTH to ops

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlValueInt@@0 to ops
            HdlValueInt: 0
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlValueInt@@0 to ops
            HdlValueInt: 0


CommitId: 0d22a35bd855a7f08b34a3f1c24ebb143289d91d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_adapter.v
+++ b/rtl/axis_adapter.v
@@ -173,15 +174,15 @@ always @* begin
                     temp_tuser_next = input_axis_tuser;
 
                     // first input cycle complete
-                    cycle_count_next = 1;
+                    cycle_count_next = 8'd1;
 
                     if (input_axis_tlast) begin
                         // got last signal on first cycle, so output it
-                        input_axis_tready_next = 0;
+                        input_axis_tready_next = 1'b0;
                         state_next = STATE_TRANSFER_OUT;
                     end else begin
                         // otherwise, transfer in the rest of the words
-                        input_axis_tready_next = 1;
+                        input_axis_tready_next = 1'b1;
                         state_next = STATE_TRANSFER_IN;
                     end
                 end else begin

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@REPL_CONCAT to ops
            UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                INS list@@ops to REPL_CONCAT
                INS HdlValueId@@OUTPUT_DATA_WIDTH to ops
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@REPL_CONCAT to ops
            UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                INS list@@ops to REPL_CONCAT
                INS HdlValueId@@OUTPUT_KEEP_WIDTH to ops

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlValueInt@@0 to ops
            HdlValueInt: 0
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlValueInt@@0 to ops
            HdlValueInt: 0


CommitId: 0d22a35bd855a7f08b34a3f1c24ebb143289d91d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_adapter.v
+++ b/rtl/axis_adapter.v
@@ -191,24 +192,24 @@ always @* begin
                 // output bus is narrower
 
                 // accept new data
-                input_axis_tready_next = 1;
+                input_axis_tready_next = 1'b1;
 
                 if (input_axis_tready & input_axis_tvalid) begin
                     // word transfer in - store it in data register
-                    cycle_count_next = 0;
+                    cycle_count_next = 8'd0;
 
                     // is this the last cycle?
                     if (CYCLE_COUNT == 1) begin
                         // last cycle by counter value
-                        last_cycle = 1;
+                        last_cycle = 1'b1;
                     end else if (input_axis_tkeep[CYCLE_KEEP_WIDTH-1:0] != {CYCLE_KEEP_WIDTH{1'b1}}) begin
                         // last cycle by tkeep fall in current cycle
-                        last_cycle = 1;
+                        last_cycle = 1'b1;
                     end else if (input_axis_tkeep[(CYCLE_KEEP_WIDTH*2)-1:CYCLE_KEEP_WIDTH] == {CYCLE_KEEP_WIDTH{1'b0}}) begin
                         // last cycle by tkeep fall at end of current cycle
-                        last_cycle = 1;
+                        last_cycle = 1'b1;
                     end else begin
-                        last_cycle = 0;
+                        last_cycle = 1'b0;
                     end
 
                     // pass complete input word, zero-extended to temp register

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@REPL_CONCAT to ops
            UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                INS list@@ops to REPL_CONCAT
                INS HdlValueId@@OUTPUT_DATA_WIDTH to ops
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@REPL_CONCAT to ops
            UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                INS list@@ops to REPL_CONCAT
                INS HdlValueId@@OUTPUT_KEEP_WIDTH to ops

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlValueInt@@0 to ops
            HdlValueInt: 0
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlValueInt@@0 to ops
            HdlValueInt: 0


CommitId: 0d22a35bd855a7f08b34a3f1c24ebb143289d91d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_adapter.v
+++ b/rtl/axis_adapter.v
@@ -220,18 +221,18 @@ always @* begin
                     // short-circuit and get first word out the door
                     output_axis_tdata_int = input_axis_tdata[CYCLE_DATA_WIDTH-1:0];
                     output_axis_tkeep_int = input_axis_tkeep[CYCLE_KEEP_WIDTH-1:0];
-                    output_axis_tvalid_int = 1;
+                    output_axis_tvalid_int = 1'b1;
                     output_axis_tlast_int = input_axis_tlast & last_cycle;
                     output_axis_tuser_int = input_axis_tuser & last_cycle;
 
-                    if (output_axis_tready_int) begin
+                    if (output_axis_tready_int_reg) begin
                         // if output register is ready for first word, then move on to the next one
-                        cycle_count_next = 1;
+                        cycle_count_next = 8'd1;
                     end
 
-                    if (!last_cycle || !output_axis_tready_int) begin
+                    if (!last_cycle || !output_axis_tready_int_reg) begin
                         // continue outputting words
-                        input_axis_tready_next = 0;
+                        input_axis_tready_next = 1'b0;
                         state_next = STATE_TRANSFER_OUT;
                     end else begin
                         state_next = STATE_IDLE;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@REPL_CONCAT to ops
            UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                INS list@@ops to REPL_CONCAT
                INS HdlValueId@@OUTPUT_DATA_WIDTH to ops
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@REPL_CONCAT to ops
            UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                INS list@@ops to REPL_CONCAT
                INS HdlValueId@@OUTPUT_KEEP_WIDTH to ops

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlValueInt@@0 to ops
            HdlValueInt: 0
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlValueInt@@0 to ops
            HdlValueInt: 0

UPD HdlStmIf@@ to 
    UPD HdlValueId@@output_axis_tready_int to output_axis_tready_int_reg

UPD HdlStmIf@@ to 
    UPD HdlOp@@OR_LOG to OR_LOG
        UPD HdlOp@@NEG_LOG to NEG_LOG
            UPD HdlValueId@@output_axis_tready_int to output_axis_tready_int_reg


CommitId: 0d22a35bd855a7f08b34a3f1c24ebb143289d91d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_adapter.v
+++ b/rtl/axis_adapter.v
@@ -246,7 +247,7 @@ always @* begin
             // only used when output is wider
 
             // accept new data
-            input_axis_tready_next = 1;
+            input_axis_tready_next = 1'b1;
 
             if (input_axis_tready & input_axis_tvalid) begin
                 // word transfer in - store in data register

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@REPL_CONCAT to ops
            UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                INS list@@ops to REPL_CONCAT
                INS HdlValueId@@OUTPUT_DATA_WIDTH to ops
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@REPL_CONCAT to ops
            UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                INS list@@ops to REPL_CONCAT
                INS HdlValueId@@OUTPUT_KEEP_WIDTH to ops

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlValueInt@@0 to ops
            HdlValueInt: 0
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlValueInt@@0 to ops
            HdlValueInt: 0


CommitId: 0d22a35bd855a7f08b34a3f1c24ebb143289d91d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_adapter.v
+++ b/rtl/axis_adapter.v
@@ -265,7 +266,7 @@ always @* begin
                     state_next = STATE_TRANSFER_OUT;
                 end else begin
                     // more words to read
-                    input_axis_tready_next = 1;
+                    input_axis_tready_next = 1'b1;
                     state_next = STATE_TRANSFER_IN;
                 end
             end else begin

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@REPL_CONCAT to ops
            UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                INS list@@ops to REPL_CONCAT
                INS HdlValueId@@OUTPUT_DATA_WIDTH to ops
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@REPL_CONCAT to ops
            UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                INS list@@ops to REPL_CONCAT
                INS HdlValueId@@OUTPUT_KEEP_WIDTH to ops

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlValueInt@@0 to ops
            HdlValueInt: 0
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlValueInt@@0 to ops
            HdlValueInt: 0


CommitId: 0d22a35bd855a7f08b34a3f1c24ebb143289d91d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_adapter.v
+++ b/rtl/axis_adapter.v
@@ -279,16 +280,16 @@ always @* begin
                 // output bus is wider
                 
                 // do not accept new data
-                input_axis_tready_next = 0;
+                input_axis_tready_next = 1'b0;
 
                 // single-cycle output of entire stored word (output wider)
                 output_axis_tdata_int = temp_tdata_reg;
                 output_axis_tkeep_int = temp_tkeep_reg;
-                output_axis_tvalid_int = 1;
+                output_axis_tvalid_int = 1'b1;
                 output_axis_tlast_int = temp_tlast_reg;
                 output_axis_tuser_int = temp_tuser_reg;
             
-                if (output_axis_tready_int) begin
+                if (output_axis_tready_int_reg) begin
                     // word transfer out
 
                     if (input_axis_tready & input_axis_tvalid) begin

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@REPL_CONCAT to ops
            UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                INS list@@ops to REPL_CONCAT
                INS HdlValueId@@OUTPUT_DATA_WIDTH to ops
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@REPL_CONCAT to ops
            UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                INS list@@ops to REPL_CONCAT
                INS HdlValueId@@OUTPUT_KEEP_WIDTH to ops

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlValueInt@@0 to ops
            HdlValueInt: 0
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlValueInt@@0 to ops
            HdlValueInt: 0

UPD HdlStmIf@@ to 
    UPD HdlValueId@@output_axis_tready_int to output_axis_tready_int_reg


CommitId: 0d22a35bd855a7f08b34a3f1c24ebb143289d91d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_adapter.v
+++ b/rtl/axis_adapter.v
@@ -301,19 +302,19 @@ always @* begin
                         temp_tuser_next = input_axis_tuser;
 
                         // first input cycle complete
-                        cycle_count_next = 1;
+                        cycle_count_next = 8'd1;
 
                         if (input_axis_tlast) begin
                             // got last signal on first cycle, so output it
-                            input_axis_tready_next = 0;
+                            input_axis_tready_next = 1'b0;
                             state_next = STATE_TRANSFER_OUT;
                         end else begin
                             // otherwise, transfer in the rest of the words
-                            input_axis_tready_next = 1;
+                            input_axis_tready_next = 1'b1;
                             state_next = STATE_TRANSFER_IN;
                         end
                     end else begin
-                        input_axis_tready_next = 1;
+                        input_axis_tready_next = 1'b1;
                         state_next = STATE_IDLE;
                     end
                 end else begin

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@REPL_CONCAT to ops
            UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                INS list@@ops to REPL_CONCAT
                INS HdlValueId@@OUTPUT_DATA_WIDTH to ops
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@REPL_CONCAT to ops
            UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                INS list@@ops to REPL_CONCAT
                INS HdlValueId@@OUTPUT_KEEP_WIDTH to ops

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlValueInt@@0 to ops
            HdlValueInt: 0
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlValueInt@@0 to ops
            HdlValueInt: 0

UPD HdlStmIf@@ to 
    UPD HdlValueId@@output_axis_tready_int to output_axis_tready_int_reg


CommitId: 0d22a35bd855a7f08b34a3f1c24ebb143289d91d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_adapter.v
+++ b/rtl/axis_adapter.v
@@ -323,30 +324,30 @@ always @* begin
                 // output bus is narrower
 
                 // do not accept new data
-                input_axis_tready_next = 0;
+                input_axis_tready_next = 1'b0;
 
                 // is this the last cycle?
                 if (cycle_count_reg == CYCLE_COUNT-1) begin
                     // last cycle by counter value
-                    last_cycle = 1;
+                    last_cycle = 1'b1;
                 end else if (temp_tkeep_reg[cycle_count_reg*CYCLE_KEEP_WIDTH +: CYCLE_KEEP_WIDTH] != {CYCLE_KEEP_WIDTH{1'b1}}) begin
                     // last cycle by tkeep fall in current cycle
-                    last_cycle = 1;
+                    last_cycle = 1'b1;
                 end else if (temp_tkeep_reg[(cycle_count_reg+1)*CYCLE_KEEP_WIDTH +: CYCLE_KEEP_WIDTH] == {CYCLE_KEEP_WIDTH{1'b0}}) begin
                     // last cycle by tkeep fall at end of current cycle
-                    last_cycle = 1;
+                    last_cycle = 1'b1;
                 end else begin
-                    last_cycle = 0;
+                    last_cycle = 1'b0;
                 end
 
                 // output current part of stored word (output narrower)
                 output_axis_tdata_int = temp_tdata_reg[cycle_count_reg*CYCLE_DATA_WIDTH +: CYCLE_DATA_WIDTH];
                 output_axis_tkeep_int = temp_tkeep_reg[cycle_count_reg*CYCLE_KEEP_WIDTH +: CYCLE_KEEP_WIDTH];
-                output_axis_tvalid_int = 1;
+                output_axis_tvalid_int = 1'b1;
                 output_axis_tlast_int = temp_tlast_reg & last_cycle;
                 output_axis_tuser_int = temp_tuser_reg & last_cycle;
 
-                if (output_axis_tready_int) begin
+                if (output_axis_tready_int_reg) begin
                     // word transfer out
 
                     cycle_count_next = cycle_count_reg + 1;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@REPL_CONCAT to ops
            UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                INS list@@ops to REPL_CONCAT
                INS HdlValueId@@OUTPUT_DATA_WIDTH to ops
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@REPL_CONCAT to ops
            UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                INS list@@ops to REPL_CONCAT
                INS HdlValueId@@OUTPUT_KEEP_WIDTH to ops

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlValueInt@@0 to ops
            HdlValueInt: 0
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlValueInt@@0 to ops
            HdlValueInt: 0

UPD HdlStmIf@@ to 
    UPD HdlValueId@@output_axis_tready_int to output_axis_tready_int_reg


CommitId: 0d22a35bd855a7f08b34a3f1c24ebb143289d91d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_adapter.v
+++ b/rtl/axis_adapter.v
@@ -354,7 +355,7 @@ always @* begin
                     if (last_cycle) begin
                         // terminated by counter or tlast signal
                         
-                        input_axis_tready_next = 1;
+                        input_axis_tready_next = 1'b1;
                         state_next = STATE_IDLE;
                     end else begin
                         // more words to write

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@REPL_CONCAT to ops
            UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                INS list@@ops to REPL_CONCAT
                INS HdlValueId@@OUTPUT_DATA_WIDTH to ops
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@REPL_CONCAT to ops
            UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                INS list@@ops to REPL_CONCAT
                INS HdlValueId@@OUTPUT_KEEP_WIDTH to ops

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlValueInt@@0 to ops
            HdlValueInt: 0
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlValueInt@@0 to ops
            HdlValueInt: 0

UPD HdlStmIf@@ to 
    UPD HdlValueId@@output_axis_tready_int to output_axis_tready_int_reg


CommitId: 0d22a35bd855a7f08b34a3f1c24ebb143289d91d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_tap.v
+++ b/rtl/axis_tap.v
@@ -59,7 +59,7 @@ module axis_tap #
 // internal datapath
 reg [DATA_WIDTH-1:0] output_axis_tdata_int;
 reg                  output_axis_tvalid_int;
-reg                  output_axis_tready_int = 0;
+reg                  output_axis_tready_int_reg = 1'b0;
 reg                  output_axis_tlast_int;
 reg                  output_axis_tuser_int;
 wire                 output_axis_tready_int_early;

ParseResult:
UPD HdlIdDef@@output_axis_tready_int to output_axis_tready_int_reg


CommitId: 0d22a35bd855a7f08b34a3f1c24ebb143289d91d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_tap.v
+++ b/rtl/axis_tap.v
@@ -72,17 +72,17 @@ localparam [1:0]
 
 reg [1:0] state_reg = STATE_IDLE, state_next;
 
-reg frame_reg = 0, frame_next;
+reg frame_reg = 1'b0, frame_next;
 
 always @* begin
     state_next = STATE_IDLE;
 
     frame_next = frame_reg;
 
-    output_axis_tdata_int = 0;
-    output_axis_tvalid_int = 0;
-    output_axis_tlast_int = 0;
-    output_axis_tuser_int = 0;
+    output_axis_tdata_int = {DATA_WIDTH{1'b0}};
+    output_axis_tvalid_int = 1'b0;
+    output_axis_tlast_int = 1'b0;
+    output_axis_tuser_int = 1'b0;
 
     if (tap_axis_tready & tap_axis_tvalid) begin
         frame_next = ~tap_axis_tlast;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@REPL_CONCAT to ops
            UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                INS list@@ops to REPL_CONCAT
                INS HdlValueId@@DATA_WIDTH to ops

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlValueInt@@0 to ops
            HdlValueInt: 0


CommitId: 0d22a35bd855a7f08b34a3f1c24ebb143289d91d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_tap.v
+++ b/rtl/axis_tap.v
@@ -92,7 +92,7 @@ always @* begin
         STATE_IDLE: begin
             if (tap_axis_tready & tap_axis_tvalid) begin
                 // start of frame
-                if (output_axis_tready_int) begin
+                if (output_axis_tready_int_reg) begin
                     output_axis_tdata_int = tap_axis_tdata;
                     output_axis_tvalid_int = tap_axis_tvalid & tap_axis_tready;
                     output_axis_tlast_int = tap_axis_tlast;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@REPL_CONCAT to ops
            UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                INS list@@ops to REPL_CONCAT
                INS HdlValueId@@DATA_WIDTH to ops

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlValueInt@@0 to ops
            HdlValueInt: 0

UPD HdlStmIf@@ to 
    UPD HdlValueId@@output_axis_tready_int to output_axis_tready_int_reg


CommitId: 0d22a35bd855a7f08b34a3f1c24ebb143289d91d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_tap.v
+++ b/rtl/axis_tap.v
@@ -112,7 +112,7 @@ always @* begin
         STATE_TRANSFER: begin
             if (tap_axis_tready & tap_axis_tvalid) begin
                 // transfer data
-                if (output_axis_tready_int) begin
+                if (output_axis_tready_int_reg) begin
                     output_axis_tdata_int = tap_axis_tdata;
                     output_axis_tvalid_int = tap_axis_tvalid & tap_axis_tready;
                     output_axis_tlast_int = tap_axis_tlast;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@REPL_CONCAT to ops
            UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                INS list@@ops to REPL_CONCAT
                INS HdlValueId@@DATA_WIDTH to ops

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlValueInt@@0 to ops
            HdlValueInt: 0

UPD HdlStmIf@@ to 
    UPD HdlValueId@@output_axis_tready_int to output_axis_tready_int_reg


CommitId: 0d22a35bd855a7f08b34a3f1c24ebb143289d91d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_tap.v
+++ b/rtl/axis_tap.v
@@ -130,11 +130,11 @@ always @* begin
             end
         end
         STATE_TRUNCATE: begin
-            if (output_axis_tready_int) begin
-                output_axis_tdata_int = 0;
-                output_axis_tvalid_int = 1;
-                output_axis_tlast_int = 1;
-                output_axis_tuser_int = 1;
+            if (output_axis_tready_int_reg) begin
+                output_axis_tdata_int = {DATA_WIDTH{1'b0}};
+                output_axis_tvalid_int = 1'b1;
+                output_axis_tlast_int = 1'b1;
+                output_axis_tuser_int = 1'b1;
                 if (frame_next) begin
                     state_next = STATE_WAIT;
                 end else begin

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@REPL_CONCAT to ops
            UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                INS list@@ops to REPL_CONCAT
                INS HdlValueId@@DATA_WIDTH to ops

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlValueInt@@0 to ops
            HdlValueInt: 0

UPD HdlStmIf@@ to 
    UPD HdlValueId@@output_axis_tready_int to output_axis_tready_int_reg
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlValueInt@@0 to ops
            HdlValueInt: 0

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@REPL_CONCAT to ops
            UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                INS list@@ops to REPL_CONCAT
                INS HdlValueId@@DATA_WIDTH to ops


CommitId: 0d22a35bd855a7f08b34a3f1c24ebb143289d91d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_tap.v
+++ b/rtl/axis_tap.v
@@ -161,7 +161,7 @@ end
 always @(posedge clk) begin
     if (rst) begin
         state_reg <= STATE_IDLE;
-        frame_reg <= 0;
+        frame_reg <= 1'b0;
     end else begin
         state_reg <= state_next;
         frame_reg <= frame_next;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@REPL_CONCAT to ops
            UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                INS list@@ops to REPL_CONCAT
                INS HdlValueId@@DATA_WIDTH to ops


CommitId: 2794c315e840562a1facdb87b4bb34740928cfc5
Fix synthesizer complaints
--- a/rtl/axis_baser_rx_64.v
+++ b/rtl/axis_baser_rx_64.v
@@ -545,10 +545,10 @@ always @(posedge clk) begin
         end
     end else if (encoded_rx_hdr == SYNC_CTRL && (encoded_rx_data[7:0] == BLOCK_TYPE_START_4 || encoded_rx_data[7:0] == BLOCK_TYPE_OS_START)) begin
         if (PTP_TS_WIDTH == 96) begin
-            ptp_ts_reg[45:0] <= ptp_ts[45:0] + (PTP_PERIOD_NS * 2**16 + PTP_PERIOD_FNS) * 1.5;
+            ptp_ts_reg[45:0] <= ptp_ts[45:0] + (((PTP_PERIOD_NS * 2**16 + PTP_PERIOD_FNS) * 3) >> 1);
             ptp_ts_reg[95:48] <= ptp_ts[95:48];
         end else begin
-            ptp_ts_reg <= ptp_ts + (PTP_PERIOD_NS * 2**16 + PTP_PERIOD_FNS) * 1.5;
+            ptp_ts_reg <= ptp_ts + (((PTP_PERIOD_NS * 2**16 + PTP_PERIOD_FNS) * 3) >> 1);
         end
     end
 
ParseResult:
UPD HdlStmAssign@@ to 
    INS HdlOp@@ADD to 
    UPD HdlOp@@ADD to ADD
        INS list@@ops to ADD
        UPD HdlOp@@SRL to SRL
            INS HdlValueInt@@1 to ops
            UPD HdlOp@@MUL to MUL
                INS HdlValueInt@@3 to ops

UPD HdlStmAssign@@ to 
    UPD HdlOp@@ADD to ADD
        INS HdlOp@@SRL to ops
        UPD HdlOp@@SRL to SRL
            INS list@@ops to SRL
            INS HdlValueInt@@1 to ops
            UPD HdlOp@@MUL to MUL
                INS HdlValueInt@@3 to ops

UPD HdlStmAssign@@ to 
    UPD HdlOp@@ADD to ADD
        MOV HdlValueId@@ptp_ts to ops
        HdlValueId: ptp_ts
        UPD HdlOp@@MUL to MUL
            DEL float@@ from ops
    UPD HdlOp@@ADD to SRL
    MOV HdlOp@@ADD to 
    HdlOp: ADD
        list: ops
            HdlValueId: ptp_ts
            HdlOp: MUL
                list: ops
                    HdlOp: ADD
                        list: ops
                            HdlOp: MUL
                                list: ops
                                    HdlValueId: PTP_PERIOD_NS
                                    HdlOp: POW
                                        list: ops
                                            HdlValueInt: 2
                                            HdlValueInt: 16
                            HdlValueId: PTP_PERIOD_FNS
                    float

UPD HdlStmAssign@@ to 
    UPD HdlOp@@ADD to ADD
        MOV HdlOp@@MUL to ops
        HdlOp: MUL
            list: ops
                HdlOp: ADD
                    list: ops
                        HdlOp: MUL
                            list: ops
                                HdlValueId: PTP_PERIOD_NS
                                HdlOp: POW
                                    list: ops
                                        HdlValueInt: 2
                                        HdlValueInt: 16
                        HdlValueId: PTP_PERIOD_FNS
                float
        UPD HdlOp@@MUL to MUL
            DEL float@@ from ops


CommitId: 455ddf5df21040089e91ba19244cbd8aad37d1b9
Fix error detect in 10G MAC
--- a/rtl/eth_mac_10g_rx.v
+++ b/rtl/eth_mac_10g_rx.v
@@ -325,9 +325,20 @@ always @* begin
 
             if (xgmii_rxc_d1[0] && xgmii_rxd_d1[7:0] == 8'hfb) begin
                 // start condition
-                reset_crc = 0;
-                update_crc = 1;
-                state_next = STATE_PAYLOAD;
+                if (detect_error_masked) begin
+                    // error in first data word
+                    output_axis_tdata_next = 0;
+                    output_axis_tkeep_next = 1;
+                    output_axis_tvalid_next = 1;
+                    output_axis_tlast_next = 1;
+                    output_axis_tuser_next = 1;
+                    error_bad_frame_next = 1;
+                    state_next = STATE_IDLE;
+                end else begin
+                    reset_crc = 0;
+                    update_crc = 1;
+                    state_next = STATE_PAYLOAD;
+                end
             end else begin
                 state_next = STATE_IDLE;
             end
ParseResult:
UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    INS HdlValueId@@detect_error_masked to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: output_axis_tdata_next
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: output_axis_tkeep_next
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: output_axis_tvalid_next
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: output_axis_tlast_next
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: output_axis_tuser_next
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: error_bad_frame_next
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: state_next
                    HdlValueId: STATE_IDLE
    INS list@@elifs to 

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: reset_crc
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: update_crc
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: state_next
                    HdlValueId: STATE_PAYLOAD


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/eth_mac_10g_tx.v
+++ b/rtl/eth_mac_10g_tx.v
@@ -99,12 +99,12 @@ reg [7:0] fcs_output_txc_1;
 
 reg [7:0] ifg_offset;
 
-reg [7:0] frame_ptr_reg = 0, frame_ptr_next;
+reg [15:0] frame_ptr_reg = 16'd0, frame_ptr_next;
 
-reg [7:0] ifg_count_reg = 0, ifg_count_next;
-reg [1:0] deficit_idle_count_reg = 0, deficit_idle_count_next;
+reg [7:0] ifg_count_reg = 8'd0, ifg_count_next;
+reg [1:0] deficit_idle_count_reg = 2'd0, deficit_idle_count_next;
 
-reg input_axis_tready_reg = 0, input_axis_tready_next;
+reg input_axis_tready_reg = 1'b0, input_axis_tready_next;
 
 reg [31:0] crc_state = 32'hFFFFFFFF;
 

ParseResult:
INS HdlIdDef@@frame_ptr_reg to objs
HdlIdDef: frame_ptr_reg
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 15
                    HdlValueInt: 0
    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@frame_ptr_next to objs
HdlIdDef: frame_ptr_next
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 15
                    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@frame_ptr_reg from objs
HdlIdDef: frame_ptr_reg
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 7
                    HdlValueInt: 0
    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@frame_ptr_next from objs
HdlIdDef: frame_ptr_next
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 7
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/eth_mac_10g_tx.v
+++ b/rtl/eth_mac_10g_tx.v
@@ -212,15 +212,12 @@ function [7:0] count2keep;
 endfunction
 
 // Mask input data
+integer j;
+
 always @* begin
-    input_axis_tdata_masked[ 7: 0] = input_axis_tkeep[0] ? input_axis_tdata[ 7: 0] : 8'd0;
-    input_axis_tdata_masked[15: 8] = input_axis_tkeep[1] ? input_axis_tdata[15: 8] : 8'd0;
-    input_axis_tdata_masked[23:16] = input_axis_tkeep[2] ? input_axis_tdata[23:16] : 8'd0;
-    input_axis_tdata_masked[31:24] = input_axis_tkeep[3] ? input_axis_tdata[31:24] : 8'd0;
-    input_axis_tdata_masked[39:32] = input_axis_tkeep[4] ? input_axis_tdata[39:32] : 8'd0;
-    input_axis_tdata_masked[47:40] = input_axis_tkeep[5] ? input_axis_tdata[47:40] : 8'd0;
-    input_axis_tdata_masked[55:48] = input_axis_tkeep[6] ? input_axis_tdata[55:48] : 8'd0;
-    input_axis_tdata_masked[63:56] = input_axis_tkeep[7] ? input_axis_tdata[63:56] : 8'd0;
+    for (j = 0; j < 8; j = j + 1) begin
+        input_axis_tdata_masked[j*8 +: 8] = input_axis_tkeep[j] ? input_axis_tdata[j*8 +: 8] : 8'd0;
+    end
 end
 
 // FCS cycle calculation

ParseResult:
INS HdlIdDef@@j to objs
HdlIdDef: j
    HdlValueId: integer
    HdlDirection: INTERNAL

INS HdlStmProcess@@ to objs

UPD HdlStmProcess@@ to 
    MOV list@@sensitivity to 
    list: sensitivity
        HdlAll
    DEL HdlStmBlock@@SEQ from 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: input_axis_tdata_masked
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 7
                                    HdlValueInt: 0
                    HdlOp: TERNARY
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_axis_tkeep
                                    HdlValueInt: 0
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_axis_tdata
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 7
                                            HdlValueInt: 0
                            HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: input_axis_tdata_masked
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 15
                                    HdlValueInt: 8
                    HdlOp: TERNARY
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_axis_tkeep
                                    HdlValueInt: 1
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_axis_tdata
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 15
                                            HdlValueInt: 8
                            HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: input_axis_tdata_masked
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 23
                                    HdlValueInt: 16
                    HdlOp: TERNARY
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_axis_tkeep
                                    HdlValueInt: 2
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_axis_tdata
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 23
                                            HdlValueInt: 16
                            HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: input_axis_tdata_masked
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 31
                                    HdlValueInt: 24
                    HdlOp: TERNARY
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_axis_tkeep
                                    HdlValueInt: 3
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_axis_tdata
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 31
                                            HdlValueInt: 24
                            HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: input_axis_tdata_masked
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 39
                                    HdlValueInt: 32
                    HdlOp: TERNARY
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_axis_tkeep
                                    HdlValueInt: 4
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_axis_tdata
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 39
                                            HdlValueInt: 32
                            HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: input_axis_tdata_masked
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 47
                                    HdlValueInt: 40
                    HdlOp: TERNARY
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_axis_tkeep
                                    HdlValueInt: 5
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_axis_tdata
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 47
                                            HdlValueInt: 40
                            HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: input_axis_tdata_masked
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 55
                                    HdlValueInt: 48
                    HdlOp: TERNARY
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_axis_tkeep
                                    HdlValueInt: 6
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_axis_tdata
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 55
                                            HdlValueInt: 48
                            HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: input_axis_tdata_masked
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 63
                                    HdlValueInt: 56
                    HdlOp: TERNARY
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_axis_tkeep
                                    HdlValueInt: 7
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_axis_tdata
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 63
                                            HdlValueInt: 56
                            HdlValueInt: 0

UPD HdlStmProcess@@ to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmFor
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: j
                HdlOp: LT
                    list: ops
                        HdlValueId: j
                        HdlValueInt: 8
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: j
                                HdlOp: ADD
                                    list: ops
                                        HdlValueId: j
                                        HdlValueInt: 1
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: input_axis_tdata_masked
                                        HdlOp: PART_SELECT_POST
                                            list: ops
                                                HdlOp: MUL
                                                    list: ops
                                                        HdlValueId: j
                                                        HdlValueInt: 8
                                                HdlValueInt: 8
                                HdlOp: TERNARY
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: input_axis_tkeep
                                                HdlValueId: j
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: input_axis_tdata
                                                HdlOp: PART_SELECT_POST
                                                    list: ops
                                                        HdlOp: MUL
                                                            list: ops
                                                                HdlValueId: j
                                                                HdlValueInt: 8
                                                        HdlValueInt: 8
                                        HdlValueInt: 0

DEL HdlStmProcess@@ from objs


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/eth_mac_10g_tx.v
+++ b/rtl/eth_mac_10g_tx.v
@@ -547,25 +544,20 @@ end
 always @(posedge clk) begin
     if (rst) begin
         state_reg <= STATE_IDLE;
-        
-        frame_ptr_reg <= 0;
 
-        ifg_count_reg <= 0;
-        deficit_idle_count_reg <= 0;
+        frame_ptr_reg <= 16'd0;
 
-        input_tdata_reg <= 0;
-        input_tkeep_reg <= 0;
-        
-        input_axis_tready_reg <= 0;
+        ifg_count_reg <= 8'd0;
+        deficit_idle_count_reg <= 2'd0;
+
+        input_axis_tready_reg <= 1'b0;
 
         xgmii_txd_reg <= 64'h0707070707070707;
         xgmii_txc_reg <= 8'b11111111;
 
         crc_state <= 32'hFFFFFFFF;
 
-        lanes_swapped <= 0;
-        swap_txd <= 0;
-        swap_txc <= 0;
+        lanes_swapped <= 1'b0;
     end else begin
         state_reg <= state_next;
 

ParseResult:
DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: input_tdata_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: input_tkeep_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: swap_txd

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: swap_txc


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/eth_mac_10g_tx.v
+++ b/rtl/eth_mac_10g_tx.v
@@ -574,14 +566,11 @@ always @(posedge clk) begin
         ifg_count_reg <= ifg_count_next;
         deficit_idle_count_reg <= deficit_idle_count_next;
 
-        input_tdata_reg <= input_tdata_next;
-        input_tkeep_reg <= input_tkeep_next;
-
         input_axis_tready_reg <= input_axis_tready_next;
 
         if (lanes_swapped) begin
             if (unswap_lanes) begin
-                lanes_swapped <= 0;
+                lanes_swapped <= 1'b0;
                 xgmii_txd_reg <= xgmii_txd_next;
                 xgmii_txc_reg <= xgmii_txc_next;
             end else begin

ParseResult:
MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: input_tdata_next
    HdlValueId: input_tdata_reg

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: input_tkeep_next
    HdlValueId: input_tkeep_reg


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/eth_mac_10g_tx.v
+++ b/rtl/eth_mac_10g_tx.v
@@ -599,9 +588,6 @@ always @(posedge clk) begin
             end
         end
 
-        swap_txd <= xgmii_txd_next[63:32];
-        swap_txc <= xgmii_txc_next[7:4];
-
         // datapath
         if (reset_crc) begin
             crc_state <= 32'hFFFFFFFF;

ParseResult:
MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlOp: INDEX
        list: ops
            HdlValueId: xgmii_txd_next
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 63
                    HdlValueInt: 32
    HdlValueId: swap_txd

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlOp: INDEX
        list: ops
            HdlValueId: xgmii_txc_next
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 7
                    HdlValueInt: 4
    HdlValueId: swap_txc


CommitId: 8fea20ef772f0581cdc6d9842acd9bd83219ec82
Fix frame_ptr_reg width
--- a/rtl/ip_eth_tx_64.v
+++ b/rtl/ip_eth_tx_64.v
@@ -126,7 +126,7 @@ reg [2:0] state_reg = STATE_IDLE, state_next;
 reg store_ip_hdr;
 reg store_last_word;
 
-reg [7:0] frame_ptr_reg = 0, frame_ptr_next;
+reg [15:0] frame_ptr_reg = 0, frame_ptr_next;
 
 reg flush_save;
 reg transfer_in_save;
ParseResult:
INS HdlIdDef@@frame_ptr_reg to objs
HdlIdDef: frame_ptr_reg
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 15
                    HdlValueInt: 0
    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@frame_ptr_next to objs
HdlIdDef: frame_ptr_next
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 15
                    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@frame_ptr_reg from objs
HdlIdDef: frame_ptr_reg
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 7
                    HdlValueInt: 0
    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@frame_ptr_next from objs
HdlIdDef: frame_ptr_next
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 7
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 0d22a35bd855a7f08b34a3f1c24ebb143289d91d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_demux_64_4.v
+++ b/rtl/axis_demux_64_4.v
@@ -86,16 +86,16 @@ module axis_demux_64_4 #
     input  wire [1:0]             select
 );
 
-reg [1:0] select_reg = 0, select_next;
-reg frame_reg = 0, frame_next;
+reg [1:0] select_reg = 2'd0, select_next;
+reg frame_reg = 1'b0, frame_next;
 
-reg input_axis_tready_reg = 0, input_axis_tready_next;
+reg input_axis_tready_reg = 1'b0, input_axis_tready_next;
 
 // internal datapath
 reg [DATA_WIDTH-1:0] output_axis_tdata_int;
 reg [KEEP_WIDTH-1:0] output_axis_tkeep_int;
 reg                  output_axis_tvalid_int;
-reg                  output_axis_tready_int = 0;
+reg                  output_axis_tready_int_reg = 1'b0;
 reg                  output_axis_tlast_int;
 reg                  output_axis_tuser_int;
 wire                 output_axis_tready_int_early;

ParseResult:
UPD HdlIdDef@@output_axis_tready_int to output_axis_tready_int_reg


CommitId: 0d22a35bd855a7f08b34a3f1c24ebb143289d91d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_demux_64_4.v
+++ b/rtl/axis_demux_64_4.v
@@ -165,20 +165,25 @@ always @(posedge clk) begin
 end
 
 // output datapath logic
-reg [DATA_WIDTH-1:0] output_axis_tdata_reg = 0;
-reg [KEEP_WIDTH-1:0] output_axis_tkeep_reg = 0;
-reg                  output_0_axis_tvalid_reg = 0;
-reg                  output_1_axis_tvalid_reg = 0;
-reg                  output_2_axis_tvalid_reg = 0;
-reg                  output_3_axis_tvalid_reg = 0;
-reg                  output_axis_tlast_reg = 0;
-reg                  output_axis_tuser_reg = 0;
-
-reg [DATA_WIDTH-1:0] temp_axis_tdata_reg = 0;
-reg [KEEP_WIDTH-1:0] temp_axis_tkeep_reg = 0;
-reg                  temp_axis_tvalid_reg = 0;
-reg                  temp_axis_tlast_reg = 0;
-reg                  temp_axis_tuser_reg = 0;
+reg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};
+reg [KEEP_WIDTH-1:0] output_axis_tkeep_reg = {KEEP_WIDTH{1'b0}};
+reg                  output_0_axis_tvalid_reg = 1'b0, output_0_axis_tvalid_next;
+reg                  output_1_axis_tvalid_reg = 1'b0, output_1_axis_tvalid_next;
+reg                  output_2_axis_tvalid_reg = 1'b0, output_2_axis_tvalid_next;
+reg                  output_3_axis_tvalid_reg = 1'b0, output_3_axis_tvalid_next;
+reg                  output_axis_tlast_reg = 1'b0;
+reg                  output_axis_tuser_reg = 1'b0;
+
+reg [DATA_WIDTH-1:0] temp_axis_tdata_reg = {DATA_WIDTH{1'b0}};
+reg [KEEP_WIDTH-1:0] temp_axis_tkeep_reg = {KEEP_WIDTH{1'b0}};
+reg                  temp_axis_tvalid_reg = 1'b0, temp_axis_tvalid_next;
+reg                  temp_axis_tlast_reg = 1'b0;
+reg                  temp_axis_tuser_reg = 1'b0;
+
+// datapath control
+reg store_axis_int_to_output;
+reg store_axis_int_to_temp;
+reg store_axis_temp_to_output;
 
 assign output_0_axis_tdata = output_axis_tdata_reg;
 assign output_0_axis_tkeep = output_axis_tkeep_reg;

ParseResult:
INS HdlIdDef@@output_0_axis_tvalid_next to objs
HdlIdDef: output_0_axis_tvalid_next
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL

INS HdlIdDef@@output_1_axis_tvalid_next to objs
HdlIdDef: output_1_axis_tvalid_next
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL

INS HdlIdDef@@output_2_axis_tvalid_next to objs
HdlIdDef: output_2_axis_tvalid_next
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL

INS HdlIdDef@@output_3_axis_tvalid_next to objs
HdlIdDef: output_3_axis_tvalid_next
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL

INS HdlIdDef@@temp_axis_tvalid_next to objs
HdlIdDef: temp_axis_tvalid_next
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL

INS HdlIdDef@@store_axis_int_to_output to objs
HdlIdDef: store_axis_int_to_output
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL

INS HdlIdDef@@store_axis_int_to_temp to objs
HdlIdDef: store_axis_int_to_temp
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL

INS HdlIdDef@@store_axis_temp_to_output to objs
HdlIdDef: store_axis_temp_to_output
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL

UPD HdlIdDef@@output_axis_tdata_reg to output_axis_tdata_reg
    INS HdlOp@@REPL_CONCAT to output_axis_tdata_reg
    UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
        INS list@@ops to REPL_CONCAT
        INS HdlValueId@@DATA_WIDTH to ops

UPD HdlIdDef@@output_axis_tkeep_reg to output_axis_tkeep_reg
    INS HdlOp@@REPL_CONCAT to output_axis_tkeep_reg
    UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
        INS list@@ops to REPL_CONCAT
        INS HdlValueId@@KEEP_WIDTH to ops

UPD HdlIdDef@@temp_axis_tdata_reg to temp_axis_tdata_reg
    INS HdlOp@@REPL_CONCAT to temp_axis_tdata_reg
    UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
        INS list@@ops to REPL_CONCAT
        INS HdlValueId@@DATA_WIDTH to ops

UPD HdlIdDef@@temp_axis_tkeep_reg to temp_axis_tkeep_reg
    INS HdlOp@@REPL_CONCAT to temp_axis_tkeep_reg
    UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
        INS list@@ops to REPL_CONCAT
        INS HdlValueId@@KEEP_WIDTH to ops

UPD HdlIdDef@@output_axis_tdata_reg to output_axis_tdata_reg
    MOV HdlValueInt@@0 to output_axis_tdata_reg
    HdlValueInt: 0

UPD HdlIdDef@@output_axis_tkeep_reg to output_axis_tkeep_reg
    MOV HdlValueInt@@0 to output_axis_tkeep_reg
    HdlValueInt: 0

UPD HdlIdDef@@temp_axis_tdata_reg to temp_axis_tdata_reg
    MOV HdlValueInt@@0 to temp_axis_tdata_reg
    HdlValueInt: 0

UPD HdlIdDef@@temp_axis_tkeep_reg to temp_axis_tkeep_reg
    MOV HdlValueInt@@0 to temp_axis_tkeep_reg
    HdlValueInt: 0


CommitId: 029d1fa06fe01a40c556d56662415a086bc2b5af
Fix loop count variable scoping issue
--- a/rtl/axis_switch.v
+++ b/rtl/axis_switch.v
@@ -141,6 +141,8 @@ generate
         reg drop_reg = 1'b0, drop_next;
         reg select_valid_reg = 1'b0, select_valid_next;
 
+        integer k;
+
         always @* begin
             select_next = select_reg;
             drop_next = drop_reg && !(int_s_axis_tvalid[m] && int_s_axis_tready[m] && int_s_axis_tlast[m]);

ParseResult:
INS HdlIdDef@@k to body
HdlIdDef: k
    HdlValueId: integer
    HdlDirection: INTERNAL


CommitId: 029d1fa06fe01a40c556d56662415a086bc2b5af
Fix loop count variable scoping issue
--- a/rtl/axis_switch.v
+++ b/rtl/axis_switch.v
@@ -150,9 +152,9 @@ generate
                 select_next = 1'b0;
                 select_valid_next = 1'b0;
                 drop_next = 1'b1;
-                for (i = 0; i < M_COUNT; i = i + 1) begin
-                    if (int_s_axis_tdest[m*DEST_WIDTH +: DEST_WIDTH] >= M_BASE[i*32 +: 32] && int_s_axis_tdest[m*DEST_WIDTH +: DEST_WIDTH] <= M_TOP[i*32 +: 32] && (M_CONNECT & (1 << (m+i*S_COUNT)))) begin
-                        select_next = i;
+                for (k = 0; k < M_COUNT; k = k + 1) begin
+                    if (int_s_axis_tdest[m*DEST_WIDTH +: DEST_WIDTH] >= M_BASE[k*32 +: 32] && int_s_axis_tdest[m*DEST_WIDTH +: DEST_WIDTH] <= M_TOP[k*32 +: 32] && (M_CONNECT & (1 << (m+k*S_COUNT)))) begin
+                        select_next = k;
                         select_valid_next = 1'b1;
                         drop_next = 1'b0;
                     end
ParseResult:
UPD HdlStmFor@@ to 
    UPD HdlOp@@LT to LT
        UPD HdlValueId@@i to k
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@i to k
            UPD HdlOp@@ADD to ADD
                UPD HdlValueId@@i to k

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@i to k

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@i to k
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@AND to AND
            UPD HdlOp@@SLL to SLL
                UPD HdlOp@@ADD to ADD
                    UPD HdlOp@@MUL to MUL
                        UPD HdlValueId@@i to k
        UPD HdlOp@@AND_LOG to AND_LOG
            UPD HdlOp@@GE to GE
                UPD HdlOp@@INDEX to INDEX
                    UPD HdlOp@@PART_SELECT_POST to PART_SELECT_POST
                        UPD HdlOp@@MUL to MUL
                            UPD HdlValueId@@i to k
            UPD HdlOp@@LE to LE
                UPD HdlOp@@INDEX to INDEX
                    UPD HdlOp@@PART_SELECT_POST to PART_SELECT_POST
                        UPD HdlOp@@MUL to MUL
                            UPD HdlValueId@@i to k


CommitId: 0d22a35bd855a7f08b34a3f1c24ebb143289d91d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_stat_counter.v
+++ b/rtl/axis_stat_counter.v
@@ -100,12 +100,12 @@ reg [TICK_COUNT_WIDTH-1:0] tick_count_output_reg = 0;
 reg [BYTE_COUNT_WIDTH-1:0] byte_count_output_reg = 0;
 reg [FRAME_COUNT_WIDTH-1:0] frame_count_output_reg = 0;
 
-reg busy_reg = 0;
+reg busy_reg = 1'b0;
 
 // internal datapath
 reg [7:0]  output_axis_tdata_int;
 reg        output_axis_tvalid_int;
-reg        output_axis_tready_int = 0;
+reg        output_axis_tready_int_reg = 1'b0;
 reg        output_axis_tlast_int;
 reg        output_axis_tuser_int;
 wire       output_axis_tready_int_early;

ParseResult:
UPD HdlIdDef@@output_axis_tready_int to output_axis_tready_int_reg


CommitId: 0d22a35bd855a7f08b34a3f1c24ebb143289d91d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_stat_counter.v
+++ b/rtl/axis_stat_counter.v
@@ -115,19 +115,19 @@ assign busy = busy_reg;
 integer offset, i, bit_cnt;
 
 always @* begin
-    state_next = 2'bz;
+    state_next = STATE_IDLE;
 
     tick_count_next = tick_count_reg;
     byte_count_next = byte_count_reg;
     frame_count_next = frame_count_reg;
     frame_next = frame_reg;
 
-    output_axis_tdata_int = 0;
-    output_axis_tvalid_int = 0;
-    output_axis_tlast_int = 0;
-    output_axis_tuser_int = 0;
+    output_axis_tdata_int = 8'd0;
+    output_axis_tvalid_int = 1'b0;
+    output_axis_tlast_int = 1'b0;
+    output_axis_tuser_int = 1'b0;
 
-    store_output = 0;
+    store_output = 1'b0;
 
     frame_ptr_next = frame_ptr_reg;
 

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueId@@STATE_IDLE to ops

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            DEL HdlValueInt@@z from ops


CommitId: 0d22a35bd855a7f08b34a3f1c24ebb143289d91d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_stat_counter.v
+++ b/rtl/axis_stat_counter.v
@@ -136,13 +136,13 @@ always @* begin
     case (state_reg)
         STATE_IDLE: begin
             if (trigger) begin
-                store_output = 1;
+                store_output = 1'b1;
                 tick_count_next = 0;
                 byte_count_next = 0;
                 frame_count_next = 0;
                 frame_ptr_next = 0;
 
-                if (output_axis_tready_int) begin
+                if (output_axis_tready_int_reg) begin
                     frame_ptr_next = 1;
                     if (TAG_ENABLE) begin
                         output_axis_tdata_int = tag[(TAG_BYTE_WIDTH-1)*8 +: 8];

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueId@@STATE_IDLE to ops

UPD HdlStmIf@@ to 
    UPD HdlValueId@@output_axis_tready_int to output_axis_tready_int_reg

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            DEL HdlValueInt@@z from ops


CommitId: 0d22a35bd855a7f08b34a3f1c24ebb143289d91d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_stat_counter.v
+++ b/rtl/axis_stat_counter.v
@@ -153,7 +153,7 @@ always @* begin
                     end else if (FRAME_COUNT_ENABLE) begin
                         output_axis_tdata_int = frame_count_reg[(FRAME_COUNT_BYTE_WIDTH-1)*8 +: 8];
                     end
-                    output_axis_tvalid_int = 1;
+                    output_axis_tvalid_int = 1'b1;
                 end
 
                 state_next = STATE_OUTPUT_DATA;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueId@@STATE_IDLE to ops

UPD HdlStmIf@@ to 
    UPD HdlValueId@@output_axis_tready_int to output_axis_tready_int_reg

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            DEL HdlValueInt@@z from ops


CommitId: 0d22a35bd855a7f08b34a3f1c24ebb143289d91d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_stat_counter.v
+++ b/rtl/axis_stat_counter.v
@@ -162,10 +162,10 @@ always @* begin
             end
         end
         STATE_OUTPUT_DATA: begin
-            if (output_axis_tready_int) begin
+            if (output_axis_tready_int_reg) begin
                 state_next = STATE_OUTPUT_DATA;
                 frame_ptr_next = frame_ptr_reg + 1;
-                output_axis_tvalid_int = 1;
+                output_axis_tvalid_int = 1'b1;
 
                 offset = 0;
                 if (TAG_ENABLE) begin

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueId@@STATE_IDLE to ops

UPD HdlStmIf@@ to 
    UPD HdlValueId@@output_axis_tready_int to output_axis_tready_int_reg

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            DEL HdlValueInt@@z from ops


CommitId: 0d22a35bd855a7f08b34a3f1c24ebb143289d91d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_stat_counter.v
+++ b/rtl/axis_stat_counter.v
@@ -201,7 +201,7 @@ always @* begin
                     end
                 end
                 if (frame_ptr_reg == offset-1) begin
-                    output_axis_tlast_int = 1;
+                    output_axis_tlast_int = 1'b1;
                     state_next = STATE_IDLE;
                 end
             end else begin

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueId@@STATE_IDLE to ops

UPD HdlStmIf@@ to 
    UPD HdlValueId@@output_axis_tready_int to output_axis_tready_int_reg

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            DEL HdlValueInt@@z from ops


CommitId: 0d22a35bd855a7f08b34a3f1c24ebb143289d91d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_stat_counter.v
+++ b/rtl/axis_stat_counter.v
@@ -229,11 +229,11 @@ always @* begin
         // count frames
         if (monitor_axis_tlast) begin
             // end of frame
-            frame_next = 0;
+            frame_next = 1'b0;
         end else if (~frame_reg) begin
             // first word after end of frame
             frame_count_next = frame_count_next + 1;
-            frame_next = 1;
+            frame_next = 1'b1;
         end
     end
 end

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueId@@STATE_IDLE to ops

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            DEL HdlValueInt@@z from ops


CommitId: 0d22a35bd855a7f08b34a3f1c24ebb143289d91d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_stat_counter.v
+++ b/rtl/axis_stat_counter.v
@@ -244,12 +244,9 @@ always @(posedge clk) begin
         tick_count_reg <= 0;
         byte_count_reg <= 0;
         frame_count_reg <= 0;
-        frame_reg <= 0;
+        frame_reg <= 1'b0;
         frame_ptr_reg <= 0;
-        busy_reg <= 0;
-        tick_count_output_reg <= 0;
-        byte_count_output_reg <= 0;
-        frame_count_output_reg <= 0;
+        busy_reg <= 1'b0;
     end else begin
         state_reg <= state_next;
         tick_count_reg <= tick_count_next;

ParseResult:
DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: tick_count_output_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: byte_count_output_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: frame_count_output_reg


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_eth_fcs_check.v
+++ b/rtl/axis_eth_fcs_check.v
@@ -71,33 +71,31 @@ reg update_crc;
 reg shift_in;
 reg shift_reset;
 
-reg [7:0] frame_ptr_reg = 0, frame_ptr_next;
+reg [7:0] input_axis_tdata_d0 = 8'd0;
+reg [7:0] input_axis_tdata_d1 = 8'd0;
+reg [7:0] input_axis_tdata_d2 = 8'd0;
+reg [7:0] input_axis_tdata_d3 = 8'd0;
 
-reg [7:0] input_axis_tdata_d0 = 0;
-reg [7:0] input_axis_tdata_d1 = 0;
-reg [7:0] input_axis_tdata_d2 = 0;
-reg [7:0] input_axis_tdata_d3 = 0;
+reg input_axis_tvalid_d0 = 1'b0;
+reg input_axis_tvalid_d1 = 1'b0;
+reg input_axis_tvalid_d2 = 1'b0;
+reg input_axis_tvalid_d3 = 1'b0;
 
-reg input_axis_tvalid_d0 = 0;
-reg input_axis_tvalid_d1 = 0;
-reg input_axis_tvalid_d2 = 0;
-reg input_axis_tvalid_d3 = 0;
+reg busy_reg = 1'b0;
+reg error_bad_fcs_reg = 1'b0, error_bad_fcs_next;
 
-reg busy_reg = 0;
-reg error_bad_fcs_reg = 0, error_bad_fcs_next;
-
-reg input_axis_tready_reg = 0, input_axis_tready_next;
+reg input_axis_tready_reg = 1'b0, input_axis_tready_next;
 
 reg [31:0] crc_state = 32'hFFFFFFFF;
 wire [31:0] crc_next;
 
 // internal datapath
-reg [7:0]  output_axis_tdata_int;
-reg        output_axis_tvalid_int;
-reg        output_axis_tready_int = 0;
-reg        output_axis_tlast_int;
-reg        output_axis_tuser_int;
-wire       output_axis_tready_int_early;
+reg [7:0] output_axis_tdata_int;
+reg       output_axis_tvalid_int;
+reg       output_axis_tready_int_reg = 1'b0;
+reg       output_axis_tlast_int;
+reg       output_axis_tuser_int;
+wire      output_axis_tready_int_early;
 
 assign input_axis_tready = input_axis_tready_reg;
 

ParseResult:
UPD HdlIdDef@@output_axis_tready_int to output_axis_tready_int_reg

DEL HdlIdDef@@frame_ptr_reg from objs
HdlIdDef: frame_ptr_reg
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 7
                    HdlValueInt: 0
    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@frame_ptr_next from objs
HdlIdDef: frame_ptr_next
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 7
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_eth_fcs_check.v
+++ b/rtl/axis_eth_fcs_check.v
@@ -176,21 +170,20 @@ always @* begin
 
             output_axis_tdata_int = input_axis_tdata_d3;
             output_axis_tvalid_int = input_axis_tvalid_d3 & input_axis_tvalid;
-            output_axis_tlast_int = 0;
-            output_axis_tuser_int = 0;
+            output_axis_tlast_int = 1'b0;
+            output_axis_tuser_int = 1'b0;
 
             if (input_axis_tready & input_axis_tvalid) begin
-                frame_ptr_next = frame_ptr_reg + 1;
-                shift_in = 1;
-                update_crc = 1;
+                shift_in = 1'b1;
+                update_crc = 1'b1;
                 if (input_axis_tlast) begin
-                    shift_reset = 1;
-                    reset_crc = 1;
-                    output_axis_tlast_int = 1;
+                    shift_reset = 1'b1;
+                    reset_crc = 1'b1;
+                    output_axis_tlast_int = 1'b1;
                     output_axis_tuser_int = input_axis_tuser;
                     if ({input_axis_tdata, input_axis_tdata_d0, input_axis_tdata_d1, input_axis_tdata_d2} != ~crc_next) begin
-                        output_axis_tuser_int = 1;
-                        error_bad_fcs_next = 1;
+                        output_axis_tuser_int = 1'b1;
+                        error_bad_fcs_next = 1'b1;
                     end
                     input_axis_tready_next = output_axis_tready_int_early;
                     state_next = STATE_IDLE;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: frame_ptr_next
                HdlValueId: frame_ptr_reg

UPD HdlStmCase@@state_reg to state_reg
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: frame_ptr_next
                HdlValueInt: 0

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: frame_ptr_next
                HdlOp: ADD
                    list: ops
                        HdlValueId: frame_ptr_reg
                        HdlValueInt: 1


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_eth_fcs_check.v
+++ b/rtl/axis_eth_fcs_check.v
@@ -207,20 +200,21 @@ end
 always @(posedge clk) begin
     if (rst) begin
         state_reg <= STATE_IDLE;
-        
-        frame_ptr_reg <= 0;
-        
-        input_axis_tready_reg <= 0;
 
-        busy_reg <= 0;
-        error_bad_fcs_reg <= 0;
+        input_axis_tready_reg <= 1'b0;
+
+        busy_reg <= 1'b0;
+        error_bad_fcs_reg <= 1'b0;
+
+        input_axis_tvalid_d0 <= 1'b0;
+        input_axis_tvalid_d1 <= 1'b0;
+        input_axis_tvalid_d2 <= 1'b0;
+        input_axis_tvalid_d3 <= 1'b0;
 
         crc_state <= 32'hFFFFFFFF;
     end else begin
         state_reg <= state_next;
 
-        frame_ptr_reg <= frame_ptr_next;
-
         input_axis_tready_reg <= input_axis_tready_next;
 
         busy_reg <= state_next != STATE_IDLE;

ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: input_axis_tvalid_d0

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: input_axis_tvalid_d1

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: input_axis_tvalid_d2

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: input_axis_tvalid_d3

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: frame_ptr_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueId: frame_ptr_next
    HdlValueId: frame_ptr_reg


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/ip_64.v
+++ b/rtl/ip_64.v
@@ -322,11 +322,10 @@ end
 always @(posedge clk) begin
     if (rst) begin
         state_reg <= STATE_IDLE;
-        arp_request_valid_reg <= 0;
-        drop_packet_reg <= 0;
-        input_ip_hdr_ready_reg <= 0;
+        arp_request_valid_reg <= 1'b0;
+        drop_packet_reg <= 1'b0;
+        input_ip_hdr_ready_reg <= 1'b0;
         outgoing_ip_hdr_valid_reg <= 1'b0;
-        outgoing_eth_dest_mac_reg <= 48'h000000000000;
     end else begin
         state_reg <= state_next;
 

ParseResult:
DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 000000000000
    HdlValueId: outgoing_eth_dest_mac_reg


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/ip_64.v
+++ b/rtl/ip_64.v
@@ -336,8 +335,9 @@ always @(posedge clk) begin
         input_ip_hdr_ready_reg <= input_ip_hdr_ready_next;
 
         outgoing_ip_hdr_valid_reg <= outgoing_ip_hdr_valid_next;
-        outgoing_eth_dest_mac_reg <= outgoing_eth_dest_mac_next;
     end
+
+    outgoing_eth_dest_mac_reg <= outgoing_eth_dest_mac_next;
 end
 
 endmodule
ParseResult:
MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: outgoing_eth_dest_mac_next
    HdlValueId: outgoing_eth_dest_mac_reg


CommitId: c759ff03b7236f4d08cbccd0b6556126a3e1af06
Fix default parameter
--- a/rtl/axis_switch.v
+++ b/rtl/axis_switch.v
@@ -38,7 +38,7 @@ module axis_switch #
     parameter KEEP_WIDTH = (DATA_WIDTH/8),
     parameter ID_ENABLE = 0,
     parameter ID_WIDTH = 8,
-    parameter DEST_WIDTH = $clog2(S_COUNT),
+    parameter DEST_WIDTH = $clog2(M_COUNT),
     parameter USER_ENABLE = 1,
     parameter USER_WIDTH = 1,
     parameter M_BASE = {2'd3, 2'd2, 2'd1, 2'd0},
ParseResult:
UPD HdlIdDef@@DEST_WIDTH to DEST_WIDTH
    UPD HdlOp@@CALL to CALL
        UPD HdlValueId@@S_COUNT to M_COUNT


CommitId: 839ea23ac4166fd790fbb61a21bf1fcfcdb806ec
Fix arb mux header backpressure
--- a/rtl/ip_arb_mux.v
+++ b/rtl/ip_arb_mux.v
@@ -115,7 +115,7 @@ parameter CL_S_COUNT = $clog2(S_COUNT);
 
 reg frame_reg = 1'b0, frame_next;
 
-reg s_ip_hdr_ready_mask_reg = 1'b0, s_ip_hdr_ready_mask_next;
+reg [S_COUNT-1:0] s_ip_hdr_ready_reg = {S_COUNT{1'b0}}, s_ip_hdr_ready_next;
 
 reg m_ip_hdr_valid_reg = 1'b0, m_ip_hdr_valid_next;
 reg [47:0] m_eth_dest_mac_reg = 48'd0, m_eth_dest_mac_next;

ParseResult:
INS HdlIdDef@@s_ip_hdr_ready_reg to objs
HdlIdDef: s_ip_hdr_ready_reg
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: S_COUNT
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlOp: REPL_CONCAT
        list: ops
            HdlValueId: S_COUNT
            HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@s_ip_hdr_ready_next to objs
HdlIdDef: s_ip_hdr_ready_next
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: S_COUNT
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@s_ip_hdr_ready_mask_reg from objs
HdlIdDef: s_ip_hdr_ready_mask_reg
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@s_ip_hdr_ready_mask_next from objs
HdlIdDef: s_ip_hdr_ready_mask_next
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL


CommitId: 839ea23ac4166fd790fbb61a21bf1fcfcdb806ec
Fix arb mux header backpressure
--- a/rtl/ip_arb_mux.v
+++ b/rtl/ip_arb_mux.v
@@ -152,7 +152,7 @@ reg  [DEST_WIDTH-1:0] m_ip_payload_axis_tdest_int;
 reg  [USER_WIDTH-1:0] m_ip_payload_axis_tuser_int;
 wire                  m_ip_payload_axis_tready_int_early;
 
-assign s_ip_hdr_ready = (!s_ip_hdr_ready_mask_reg && grant_valid) << grant_encoded;
+assign s_ip_hdr_ready = s_ip_hdr_ready_reg;
 
 assign s_ip_payload_axis_tready = (m_ip_payload_axis_tready_int_reg && grant_valid) << grant_encoded;
 

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: s_ip_hdr_ready_reg
    HdlValueId: s_ip_hdr_ready

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: SLL
        list: ops
            HdlOp: AND_LOG
                list: ops
                    HdlOp: NEG_LOG
                        list: ops
                            HdlValueId: s_ip_hdr_ready_mask_reg
                    HdlValueId: grant_valid
            HdlValueId: grant_encoded
    HdlValueId: s_ip_hdr_ready


CommitId: 839ea23ac4166fd790fbb61a21bf1fcfcdb806ec
Fix arb mux header backpressure
--- a/rtl/ip_arb_mux.v
+++ b/rtl/ip_arb_mux.v
@@ -207,7 +207,7 @@ assign acknowledge = grant & s_ip_payload_axis_tvalid & s_ip_payload_axis_tready
 always @* begin
     frame_next = frame_reg;
 
-    s_ip_hdr_ready_mask_next = s_ip_hdr_ready_mask_reg;
+    s_ip_hdr_ready_next = {S_COUNT{1'b0}};
 
     m_ip_hdr_valid_next = m_ip_hdr_valid_reg && !m_ip_hdr_ready;
     m_eth_dest_mac_next = m_eth_dest_mac_reg;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@s_ip_hdr_ready_mask_next to s_ip_hdr_ready_next
            UPD HdlValueId@@s_ip_hdr_ready_mask_reg to S_COUNT
            MOV HdlValueId@@s_ip_hdr_ready_mask_reg to ops
            HdlValueId: s_ip_hdr_ready_mask_reg

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@REPL_CONCAT to ops
            UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                INS list@@ops to REPL_CONCAT
                INS HdlValueInt@@0 to ops


CommitId: 839ea23ac4166fd790fbb61a21bf1fcfcdb806ec
Fix arb mux header backpressure
--- a/rtl/ip_arb_mux.v
+++ b/rtl/ip_arb_mux.v
@@ -231,15 +231,14 @@ always @* begin
         // end of frame detection
         if (s_ip_payload_axis_tlast[grant_encoded]) begin
             frame_next = 1'b0;
-            s_ip_hdr_ready_mask_next = 1'b0;
         end
     end
 
-    if (!frame_reg && grant_valid) begin
+    if (!frame_reg && grant_valid && (m_ip_hdr_ready || !m_ip_hdr_valid)) begin
         // start of frame
         frame_next = 1'b1;
 
-        s_ip_hdr_ready_mask_next = 1'b1;
+        s_ip_hdr_ready_next = grant;
 
         m_ip_hdr_valid_next = 1'b1;
         m_eth_dest_mac_next = s_eth_dest_mac[grant_encoded*48 +: 48];

ParseResult:
UPD HdlStmIf@@ to 
    INS HdlOp@@AND_LOG to 
    UPD HdlOp@@AND_LOG to AND_LOG
        INS list@@ops to AND_LOG
        INS HdlOp@@OR_LOG to ops
        HdlOp: OR_LOG
            list: ops
                HdlValueId: m_ip_hdr_ready
                HdlOp: NEG_LOG
                    list: ops
                        HdlValueId: m_ip_hdr_valid
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueId@@grant to ops

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@s_ip_hdr_ready_mask_next to s_ip_hdr_ready_next
            UPD HdlValueId@@s_ip_hdr_ready_mask_reg to S_COUNT
            MOV HdlValueId@@s_ip_hdr_ready_mask_reg to ops
            HdlValueId: s_ip_hdr_ready_mask_reg

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@REPL_CONCAT to ops
            UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                INS list@@ops to REPL_CONCAT
                INS HdlValueInt@@0 to ops

UPD HdlStmIf@@ to 
    MOV HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlOp: NEG_LOG
                list: ops
                    HdlValueId: frame_reg
            HdlValueId: grant_valid
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@s_ip_hdr_ready_mask_next to s_ip_hdr_ready_next
            DEL HdlValueInt@@1 from ops

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: s_ip_hdr_ready_mask_next
                HdlValueInt: 0


CommitId: 839ea23ac4166fd790fbb61a21bf1fcfcdb806ec
Fix arb mux header backpressure
--- a/rtl/ip_arb_mux.v
+++ b/rtl/ip_arb_mux.v
@@ -271,16 +270,11 @@ always @* begin
 end
 
 always @(posedge clk) begin
-    if (rst) begin
-        frame_reg <= 1'b0;
-        s_ip_hdr_ready_mask_reg <= 1'b0;
-        m_ip_hdr_valid_reg <= 1'b0;
-    end else begin
-        frame_reg <= frame_next;
-        s_ip_hdr_ready_mask_reg <= s_ip_hdr_ready_mask_next;
-        m_ip_hdr_valid_reg <= m_ip_hdr_valid_next;
-    end
+    frame_reg <= frame_next;
+
+    s_ip_hdr_ready_reg <= s_ip_hdr_ready_next;
 
+    m_ip_hdr_valid_reg <= m_ip_hdr_valid_next;
     m_eth_dest_mac_reg <= m_eth_dest_mac_next;
     m_eth_src_mac_reg <= m_eth_src_mac_next;
     m_eth_type_reg <= m_eth_type_next;

ParseResult:
MOV HdlStmIf@@ to body
HdlStmIf
    HdlValueId: rst
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: frame_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: s_ip_hdr_ready_mask_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: m_ip_hdr_valid_reg
    list: elifs
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueId: frame_next
                HdlValueId: frame_reg
            HdlStmAssign
                HdlValueId: s_ip_hdr_ready_mask_next
                HdlValueId: s_ip_hdr_ready_mask_reg
            HdlStmAssign
                HdlValueId: m_ip_hdr_valid_next
                HdlValueId: m_ip_hdr_valid_reg

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: frame_next
    HdlValueId: frame_reg

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: s_ip_hdr_ready_mask_next
    HdlValueId: s_ip_hdr_ready_mask_reg

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: m_ip_hdr_valid_next
    HdlValueId: m_ip_hdr_valid_reg

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@s_ip_hdr_ready_mask_next to s_ip_hdr_ready_next
    UPD HdlValueId@@s_ip_hdr_ready_mask_reg to s_ip_hdr_ready_reg

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@s_ip_hdr_ready_mask_next to s_ip_hdr_ready_next
            UPD HdlValueId@@s_ip_hdr_ready_mask_reg to S_COUNT
            MOV HdlValueId@@s_ip_hdr_ready_mask_reg to ops
            HdlValueId: s_ip_hdr_ready_mask_reg

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@s_ip_hdr_ready_mask_reg to s_ip_hdr_ready_reg
    MOV HdlValueInt@@0 to 
    HdlValueInt: 0

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 


CommitId: 839ea23ac4166fd790fbb61a21bf1fcfcdb806ec
Fix arb mux header backpressure
--- a/rtl/ip_arb_mux.v
+++ b/rtl/ip_arb_mux.v
@@ -297,6 +291,12 @@ always @(posedge clk) begin
     m_ip_header_checksum_reg <= m_ip_header_checksum_next;
     m_ip_source_ip_reg <= m_ip_source_ip_next;
     m_ip_dest_ip_reg <= m_ip_dest_ip_next;
+
+    if (rst) begin
+        frame_reg <= 1'b0;
+        s_ip_hdr_ready_reg <= {S_COUNT{1'b0}};
+        m_ip_hdr_valid_reg <= 1'b0;
+    end
 end
 
 // output datapath logic
ParseResult:
UPD HdlStmAssign@@ to 
    INS HdlOp@@REPL_CONCAT to 
    UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
        INS list@@ops to REPL_CONCAT
        INS HdlValueId@@S_COUNT to ops


CommitId: 8fea20ef772f0581cdc6d9842acd9bd83219ec82
Fix frame_ptr_reg width
--- a/rtl/ip_eth_tx.v
+++ b/rtl/ip_eth_tx.v
@@ -123,7 +123,7 @@ reg [2:0] state_reg = STATE_IDLE, state_next;
 reg store_ip_hdr;
 reg store_last_word;
 
-reg [7:0] frame_ptr_reg = 0, frame_ptr_next;
+reg [15:0] frame_ptr_reg = 0, frame_ptr_next;
 
 reg [15:0] hdr_sum_reg = 0, hdr_sum_next;
 
ParseResult:
INS HdlIdDef@@frame_ptr_reg to objs
HdlIdDef: frame_ptr_reg
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 15
                    HdlValueInt: 0
    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@frame_ptr_next to objs
HdlIdDef: frame_ptr_next
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 15
                    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@frame_ptr_reg from objs
HdlIdDef: frame_ptr_reg
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 7
                    HdlValueInt: 0
    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@frame_ptr_next from objs
HdlIdDef: frame_ptr_next
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 7
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 966e47a8268e7f7d41a641817909b8275339bbb8
Fix RAM and register widths
--- a/rtl/axis_frame_fifo_64.v
+++ b/rtl/axis_frame_fifo_64.v
@@ -66,16 +66,16 @@ reg [ADDR_WIDTH:0] rd_ptr = {ADDR_WIDTH+1{1'b0}};
 
 reg drop_frame = 1'b0;
 
-reg [DATA_WIDTH+KEEP_WIDTH+2-1:0] data_out_reg = {1'b0, {KEEP_WIDTH{1'b0}}, {DATA_WIDTH{1'b0}}};
+reg [DATA_WIDTH+KEEP_WIDTH+1-1:0] data_out_reg = {1'b0, {KEEP_WIDTH{1'b0}}, {DATA_WIDTH{1'b0}}};
 
 //(* RAM_STYLE="BLOCK" *)
-reg [DATA_WIDTH+KEEP_WIDTH+2-1:0] mem[(2**ADDR_WIDTH)-1:0];
+reg [DATA_WIDTH+KEEP_WIDTH+1-1:0] mem[(2**ADDR_WIDTH)-1:0];
 
 reg output_read = 1'b0;
 
 reg output_axis_tvalid_reg = 1'b0;
 
-wire [DATA_WIDTH+KEEP_WIDTH+2-1:0] data_in = {input_axis_tlast, input_axis_tkeep, input_axis_tdata};
+wire [DATA_WIDTH+KEEP_WIDTH+1-1:0] data_in = {input_axis_tlast, input_axis_tkeep, input_axis_tdata};
 
 // full when first MSB different but rest same
 wire full = ((wr_ptr[ADDR_WIDTH] != rd_ptr[ADDR_WIDTH]) &&
ParseResult:
UPD HdlIdDef@@data_out_reg to data_out_reg
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlOp@@SUB to SUB
                UPD HdlOp@@ADD to ADD
                    UPD HdlValueInt@@2 to 1

UPD HdlIdDef@@data_in to data_in
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlOp@@SUB to SUB
                UPD HdlOp@@ADD to ADD
                    UPD HdlValueInt@@2 to 1

UPD HdlIdDef@@mem to mem
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
            UPD HdlOp@@DOWNTO to DOWNTO
                UPD HdlOp@@SUB to SUB
                    UPD HdlOp@@ADD to ADD
                        UPD HdlValueInt@@2 to 1


CommitId: 385c9cc90ade29878d45e6634e2c70ce85d6d6d5
Fix Vivado block RAM inference
--- a/rtl/axis_async_frame_fifo.v
+++ b/rtl/axis_async_frame_fifo.v
@@ -90,10 +90,10 @@ reg output_rst_sync2_reg = 1'b1;
 reg output_rst_sync3_reg = 1'b1;
 
 reg [DATA_WIDTH+1-1:0] mem[(2**ADDR_WIDTH)-1:0];
+reg [DATA_WIDTH+1-1:0] mem_read_data_reg = {DATA_WIDTH+2{1'b0}};
+wire [DATA_WIDTH+1-1:0] mem_write_data;
 
-reg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};
 reg output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;
-reg output_axis_tlast_reg = 1'b0;
 
 // full when first TWO MSBs do NOT match, but rest matches
 // (gray code equivalent of first MSB different but rest same)

ParseResult:
UPD HdlIdDef@@output_axis_tdata_reg to mem_read_data_reg

INS HdlIdDef@@mem_write_data to objs
HdlIdDef: mem_write_data
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: wire
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlOp: ADD
                                list: ops
                                    HdlValueId: DATA_WIDTH
                                    HdlValueInt: 1
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

UPD HdlIdDef@@mem_read_data_reg to mem_read_data_reg
    INS HdlOp@@PARAMETRIZATION to mem_read_data_reg
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        INS list@@ops to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            INS HdlValueInt@@0 to ops
    UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
        INS HdlOp@@ADD to ops
        UPD HdlOp@@ADD to ADD
            INS list@@ops to ADD
            INS HdlValueInt@@2 to ops

UPD HdlIdDef@@output_axis_tdata_reg to output_axis_tdata_reg
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        MOV HdlValueId@@reg to ops
        HdlValueId: reg
        UPD HdlOp@@DOWNTO to SUB
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlOp@@SUB to ADD
            UPD HdlValueInt@@0 to 1
    UPD HdlOp@@PARAMETRIZATION to DOWNTO
    MOV HdlOp@@PARAMETRIZATION to output_axis_tdata_reg
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: DATA_WIDTH
                            HdlValueInt: 1
                    HdlValueInt: 0
    UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
        MOV HdlValueId@@DATA_WIDTH to ops
        HdlValueId: DATA_WIDTH

DEL HdlIdDef@@output_axis_tlast_reg from objs
HdlIdDef: output_axis_tlast_reg
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 385c9cc90ade29878d45e6634e2c70ce85d6d6d5
Fix Vivado block RAM inference
--- a/rtl/axis_async_frame_fifo.v
+++ b/rtl/axis_async_frame_fifo.v
@@ -130,9 +130,10 @@ reg good_frame_sync4_reg = 1'b0;
 
 assign input_axis_tready = (~full | DROP_WHEN_FULL) & ~input_rst_sync3_reg;
 
-assign output_axis_tdata = output_axis_tdata_reg;
 assign output_axis_tvalid = output_axis_tvalid_reg;
-assign output_axis_tlast = output_axis_tlast_reg;
+
+assign mem_write_data = {input_axis_tlast, input_axis_tdata};
+assign {output_axis_tlast, output_axis_tdata} = mem_read_data_reg;
 
 assign input_status_overflow = overflow_reg;
 assign input_status_bad_frame = bad_frame_reg;

ParseResult:
INS HdlStmAssign@@ to objs

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: mem_read_data_reg
    HdlOp: CONCAT
        list: ops
            HdlValueId: output_axis_tlast
            HdlValueId: output_axis_tdata

UPD HdlStmAssign@@ to 
    INS HdlValueId@@mem_write_data to 

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: output_axis_tdata_reg
    HdlValueId: output_axis_tdata

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: output_axis_tlast_reg
    HdlValueId: output_axis_tlast


CommitId: 385c9cc90ade29878d45e6634e2c70ce85d6d6d5
Fix Vivado block RAM inference
--- a/rtl/axis_async_frame_fifo.v
+++ b/rtl/axis_async_frame_fifo.v
@@ -237,7 +238,7 @@ always @(posedge input_clk) begin
     end
 
     if (write) begin
-        mem[wr_ptr_cur_reg[ADDR_WIDTH-1:0]] <= {input_axis_tlast, input_axis_tdata};
+        mem[wr_ptr_cur_reg[ADDR_WIDTH-1:0]] <= mem_write_data;
     end
 end
 

ParseResult:
UPD HdlStmAssign@@ to 
    MOV HdlOp@@CONCAT to 
    HdlOp: CONCAT
        list: ops
            HdlValueId: input_axis_tlast
            HdlValueId: input_axis_tdata

UPD HdlStmAssign@@ to 
    INS HdlValueId@@mem_write_data to 


CommitId: 385c9cc90ade29878d45e6634e2c70ce85d6d6d5
Fix Vivado block RAM inference
--- a/rtl/axis_async_frame_fifo.v
+++ b/rtl/axis_async_frame_fifo.v
@@ -331,7 +332,7 @@ always @(posedge output_clk) begin
     end
 
     if (read) begin
-        {output_axis_tlast_reg, output_axis_tdata_reg} <= mem[rd_ptr_reg[ADDR_WIDTH-1:0]];
+        mem_read_data_reg <= mem[rd_ptr_reg[ADDR_WIDTH-1:0]];
     end
 end
 
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@output_axis_tdata_reg to mem_read_data_reg
        MOV HdlValueId@@output_axis_tdata_reg to ops
        HdlValueId: output_axis_tdata_reg
        DEL HdlValueId@@output_axis_tlast_reg from ops
        DEL list@@ops from CONCAT
    DEL HdlOp@@CONCAT from 


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/eth_mux_4.v
+++ b/rtl/eth_mux_4.v
@@ -102,28 +102,28 @@ module eth_mux_4
     input  wire [1:0]  select
 );
 
-reg [1:0] select_reg = 0, select_next;
-reg frame_reg = 0, frame_next;
+reg [1:0] select_reg = 2'd0, select_next;
+reg frame_reg = 1'b0, frame_next;
 
-reg input_0_eth_hdr_ready_reg = 0, input_0_eth_hdr_ready_next;
-reg input_1_eth_hdr_ready_reg = 0, input_1_eth_hdr_ready_next;
-reg input_2_eth_hdr_ready_reg = 0, input_2_eth_hdr_ready_next;
-reg input_3_eth_hdr_ready_reg = 0, input_3_eth_hdr_ready_next;
+reg input_0_eth_hdr_ready_reg = 1'b0, input_0_eth_hdr_ready_next;
+reg input_1_eth_hdr_ready_reg = 1'b0, input_1_eth_hdr_ready_next;
+reg input_2_eth_hdr_ready_reg = 1'b0, input_2_eth_hdr_ready_next;
+reg input_3_eth_hdr_ready_reg = 1'b0, input_3_eth_hdr_ready_next;
 
-reg input_0_eth_payload_tready_reg = 0, input_0_eth_payload_tready_next;
-reg input_1_eth_payload_tready_reg = 0, input_1_eth_payload_tready_next;
-reg input_2_eth_payload_tready_reg = 0, input_2_eth_payload_tready_next;
-reg input_3_eth_payload_tready_reg = 0, input_3_eth_payload_tready_next;
+reg input_0_eth_payload_tready_reg = 1'b0, input_0_eth_payload_tready_next;
+reg input_1_eth_payload_tready_reg = 1'b0, input_1_eth_payload_tready_next;
+reg input_2_eth_payload_tready_reg = 1'b0, input_2_eth_payload_tready_next;
+reg input_3_eth_payload_tready_reg = 1'b0, input_3_eth_payload_tready_next;
 
-reg output_eth_hdr_valid_reg = 0, output_eth_hdr_valid_next;
-reg [47:0] output_eth_dest_mac_reg = 0, output_eth_dest_mac_next;
-reg [47:0] output_eth_src_mac_reg = 0, output_eth_src_mac_next;
-reg [15:0] output_eth_type_reg = 0, output_eth_type_next;
+reg output_eth_hdr_valid_reg = 1'b0, output_eth_hdr_valid_next;
+reg [47:0] output_eth_dest_mac_reg = 48'd0, output_eth_dest_mac_next;
+reg [47:0] output_eth_src_mac_reg = 48'd0, output_eth_src_mac_next;
+reg [15:0] output_eth_type_reg = 16'd0, output_eth_type_next;
 
 // internal datapath
 reg [7:0] output_eth_payload_tdata_int;
 reg       output_eth_payload_tvalid_int;
-reg       output_eth_payload_tready_int = 0;
+reg       output_eth_payload_tready_int_reg = 1'b0;
 reg       output_eth_payload_tlast_int;
 reg       output_eth_payload_tuser_int;
 wire      output_eth_payload_tready_int_early;

ParseResult:
UPD HdlIdDef@@output_eth_payload_tready_int to output_eth_payload_tready_int_reg


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/eth_mux_4.v
+++ b/rtl/eth_mux_4.v
@@ -174,6 +174,12 @@ always @* begin
             selected_input_eth_src_mac = input_3_eth_src_mac;
             selected_input_eth_type = input_3_eth_type;
         end
+        default: begin
+            selected_input_eth_hdr_valid = 1'b0;
+            selected_input_eth_dest_mac = 48'd0;
+            selected_input_eth_src_mac = 48'd0;
+            selected_input_eth_type = 16'd0;
+        end
     endcase
 end
 

ParseResult:
UPD HdlStmCase@@select to select
    INS HdlStmBlock@@SEQ to select
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_eth_hdr_valid
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_eth_dest_mac
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_eth_src_mac
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_eth_type
                    HdlValueInt: 0


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/eth_mux_4.v
+++ b/rtl/eth_mux_4.v
@@ -213,6 +219,13 @@ always @* begin
             current_input_tlast = input_3_eth_payload_tlast;
             current_input_tuser = input_3_eth_payload_tuser;
         end
+        default: begin
+            current_input_tdata = 8'd0;
+            current_input_tvalid = 1'b0;
+            current_input_tready = 1'b0;
+            current_input_tlast = 1'b0;
+            current_input_tuser = 1'b0;
+        end
     endcase
 end
 

ParseResult:
UPD HdlStmCase@@select_reg to select_reg
    INS HdlStmBlock@@SEQ to select_reg
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tdata
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tvalid
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tready
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tlast
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tuser
                    HdlValueInt: 0


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/eth_mux_4.v
+++ b/rtl/eth_mux_4.v
@@ -225,10 +238,10 @@ always @* begin
     input_2_eth_hdr_ready_next = input_2_eth_hdr_ready_reg & ~input_2_eth_hdr_valid;
     input_3_eth_hdr_ready_next = input_3_eth_hdr_ready_reg & ~input_3_eth_hdr_valid;
 
-    input_0_eth_payload_tready_next = 0;
-    input_1_eth_payload_tready_next = 0;
-    input_2_eth_payload_tready_next = 0;
-    input_3_eth_payload_tready_next = 0;
+    input_0_eth_payload_tready_next = 1'b0;
+    input_1_eth_payload_tready_next = 1'b0;
+    input_2_eth_payload_tready_next = 1'b0;
+    input_3_eth_payload_tready_next = 1'b0;
 
     output_eth_hdr_valid_next = output_eth_hdr_valid_reg & ~output_eth_hdr_ready;
     output_eth_dest_mac_next = output_eth_dest_mac_reg;

ParseResult:
UPD HdlStmCase@@select_reg to select_reg
    INS HdlStmBlock@@SEQ to select_reg
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tdata
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tvalid
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tready
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tlast
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tuser
                    HdlValueInt: 0


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/eth_mux_4.v
+++ b/rtl/eth_mux_4.v
@@ -275,20 +288,17 @@ end
 
 always @(posedge clk) begin
     if (rst) begin
-        select_reg <= 0;
-        frame_reg <= 0;
-        input_0_eth_hdr_ready_reg <= 0;
-        input_1_eth_hdr_ready_reg <= 0;
-        input_2_eth_hdr_ready_reg <= 0;
-        input_3_eth_hdr_ready_reg <= 0;
-        input_0_eth_payload_tready_reg <= 0;
-        input_1_eth_payload_tready_reg <= 0;
-        input_2_eth_payload_tready_reg <= 0;
-        input_3_eth_payload_tready_reg <= 0;
-        output_eth_hdr_valid_reg <= 0;
-        output_eth_dest_mac_reg <= 0;
-        output_eth_src_mac_reg <= 0;
-        output_eth_type_reg <= 0;
+        select_reg <= 2'd0;
+        frame_reg <= 1'b0;
+        input_0_eth_hdr_ready_reg <= 1'b0;
+        input_1_eth_hdr_ready_reg <= 1'b0;
+        input_2_eth_hdr_ready_reg <= 1'b0;
+        input_3_eth_hdr_ready_reg <= 1'b0;
+        input_0_eth_payload_tready_reg <= 1'b0;
+        input_1_eth_payload_tready_reg <= 1'b0;
+        input_2_eth_payload_tready_reg <= 1'b0;
+        input_3_eth_payload_tready_reg <= 1'b0;
+        output_eth_hdr_valid_reg <= 1'b0;
     end else begin
         select_reg <= select_next;
         frame_reg <= frame_next;

ParseResult:
DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: output_eth_dest_mac_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: output_eth_src_mac_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: output_eth_type_reg


CommitId: b83dd341850c9e803f0d39fbd9e77bb3cfe245cc
Fix register names
--- a/rtl/axis_stat_counter.v
+++ b/rtl/axis_stat_counter.v
@@ -147,11 +147,11 @@ always @* begin
                     if (TAG_ENABLE) begin
                         output_axis_tdata_int = tag[(TAG_BYTE_WIDTH-1)*8 +: 8];
                     end else if (TICK_COUNT_ENABLE) begin
-                        output_axis_tdata_int = tag[(TICK_COUNT_BYTE_WIDTH-1)*8 +: 8];
+                        output_axis_tdata_int = tick_count_reg[(TICK_COUNT_BYTE_WIDTH-1)*8 +: 8];
                     end else if (BYTE_COUNT_ENABLE) begin
-                        output_axis_tdata_int = tag[(BYTE_COUNT_BYTE_WIDTH-1)*8 +: 8];
+                        output_axis_tdata_int = byte_count_reg[(BYTE_COUNT_BYTE_WIDTH-1)*8 +: 8];
                     end else if (FRAME_COUNT_ENABLE) begin
-                        output_axis_tdata_int = tag[(FRAME_COUNT_BYTE_WIDTH-1)*8 +: 8];
+                        output_axis_tdata_int = frame_count_reg[(FRAME_COUNT_BYTE_WIDTH-1)*8 +: 8];
                     end
                     output_axis_tvalid_int = 1;
                 end
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@tag to tick_count_reg
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@tag to byte_count_reg
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@tag to frame_count_reg


CommitId: 585ccefa1534cba00ee915f54baf491a0b49df82
Add TX underflow error signal
--- a/rtl/eth_mac_1g_fifo.v
+++ b/rtl/eth_mac_1g_fifo.v
@@ -89,6 +89,7 @@ module eth_mac_1g_fifo #
     /*
      * Status
      */
+    output wire        tx_error_underflow,
     output wire        tx_fifo_overflow,
     output wire        tx_fifo_bad_frame,
     output wire        tx_fifo_good_frame,

ParseResult:
INS HdlIdDef@@tx_error_underflow to ports
HdlIdDef: tx_error_underflow
    HdlDirection: OUT


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/eth_mux_64_2.v
+++ b/rtl/eth_mux_64_2.v
@@ -83,25 +83,25 @@ module eth_mux_64_2
     input  wire [0:0]  select
 );
 
-reg [0:0] select_reg = 0, select_next;
-reg frame_reg = 0, frame_next;
+reg [0:0] select_reg = 1'd0, select_next;
+reg frame_reg = 1'b0, frame_next;
 
-reg input_0_eth_hdr_ready_reg = 0, input_0_eth_hdr_ready_next;
-reg input_1_eth_hdr_ready_reg = 0, input_1_eth_hdr_ready_next;
+reg input_0_eth_hdr_ready_reg = 1'b0, input_0_eth_hdr_ready_next;
+reg input_1_eth_hdr_ready_reg = 1'b0, input_1_eth_hdr_ready_next;
 
-reg input_0_eth_payload_tready_reg = 0, input_0_eth_payload_tready_next;
-reg input_1_eth_payload_tready_reg = 0, input_1_eth_payload_tready_next;
+reg input_0_eth_payload_tready_reg = 1'b0, input_0_eth_payload_tready_next;
+reg input_1_eth_payload_tready_reg = 1'b0, input_1_eth_payload_tready_next;
 
-reg output_eth_hdr_valid_reg = 0, output_eth_hdr_valid_next;
-reg [47:0] output_eth_dest_mac_reg = 0, output_eth_dest_mac_next;
-reg [47:0] output_eth_src_mac_reg = 0, output_eth_src_mac_next;
-reg [15:0] output_eth_type_reg = 0, output_eth_type_next;
+reg output_eth_hdr_valid_reg = 1'b0, output_eth_hdr_valid_next;
+reg [47:0] output_eth_dest_mac_reg = 48'd0, output_eth_dest_mac_next;
+reg [47:0] output_eth_src_mac_reg = 48'd0, output_eth_src_mac_next;
+reg [15:0] output_eth_type_reg = 16'd0, output_eth_type_next;
 
 // internal datapath
 reg [63:0] output_eth_payload_tdata_int;
 reg [7:0]  output_eth_payload_tkeep_int;
 reg        output_eth_payload_tvalid_int;
-reg        output_eth_payload_tready_int = 0;
+reg        output_eth_payload_tready_int_reg = 1'b0;
 reg        output_eth_payload_tlast_int;
 reg        output_eth_payload_tuser_int;
 wire       output_eth_payload_tready_int_early;

ParseResult:
UPD HdlIdDef@@output_eth_payload_tready_int to output_eth_payload_tready_int_reg


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/eth_mux_64_2.v
+++ b/rtl/eth_mux_64_2.v
@@ -136,6 +136,12 @@ always @* begin
             selected_input_eth_src_mac = input_1_eth_src_mac;
             selected_input_eth_type = input_1_eth_type;
         end
+        default: begin
+            selected_input_eth_hdr_valid = 1'b0;
+            selected_input_eth_dest_mac = 48'd0;
+            selected_input_eth_src_mac = 48'd0;
+            selected_input_eth_type = 16'd0;
+        end
     endcase
 end
 

ParseResult:
UPD HdlStmCase@@select to select
    INS HdlStmBlock@@SEQ to select
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_eth_hdr_valid
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_eth_dest_mac
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_eth_src_mac
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_eth_type
                    HdlValueInt: 0


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/eth_mux_64_2.v
+++ b/rtl/eth_mux_64_2.v
@@ -164,6 +170,14 @@ always @* begin
             current_input_tlast = input_1_eth_payload_tlast;
             current_input_tuser = input_1_eth_payload_tuser;
         end
+        default: begin
+            current_input_tdata = 64'd0;
+            current_input_tkeep = 8'd0;
+            current_input_tvalid = 1'b0;
+            current_input_tready = 1'b0;
+            current_input_tlast = 1'b0;
+            current_input_tuser = 1'b0;
+        end
     endcase
 end
 

ParseResult:
UPD HdlStmCase@@select_reg to select_reg
    INS HdlStmBlock@@SEQ to select_reg
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tdata
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tkeep
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tvalid
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tready
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tlast
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tuser
                    HdlValueInt: 0


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/eth_mux_64_2.v
+++ b/rtl/eth_mux_64_2.v
@@ -174,8 +188,8 @@ always @* begin
     input_0_eth_hdr_ready_next = input_0_eth_hdr_ready_reg & ~input_0_eth_hdr_valid;
     input_1_eth_hdr_ready_next = input_1_eth_hdr_ready_reg & ~input_1_eth_hdr_valid;
 
-    input_0_eth_payload_tready_next = 0;
-    input_1_eth_payload_tready_next = 0;
+    input_0_eth_payload_tready_next = 1'b0;
+    input_1_eth_payload_tready_next = 1'b0;
 
     output_eth_hdr_valid_next = output_eth_hdr_valid_reg & ~output_eth_hdr_ready;
     output_eth_dest_mac_next = output_eth_dest_mac_reg;

ParseResult:
UPD HdlStmCase@@select_reg to select_reg
    INS HdlStmBlock@@SEQ to select_reg
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tdata
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tkeep
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tvalid
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tready
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tlast
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tuser
                    HdlValueInt: 0


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/eth_mux_64_2.v
+++ b/rtl/eth_mux_64_2.v
@@ -219,16 +233,13 @@ end
 
 always @(posedge clk) begin
     if (rst) begin
-        select_reg <= 0;
-        frame_reg <= 0;
-        input_0_eth_hdr_ready_reg <= 0;
-        input_1_eth_hdr_ready_reg <= 0;
-        input_0_eth_payload_tready_reg <= 0;
-        input_1_eth_payload_tready_reg <= 0;
-        output_eth_hdr_valid_reg <= 0;
-        output_eth_dest_mac_reg <= 0;
-        output_eth_src_mac_reg <= 0;
-        output_eth_type_reg <= 0;
+        select_reg <= 1'd0;
+        frame_reg <= 1'b0;
+        input_0_eth_hdr_ready_reg <= 1'b0;
+        input_1_eth_hdr_ready_reg <= 1'b0;
+        input_0_eth_payload_tready_reg <= 1'b0;
+        input_1_eth_payload_tready_reg <= 1'b0;
+        output_eth_hdr_valid_reg <= 1'b0;
     end else begin
         select_reg <= select_next;
         frame_reg <= frame_next;

ParseResult:
DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: output_eth_dest_mac_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: output_eth_src_mac_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: output_eth_type_reg


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/eth_mux_64_2.v
+++ b/rtl/eth_mux_64_2.v
@@ -237,24 +248,30 @@ always @(posedge clk) begin
         input_0_eth_payload_tready_reg <= input_0_eth_payload_tready_next;
         input_1_eth_payload_tready_reg <= input_1_eth_payload_tready_next;
         output_eth_hdr_valid_reg <= output_eth_hdr_valid_next;
-        output_eth_dest_mac_reg <= output_eth_dest_mac_next;
-        output_eth_src_mac_reg <= output_eth_src_mac_next;
-        output_eth_type_reg <= output_eth_type_next;
     end
+
+    output_eth_dest_mac_reg <= output_eth_dest_mac_next;
+    output_eth_src_mac_reg <= output_eth_src_mac_next;
+    output_eth_type_reg <= output_eth_type_next;
 end
 
 // output datapath logic
-reg [63:0] output_eth_payload_tdata_reg = 0;
-reg [7:0]  output_eth_payload_tkeep_reg = 0;
-reg        output_eth_payload_tvalid_reg = 0;
-reg        output_eth_payload_tlast_reg = 0;
-reg        output_eth_payload_tuser_reg = 0;
-
-reg [63:0] temp_eth_payload_tdata_reg = 0;
-reg [7:0]  temp_eth_payload_tkeep_reg = 0;
-reg        temp_eth_payload_tvalid_reg = 0;
-reg        temp_eth_payload_tlast_reg = 0;
-reg        temp_eth_payload_tuser_reg = 0;
+reg [63:0] output_eth_payload_tdata_reg = 64'd0;
+reg [7:0]  output_eth_payload_tkeep_reg = 8'd0;
+reg        output_eth_payload_tvalid_reg = 1'b0, output_eth_payload_tvalid_next;
+reg        output_eth_payload_tlast_reg = 1'b0;
+reg        output_eth_payload_tuser_reg = 1'b0;
+
+reg [63:0] temp_eth_payload_tdata_reg = 64'd0;
+reg [7:0]  temp_eth_payload_tkeep_reg = 8'd0;
+reg        temp_eth_payload_tvalid_reg = 1'b0, temp_eth_payload_tvalid_next;
+reg        temp_eth_payload_tlast_reg = 1'b0;
+reg        temp_eth_payload_tuser_reg = 1'b0;
+
+// datapath control
+reg store_eth_payload_int_to_output;
+reg store_eth_payload_int_to_temp;
+reg store_eth_payload_temp_to_output;
 
 assign output_eth_payload_tdata = output_eth_payload_tdata_reg;
 assign output_eth_payload_tkeep = output_eth_payload_tkeep_reg;

ParseResult:
INS HdlIdDef@@output_eth_payload_tvalid_next to objs
HdlIdDef: output_eth_payload_tvalid_next
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL

INS HdlIdDef@@temp_eth_payload_tvalid_next to objs
HdlIdDef: temp_eth_payload_tvalid_next
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL

INS HdlIdDef@@store_eth_payload_int_to_output to objs
HdlIdDef: store_eth_payload_int_to_output
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL

INS HdlIdDef@@store_eth_payload_int_to_temp to objs
HdlIdDef: store_eth_payload_int_to_temp
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL

INS HdlIdDef@@store_eth_payload_temp_to_output to objs
HdlIdDef: store_eth_payload_temp_to_output
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: output_eth_dest_mac_next
    HdlValueId: output_eth_dest_mac_reg

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: output_eth_src_mac_next
    HdlValueId: output_eth_src_mac_reg

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: output_eth_type_next
    HdlValueId: output_eth_type_reg


CommitId: 385c9cc90ade29878d45e6634e2c70ce85d6d6d5
Fix Vivado block RAM inference
--- a/rtl/axis_fifo.v
+++ b/rtl/axis_fifo.v
@@ -61,11 +61,10 @@ reg [ADDR_WIDTH:0] wr_ptr_reg = {ADDR_WIDTH+1{1'b0}}, wr_ptr_next;
 reg [ADDR_WIDTH:0] rd_ptr_reg = {ADDR_WIDTH+1{1'b0}}, rd_ptr_next;
 
 reg [DATA_WIDTH+2-1:0] mem[(2**ADDR_WIDTH)-1:0];
+reg [DATA_WIDTH+2-1:0] mem_read_data_reg = {DATA_WIDTH+2{1'b0}};
+wire [DATA_WIDTH+2-1:0] mem_write_data;
 
-reg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};
 reg output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;
-reg output_axis_tlast_reg = 1'b0;
-reg output_axis_tuser_reg = 1'b0;
 
 // full when first MSB different but rest same
 wire full = ((wr_ptr_reg[ADDR_WIDTH] != rd_ptr_reg[ADDR_WIDTH]) &&

ParseResult:
UPD HdlIdDef@@output_axis_tdata_reg to mem_read_data_reg

INS HdlIdDef@@mem_write_data to objs
HdlIdDef: mem_write_data
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: wire
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlOp: ADD
                                list: ops
                                    HdlValueId: DATA_WIDTH
                                    HdlValueInt: 2
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

UPD HdlIdDef@@mem_read_data_reg to mem_read_data_reg
    UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
        INS HdlOp@@ADD to ops
        UPD HdlOp@@ADD to ADD
            INS list@@ops to ADD
            INS HdlValueInt@@2 to ops
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlOp@@SUB to SUB
                INS HdlOp@@ADD to ops
                UPD HdlOp@@ADD to ADD
                    INS list@@ops to ADD
                    INS HdlValueInt@@2 to ops

UPD HdlIdDef@@output_axis_tdata_reg to output_axis_tdata_reg
    UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
        MOV HdlValueId@@DATA_WIDTH to ops
        HdlValueId: DATA_WIDTH
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlOp@@SUB to SUB
                MOV HdlValueId@@DATA_WIDTH to ops
                HdlValueId: DATA_WIDTH

DEL HdlIdDef@@output_axis_tlast_reg from objs
HdlIdDef: output_axis_tlast_reg
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@output_axis_tuser_reg from objs
HdlIdDef: output_axis_tuser_reg
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 385c9cc90ade29878d45e6634e2c70ce85d6d6d5
Fix Vivado block RAM inference
--- a/rtl/axis_fifo.v
+++ b/rtl/axis_fifo.v
@@ -79,10 +78,10 @@ reg read;
 
 assign input_axis_tready = ~full;
 
-assign output_axis_tdata = output_axis_tdata_reg;
 assign output_axis_tvalid = output_axis_tvalid_reg;
-assign output_axis_tlast = output_axis_tlast_reg;
-assign output_axis_tuser = output_axis_tuser_reg;
+
+assign mem_write_data = {input_axis_tlast, input_axis_tuser, input_axis_tdata};
+assign {output_axis_tlast, output_axis_tuser, output_axis_tdata} = mem_read_data_reg;
 
 // Write logic
 always @* begin

ParseResult:
INS HdlStmAssign@@ to objs

INS HdlStmAssign@@ to objs

UPD HdlStmAssign@@ to 
    INS HdlValueId@@mem_write_data to 

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@output_axis_tlast_reg to mem_read_data_reg
    MOV HdlValueId@@output_axis_tlast_reg to 
    HdlValueId: output_axis_tlast_reg
    MOV HdlValueId@@output_axis_tlast to 
    HdlValueId: output_axis_tlast

UPD HdlStmAssign@@ to 
    INS HdlOp@@CONCAT to 
    UPD HdlOp@@CONCAT to CONCAT
        INS list@@ops to CONCAT
        INS HdlOp@@CONCAT to ops
        UPD HdlOp@@CONCAT to CONCAT
            INS list@@ops to CONCAT

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@output_axis_tuser to output_axis_tdata
    MOV HdlValueId@@output_axis_tuser to 
    HdlValueId: output_axis_tuser
    UPD HdlValueId@@output_axis_tuser_reg to output_axis_tuser
    MOV HdlValueId@@output_axis_tuser_reg to 
    HdlValueId: output_axis_tuser_reg

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: output_axis_tdata_reg
    HdlValueId: output_axis_tdata

DEL HdlStmAssign@@ from objs

DEL HdlStmAssign@@ from objs


CommitId: 385c9cc90ade29878d45e6634e2c70ce85d6d6d5
Fix Vivado block RAM inference
--- a/rtl/axis_fifo.v
+++ b/rtl/axis_fifo.v
@@ -108,7 +107,7 @@ always @(posedge clk) begin
     end
 
     if (write) begin
-        mem[wr_ptr_reg[ADDR_WIDTH-1:0]] <= {input_axis_tlast, input_axis_tuser, input_axis_tdata};
+        mem[wr_ptr_reg[ADDR_WIDTH-1:0]] <= mem_write_data;
     end
 end
 

ParseResult:
UPD HdlStmAssign@@ to 
    MOV HdlOp@@CONCAT to 
    HdlOp: CONCAT
        list: ops
            HdlOp: CONCAT
                list: ops
                    HdlValueId: input_axis_tlast
                    HdlValueId: input_axis_tuser
            HdlValueId: input_axis_tdata

UPD HdlStmAssign@@ to 
    INS HdlValueId@@mem_write_data to 


CommitId: 385c9cc90ade29878d45e6634e2c70ce85d6d6d5
Fix Vivado block RAM inference
--- a/rtl/axis_fifo.v
+++ b/rtl/axis_fifo.v
@@ -143,7 +142,7 @@ always @(posedge clk) begin
     end
 
     if (read) begin
-        {output_axis_tlast_reg, output_axis_tuser_reg, output_axis_tdata_reg} <= mem[rd_ptr_reg[ADDR_WIDTH-1:0]];
+        mem_read_data_reg <= mem[rd_ptr_reg[ADDR_WIDTH-1:0]];
     end
 end
 
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@output_axis_tdata_reg to mem_read_data_reg
        MOV HdlValueId@@output_axis_tdata_reg to ops
        HdlValueId: output_axis_tdata_reg
        DEL HdlOp@@CONCAT from ops
        HdlOp: CONCAT
            list: ops
                HdlValueId: output_axis_tlast_reg
                HdlValueId: output_axis_tuser_reg
        DEL list@@ops from CONCAT
    DEL HdlOp@@CONCAT from 


CommitId: 56a3b8fe9240155438922bfb6fb5d05b509c844d
Fix indexed part select error in degenerate case when M_COUNT = 1
--- a/rtl/axis_ram_switch.v
+++ b/rtl/axis_ram_switch.v
@@ -413,16 +413,23 @@ generate
             select_valid_next = select_valid_reg && !(port_axis_tvalid && port_axis_tready && port_axis_tlast);
 
             if (port_axis_tvalid && !select_valid_reg && !drop_reg) begin
-                select_next = 1'b0;
+                select_next = 0;
                 select_valid_next = 1'b0;
                 drop_next = 1'b1;
                 for (k = 0; k < M_COUNT; k = k + 1) begin
                     if (M_BASE == 0) begin
-                        // M_BASE is zero, route with $clog2(M_COUNT) MSBs of tdest as port index
-                        if (port_axis_tdest[DEST_WIDTH-CL_M_COUNT +: CL_M_COUNT] == k && (M_CONNECT & (1 << (m+k*S_COUNT)))) begin
-                            select_next = k;
+                        if (M_COUNT == 1) begin
+                            // M_BASE is zero with only one output port, ignore tdest
+                            select_next = 0;
                             select_valid_next = 1'b1;
                             drop_next = 1'b0;
+                        end else begin
+                            // M_BASE is zero, route with $clog2(M_COUNT) MSBs of tdest as port index
+                            if (port_axis_tdest[DEST_WIDTH-CL_M_COUNT +: CL_M_COUNT] == k && (M_CONNECT & (1 << (m+k*S_COUNT)))) begin
+                                select_next = k;
+                                select_valid_next = 1'b1;
+                                drop_next = 1'b0;
+                            end
                         end
                     end else if (M_TOP == 0) begin
                         // M_TOP is zero, assume equal to M_BASE
ParseResult:
UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    INS HdlOp@@EQ to 
    HdlOp: EQ
        list: ops
            HdlValueId: M_COUNT
            HdlValueInt: 1
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: select_next
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: select_valid_next
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: drop_next
                    HdlValueInt: 0
    INS list@@elifs to 

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: AND_LOG
                    list: ops
                        HdlOp: EQ
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: port_axis_tdest
                                        HdlOp: PART_SELECT_POST
                                            list: ops
                                                HdlOp: SUB
                                                    list: ops
                                                        HdlValueId: DEST_WIDTH
                                                        HdlValueId: CL_M_COUNT
                                                HdlValueId: CL_M_COUNT
                                HdlValueId: k
                        HdlOp: AND
                            list: ops
                                HdlValueId: M_CONNECT
                                HdlOp: SLL
                                    list: ops
                                        HdlValueInt: 1
                                        HdlOp: ADD
                                            list: ops
                                                HdlValueId: m
                                                HdlOp: MUL
                                                    list: ops
                                                        HdlValueId: k
                                                        HdlValueId: S_COUNT
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: select_next
                                HdlValueId: k
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: select_valid_next
                                HdlValueInt: 1
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: drop_next
                                HdlValueInt: 0
                list: elifs


CommitId: 0a85a4a2aaba80cad7ca69c01d9d30639e9c1c8e
Fix assert
--- a/rtl/axis_switch.v
+++ b/rtl/axis_switch.v
@@ -112,7 +112,7 @@ integer i, j;
 
 // check configuration
 initial begin
-    if (2**DEST_WIDTH < CL_M_COUNT) begin
+    if (DEST_WIDTH < CL_M_COUNT) begin
         $error("Error: DEST_WIDTH too small for port count");
         $finish;
     end
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@LT to LT
        UPD HdlOp@@POW to POW
            MOV HdlValueId@@DEST_WIDTH to ops
            HdlValueId: DEST_WIDTH
            DEL HdlValueInt@@2 from ops
            DEL list@@ops from POW
        DEL HdlOp@@POW from ops


CommitId: 932aa3545156b6c6006a10cd6a2f30b128aed37d
Fix AXI stream async frame FIFO write pointer synchronization
--- a/rtl/axis_async_fifo.v
+++ b/rtl/axis_async_fifo.v
@@ -124,6 +124,7 @@ localparam WIDTH       = USER_OFFSET + (USER_ENABLE ? USER_WIDTH : 0);
 reg [ADDR_WIDTH:0] wr_ptr_reg = {ADDR_WIDTH+1{1'b0}}, wr_ptr_next;
 reg [ADDR_WIDTH:0] wr_ptr_cur_reg = {ADDR_WIDTH+1{1'b0}}, wr_ptr_cur_next;
 reg [ADDR_WIDTH:0] wr_ptr_gray_reg = {ADDR_WIDTH+1{1'b0}}, wr_ptr_gray_next;
+reg [ADDR_WIDTH:0] wr_ptr_sync_gray_reg = {ADDR_WIDTH+1{1'b0}}, wr_ptr_sync_gray_next;
 reg [ADDR_WIDTH:0] wr_ptr_cur_gray_reg = {ADDR_WIDTH+1{1'b0}}, wr_ptr_cur_gray_next;
 reg [ADDR_WIDTH:0] wr_addr_reg = {ADDR_WIDTH+1{1'b0}};
 reg [ADDR_WIDTH:0] rd_ptr_reg = {ADDR_WIDTH+1{1'b0}}, rd_ptr_next;

ParseResult:
INS HdlIdDef@@wr_ptr_sync_gray_reg to objs
HdlIdDef: wr_ptr_sync_gray_reg
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueId: ADDR_WIDTH
                    HdlValueInt: 0
    HdlOp: REPL_CONCAT
        list: ops
            HdlOp: ADD
                list: ops
                    HdlValueId: ADDR_WIDTH
                    HdlValueInt: 1
            HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@wr_ptr_sync_gray_next to objs
HdlIdDef: wr_ptr_sync_gray_next
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueId: ADDR_WIDTH
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 932aa3545156b6c6006a10cd6a2f30b128aed37d
Fix AXI stream async frame FIFO write pointer synchronization
--- a/rtl/axis_async_fifo.v
+++ b/rtl/axis_async_fifo.v
@@ -135,6 +136,14 @@ reg [ADDR_WIDTH:0] wr_ptr_gray_sync2_reg = {ADDR_WIDTH+1{1'b0}};
 reg [ADDR_WIDTH:0] rd_ptr_gray_sync1_reg = {ADDR_WIDTH+1{1'b0}};
 reg [ADDR_WIDTH:0] rd_ptr_gray_sync2_reg = {ADDR_WIDTH+1{1'b0}};
 
+reg wr_ptr_update_valid_reg = 1'b0, wr_ptr_update_valid_next;
+reg wr_ptr_update_reg = 1'b0, wr_ptr_update_next;
+reg wr_ptr_update_sync1_reg = 1'b0;
+reg wr_ptr_update_sync2_reg = 1'b0;
+reg wr_ptr_update_sync3_reg = 1'b0;
+reg wr_ptr_update_ack_sync1_reg = 1'b0;
+reg wr_ptr_update_ack_sync2_reg = 1'b0;
+
 reg s_rst_sync1_reg = 1'b1;
 reg s_rst_sync2_reg = 1'b1;
 reg s_rst_sync3_reg = 1'b1;

ParseResult:
INS HdlIdDef@@wr_ptr_update_valid_reg to objs
HdlIdDef: wr_ptr_update_valid_reg
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@wr_ptr_update_valid_next to objs
HdlIdDef: wr_ptr_update_valid_next
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL

INS HdlIdDef@@wr_ptr_update_reg to objs
HdlIdDef: wr_ptr_update_reg
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@wr_ptr_update_next to objs
HdlIdDef: wr_ptr_update_next
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL

INS HdlIdDef@@wr_ptr_update_sync1_reg to objs
HdlIdDef: wr_ptr_update_sync1_reg
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@wr_ptr_update_sync2_reg to objs
HdlIdDef: wr_ptr_update_sync2_reg
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@wr_ptr_update_sync3_reg to objs
HdlIdDef: wr_ptr_update_sync3_reg
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@wr_ptr_update_ack_sync1_reg to objs
HdlIdDef: wr_ptr_update_ack_sync1_reg
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@wr_ptr_update_ack_sync2_reg to objs
HdlIdDef: wr_ptr_update_ack_sync2_reg
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 932aa3545156b6c6006a10cd6a2f30b128aed37d
Fix AXI stream async frame FIFO write pointer synchronization
--- a/rtl/axis_async_fifo.v
+++ b/rtl/axis_async_fifo.v
@@ -160,7 +169,7 @@ wire full_cur = ((wr_ptr_cur_gray_reg[ADDR_WIDTH] != rd_ptr_gray_sync2_reg[ADDR_
                  (wr_ptr_cur_gray_reg[ADDR_WIDTH-1] != rd_ptr_gray_sync2_reg[ADDR_WIDTH-1]) &&
                  (wr_ptr_cur_gray_reg[ADDR_WIDTH-2:0] == rd_ptr_gray_sync2_reg[ADDR_WIDTH-2:0]));
 // empty when pointers match exactly
-wire empty = rd_ptr_gray_reg == wr_ptr_gray_sync2_reg;
+wire empty = rd_ptr_gray_reg == (FRAME_FIFO ? wr_ptr_gray_sync1_reg : wr_ptr_gray_sync2_reg);
 // overflow within packet
 wire full_wr = ((wr_ptr_reg[ADDR_WIDTH] != wr_ptr_cur_reg[ADDR_WIDTH]) &&
                 (wr_ptr_reg[ADDR_WIDTH-1:0] == wr_ptr_cur_reg[ADDR_WIDTH-1:0]));

ParseResult:
INS HdlIdDef@@empty to objs
HdlIdDef: empty
    HdlOp: EQ
        list: ops
            HdlValueId: rd_ptr_gray_reg
            HdlOp: TERNARY
                list: ops
                    HdlValueId: FRAME_FIFO
                    HdlValueId: wr_ptr_gray_sync1_reg
                    HdlValueId: wr_ptr_gray_sync2_reg
    HdlDirection: INTERNAL

DEL HdlIdDef@@empty from objs
HdlIdDef: empty
    HdlOp: EQ
        list: ops
            HdlValueId: rd_ptr_gray_reg
            HdlValueId: wr_ptr_gray_sync2_reg
    HdlDirection: INTERNAL


CommitId: 932aa3545156b6c6006a10cd6a2f30b128aed37d
Fix AXI stream async frame FIFO write pointer synchronization
--- a/rtl/axis_async_fifo.v
+++ b/rtl/axis_async_fifo.v
@@ -253,8 +262,22 @@ always @* begin
     wr_ptr_next = wr_ptr_reg;
     wr_ptr_cur_next = wr_ptr_cur_reg;
     wr_ptr_gray_next = wr_ptr_gray_reg;
+    wr_ptr_sync_gray_next = wr_ptr_sync_gray_reg;
     wr_ptr_cur_gray_next = wr_ptr_cur_gray_reg;
 
+    wr_ptr_update_valid_next = wr_ptr_update_valid_reg;
+    wr_ptr_update_next = wr_ptr_update_reg;
+
+    if (FRAME_FIFO && wr_ptr_update_valid_reg) begin
+        // have updated pointer to sync
+        if (wr_ptr_update_next == wr_ptr_update_ack_sync2_reg) begin
+            // no sync in progress; sync update
+            wr_ptr_update_valid_next = 1'b0;
+            wr_ptr_sync_gray_next = wr_ptr_gray_reg;
+            wr_ptr_update_next = !wr_ptr_update_ack_sync2_reg;
+        end
+    end
+
     if (s_axis_tready && s_axis_tvalid) begin
         // transfer in
         if (!FRAME_FIFO) begin

ParseResult:
INS HdlStmIf@@ to body
HdlStmIf
    HdlOp: AND_LOG
        list: ops
            HdlValueId: FRAME_FIFO
            HdlValueId: wr_ptr_update_valid_reg
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: EQ
                    list: ops
                        HdlValueId: wr_ptr_update_next
                        HdlValueId: wr_ptr_update_ack_sync2_reg
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: wr_ptr_update_valid_next
                                HdlValueInt: 0
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: wr_ptr_sync_gray_next
                                HdlValueId: wr_ptr_gray_reg
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: wr_ptr_update_next
                                HdlOp: NEG_LOG
                                    list: ops
                                        HdlValueId: wr_ptr_update_ack_sync2_reg
                list: elifs
    list: elifs


CommitId: 932aa3545156b6c6006a10cd6a2f30b128aed37d
Fix AXI stream async frame FIFO write pointer synchronization
--- a/rtl/axis_async_fifo.v
+++ b/rtl/axis_async_fifo.v
@@ -288,6 +311,17 @@ always @* begin
                     // good packet, update write pointer
                     wr_ptr_next = wr_ptr_cur_reg + 1;
                     wr_ptr_gray_next = wr_ptr_next ^ (wr_ptr_next >> 1);
+
+                    if (wr_ptr_update_next == wr_ptr_update_ack_sync2_reg) begin
+                        // no sync in progress; sync update
+                        wr_ptr_update_valid_next = 1'b0;
+                        wr_ptr_sync_gray_next = wr_ptr_gray_next;
+                        wr_ptr_update_next = !wr_ptr_update_ack_sync2_reg;
+                    end else begin
+                        // sync in progress; flag it for later
+                        wr_ptr_update_valid_next = 1'b1;
+                    end
+
                     good_frame_next = 1'b1;
                 end
             end

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: wr_ptr_sync_gray_next
                HdlValueId: wr_ptr_sync_gray_reg
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: wr_ptr_update_valid_next
                HdlValueId: wr_ptr_update_valid_reg
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: wr_ptr_update_next
                HdlValueId: wr_ptr_update_reg

INS HdlStmIf@@ to body
HdlStmIf
    HdlOp: EQ
        list: ops
            HdlValueId: wr_ptr_update_next
            HdlValueId: wr_ptr_update_ack_sync2_reg
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: wr_ptr_update_valid_next
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: wr_ptr_sync_gray_next
                    HdlValueId: wr_ptr_gray_next
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: wr_ptr_update_next
                    HdlOp: NEG_LOG
                        list: ops
                            HdlValueId: wr_ptr_update_ack_sync2_reg
    list: elifs
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: wr_ptr_update_valid_next
                    HdlValueInt: 1


CommitId: 932aa3545156b6c6006a10cd6a2f30b128aed37d
Fix AXI stream async frame FIFO write pointer synchronization
--- a/rtl/axis_async_fifo.v
+++ b/rtl/axis_async_fifo.v
@@ -300,8 +334,12 @@ always @(posedge s_clk) begin
         wr_ptr_reg <= {ADDR_WIDTH+1{1'b0}};
         wr_ptr_cur_reg <= {ADDR_WIDTH+1{1'b0}};
         wr_ptr_gray_reg <= {ADDR_WIDTH+1{1'b0}};
+        wr_ptr_sync_gray_reg <= {ADDR_WIDTH+1{1'b0}};
         wr_ptr_cur_gray_reg <= {ADDR_WIDTH+1{1'b0}};
 
+        wr_ptr_update_valid_reg <= 1'b0;
+        wr_ptr_update_reg <= 1'b0;
+
         drop_frame_reg <= 1'b0;
         overflow_reg <= 1'b0;
         bad_frame_reg <= 1'b0;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: wr_ptr_sync_gray_next
                HdlValueId: wr_ptr_sync_gray_reg
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: wr_ptr_update_valid_next
                HdlValueId: wr_ptr_update_valid_reg
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: wr_ptr_update_next
                HdlValueId: wr_ptr_update_reg

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlOp: REPL_CONCAT
        list: ops
            HdlOp: ADD
                list: ops
                    HdlValueId: ADDR_WIDTH
                    HdlValueInt: 1
            HdlValueInt: 0
    HdlValueId: wr_ptr_sync_gray_reg

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: wr_ptr_update_valid_reg

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: wr_ptr_update_reg


CommitId: 932aa3545156b6c6006a10cd6a2f30b128aed37d
Fix AXI stream async frame FIFO write pointer synchronization
--- a/rtl/axis_async_fifo.v
+++ b/rtl/axis_async_fifo.v
@@ -310,8 +348,12 @@ always @(posedge s_clk) begin
         wr_ptr_reg <= wr_ptr_next;
         wr_ptr_cur_reg <= wr_ptr_cur_next;
         wr_ptr_gray_reg <= wr_ptr_gray_next;
+        wr_ptr_sync_gray_reg <= wr_ptr_sync_gray_next;
         wr_ptr_cur_gray_reg <= wr_ptr_cur_gray_next;
 
+        wr_ptr_update_valid_reg <= wr_ptr_update_valid_next;
+        wr_ptr_update_reg <= wr_ptr_update_next;
+
         drop_frame_reg <= drop_frame_next;
         overflow_reg <= overflow_next;
         bad_frame_reg <= bad_frame_next;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: wr_ptr_sync_gray_next
                HdlValueId: wr_ptr_sync_gray_reg
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: wr_ptr_update_valid_next
                HdlValueId: wr_ptr_update_valid_reg
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: wr_ptr_update_next
                HdlValueId: wr_ptr_update_reg

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: wr_ptr_sync_gray_next
    HdlValueId: wr_ptr_sync_gray_reg

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: wr_ptr_update_valid_next
    HdlValueId: wr_ptr_update_valid_reg

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: wr_ptr_update_next
    HdlValueId: wr_ptr_update_reg


CommitId: 932aa3545156b6c6006a10cd6a2f30b128aed37d
Fix AXI stream async frame FIFO write pointer synchronization
--- a/rtl/axis_async_fifo.v
+++ b/rtl/axis_async_fifo.v
@@ -334,9 +376,13 @@ always @(posedge s_clk) begin
     if (s_rst_sync3_reg) begin
         rd_ptr_gray_sync1_reg <= {ADDR_WIDTH+1{1'b0}};
         rd_ptr_gray_sync2_reg <= {ADDR_WIDTH+1{1'b0}};
+        wr_ptr_update_ack_sync1_reg <= 1'b0;
+        wr_ptr_update_ack_sync2_reg <= 1'b0;
     end else begin
         rd_ptr_gray_sync1_reg <= rd_ptr_gray_reg;
         rd_ptr_gray_sync2_reg <= rd_ptr_gray_sync1_reg;
+        wr_ptr_update_ack_sync1_reg <= wr_ptr_update_sync3_reg;
+        wr_ptr_update_ack_sync2_reg <= wr_ptr_update_ack_sync1_reg;
     end
 end
 

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: wr_ptr_sync_gray_next
                HdlValueId: wr_ptr_sync_gray_reg
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: wr_ptr_update_valid_next
                HdlValueId: wr_ptr_update_valid_reg
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: wr_ptr_update_next
                HdlValueId: wr_ptr_update_reg

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: wr_ptr_update_ack_sync1_reg

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: wr_ptr_update_ack_sync2_reg

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: wr_ptr_update_sync3_reg
    HdlValueId: wr_ptr_update_ack_sync1_reg

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: wr_ptr_update_ack_sync1_reg
    HdlValueId: wr_ptr_update_ack_sync2_reg


CommitId: 932aa3545156b6c6006a10cd6a2f30b128aed37d
Fix AXI stream async frame FIFO write pointer synchronization
--- a/rtl/axis_async_fifo.v
+++ b/rtl/axis_async_fifo.v
@@ -344,9 +390,19 @@ always @(posedge m_clk) begin
     if (m_rst_sync3_reg) begin
         wr_ptr_gray_sync1_reg <= {ADDR_WIDTH+1{1'b0}};
         wr_ptr_gray_sync2_reg <= {ADDR_WIDTH+1{1'b0}};
+        wr_ptr_update_sync1_reg <= 1'b0;
+        wr_ptr_update_sync2_reg <= 1'b0;
+        wr_ptr_update_sync3_reg <= 1'b0;
     end else begin
-        wr_ptr_gray_sync1_reg <= wr_ptr_gray_reg;
+        if (!FRAME_FIFO) begin
+            wr_ptr_gray_sync1_reg <= wr_ptr_gray_reg;
+        end else if (wr_ptr_update_sync2_reg ^ wr_ptr_update_sync3_reg) begin
+            wr_ptr_gray_sync1_reg <= wr_ptr_sync_gray_reg;
+        end
         wr_ptr_gray_sync2_reg <= wr_ptr_gray_sync1_reg;
+        wr_ptr_update_sync1_reg <= wr_ptr_update_reg;
+        wr_ptr_update_sync2_reg <= wr_ptr_update_sync1_reg;
+        wr_ptr_update_sync3_reg <= wr_ptr_update_sync2_reg;
     end
 end
 
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: wr_ptr_sync_gray_next
                HdlValueId: wr_ptr_sync_gray_reg
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: wr_ptr_update_valid_next
                HdlValueId: wr_ptr_update_valid_reg
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: wr_ptr_update_next
                HdlValueId: wr_ptr_update_reg

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: wr_ptr_update_sync1_reg

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: wr_ptr_update_sync2_reg

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: wr_ptr_update_sync3_reg

INS HdlStmIf@@ to body

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: wr_ptr_gray_sync1_reg
    HdlValueId: wr_ptr_gray_sync2_reg

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: wr_ptr_update_reg
    HdlValueId: wr_ptr_update_sync1_reg

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: wr_ptr_update_sync1_reg
    HdlValueId: wr_ptr_update_sync2_reg

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: wr_ptr_update_sync2_reg
    HdlValueId: wr_ptr_update_sync3_reg

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueId: wr_ptr_gray_reg
                HdlValueId: wr_ptr_gray_sync1_reg
            HdlStmAssign
                HdlValueId: wr_ptr_gray_sync1_reg
                HdlValueId: wr_ptr_gray_sync2_reg


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/eth_demux_4.v
+++ b/rtl/eth_demux_4.v
@@ -102,24 +102,24 @@ module eth_demux_4
     input  wire [1:0]  select
 );
 
-reg [1:0] select_reg = 0, select_next;
-reg frame_reg = 0, frame_next;
+reg [1:0] select_reg = 2'd0, select_next;
+reg frame_reg = 1'b0, frame_next;
 
-reg input_eth_hdr_ready_reg = 0, input_eth_hdr_ready_next;
-reg input_eth_payload_tready_reg = 0, input_eth_payload_tready_next;
+reg input_eth_hdr_ready_reg = 1'b0, input_eth_hdr_ready_next;
+reg input_eth_payload_tready_reg = 1'b0, input_eth_payload_tready_next;
 
-reg output_0_eth_hdr_valid_reg = 0, output_0_eth_hdr_valid_next;
-reg output_1_eth_hdr_valid_reg = 0, output_1_eth_hdr_valid_next;
-reg output_2_eth_hdr_valid_reg = 0, output_2_eth_hdr_valid_next;
-reg output_3_eth_hdr_valid_reg = 0, output_3_eth_hdr_valid_next;
-reg [47:0] output_eth_dest_mac_reg = 0, output_eth_dest_mac_next;
-reg [47:0] output_eth_src_mac_reg = 0, output_eth_src_mac_next;
-reg [15:0] output_eth_type_reg = 0, output_eth_type_next;
+reg output_0_eth_hdr_valid_reg = 1'b0, output_0_eth_hdr_valid_next;
+reg output_1_eth_hdr_valid_reg = 1'b0, output_1_eth_hdr_valid_next;
+reg output_2_eth_hdr_valid_reg = 1'b0, output_2_eth_hdr_valid_next;
+reg output_3_eth_hdr_valid_reg = 1'b0, output_3_eth_hdr_valid_next;
+reg [47:0] output_eth_dest_mac_reg = 48'd0, output_eth_dest_mac_next;
+reg [47:0] output_eth_src_mac_reg = 48'd0, output_eth_src_mac_next;
+reg [15:0] output_eth_type_reg = 16'd0, output_eth_type_next;
 
 // internal datapath
 reg [7:0] output_eth_payload_tdata_int;
 reg       output_eth_payload_tvalid_int;
-reg       output_eth_payload_tready_int = 0;
+reg       output_eth_payload_tready_int_reg = 1'b0;
 reg       output_eth_payload_tlast_int;
 reg       output_eth_payload_tuser_int;
 wire      output_eth_payload_tready_int_early;

ParseResult:
UPD HdlIdDef@@output_eth_payload_tready_int to output_eth_payload_tready_int_reg


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/eth_demux_4.v
+++ b/rtl/eth_demux_4.v
@@ -178,6 +178,12 @@ always @* begin
             current_output_tvalid = output_3_eth_payload_tvalid;
             current_output_tready = output_3_eth_payload_tready;
         end
+        default: begin
+            current_output_eth_hdr_valid = 1'b0;
+            current_output_eth_hdr_ready = 1'b0;
+            current_output_tvalid = 1'b0;
+            current_output_tready = 1'b0;
+        end
     endcase
 end
 

ParseResult:
UPD HdlStmCase@@select_reg to select_reg
    INS HdlStmBlock@@SEQ to select_reg
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_output_eth_hdr_valid
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_output_eth_hdr_ready
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_output_tvalid
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_output_tready
                    HdlValueInt: 0


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/eth_demux_4.v
+++ b/rtl/eth_demux_4.v
@@ -186,7 +192,7 @@ always @* begin
     frame_next = frame_reg;
 
     input_eth_hdr_ready_next = input_eth_hdr_ready_reg & ~input_eth_hdr_valid;
-    input_eth_payload_tready_next = 0;
+    input_eth_payload_tready_next = 1'b0;
     output_0_eth_hdr_valid_next = output_0_eth_hdr_valid_reg & ~output_0_eth_hdr_ready;
     output_1_eth_hdr_valid_next = output_1_eth_hdr_valid_reg & ~output_1_eth_hdr_ready;
     output_2_eth_hdr_valid_next = output_2_eth_hdr_valid_reg & ~output_2_eth_hdr_ready;

ParseResult:
UPD HdlStmCase@@select_reg to select_reg
    INS HdlStmBlock@@SEQ to select_reg
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_output_eth_hdr_valid
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_output_eth_hdr_ready
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_output_tvalid
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_output_tready
                    HdlValueInt: 0


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/eth_demux_4.v
+++ b/rtl/eth_demux_4.v
@@ -228,17 +234,14 @@ end
 
 always @(posedge clk) begin
     if (rst) begin
-        select_reg <= 0;
-        frame_reg <= 0;
-        input_eth_hdr_ready_reg <= 0;
-        input_eth_payload_tready_reg <= 0;
-        output_0_eth_hdr_valid_reg <= 0;
-        output_1_eth_hdr_valid_reg <= 0;
-        output_2_eth_hdr_valid_reg <= 0;
-        output_3_eth_hdr_valid_reg <= 0;
-        output_eth_dest_mac_reg <= 0;
-        output_eth_src_mac_reg <= 0;
-        output_eth_type_reg <= 0;
+        select_reg <= 2'd0;
+        frame_reg <= 1'b0;
+        input_eth_hdr_ready_reg <= 1'b0;
+        input_eth_payload_tready_reg <= 1'b0;
+        output_0_eth_hdr_valid_reg <= 1'b0;
+        output_1_eth_hdr_valid_reg <= 1'b0;
+        output_2_eth_hdr_valid_reg <= 1'b0;
+        output_3_eth_hdr_valid_reg <= 1'b0;
     end else begin
         select_reg <= select_next;
         frame_reg <= frame_next;

ParseResult:
DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: output_eth_dest_mac_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: output_eth_src_mac_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: output_eth_type_reg


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/eth_demux_4.v
+++ b/rtl/eth_demux_4.v
@@ -248,25 +251,31 @@ always @(posedge clk) begin
         output_1_eth_hdr_valid_reg <= output_1_eth_hdr_valid_next;
         output_2_eth_hdr_valid_reg <= output_2_eth_hdr_valid_next;
         output_3_eth_hdr_valid_reg <= output_3_eth_hdr_valid_next;
-        output_eth_dest_mac_reg <= output_eth_dest_mac_next;
-        output_eth_src_mac_reg <= output_eth_src_mac_next;
-        output_eth_type_reg <= output_eth_type_next;
     end
+
+    output_eth_dest_mac_reg <= output_eth_dest_mac_next;
+    output_eth_src_mac_reg <= output_eth_src_mac_next;
+    output_eth_type_reg <= output_eth_type_next;
 end
 
 // output datapath logic
-reg [7:0] output_eth_payload_tdata_reg = 0;
-reg       output_0_eth_payload_tvalid_reg = 0;
-reg       output_1_eth_payload_tvalid_reg = 0;
-reg       output_2_eth_payload_tvalid_reg = 0;
-reg       output_3_eth_payload_tvalid_reg = 0;
-reg       output_eth_payload_tlast_reg = 0;
-reg       output_eth_payload_tuser_reg = 0;
-
-reg [7:0] temp_eth_payload_tdata_reg = 0;
-reg       temp_eth_payload_tvalid_reg = 0;
-reg       temp_eth_payload_tlast_reg = 0;
-reg       temp_eth_payload_tuser_reg = 0;
+reg [7:0] output_eth_payload_tdata_reg = 8'd0;
+reg       output_0_eth_payload_tvalid_reg = 1'b0, output_0_eth_payload_tvalid_next;
+reg       output_1_eth_payload_tvalid_reg = 1'b0, output_1_eth_payload_tvalid_next;
+reg       output_2_eth_payload_tvalid_reg = 1'b0, output_2_eth_payload_tvalid_next;
+reg       output_3_eth_payload_tvalid_reg = 1'b0, output_3_eth_payload_tvalid_next;
+reg       output_eth_payload_tlast_reg = 1'b0;
+reg       output_eth_payload_tuser_reg = 1'b0;
+
+reg [7:0] temp_eth_payload_tdata_reg = 8'd0;
+reg       temp_eth_payload_tvalid_reg = 1'b0, temp_eth_payload_tvalid_next;
+reg       temp_eth_payload_tlast_reg = 1'b0;
+reg       temp_eth_payload_tuser_reg = 1'b0;
+
+// datapath control
+reg store_eth_payload_int_to_output;
+reg store_eth_payload_int_to_temp;
+reg store_eth_payload_temp_to_output;
 
 assign output_0_eth_payload_tdata = output_eth_payload_tdata_reg;
 assign output_0_eth_payload_tvalid = output_0_eth_payload_tvalid_reg;

ParseResult:
INS HdlIdDef@@output_0_eth_payload_tvalid_next to objs
HdlIdDef: output_0_eth_payload_tvalid_next
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL

INS HdlIdDef@@output_1_eth_payload_tvalid_next to objs
HdlIdDef: output_1_eth_payload_tvalid_next
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL

INS HdlIdDef@@output_2_eth_payload_tvalid_next to objs
HdlIdDef: output_2_eth_payload_tvalid_next
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL

INS HdlIdDef@@output_3_eth_payload_tvalid_next to objs
HdlIdDef: output_3_eth_payload_tvalid_next
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL

INS HdlIdDef@@temp_eth_payload_tvalid_next to objs
HdlIdDef: temp_eth_payload_tvalid_next
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL

INS HdlIdDef@@store_eth_payload_int_to_output to objs
HdlIdDef: store_eth_payload_int_to_output
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL

INS HdlIdDef@@store_eth_payload_int_to_temp to objs
HdlIdDef: store_eth_payload_int_to_temp
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL

INS HdlIdDef@@store_eth_payload_temp_to_output to objs
HdlIdDef: store_eth_payload_temp_to_output
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: output_eth_dest_mac_next
    HdlValueId: output_eth_dest_mac_reg

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: output_eth_src_mac_next
    HdlValueId: output_eth_src_mac_reg

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: output_eth_type_next
    HdlValueId: output_eth_type_reg


CommitId: 0d22a35bd855a7f08b34a3f1c24ebb143289d91d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_rate_limit.v
+++ b/rtl/axis_rate_limit.v
@@ -66,21 +66,22 @@ module axis_rate_limit #
 // internal datapath
 reg [DATA_WIDTH-1:0] output_axis_tdata_int;
 reg                  output_axis_tvalid_int;
-reg                  output_axis_tready_int = 0;
+reg                  output_axis_tready_int_reg = 1'b0;
 reg                  output_axis_tlast_int;
 reg                  output_axis_tuser_int;
 wire                 output_axis_tready_int_early;
 
-reg [23:0] acc_reg = 0, acc_next;
+reg [23:0] acc_reg = 24'd0, acc_next;
 reg pause;
-reg frame_reg = 0, frame_next;
+reg frame_reg = 1'b0, frame_next;
+
+reg input_axis_tready_reg = 1'b0, input_axis_tready_next;
 
-reg input_axis_tready_reg = 0, input_axis_tready_next;
 assign input_axis_tready = input_axis_tready_reg;
 
 always @* begin
     acc_next = acc_reg;
-    pause = 0;
+    pause = 1'b0;
     frame_next = frame_reg;
 
     if (acc_reg >= rate_num) begin

ParseResult:
UPD HdlIdDef@@output_axis_tready_int to output_axis_tready_int_reg


CommitId: 585ccefa1534cba00ee915f54baf491a0b49df82
Add TX underflow error signal
--- a/rtl/eth_mac_phy_10g_tx.v
+++ b/rtl/eth_mac_phy_10g_tx.v
@@ -70,7 +70,8 @@ module eth_mac_phy_10g_tx #
      * Status
      */
     output wire                  tx_start_packet_0,
-    output wire                  tx_start_packet_4
+    output wire                  tx_start_packet_4,
+    output wire                  tx_error_underflow
 );
 
 // bus width assertions

ParseResult:
INS HdlIdDef@@tx_error_underflow to ports
HdlIdDef: tx_error_underflow
    HdlDirection: OUT


CommitId: e9c1c5a49d63a5f28eb9b0d133baa26165385ac1
Fix state register width
--- a/rtl/axis_xgmii_tx_32.v
+++ b/rtl/axis_xgmii_tx_32.v
@@ -121,7 +121,7 @@ localparam [3:0]
     STATE_IFG = 4'd7,
     STATE_WAIT_END = 4'd8;
 
-reg [2:0] state_reg = STATE_IDLE, state_next;
+reg [3:0] state_reg = STATE_IDLE, state_next;
 
 // datapath control signals
 reg reset_crc;
ParseResult:
INS HdlIdDef@@state_reg to objs
HdlIdDef: state_reg
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 3
                    HdlValueInt: 0
    HdlValueId: STATE_IDLE
    HdlDirection: INTERNAL

INS HdlIdDef@@state_next to objs
HdlIdDef: state_next
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 3
                    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@state_reg from objs
HdlIdDef: state_reg
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 2
                    HdlValueInt: 0
    HdlValueId: STATE_IDLE
    HdlDirection: INTERNAL

DEL HdlIdDef@@state_next from objs
HdlIdDef: state_next
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 2
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 585ccefa1534cba00ee915f54baf491a0b49df82
Add TX underflow error signal
--- a/rtl/eth_mac_10g_fifo.v
+++ b/rtl/eth_mac_10g_fifo.v
@@ -85,6 +85,7 @@ module eth_mac_10g_fifo #
     /*
      * Status
      */
+    output wire                  tx_error_underflow,
     output wire                  tx_fifo_overflow,
     output wire                  tx_fifo_bad_frame,
     output wire                  tx_fifo_good_frame,

ParseResult:
INS HdlIdDef@@tx_error_underflow to ports
HdlIdDef: tx_error_underflow
    HdlDirection: OUT


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/udp_ip_tx_64.v
+++ b/rtl/udp_ip_tx_64.v
@@ -249,38 +249,38 @@ endfunction
 always @* begin
     state_next = STATE_IDLE;
 
-    input_udp_hdr_ready_next = 0;
-    input_udp_payload_tready_next = 0;
+    input_udp_hdr_ready_next = 1'b0;
+    input_udp_payload_tready_next = 1'b0;
 
-    store_udp_hdr = 0;
+    store_udp_hdr = 1'b0;
 
-    store_last_word = 0;
+    store_last_word = 1'b0;
 
     frame_ptr_next = frame_ptr_reg;
 
     output_ip_hdr_valid_next = output_ip_hdr_valid_reg & ~output_ip_hdr_ready;
 
-    error_payload_early_termination_next = 0;
+    error_payload_early_termination_next = 1'b0;
 
-    output_ip_payload_tdata_int = 0;
-    output_ip_payload_tkeep_int = 0;
-    output_ip_payload_tvalid_int = 0;
-    output_ip_payload_tlast_int = 0;
-    output_ip_payload_tuser_int = 0;
+    output_ip_payload_tdata_int = 64'd0;
+    output_ip_payload_tkeep_int = 8'd0;
+    output_ip_payload_tvalid_int = 1'b0;
+    output_ip_payload_tlast_int = 1'b0;
+    output_ip_payload_tuser_int = 1'b0;
 
     case (state_reg)
         STATE_IDLE: begin
             // idle state - wait for data
-            frame_ptr_next = 0;
+            frame_ptr_next = 16'd0;
             input_udp_hdr_ready_next = ~output_ip_hdr_valid_reg;
 
             if (input_udp_hdr_ready & input_udp_hdr_valid) begin
-                store_udp_hdr = 1;
-                input_udp_hdr_ready_next = 0;
-                output_ip_hdr_valid_next = 1;
+                store_udp_hdr = 1'b1;
+                input_udp_hdr_ready_next = 1'b0;
+                output_ip_hdr_valid_next = 1'b1;
                 state_next = STATE_WRITE_HEADER;
-                if (output_ip_payload_tready_int) begin
-                    output_ip_payload_tvalid_int = 1;
+                if (output_ip_payload_tready_int_reg) begin
+                    output_ip_payload_tvalid_int = 1'b1;
                     output_ip_payload_tdata_int[ 7: 0] = input_udp_source_port[15: 8];
                     output_ip_payload_tdata_int[15: 8] = input_udp_source_port[ 7: 0];
                     output_ip_payload_tdata_int[23:16] = input_udp_dest_port[15: 8];

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlValueId@@output_ip_payload_tready_int to output_ip_payload_tready_int_reg


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/udp_ip_tx_64.v
+++ b/rtl/udp_ip_tx_64.v
@@ -290,7 +290,7 @@ always @* begin
                     output_ip_payload_tdata_int[55:48] = input_udp_checksum[15: 8];
                     output_ip_payload_tdata_int[63:56] = input_udp_checksum[ 7: 0];
                     output_ip_payload_tkeep_int = 8'hff;
-                    frame_ptr_next = 8;
+                    frame_ptr_next = 16'd8;
                     input_udp_payload_tready_next = output_ip_payload_tready_int_early;
                     state_next = STATE_WRITE_PAYLOAD;
                 end

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlValueId@@output_ip_payload_tready_int to output_ip_payload_tready_int_reg


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/udp_ip_tx_64.v
+++ b/rtl/udp_ip_tx_64.v
@@ -300,10 +300,10 @@ always @* begin
         end
         STATE_WRITE_HEADER: begin
             // write header state
-            if (output_ip_payload_tready_int) begin
+            if (output_ip_payload_tready_int_reg) begin
                 // word transfer out
-                frame_ptr_next = frame_ptr_reg+8;
-                output_ip_payload_tvalid_int = 1;
+                frame_ptr_next = frame_ptr_reg + 16'd8;
+                output_ip_payload_tvalid_int = 1'b1;
                 state_next = STATE_WRITE_HEADER;
                 case (frame_ptr_reg)
                     8'h00: begin

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlValueId@@output_ip_payload_tready_int to output_ip_payload_tready_int_reg


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/udp_ip_tx_64.v
+++ b/rtl/udp_ip_tx_64.v
@@ -334,7 +334,7 @@ always @* begin
             output_ip_payload_tlast_int = input_udp_payload_tlast;
             output_ip_payload_tuser_int = input_udp_payload_tuser;
 
-            if (output_ip_payload_tready_int & input_udp_payload_tvalid) begin
+            if (output_ip_payload_tready_int_reg & input_udp_payload_tvalid) begin
                 // word transfer through
                 frame_ptr_next = frame_ptr_reg+keep2count(input_udp_payload_tkeep);
                 if (frame_ptr_next >= udp_length_reg) begin

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@AND to AND
        UPD HdlValueId@@output_ip_payload_tready_int to output_ip_payload_tready_int_reg


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/udp_ip_tx_64.v
+++ b/rtl/udp_ip_tx_64.v
@@ -342,20 +342,20 @@ always @* begin
                     frame_ptr_next = udp_length_reg;
                     output_ip_payload_tkeep_int = count2keep(udp_length_reg - frame_ptr_reg);
                     if (input_udp_payload_tlast) begin
-                        input_udp_payload_tready_next = 0;
+                        input_udp_payload_tready_next = 1'b0;
                         input_udp_hdr_ready_next = ~output_ip_hdr_valid_reg;
                         state_next = STATE_IDLE;
                     end else begin
-                        store_last_word = 1;
-                        output_ip_payload_tvalid_int = 0;
+                        store_last_word = 1'b1;
+                        output_ip_payload_tvalid_int = 1'b0;
                         state_next = STATE_WRITE_PAYLOAD_LAST;
                     end
                 end else begin
                     if (input_udp_payload_tlast) begin
                         // end of frame, but length does not match
-                        error_payload_early_termination_next = 1;
-                        output_ip_payload_tuser_int = 1;
-                        input_udp_payload_tready_next = 0;
+                        error_payload_early_termination_next = 1'b1;
+                        output_ip_payload_tuser_int = 1'b1;
+                        input_udp_payload_tready_next = 1'b0;
                         input_udp_hdr_ready_next = ~output_ip_hdr_valid_reg;
                         state_next = STATE_IDLE;
                     end else begin

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@AND to AND
        UPD HdlValueId@@output_ip_payload_tready_int to output_ip_payload_tready_int_reg


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/eth_axis_rx_64.v
+++ b/rtl/eth_axis_rx_64.v
@@ -124,7 +124,7 @@ reg shift_axis_extra_cycle;
 reg [63:0] output_eth_payload_tdata_int;
 reg [7:0]  output_eth_payload_tkeep_int;
 reg        output_eth_payload_tvalid_int;
-reg        output_eth_payload_tready_int = 0;
+reg        output_eth_payload_tready_int_reg = 1'b0;
 reg        output_eth_payload_tlast_int;
 reg        output_eth_payload_tuser_int;
 wire       output_eth_payload_tready_int_early;

ParseResult:
UPD HdlIdDef@@output_eth_payload_tready_int to output_eth_payload_tready_int_reg


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/eth_axis_rx_64.v
+++ b/rtl/eth_axis_rx_64.v
@@ -252,11 +252,11 @@ always @* begin
             output_eth_payload_tlast_int = shift_axis_tlast;
             output_eth_payload_tuser_int = shift_axis_tuser;
 
-            if (output_eth_payload_tready_int & shift_axis_tvalid) begin
+            if (output_eth_payload_tready_int_reg & shift_axis_tvalid) begin
                 // word transfer through
-                transfer_in_save = 1;
+                transfer_in_save = 1'b1;
                 if (shift_axis_tlast) begin
-                    flush_save = 1;
+                    flush_save = 1'b1;
                     input_axis_tready_next = ~output_eth_hdr_valid_reg;
                     state_next = STATE_IDLE;
                 end else begin

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@AND to AND
        UPD HdlValueId@@output_eth_payload_tready_int to output_eth_payload_tready_int_reg


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/eth_axis_rx_64.v
+++ b/rtl/eth_axis_rx_64.v
@@ -272,18 +272,12 @@ end
 always @(posedge clk) begin
     if (rst) begin
         state_reg <= STATE_IDLE;
-        frame_ptr_reg <= 0;
-        input_axis_tready_reg <= 0;
-        output_eth_hdr_valid_reg <= 0;
-        output_eth_dest_mac_reg <= 0;
-        output_eth_src_mac_reg <= 0;
-        output_eth_type_reg <= 0;
-        save_axis_tdata_reg <= 0;
-        save_axis_tkeep_reg <= 0;
-        save_axis_tlast_reg <= 0;
-        save_axis_tuser_reg <= 0;
-        busy_reg <= 0;
-        error_header_early_termination_reg <= 0;
+        frame_ptr_reg <= 8'd0;
+        input_axis_tready_reg <= 1'b0;
+        output_eth_hdr_valid_reg <= 1'b0;
+        save_axis_tlast_reg <= 1'b0;
+        busy_reg <= 1'b0;
+        error_header_early_termination_reg <= 1'b0;
     end else begin
         state_reg <= state_next;
 

ParseResult:
UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueId: state_next
                HdlValueId: state_reg
            HdlStmAssign
                HdlValueId: frame_ptr_next
                HdlValueId: frame_ptr_reg
            HdlStmAssign
                HdlValueId: input_axis_tready_next
                HdlValueId: input_axis_tready_reg
            HdlStmAssign
                HdlValueId: output_eth_hdr_valid_next
                HdlValueId: output_eth_hdr_valid_reg
            HdlStmAssign
                HdlValueId: error_header_early_termination_next
                HdlValueId: error_header_early_termination_reg
            HdlStmAssign
                HdlOp: NE
                    list: ops
                        HdlValueId: state_next
                        HdlValueId: STATE_IDLE
                HdlValueId: busy_reg
            HdlStmIf
                HdlValueId: store_hdr_word_0
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_axis_tdata
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 7
                                            HdlValueInt: 0
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: output_eth_dest_mac_reg
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 47
                                            HdlValueInt: 40
                        HdlStmAssign
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_axis_tdata
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 15
                                            HdlValueInt: 8
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: output_eth_dest_mac_reg
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 39
                                            HdlValueInt: 32
                        HdlStmAssign
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_axis_tdata
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 23
                                            HdlValueInt: 16
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: output_eth_dest_mac_reg
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 31
                                            HdlValueInt: 24
                        HdlStmAssign
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_axis_tdata
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 31
                                            HdlValueInt: 24
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: output_eth_dest_mac_reg
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 23
                                            HdlValueInt: 16
                        HdlStmAssign
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_axis_tdata
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 39
                                            HdlValueInt: 32
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: output_eth_dest_mac_reg
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 15
                                            HdlValueInt: 8
                        HdlStmAssign
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_axis_tdata
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 47
                                            HdlValueInt: 40
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: output_eth_dest_mac_reg
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 7
                                            HdlValueInt: 0
                        HdlStmAssign
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_axis_tdata
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 55
                                            HdlValueInt: 48
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: output_eth_src_mac_reg
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 47
                                            HdlValueInt: 40
                        HdlStmAssign
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_axis_tdata
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 63
                                            HdlValueInt: 56
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: output_eth_src_mac_reg
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 39
                                            HdlValueInt: 32
                list: elifs
            HdlStmIf
                HdlValueId: store_hdr_word_1
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_axis_tdata
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 7
                                            HdlValueInt: 0
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: output_eth_src_mac_reg
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 31
                                            HdlValueInt: 24
                        HdlStmAssign
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_axis_tdata
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 15
                                            HdlValueInt: 8
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: output_eth_src_mac_reg
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 23
                                            HdlValueInt: 16
                        HdlStmAssign
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_axis_tdata
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 23
                                            HdlValueInt: 16
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: output_eth_src_mac_reg
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 15
                                            HdlValueInt: 8
                        HdlStmAssign
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_axis_tdata
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 31
                                            HdlValueInt: 24
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: output_eth_src_mac_reg
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 7
                                            HdlValueInt: 0
                        HdlStmAssign
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_axis_tdata
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 39
                                            HdlValueInt: 32
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: output_eth_type_reg
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 15
                                            HdlValueInt: 8
                        HdlStmAssign
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_axis_tdata
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 47
                                            HdlValueInt: 40
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: output_eth_type_reg
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 7
                                            HdlValueInt: 0
                list: elifs
            HdlStmIf
                HdlValueId: flush_save
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: save_axis_tdata_reg
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: save_axis_tkeep_reg
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: save_axis_tlast_reg
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: save_axis_tuser_reg
                list: elifs
                    tuple
                        HdlValueId: transfer_in_save
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueId: input_axis_tdata
                                    HdlValueId: save_axis_tdata_reg
                                HdlStmAssign
                                    HdlValueId: input_axis_tkeep
                                    HdlValueId: save_axis_tkeep_reg
                                HdlStmAssign
                                    HdlValueId: input_axis_tlast
                                    HdlValueId: save_axis_tlast_reg
                                HdlStmAssign
                                    HdlValueId: input_axis_tuser
                                    HdlValueId: save_axis_tuser_reg
    MOV HdlValueId@@rst to 
    HdlValueId: rst
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueId: STATE_IDLE
                HdlValueId: state_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: frame_ptr_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: input_axis_tready_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: output_eth_hdr_valid_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: output_eth_dest_mac_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: output_eth_src_mac_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: output_eth_type_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: save_axis_tdata_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: save_axis_tkeep_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: save_axis_tlast_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: save_axis_tuser_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: busy_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: error_header_early_termination_reg
    MOV list@@elifs to 
    list: elifs

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: state_next
    HdlValueId: state_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: output_eth_dest_mac_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: output_eth_src_mac_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: output_eth_type_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: save_axis_tdata_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: save_axis_tkeep_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: save_axis_tuser_reg

DEL HdlStmIf@@ from body

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/arp.v
+++ b/rtl/arp.v
@@ -422,6 +408,14 @@ always @(posedge clk) begin
         arp_response_broadcast_reg <= arp_response_broadcast_next;
         drop_incoming_frame_reg <= drop_incoming_frame_next;
     end
+
+    outgoing_eth_dest_mac_reg <= outgoing_eth_dest_mac_next;
+    outgoing_arp_oper_reg <= outgoing_arp_oper_next;
+    outgoing_arp_tha_reg <= outgoing_arp_tha_next;
+    outgoing_arp_tpa_reg <= outgoing_arp_tpa_next;
+    cache_write_request_mac_reg <= cache_write_request_mac_next;
+    cache_write_request_ip_reg <= cache_write_request_ip_next;
+    arp_request_ip_reg <= arp_request_ip_next;
 end
 
 endmodule
ParseResult:
UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueId: outgoing_frame_valid_next
                HdlValueId: outgoing_frame_valid_reg
            HdlStmAssign
                HdlValueId: outgoing_eth_dest_mac_next
                HdlValueId: outgoing_eth_dest_mac_reg
            HdlStmAssign
                HdlValueId: outgoing_arp_oper_next
                HdlValueId: outgoing_arp_oper_reg
            HdlStmAssign
                HdlValueId: outgoing_arp_tha_next
                HdlValueId: outgoing_arp_tha_reg
            HdlStmAssign
                HdlValueId: outgoing_arp_tpa_next
                HdlValueId: outgoing_arp_tpa_reg
            HdlStmAssign
                HdlValueId: cache_write_request_valid_next
                HdlValueId: cache_write_request_valid_reg
            HdlStmAssign
                HdlValueId: cache_write_request_mac_next
                HdlValueId: cache_write_request_mac_reg
            HdlStmAssign
                HdlValueId: cache_write_request_ip_next
                HdlValueId: cache_write_request_ip_reg
            HdlStmAssign
                HdlValueId: arp_request_valid_next
                HdlValueId: arp_request_valid_reg
            HdlStmAssign
                HdlValueId: arp_request_ip_next
                HdlValueId: arp_request_ip_reg
            HdlStmAssign
                HdlValueId: arp_request_operation_next
                HdlValueId: arp_request_operation_reg
            HdlStmAssign
                HdlValueId: arp_request_retry_cnt_next
                HdlValueId: arp_request_retry_cnt_reg
            HdlStmAssign
                HdlValueId: arp_request_timer_next
                HdlValueId: arp_request_timer_reg
            HdlStmAssign
                HdlValueId: arp_response_error_next
                HdlValueId: arp_response_error_reg
            HdlStmAssign
                HdlValueId: arp_response_broadcast_next
                HdlValueId: arp_response_broadcast_reg
            HdlStmAssign
                HdlValueId: drop_incoming_frame_next
                HdlValueId: drop_incoming_frame_reg

MOV HdlStmIf@@ to body
HdlStmIf
    HdlValueId: rst
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: outgoing_frame_valid_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: outgoing_eth_dest_mac_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: outgoing_arp_oper_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: outgoing_arp_tha_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: outgoing_arp_tpa_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: cache_write_request_valid_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: cache_write_request_mac_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: cache_write_request_ip_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: arp_request_valid_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: arp_request_ip_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: arp_request_operation_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: arp_request_retry_cnt_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: arp_request_timer_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: arp_response_error_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: arp_response_broadcast_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: drop_incoming_frame_reg
    list: elifs
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueId: outgoing_frame_valid_next
                HdlValueId: outgoing_frame_valid_reg
            HdlStmAssign
                HdlValueId: outgoing_eth_dest_mac_next
                HdlValueId: outgoing_eth_dest_mac_reg
            HdlStmAssign
                HdlValueId: outgoing_arp_oper_next
                HdlValueId: outgoing_arp_oper_reg
            HdlStmAssign
                HdlValueId: outgoing_arp_tha_next
                HdlValueId: outgoing_arp_tha_reg
            HdlStmAssign
                HdlValueId: outgoing_arp_tpa_next
                HdlValueId: outgoing_arp_tpa_reg
            HdlStmAssign
                HdlValueId: cache_write_request_valid_next
                HdlValueId: cache_write_request_valid_reg
            HdlStmAssign
                HdlValueId: cache_write_request_mac_next
                HdlValueId: cache_write_request_mac_reg
            HdlStmAssign
                HdlValueId: cache_write_request_ip_next
                HdlValueId: cache_write_request_ip_reg
            HdlStmAssign
                HdlValueId: arp_request_valid_next
                HdlValueId: arp_request_valid_reg
            HdlStmAssign
                HdlValueId: arp_request_ip_next
                HdlValueId: arp_request_ip_reg
            HdlStmAssign
                HdlValueId: arp_request_operation_next
                HdlValueId: arp_request_operation_reg
            HdlStmAssign
                HdlValueId: arp_request_retry_cnt_next
                HdlValueId: arp_request_retry_cnt_reg
            HdlStmAssign
                HdlValueId: arp_request_timer_next
                HdlValueId: arp_request_timer_reg
            HdlStmAssign
                HdlValueId: arp_response_error_next
                HdlValueId: arp_response_error_reg
            HdlStmAssign
                HdlValueId: arp_response_broadcast_next
                HdlValueId: arp_response_broadcast_reg
            HdlStmAssign
                HdlValueId: drop_incoming_frame_next
                HdlValueId: drop_incoming_frame_reg

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: arp_response_broadcast_next
    HdlValueId: arp_response_broadcast_reg

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: drop_incoming_frame_next
    HdlValueId: drop_incoming_frame_reg

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 


CommitId: 51b5335318c83e2662a0edb768b05ac7cbcd6603
Remove z from default states for FSM inference
--- a/rtl/udp_ip_tx_64.v
+++ b/rtl/udp_ip_tx_64.v
@@ -247,7 +247,7 @@ function [7:0] count2keep;
 endfunction
 
 always @* begin
-    state_next = 2'bz;
+    state_next = STATE_IDLE;
 
     input_udp_hdr_ready_next = 0;
     input_udp_payload_tready_next = 0;
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueId@@STATE_IDLE to ops

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            DEL HdlValueInt@@z from ops


CommitId: 7a9fdb5fc34ca0fa33a20e338c8f0a84cd4f8f96
Add default case statements to avoid inferring latches
--- a/rtl/axis_demux_4.v
+++ b/rtl/axis_demux_4.v
@@ -116,6 +116,10 @@ always @* begin
             current_output_tvalid = output_3_axis_tvalid;
             current_output_tready = output_3_axis_tready;
         end
+        default: begin
+            current_output_tvalid = 1'b0;
+            current_output_tready = 1'b0;
+        end
     endcase
 end
 
ParseResult:
UPD HdlStmCase@@select_reg to select_reg
    INS HdlStmBlock@@SEQ to select_reg
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_output_tvalid
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_output_tready
                    HdlValueInt: 0


CommitId: 585ccefa1534cba00ee915f54baf491a0b49df82
Add TX underflow error signal
--- a/rtl/eth_mac_10g.v
+++ b/rtl/eth_mac_10g.v
@@ -76,6 +76,7 @@ module eth_mac_10g #
      */
     output wire                  tx_start_packet_0,
     output wire                  tx_start_packet_4,
+    output wire                  tx_error_underflow,
     output wire                  rx_start_packet_0,
     output wire                  rx_start_packet_4,
     output wire                  rx_error_bad_frame,

ParseResult:
INS HdlIdDef@@tx_error_underflow to ports
HdlIdDef: tx_error_underflow
    HdlDirection: OUT


CommitId: fb4abb6b39fe1536162dfdc41d3cf64beb8fa834
Fix widths
--- a/rtl/arp_eth_tx_64.v
+++ b/rtl/arp_eth_tx_64.v
@@ -282,13 +282,13 @@ always @(posedge clk) begin
 end
 
 // output datapath logic
-reg [64:0] m_eth_payload_axis_tdata_reg = 64'd0;
+reg [63:0] m_eth_payload_axis_tdata_reg = 64'd0;
 reg [7:0]  m_eth_payload_axis_tkeep_reg = 8'd0;
 reg        m_eth_payload_axis_tvalid_reg = 1'b0, m_eth_payload_axis_tvalid_next;
 reg        m_eth_payload_axis_tlast_reg = 1'b0;
 reg        m_eth_payload_axis_tuser_reg = 1'b0;
 
-reg [64:0] temp_m_eth_payload_axis_tdata_reg = 64'd0;
+reg [63:0] temp_m_eth_payload_axis_tdata_reg = 64'd0;
 reg [7:0]  temp_m_eth_payload_axis_tkeep_reg = 8'd0;
 reg        temp_m_eth_payload_axis_tvalid_reg = 1'b0, temp_m_eth_payload_axis_tvalid_next;
 reg        temp_m_eth_payload_axis_tlast_reg = 1'b0;
ParseResult:
INS HdlIdDef@@m_eth_payload_axis_tdata_reg to objs
HdlIdDef: m_eth_payload_axis_tdata_reg
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 63
                    HdlValueInt: 0
    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@temp_m_eth_payload_axis_tdata_reg to objs
HdlIdDef: temp_m_eth_payload_axis_tdata_reg
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 63
                    HdlValueInt: 0
    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@m_eth_payload_axis_tdata_reg from objs
HdlIdDef: m_eth_payload_axis_tdata_reg
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 64
                    HdlValueInt: 0
    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@temp_m_eth_payload_axis_tdata_reg from objs
HdlIdDef: temp_m_eth_payload_axis_tdata_reg
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 64
                    HdlValueInt: 0
    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 85d11645eb5af7f9dcba37417b121315ca18e4d7
Rename frame_error to error_header_early_termination
--- a/rtl/arp_eth_rx_64.v
+++ b/rtl/arp_eth_rx_64.v
@@ -71,7 +71,7 @@ module arp_eth_rx_64
      * Status signals
      */
     output wire        busy,
-    output wire        frame_error
+    output wire        error_header_early_termination
 );
 
 /*

ParseResult:
UPD HdlIdDef@@frame_error to error_header_early_termination


CommitId: 85d11645eb5af7f9dcba37417b121315ca18e4d7
Rename frame_error to error_header_early_termination
--- a/rtl/arp_eth_rx_64.v
+++ b/rtl/arp_eth_rx_64.v
@@ -132,7 +132,7 @@ reg [47:0] output_arp_tha_reg = 0;
 reg [31:0] output_arp_tpa_reg = 0;
 
 reg busy_reg = 0;
-reg frame_error_reg = 0, frame_error_next;
+reg error_header_early_termination_reg = 0, error_header_early_termination_next;
 
 assign input_eth_hdr_ready = input_eth_hdr_ready_reg;
 assign input_eth_payload_tready = input_eth_payload_tready_reg;

ParseResult:
UPD HdlIdDef@@frame_error_reg to error_header_early_termination_reg

UPD HdlIdDef@@frame_error_next to error_header_early_termination_next


CommitId: 85d11645eb5af7f9dcba37417b121315ca18e4d7
Rename frame_error to error_header_early_termination
--- a/rtl/arp_eth_rx_64.v
+++ b/rtl/arp_eth_rx_64.v
@@ -152,7 +152,7 @@ assign output_arp_tha = output_arp_tha_reg;
 assign output_arp_tpa = output_arp_tpa_reg;
 
 assign busy = busy_reg;
-assign frame_error = frame_error_reg;
+assign error_header_early_termination = error_header_early_termination_reg;
 
 always @* begin
     state_next = 2'bz;

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: error_header_early_termination_reg
    HdlValueId: error_header_early_termination

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@frame_error_next to error_header_early_termination_next

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: frame_error_reg
    HdlValueId: frame_error


CommitId: 85d11645eb5af7f9dcba37417b121315ca18e4d7
Rename frame_error to error_header_early_termination
--- a/rtl/arp_eth_rx_64.v
+++ b/rtl/arp_eth_rx_64.v
@@ -167,7 +167,7 @@ always @* begin
 
     output_frame_valid_next = output_frame_valid_reg & ~output_frame_ready;
 
-    frame_error_next = 0;
+    error_header_early_termination_next = 0;
 
     case (state_reg)
         STATE_IDLE: begin

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@frame_error_next to error_header_early_termination_next


CommitId: 85d11645eb5af7f9dcba37417b121315ca18e4d7
Rename frame_error to error_header_early_termination
--- a/rtl/arp_eth_rx_64.v
+++ b/rtl/arp_eth_rx_64.v
@@ -201,7 +201,7 @@ always @* begin
                 if (input_eth_payload_tlast) begin
                     state_next = STATE_IDLE;
                     if (frame_ptr_reg != 8'h03 | (input_eth_payload_tkeep & 8'h0F) != 8'h0F) begin
-                        frame_error_next = 1;
+                        error_header_early_termination_next = 1;
                     end
                 end
             end else begin

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@frame_error_next to error_header_early_termination_next

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@frame_error_next to error_header_early_termination_next


CommitId: 85d11645eb5af7f9dcba37417b121315ca18e4d7
Rename frame_error to error_header_early_termination
--- a/rtl/arp_eth_rx_64.v
+++ b/rtl/arp_eth_rx_64.v
@@ -235,7 +235,7 @@ always @(posedge clk or posedge rst) begin
         output_eth_src_mac_reg <= 0;
         output_eth_type_reg <= 0;
         busy_reg <= 0;
-        frame_error_reg <= 0;
+        error_header_early_termination_reg <= 0;
     end else begin
         state_reg <= state_next;
 

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlValueId@@frame_error_reg to error_header_early_termination_reg


CommitId: 85d11645eb5af7f9dcba37417b121315ca18e4d7
Rename frame_error to error_header_early_termination
--- a/rtl/arp_eth_rx_64.v
+++ b/rtl/arp_eth_rx_64.v
@@ -243,7 +243,7 @@ always @(posedge clk or posedge rst) begin
 
         output_frame_valid_reg <= output_frame_valid_next;
 
-        frame_error_reg <= frame_error_next;
+        error_header_early_termination_reg <= error_header_early_termination_next;
 
         busy_reg <= state_next != STATE_IDLE;
 
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlValueId@@frame_error_next to error_header_early_termination_next
    UPD HdlValueId@@frame_error_reg to error_header_early_termination_reg


CommitId: 585ccefa1534cba00ee915f54baf491a0b49df82
Add TX underflow error signal
--- a/rtl/eth_mac_1g_gmii.v
+++ b/rtl/eth_mac_1g_gmii.v
@@ -86,6 +86,7 @@ module eth_mac_1g_gmii #
     /*
      * Status
      */
+    output wire        tx_error_underflow,
     output wire        rx_error_bad_frame,
     output wire        rx_error_bad_fcs,
     output wire [1:0]  speed,

ParseResult:
INS HdlIdDef@@tx_error_underflow to ports
HdlIdDef: tx_error_underflow
    HdlDirection: OUT


CommitId: 0fc986041e9a936aaa3c21c0d54c2a669316995b
Fix example design LED logic
--- a/example/HXT100G/fpga/rtl/fpga_core.v
+++ b/example/HXT100G/fpga/rtl/fpga_core.v
@@ -410,9 +410,14 @@ always @(posedge clk) begin
     if (rst) begin
         led_reg <= 0;
     end else begin
-        valid_last <= tx_udp_payload_tvalid;
-        if (tx_udp_payload_tvalid & ~valid_last) begin
-            led_reg <= tx_udp_payload_tdata;
+        if (tx_udp_payload_tvalid) begin
+            if (~valid_last) begin
+                led_reg <= tx_udp_payload_tdata;
+                valid_last <= 1'b1;
+            end
+            if (tx_udp_payload_tlast) begin
+                valid_last <= 1'b0;
+            end
         end
     end
 end
ParseResult:
UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

INS HdlStmIf@@ to body

UPD HdlStmAssign@@ to 
    MOV HdlValueId@@tx_udp_payload_tvalid to 
    HdlValueId: tx_udp_payload_tvalid
    DEL HdlValueId@@valid_last from 

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueId: tx_udp_payload_tvalid
                HdlValueId: valid_last
            HdlStmIf
                HdlOp: AND
                    list: ops
                        HdlValueId: tx_udp_payload_tvalid
                        HdlOp: NEG
                            list: ops
                                HdlValueId: valid_last
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueId: tx_udp_payload_tdata
                            HdlValueId: led_reg
                list: elifs

UPD HdlStmIf@@ to 
    INS list@@elifs to 

INS HdlStmIf@@ to body
HdlStmIf
    HdlValueId: tx_udp_payload_tlast
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: valid_last
    list: elifs

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND to AND
        MOV HdlOp@@NEG to ops
        HdlOp: NEG
            list: ops
                HdlValueId: valid_last
        DEL HdlValueId@@tx_udp_payload_tvalid from ops
        DEL list@@ops from AND
    DEL HdlOp@@AND from 

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 1
    HdlValueId: valid_last

DEL HdlStmAssign@@ from body


CommitId: 0d22a35bd855a7f08b34a3f1c24ebb143289d91d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_tap_64.v
+++ b/rtl/axis_tap_64.v
@@ -63,7 +63,7 @@ module axis_tap_64 #
 reg [DATA_WIDTH-1:0] output_axis_tdata_int;
 reg [KEEP_WIDTH-1:0] output_axis_tkeep_int;
 reg                  output_axis_tvalid_int;
-reg                  output_axis_tready_int = 0;
+reg                  output_axis_tready_int_reg = 1'b0;
 reg                  output_axis_tlast_int;
 reg                  output_axis_tuser_int;
 wire                 output_axis_tready_int_early;

ParseResult:
UPD HdlIdDef@@output_axis_tready_int to output_axis_tready_int_reg


CommitId: 0d22a35bd855a7f08b34a3f1c24ebb143289d91d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_tap_64.v
+++ b/rtl/axis_tap_64.v
@@ -76,18 +76,18 @@ localparam [1:0]
 
 reg [1:0] state_reg = STATE_IDLE, state_next;
 
-reg frame_reg = 0, frame_next;
+reg frame_reg = 1'b0, frame_next;
 
 always @* begin
     state_next = STATE_IDLE;
 
     frame_next = frame_reg;
 
-    output_axis_tdata_int = 0;
-    output_axis_tkeep_int = 0;
-    output_axis_tvalid_int = 0;
-    output_axis_tlast_int = 0;
-    output_axis_tuser_int = 0;
+    output_axis_tdata_int = {DATA_WIDTH{1'b0}};
+    output_axis_tkeep_int = {KEEP_WIDTH{1'b0}};
+    output_axis_tvalid_int = 1'b0;
+    output_axis_tlast_int = 1'b0;
+    output_axis_tuser_int = 1'b0;
 
     if (tap_axis_tready & tap_axis_tvalid) begin
         frame_next = ~tap_axis_tlast;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@REPL_CONCAT to ops
            UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                INS list@@ops to REPL_CONCAT
                INS HdlValueId@@DATA_WIDTH to ops
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@REPL_CONCAT to ops
            UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                INS list@@ops to REPL_CONCAT
                INS HdlValueId@@KEEP_WIDTH to ops

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlValueInt@@0 to ops
            HdlValueInt: 0
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlValueInt@@0 to ops
            HdlValueInt: 0


CommitId: 0d22a35bd855a7f08b34a3f1c24ebb143289d91d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_tap_64.v
+++ b/rtl/axis_tap_64.v
@@ -97,7 +97,7 @@ always @* begin
         STATE_IDLE: begin
             if (tap_axis_tready & tap_axis_tvalid) begin
                 // start of frame
-                if (output_axis_tready_int) begin
+                if (output_axis_tready_int_reg) begin
                     output_axis_tdata_int = tap_axis_tdata;
                     output_axis_tkeep_int = tap_axis_tkeep;
                     output_axis_tvalid_int = tap_axis_tvalid & tap_axis_tready;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@REPL_CONCAT to ops
            UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                INS list@@ops to REPL_CONCAT
                INS HdlValueId@@DATA_WIDTH to ops
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@REPL_CONCAT to ops
            UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                INS list@@ops to REPL_CONCAT
                INS HdlValueId@@KEEP_WIDTH to ops

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlValueInt@@0 to ops
            HdlValueInt: 0
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlValueInt@@0 to ops
            HdlValueInt: 0

UPD HdlStmIf@@ to 
    UPD HdlValueId@@output_axis_tready_int to output_axis_tready_int_reg


CommitId: 0d22a35bd855a7f08b34a3f1c24ebb143289d91d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_tap_64.v
+++ b/rtl/axis_tap_64.v
@@ -118,7 +118,7 @@ always @* begin
         STATE_TRANSFER: begin
             if (tap_axis_tready & tap_axis_tvalid) begin
                 // transfer data
-                if (output_axis_tready_int) begin
+                if (output_axis_tready_int_reg) begin
                     output_axis_tdata_int = tap_axis_tdata;
                     output_axis_tkeep_int = tap_axis_tkeep;
                     output_axis_tvalid_int = tap_axis_tvalid & tap_axis_tready;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@REPL_CONCAT to ops
            UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                INS list@@ops to REPL_CONCAT
                INS HdlValueId@@DATA_WIDTH to ops
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@REPL_CONCAT to ops
            UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                INS list@@ops to REPL_CONCAT
                INS HdlValueId@@KEEP_WIDTH to ops

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlValueInt@@0 to ops
            HdlValueInt: 0
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlValueInt@@0 to ops
            HdlValueInt: 0

UPD HdlStmIf@@ to 
    UPD HdlValueId@@output_axis_tready_int to output_axis_tready_int_reg


CommitId: 0d22a35bd855a7f08b34a3f1c24ebb143289d91d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_tap_64.v
+++ b/rtl/axis_tap_64.v
@@ -137,12 +137,12 @@ always @* begin
             end
         end
         STATE_TRUNCATE: begin
-            if (output_axis_tready_int) begin
-                output_axis_tdata_int = 0;
-                output_axis_tkeep_int = 1;
-                output_axis_tvalid_int = 1;
-                output_axis_tlast_int = 1;
-                output_axis_tuser_int = 1;
+            if (output_axis_tready_int_reg) begin
+                output_axis_tdata_int = {DATA_WIDTH{1'b0}};
+                output_axis_tkeep_int = {{KEEP_WIDTH-1{1'b0}}, 1'b1};
+                output_axis_tvalid_int = 1'b1;
+                output_axis_tlast_int = 1'b1;
+                output_axis_tuser_int = 1'b1;
                 if (frame_next) begin
                     state_next = STATE_WAIT;
                 end else begin

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@REPL_CONCAT to ops
            UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                INS list@@ops to REPL_CONCAT
                INS HdlValueId@@DATA_WIDTH to ops
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@REPL_CONCAT to ops
            UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                INS list@@ops to REPL_CONCAT
                INS HdlValueId@@KEEP_WIDTH to ops

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlValueInt@@0 to ops
            HdlValueInt: 0
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlValueInt@@0 to ops
            HdlValueInt: 0

UPD HdlStmIf@@ to 
    UPD HdlValueId@@output_axis_tready_int to output_axis_tready_int_reg
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlValueInt@@0 to ops
            HdlValueInt: 0
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlValueInt@@1 to ops
            HdlValueInt: 1

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@REPL_CONCAT to ops
            UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                INS list@@ops to REPL_CONCAT
                INS HdlValueId@@DATA_WIDTH to ops
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@CONCAT to ops
            UPD HdlOp@@CONCAT to CONCAT
                INS list@@ops to CONCAT
                INS HdlOp@@REPL_CONCAT to ops
                INS HdlValueInt@@1 to ops
                UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                    INS list@@ops to REPL_CONCAT
                    INS HdlOp@@SUB to ops
                    INS HdlValueInt@@0 to ops
                    UPD HdlOp@@SUB to SUB
                        INS list@@ops to SUB
                        INS HdlValueId@@KEEP_WIDTH to ops


CommitId: 0d22a35bd855a7f08b34a3f1c24ebb143289d91d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_tap_64.v
+++ b/rtl/axis_tap_64.v
@@ -169,7 +169,7 @@ end
 always @(posedge clk) begin
     if (rst) begin
         state_reg <= STATE_IDLE;
-        frame_reg <= 0;
+        frame_reg <= 1'b0;
     end else begin
         state_reg <= state_next;
         frame_reg <= frame_next;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@REPL_CONCAT to ops
            UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                INS list@@ops to REPL_CONCAT
                INS HdlValueId@@DATA_WIDTH to ops
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@REPL_CONCAT to ops
            UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                INS list@@ops to REPL_CONCAT
                INS HdlValueId@@KEEP_WIDTH to ops


CommitId: 0d22a35bd855a7f08b34a3f1c24ebb143289d91d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_tap_64.v
+++ b/rtl/axis_tap_64.v
@@ -177,17 +177,22 @@ always @(posedge clk) begin
 end
 
 // output datapath logic
-reg [DATA_WIDTH-1:0] output_axis_tdata_reg = 0;
-reg [KEEP_WIDTH-1:0] output_axis_tkeep_reg = 0;
-reg                  output_axis_tvalid_reg = 0;
-reg                  output_axis_tlast_reg = 0;
-reg                  output_axis_tuser_reg = 0;
-
-reg [DATA_WIDTH-1:0] temp_axis_tdata_reg = 0;
-reg [KEEP_WIDTH-1:0] temp_axis_tkeep_reg = 0;
-reg                  temp_axis_tvalid_reg = 0;
-reg                  temp_axis_tlast_reg = 0;
-reg                  temp_axis_tuser_reg = 0;
+reg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};
+reg [KEEP_WIDTH-1:0] output_axis_tkeep_reg = {KEEP_WIDTH{1'b0}};
+reg                  output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;
+reg                  output_axis_tlast_reg = 1'b0;
+reg                  output_axis_tuser_reg = 1'b0;
+
+reg [DATA_WIDTH-1:0] temp_axis_tdata_reg = {DATA_WIDTH{1'b0}};
+reg [KEEP_WIDTH-1:0] temp_axis_tkeep_reg = {KEEP_WIDTH{1'b0}};
+reg                  temp_axis_tvalid_reg = 1'b0, temp_axis_tvalid_next;
+reg                  temp_axis_tlast_reg = 1'b0;
+reg                  temp_axis_tuser_reg = 1'b0;
+
+// datapath control
+reg store_axis_int_to_output;
+reg store_axis_int_to_temp;
+reg store_axis_temp_to_output;
 
 assign output_axis_tdata = output_axis_tdata_reg;
 assign output_axis_tkeep = output_axis_tkeep_reg;

ParseResult:
INS HdlIdDef@@output_axis_tvalid_next to objs
HdlIdDef: output_axis_tvalid_next
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL

INS HdlIdDef@@temp_axis_tvalid_next to objs
HdlIdDef: temp_axis_tvalid_next
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL

INS HdlIdDef@@store_axis_int_to_output to objs
HdlIdDef: store_axis_int_to_output
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL

INS HdlIdDef@@store_axis_int_to_temp to objs
HdlIdDef: store_axis_int_to_temp
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL

INS HdlIdDef@@store_axis_temp_to_output to objs
HdlIdDef: store_axis_temp_to_output
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL

UPD HdlIdDef@@output_axis_tdata_reg to output_axis_tdata_reg
    INS HdlOp@@REPL_CONCAT to output_axis_tdata_reg
    UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
        INS list@@ops to REPL_CONCAT
        INS HdlValueId@@DATA_WIDTH to ops

UPD HdlIdDef@@output_axis_tkeep_reg to output_axis_tkeep_reg
    INS HdlOp@@REPL_CONCAT to output_axis_tkeep_reg
    UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
        INS list@@ops to REPL_CONCAT
        INS HdlValueId@@KEEP_WIDTH to ops

UPD HdlIdDef@@temp_axis_tdata_reg to temp_axis_tdata_reg
    INS HdlOp@@REPL_CONCAT to temp_axis_tdata_reg
    UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
        INS list@@ops to REPL_CONCAT
        INS HdlValueId@@DATA_WIDTH to ops

UPD HdlIdDef@@temp_axis_tkeep_reg to temp_axis_tkeep_reg
    INS HdlOp@@REPL_CONCAT to temp_axis_tkeep_reg
    UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
        INS list@@ops to REPL_CONCAT
        INS HdlValueId@@KEEP_WIDTH to ops

UPD HdlIdDef@@output_axis_tdata_reg to output_axis_tdata_reg
    MOV HdlValueInt@@0 to output_axis_tdata_reg
    HdlValueInt: 0

UPD HdlIdDef@@output_axis_tkeep_reg to output_axis_tkeep_reg
    MOV HdlValueInt@@0 to output_axis_tkeep_reg
    HdlValueInt: 0

UPD HdlIdDef@@temp_axis_tdata_reg to temp_axis_tdata_reg
    MOV HdlValueInt@@0 to temp_axis_tdata_reg
    HdlValueInt: 0

UPD HdlIdDef@@temp_axis_tkeep_reg to temp_axis_tkeep_reg
    MOV HdlValueInt@@0 to temp_axis_tkeep_reg
    HdlValueInt: 0


CommitId: 385c9cc90ade29878d45e6634e2c70ce85d6d6d5
Fix Vivado block RAM inference
--- a/rtl/axis_async_fifo_64.v
+++ b/rtl/axis_async_fifo_64.v
@@ -82,12 +82,10 @@ reg output_rst_sync2_reg = 1'b1;
 reg output_rst_sync3_reg = 1'b1;
 
 reg [DATA_WIDTH+KEEP_WIDTH+2-1:0] mem[(2**ADDR_WIDTH)-1:0];
+reg [DATA_WIDTH+KEEP_WIDTH+2-1:0] mem_read_data_reg = {DATA_WIDTH+2{1'b0}};
+wire [DATA_WIDTH+KEEP_WIDTH+2-1:0] mem_write_data;
 
-reg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};
-reg [KEEP_WIDTH-1:0] output_axis_tkeep_reg = {KEEP_WIDTH{1'b0}};
 reg output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;
-reg output_axis_tlast_reg = 1'b0;
-reg output_axis_tuser_reg = 1'b0;
 
 // full when first TWO MSBs do NOT match, but rest matches
 // (gray code equivalent of first MSB different but rest same)

ParseResult:
UPD HdlIdDef@@output_axis_tdata_reg to mem_read_data_reg

UPD HdlIdDef@@output_axis_tkeep_reg to mem_write_data

UPD HdlIdDef@@mem_read_data_reg to mem_read_data_reg
    UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
        INS HdlOp@@ADD to ops
        UPD HdlOp@@ADD to ADD
            INS list@@ops to ADD
            INS HdlValueInt@@2 to ops
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlOp@@SUB to SUB
                INS HdlOp@@ADD to ops
                UPD HdlOp@@ADD to ADD
                    INS list@@ops to ADD
                    INS HdlOp@@ADD to ops
                    INS HdlValueInt@@2 to ops
                    UPD HdlOp@@ADD to ADD
                        INS list@@ops to ADD
                        INS HdlValueId@@KEEP_WIDTH to ops

UPD HdlIdDef@@output_axis_tkeep_reg to output_axis_tkeep_reg
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlValueId@@reg to wire
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlOp@@SUB to SUB
                MOV HdlValueId@@KEEP_WIDTH to ops
                HdlValueId: KEEP_WIDTH
    DEL HdlOp@@REPL_CONCAT from output_axis_tkeep_reg
    HdlOp: REPL_CONCAT
        list: ops
            HdlValueId: KEEP_WIDTH
            HdlValueInt: 0

UPD HdlIdDef@@output_axis_tdata_reg to output_axis_tdata_reg
    UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
        MOV HdlValueId@@DATA_WIDTH to ops
        HdlValueId: DATA_WIDTH
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlOp@@SUB to SUB
                MOV HdlValueId@@DATA_WIDTH to ops
                HdlValueId: DATA_WIDTH

UPD HdlIdDef@@mem_write_data to mem_write_data
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlOp@@SUB to SUB
                INS HdlOp@@ADD to ops
                UPD HdlOp@@ADD to ADD
                    INS list@@ops to ADD
                    INS HdlOp@@ADD to ops
                    INS HdlValueInt@@2 to ops
                    UPD HdlOp@@ADD to ADD
                        INS list@@ops to ADD
                        INS HdlValueId@@DATA_WIDTH to ops

DEL HdlIdDef@@output_axis_tlast_reg from objs
HdlIdDef: output_axis_tlast_reg
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@output_axis_tuser_reg from objs
HdlIdDef: output_axis_tuser_reg
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 385c9cc90ade29878d45e6634e2c70ce85d6d6d5
Fix Vivado block RAM inference
--- a/rtl/axis_async_fifo_64.v
+++ b/rtl/axis_async_fifo_64.v
@@ -103,11 +101,10 @@ reg read;
 
 assign input_axis_tready = ~full & ~input_rst_sync3_reg;
 
-assign output_axis_tdata = output_axis_tdata_reg;
-assign output_axis_tkeep = output_axis_tkeep_reg;
 assign output_axis_tvalid = output_axis_tvalid_reg;
-assign output_axis_tlast = output_axis_tlast_reg;
-assign output_axis_tuser = output_axis_tuser_reg;
+
+assign mem_write_data = {input_axis_tlast, input_axis_tuser, input_axis_tkeep, input_axis_tdata};
+assign {output_axis_tlast, output_axis_tuser, output_axis_tkeep, output_axis_tdata} = mem_read_data_reg;
 
 // reset synchronization
 always @(posedge input_clk or posedge async_rst) begin

ParseResult:
INS HdlStmAssign@@ to objs

INS HdlStmAssign@@ to objs

UPD HdlStmAssign@@ to 
    INS HdlValueId@@mem_write_data to 

UPD HdlStmAssign@@ to 
    INS HdlValueId@@mem_read_data_reg to 
    INS HdlOp@@CONCAT to 
    UPD HdlOp@@CONCAT to CONCAT
        INS list@@ops to CONCAT
        INS HdlOp@@CONCAT to ops
        UPD HdlOp@@CONCAT to CONCAT
            INS list@@ops to CONCAT
            INS HdlOp@@CONCAT to ops
            UPD HdlOp@@CONCAT to CONCAT
                INS list@@ops to CONCAT

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@output_axis_tuser to output_axis_tdata
    MOV HdlValueId@@output_axis_tuser to 
    HdlValueId: output_axis_tuser
    UPD HdlValueId@@output_axis_tuser_reg to output_axis_tkeep
    MOV HdlValueId@@output_axis_tuser_reg to 
    HdlValueId: output_axis_tuser_reg

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@output_axis_tlast_reg to output_axis_tlast
    MOV HdlValueId@@output_axis_tlast_reg to 
    HdlValueId: output_axis_tlast_reg
    UPD HdlValueId@@output_axis_tlast to output_axis_tuser
    MOV HdlValueId@@output_axis_tlast to 
    HdlValueId: output_axis_tlast

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: output_axis_tdata_reg
    HdlValueId: output_axis_tdata

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: output_axis_tkeep_reg
    HdlValueId: output_axis_tkeep

DEL HdlStmAssign@@ from objs

DEL HdlStmAssign@@ from objs


CommitId: 385c9cc90ade29878d45e6634e2c70ce85d6d6d5
Fix Vivado block RAM inference
--- a/rtl/axis_async_fifo_64.v
+++ b/rtl/axis_async_fifo_64.v
@@ -162,7 +159,7 @@ always @(posedge input_clk) begin
     end
 
     if (write) begin
-        mem[wr_ptr_reg[ADDR_WIDTH-1:0]] <= {input_axis_tlast, input_axis_tuser, input_axis_tkeep, input_axis_tdata};
+        mem[wr_ptr_reg[ADDR_WIDTH-1:0]] <= mem_write_data;
     end
 end
 

ParseResult:
UPD HdlStmAssign@@ to 
    MOV HdlOp@@CONCAT to 
    HdlOp: CONCAT
        list: ops
            HdlOp: CONCAT
                list: ops
                    HdlOp: CONCAT
                        list: ops
                            HdlValueId: input_axis_tlast
                            HdlValueId: input_axis_tuser
                    HdlValueId: input_axis_tkeep
            HdlValueId: input_axis_tdata

UPD HdlStmAssign@@ to 
    INS HdlValueId@@mem_write_data to 


CommitId: 385c9cc90ade29878d45e6634e2c70ce85d6d6d5
Fix Vivado block RAM inference
--- a/rtl/axis_async_fifo_64.v
+++ b/rtl/axis_async_fifo_64.v
@@ -222,7 +219,7 @@ always @(posedge output_clk) begin
     end
 
     if (read) begin
-        {output_axis_tlast_reg, output_axis_tuser_reg, output_axis_tkeep_reg, output_axis_tdata_reg} <= mem[rd_ptr_reg[ADDR_WIDTH-1:0]];
+        mem_read_data_reg <= mem[rd_ptr_reg[ADDR_WIDTH-1:0]];
     end
 end
 
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@output_axis_tdata_reg to mem_read_data_reg
        MOV HdlValueId@@output_axis_tdata_reg to ops
        HdlValueId: output_axis_tdata_reg
        DEL HdlOp@@CONCAT from ops
        HdlOp: CONCAT
            list: ops
                HdlOp: CONCAT
                    list: ops
                        HdlValueId: output_axis_tlast_reg
                        HdlValueId: output_axis_tuser_reg
                HdlValueId: output_axis_tkeep_reg
        DEL list@@ops from CONCAT
    DEL HdlOp@@CONCAT from 


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_eth_fcs.v
+++ b/rtl/axis_eth_fcs.v
@@ -51,8 +51,8 @@ module axis_eth_fcs
 );
 
 reg [31:0] crc_state = 32'hFFFFFFFF;
-reg [31:0] fcs_reg = 0;
-reg fcs_valid_reg = 0;
+reg [31:0] fcs_reg = 32'h00000000;
+reg fcs_valid_reg = 1'b0;
 
 wire [31:0] crc_next;
 

ParseResult:
UPD HdlIdDef@@fcs_reg to fcs_reg
    UPD HdlValueInt@@0 to 00000000


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_eth_fcs.v
+++ b/rtl/axis_eth_fcs.v
@@ -70,15 +70,15 @@ eth_crc_8_inst (
 always @(posedge clk) begin
     if (rst) begin
         crc_state <= 32'hFFFFFFFF;
-        fcs_reg <= 0;
-        fcs_valid_reg <= 0;
+        fcs_reg <= 32'h00000000;
+        fcs_valid_reg <= 1'b0;
     end else begin
-        fcs_valid_reg <= 0;
+        fcs_valid_reg <= 1'b0;
         if (input_axis_tvalid) begin
             if (input_axis_tlast) begin
                 crc_state <= 32'hFFFFFFFF;
                 fcs_reg <= ~crc_next;
-                fcs_valid_reg <= 1;
+                fcs_valid_reg <= 1'b1;
             end else begin
                 crc_state <= crc_next;
             end
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlValueInt@@0 to 00000000


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_eth_fcs_insert_64.v
+++ b/rtl/axis_eth_fcs_insert_64.v
@@ -86,14 +86,14 @@ reg [63:0] fcs_output_tdata_1;
 reg [7:0] fcs_output_tkeep_0;
 reg [7:0] fcs_output_tkeep_1;
 
-reg [7:0] frame_ptr_reg = 0, frame_ptr_next;
+reg [15:0] frame_ptr_reg = 16'd0, frame_ptr_next;
 
-reg [63:0] last_cycle_tdata_reg = 0, last_cycle_tdata_next;
-reg [7:0] last_cycle_tkeep_reg = 0, last_cycle_tkeep_next;
+reg [63:0] last_cycle_tdata_reg = 64'd0, last_cycle_tdata_next;
+reg [7:0] last_cycle_tkeep_reg = 8'd0, last_cycle_tkeep_next;
 
-reg busy_reg = 0;
+reg busy_reg = 1'b0;
 
-reg input_axis_tready_reg = 0, input_axis_tready_next;
+reg input_axis_tready_reg = 1'b0, input_axis_tready_next;
 
 reg [31:0] crc_state = 32'hFFFFFFFF;
 

ParseResult:
INS HdlIdDef@@frame_ptr_reg to objs
HdlIdDef: frame_ptr_reg
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 15
                    HdlValueInt: 0
    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@frame_ptr_next to objs
HdlIdDef: frame_ptr_next
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 15
                    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@frame_ptr_reg from objs
HdlIdDef: frame_ptr_reg
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 7
                    HdlValueInt: 0
    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@frame_ptr_next from objs
HdlIdDef: frame_ptr_next
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 7
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_eth_fcs_insert_64.v
+++ b/rtl/axis_eth_fcs_insert_64.v
@@ -110,7 +110,7 @@ wire [31:0] crc_next7;
 reg [63:0] output_axis_tdata_int;
 reg [7:0]  output_axis_tkeep_int;
 reg        output_axis_tvalid_int;
-reg        output_axis_tready_int = 0;
+reg        output_axis_tready_int_reg = 1'b0;
 reg        output_axis_tlast_int;
 reg        output_axis_tuser_int;
 wire       output_axis_tready_int_early;

ParseResult:
UPD HdlIdDef@@output_axis_tready_int to output_axis_tready_int_reg


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_eth_fcs_insert_64.v
+++ b/rtl/axis_eth_fcs_insert_64.v
@@ -206,15 +206,12 @@ function [7:0] count2keep;
 endfunction
 
 // Mask input data
+integer j;
+
 always @* begin
-    input_axis_tdata_masked[ 7: 0] = input_axis_tkeep[0] ? input_axis_tdata[ 7: 0] : 8'd0;
-    input_axis_tdata_masked[15: 8] = input_axis_tkeep[1] ? input_axis_tdata[15: 8] : 8'd0;
-    input_axis_tdata_masked[23:16] = input_axis_tkeep[2] ? input_axis_tdata[23:16] : 8'd0;
-    input_axis_tdata_masked[31:24] = input_axis_tkeep[3] ? input_axis_tdata[31:24] : 8'd0;
-    input_axis_tdata_masked[39:32] = input_axis_tkeep[4] ? input_axis_tdata[39:32] : 8'd0;
-    input_axis_tdata_masked[47:40] = input_axis_tkeep[5] ? input_axis_tdata[47:40] : 8'd0;
-    input_axis_tdata_masked[55:48] = input_axis_tkeep[6] ? input_axis_tdata[55:48] : 8'd0;
-    input_axis_tdata_masked[63:56] = input_axis_tkeep[7] ? input_axis_tdata[63:56] : 8'd0;
+    for (j = 0; j < 8; j = j + 1) begin
+        input_axis_tdata_masked[j*8 +: 8] = input_axis_tkeep[j] ? input_axis_tdata[j*8 +: 8] : 8'd0;
+    end
 end
 
 // FCS cycle calculation

ParseResult:
INS HdlIdDef@@j to objs
HdlIdDef: j
    HdlValueId: integer
    HdlDirection: INTERNAL

INS HdlStmProcess@@ to objs

UPD HdlStmProcess@@ to 
    MOV list@@sensitivity to 
    list: sensitivity
        HdlAll
    DEL HdlStmBlock@@SEQ from 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: input_axis_tdata_masked
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 7
                                    HdlValueInt: 0
                    HdlOp: TERNARY
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_axis_tkeep
                                    HdlValueInt: 0
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_axis_tdata
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 7
                                            HdlValueInt: 0
                            HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: input_axis_tdata_masked
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 15
                                    HdlValueInt: 8
                    HdlOp: TERNARY
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_axis_tkeep
                                    HdlValueInt: 1
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_axis_tdata
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 15
                                            HdlValueInt: 8
                            HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: input_axis_tdata_masked
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 23
                                    HdlValueInt: 16
                    HdlOp: TERNARY
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_axis_tkeep
                                    HdlValueInt: 2
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_axis_tdata
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 23
                                            HdlValueInt: 16
                            HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: input_axis_tdata_masked
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 31
                                    HdlValueInt: 24
                    HdlOp: TERNARY
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_axis_tkeep
                                    HdlValueInt: 3
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_axis_tdata
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 31
                                            HdlValueInt: 24
                            HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: input_axis_tdata_masked
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 39
                                    HdlValueInt: 32
                    HdlOp: TERNARY
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_axis_tkeep
                                    HdlValueInt: 4
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_axis_tdata
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 39
                                            HdlValueInt: 32
                            HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: input_axis_tdata_masked
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 47
                                    HdlValueInt: 40
                    HdlOp: TERNARY
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_axis_tkeep
                                    HdlValueInt: 5
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_axis_tdata
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 47
                                            HdlValueInt: 40
                            HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: input_axis_tdata_masked
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 55
                                    HdlValueInt: 48
                    HdlOp: TERNARY
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_axis_tkeep
                                    HdlValueInt: 6
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_axis_tdata
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 55
                                            HdlValueInt: 48
                            HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: input_axis_tdata_masked
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 63
                                    HdlValueInt: 56
                    HdlOp: TERNARY
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_axis_tkeep
                                    HdlValueInt: 7
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_axis_tdata
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 63
                                            HdlValueInt: 56
                            HdlValueInt: 0

UPD HdlStmProcess@@ to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmFor
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: j
                HdlOp: LT
                    list: ops
                        HdlValueId: j
                        HdlValueInt: 8
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: j
                                HdlOp: ADD
                                    list: ops
                                        HdlValueId: j
                                        HdlValueInt: 1
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: input_axis_tdata_masked
                                        HdlOp: PART_SELECT_POST
                                            list: ops
                                                HdlOp: MUL
                                                    list: ops
                                                        HdlValueId: j
                                                        HdlValueInt: 8
                                                HdlValueInt: 8
                                HdlOp: TERNARY
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: input_axis_tkeep
                                                HdlValueId: j
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: input_axis_tdata
                                                HdlOp: PART_SELECT_POST
                                                    list: ops
                                                        HdlOp: MUL
                                                            list: ops
                                                                HdlValueId: j
                                                                HdlValueInt: 8
                                                        HdlValueInt: 8
                                        HdlValueInt: 0

DEL HdlStmProcess@@ from objs


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_eth_fcs_insert_64.v
+++ b/rtl/axis_eth_fcs_insert_64.v
@@ -462,20 +459,20 @@ always @* begin
             end
         end
         STATE_PAD: begin
-            input_axis_tready_next = 0;
+            input_axis_tready_next = 1'b0;
 
-            output_axis_tdata_int = 0;
+            output_axis_tdata_int = 64'd0;
             output_axis_tkeep_int = 8'hff;
-            output_axis_tvalid_int = 1;
-            output_axis_tlast_int = 0;
-            output_axis_tuser_int = 0;
+            output_axis_tvalid_int = 1'b1;
+            output_axis_tlast_int = 1'b0;
+            output_axis_tuser_int = 1'b0;
 
-            fcs_input_tdata = 0;
+            fcs_input_tdata = 64'd0;
             fcs_input_tkeep = 8'hff;
 
-            if (output_axis_tready_int) begin
-                update_crc = 1;
-                frame_ptr_next = frame_ptr_reg + 8;
+            if (output_axis_tready_int_reg) begin
+                update_crc = 1'b1;
+                frame_ptr_next = frame_ptr_reg + 16'd8;
 
                 if (frame_ptr_next < MIN_FRAME_LENGTH-4) begin
                     state_next = STATE_PAD;

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlValueId@@output_axis_tready_int to output_axis_tready_int_reg


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_eth_fcs_insert_64.v
+++ b/rtl/axis_eth_fcs_insert_64.v
@@ -488,15 +485,15 @@ always @* begin
                     output_axis_tkeep_int = fcs_output_tkeep_0;
                     last_cycle_tkeep_next = fcs_output_tkeep_1;
 
-                    reset_crc = 1;
+                    reset_crc = 1'b1;
 
-                    if (fcs_output_tkeep_1 == 0) begin
-                        output_axis_tlast_int = 1;
+                    if (fcs_output_tkeep_1 == 8'd0) begin
+                        output_axis_tlast_int = 1'b1;
                         input_axis_tready_next = output_axis_tready_int_early;
-                        frame_ptr_next = 0;
+                        frame_ptr_next = 16'd0;
                         state_next = STATE_IDLE;
                     end else begin
-                        input_axis_tready_next = 0;
+                        input_axis_tready_next = 1'b0;
                         state_next = STATE_FCS;
                     end
                 end

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlValueId@@output_axis_tready_int to output_axis_tready_int_reg


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_eth_fcs_insert_64.v
+++ b/rtl/axis_eth_fcs_insert_64.v
@@ -506,18 +503,18 @@ always @* begin
         end
         STATE_FCS: begin
             // last cycle
-            input_axis_tready_next = 0;
+            input_axis_tready_next = 1'b0;
 
             output_axis_tdata_int = last_cycle_tdata_reg;
             output_axis_tkeep_int = last_cycle_tkeep_reg;
-            output_axis_tvalid_int = 1;
-            output_axis_tlast_int = 1;
-            output_axis_tuser_int = 0;
+            output_axis_tvalid_int = 1'b1;
+            output_axis_tlast_int = 1'b1;
+            output_axis_tuser_int = 1'b0;
 
-            if (output_axis_tready_int) begin
-                reset_crc = 1;
+            if (output_axis_tready_int_reg) begin
+                reset_crc = 1'b1;
                 input_axis_tready_next = output_axis_tready_int_early;
-                frame_ptr_next = 0;
+                frame_ptr_next = 1'b0;
                 state_next = STATE_IDLE;
             end else begin
                 state_next = STATE_FCS;

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlValueId@@output_axis_tready_int to output_axis_tready_int_reg


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_eth_fcs_insert_64.v
+++ b/rtl/axis_eth_fcs_insert_64.v
@@ -530,14 +527,11 @@ always @(posedge clk) begin
     if (rst) begin
         state_reg <= STATE_IDLE;
         
-        frame_ptr_reg <= 0;
+        frame_ptr_reg <= 1'b0;
 
-        last_cycle_tdata_reg <= 0;
-        last_cycle_tkeep_reg <= 0;
-        
-        input_axis_tready_reg <= 0;
+        input_axis_tready_reg <= 1'b0;
 
-        busy_reg <= 0;
+        busy_reg <= 1'b0;
 
         crc_state <= 32'hFFFFFFFF;
     end else begin

ParseResult:
DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: last_cycle_tdata_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: last_cycle_tkeep_reg


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_eth_fcs_insert_64.v
+++ b/rtl/axis_eth_fcs_insert_64.v
@@ -545,9 +539,6 @@ always @(posedge clk) begin
 
         frame_ptr_reg <= frame_ptr_next;
 
-        last_cycle_tdata_reg <= last_cycle_tdata_next;
-        last_cycle_tkeep_reg <= last_cycle_tkeep_next;
-
         input_axis_tready_reg <= input_axis_tready_next;
 
         busy_reg <= state_next != STATE_IDLE;

ParseResult:
MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: last_cycle_tdata_next
    HdlValueId: last_cycle_tdata_reg

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: last_cycle_tkeep_next
    HdlValueId: last_cycle_tkeep_reg


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_eth_fcs_insert_64.v
+++ b/rtl/axis_eth_fcs_insert_64.v
@@ -559,20 +550,28 @@ always @(posedge clk) begin
             crc_state <= crc_next7;
         end
     end
+
+    last_cycle_tdata_reg <= last_cycle_tdata_next;
+    last_cycle_tkeep_reg <= last_cycle_tkeep_next;
 end
 
 // output datapath logic
-reg [63:0] output_axis_tdata_reg = 0;
-reg [7:0]  output_axis_tkeep_reg = 0;
-reg        output_axis_tvalid_reg = 0;
-reg        output_axis_tlast_reg = 0;
-reg        output_axis_tuser_reg = 0;
-
-reg [63:0] temp_axis_tdata_reg = 0;
-reg [7:0]  temp_axis_tkeep_reg = 0;
-reg        temp_axis_tvalid_reg = 0;
-reg        temp_axis_tlast_reg = 0;
-reg        temp_axis_tuser_reg = 0;
+reg [63:0] output_axis_tdata_reg = 64'd0;
+reg [7:0]  output_axis_tkeep_reg = 8'd0;
+reg        output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;
+reg        output_axis_tlast_reg = 1'b0;
+reg        output_axis_tuser_reg = 1'b0;
+
+reg [63:0] temp_axis_tdata_reg = 64'd0;
+reg [7:0]  temp_axis_tkeep_reg = 8'd0;
+reg        temp_axis_tvalid_reg = 1'b0, temp_axis_tvalid_next;
+reg        temp_axis_tlast_reg = 1'b0;
+reg        temp_axis_tuser_reg = 1'b0;
+
+// datapath control
+reg store_axis_int_to_output;
+reg store_axis_int_to_temp;
+reg store_axis_temp_to_output;
 
 assign output_axis_tdata = output_axis_tdata_reg;
 assign output_axis_tkeep = output_axis_tkeep_reg;

ParseResult:
INS HdlIdDef@@output_axis_tvalid_next to objs
HdlIdDef: output_axis_tvalid_next
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL

INS HdlIdDef@@temp_axis_tvalid_next to objs
HdlIdDef: temp_axis_tvalid_next
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL

INS HdlIdDef@@store_axis_int_to_output to objs
HdlIdDef: store_axis_int_to_output
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL

INS HdlIdDef@@store_axis_int_to_temp to objs
HdlIdDef: store_axis_int_to_temp
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL

INS HdlIdDef@@store_axis_temp_to_output to objs
HdlIdDef: store_axis_temp_to_output
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL


CommitId: 385c9cc90ade29878d45e6634e2c70ce85d6d6d5
Fix Vivado block RAM inference
--- a/rtl/axis_async_fifo.v
+++ b/rtl/axis_async_fifo.v
@@ -79,11 +79,10 @@ reg output_rst_sync2_reg = 1'b1;
 reg output_rst_sync3_reg = 1'b1;
 
 reg [DATA_WIDTH+2-1:0] mem[(2**ADDR_WIDTH)-1:0];
+reg [DATA_WIDTH+2-1:0] mem_read_data_reg = {DATA_WIDTH+2{1'b0}};
+wire [DATA_WIDTH+2-1:0] mem_write_data;
 
-reg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};
 reg output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;
-reg output_axis_tlast_reg = 1'b0;
-reg output_axis_tuser_reg = 1'b0;
 
 // full when first TWO MSBs do NOT match, but rest matches
 // (gray code equivalent of first MSB different but rest same)

ParseResult:
UPD HdlIdDef@@output_axis_tdata_reg to mem_read_data_reg

INS HdlIdDef@@mem_write_data to objs
HdlIdDef: mem_write_data
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: wire
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlOp: ADD
                                list: ops
                                    HdlValueId: DATA_WIDTH
                                    HdlValueInt: 2
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

UPD HdlIdDef@@mem_read_data_reg to mem_read_data_reg
    UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
        INS HdlOp@@ADD to ops
        UPD HdlOp@@ADD to ADD
            INS list@@ops to ADD
            INS HdlValueInt@@2 to ops
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlOp@@SUB to SUB
                INS HdlOp@@ADD to ops
                UPD HdlOp@@ADD to ADD
                    INS list@@ops to ADD
                    INS HdlValueInt@@2 to ops

UPD HdlIdDef@@output_axis_tdata_reg to output_axis_tdata_reg
    UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
        MOV HdlValueId@@DATA_WIDTH to ops
        HdlValueId: DATA_WIDTH
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlOp@@SUB to SUB
                MOV HdlValueId@@DATA_WIDTH to ops
                HdlValueId: DATA_WIDTH

DEL HdlIdDef@@output_axis_tlast_reg from objs
HdlIdDef: output_axis_tlast_reg
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@output_axis_tuser_reg from objs
HdlIdDef: output_axis_tuser_reg
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 385c9cc90ade29878d45e6634e2c70ce85d6d6d5
Fix Vivado block RAM inference
--- a/rtl/axis_async_fifo.v
+++ b/rtl/axis_async_fifo.v
@@ -99,10 +98,10 @@ reg read;
 
 assign input_axis_tready = ~full & ~input_rst_sync3_reg;
 
-assign output_axis_tdata = output_axis_tdata_reg;
 assign output_axis_tvalid = output_axis_tvalid_reg;
-assign output_axis_tlast = output_axis_tlast_reg;
-assign output_axis_tuser = output_axis_tuser_reg;
+
+assign mem_write_data = {input_axis_tlast, input_axis_tuser, input_axis_tdata};
+assign {output_axis_tlast, output_axis_tuser, output_axis_tdata} = mem_read_data_reg;
 
 // reset synchronization
 always @(posedge input_clk or posedge async_rst) begin

ParseResult:
INS HdlStmAssign@@ to objs

INS HdlStmAssign@@ to objs

UPD HdlStmAssign@@ to 
    INS HdlValueId@@mem_write_data to 

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@output_axis_tlast_reg to mem_read_data_reg
    MOV HdlValueId@@output_axis_tlast_reg to 
    HdlValueId: output_axis_tlast_reg
    MOV HdlValueId@@output_axis_tlast to 
    HdlValueId: output_axis_tlast

UPD HdlStmAssign@@ to 
    INS HdlOp@@CONCAT to 
    UPD HdlOp@@CONCAT to CONCAT
        INS list@@ops to CONCAT
        INS HdlOp@@CONCAT to ops
        UPD HdlOp@@CONCAT to CONCAT
            INS list@@ops to CONCAT

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@output_axis_tuser to output_axis_tdata
    MOV HdlValueId@@output_axis_tuser to 
    HdlValueId: output_axis_tuser
    UPD HdlValueId@@output_axis_tuser_reg to output_axis_tuser
    MOV HdlValueId@@output_axis_tuser_reg to 
    HdlValueId: output_axis_tuser_reg

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: output_axis_tdata_reg
    HdlValueId: output_axis_tdata

DEL HdlStmAssign@@ from objs

DEL HdlStmAssign@@ from objs


CommitId: 385c9cc90ade29878d45e6634e2c70ce85d6d6d5
Fix Vivado block RAM inference
--- a/rtl/axis_async_fifo.v
+++ b/rtl/axis_async_fifo.v
@@ -157,7 +156,7 @@ always @(posedge input_clk) begin
     end
 
     if (write) begin
-        mem[wr_ptr_reg[ADDR_WIDTH-1:0]] <= {input_axis_tlast, input_axis_tuser, input_axis_tdata};
+        mem[wr_ptr_reg[ADDR_WIDTH-1:0]] <= mem_write_data;
     end
 end
 

ParseResult:
UPD HdlStmAssign@@ to 
    MOV HdlOp@@CONCAT to 
    HdlOp: CONCAT
        list: ops
            HdlOp: CONCAT
                list: ops
                    HdlValueId: input_axis_tlast
                    HdlValueId: input_axis_tuser
            HdlValueId: input_axis_tdata

UPD HdlStmAssign@@ to 
    INS HdlValueId@@mem_write_data to 


CommitId: 385c9cc90ade29878d45e6634e2c70ce85d6d6d5
Fix Vivado block RAM inference
--- a/rtl/axis_async_fifo.v
+++ b/rtl/axis_async_fifo.v
@@ -217,7 +216,7 @@ always @(posedge output_clk) begin
     end
 
     if (read) begin
-        {output_axis_tlast_reg, output_axis_tuser_reg, output_axis_tdata_reg} <= mem[rd_ptr_reg[ADDR_WIDTH-1:0]];
+        mem_read_data_reg <= mem[rd_ptr_reg[ADDR_WIDTH-1:0]];
     end
 end
 
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@output_axis_tdata_reg to mem_read_data_reg
        MOV HdlValueId@@output_axis_tdata_reg to ops
        HdlValueId: output_axis_tdata_reg
        DEL HdlOp@@CONCAT from ops
        HdlOp: CONCAT
            list: ops
                HdlValueId: output_axis_tlast_reg
                HdlValueId: output_axis_tuser_reg
        DEL list@@ops from CONCAT
    DEL HdlOp@@CONCAT from 


CommitId: d1fc821c8bbdf435c74f2b84383c83c11eeef031
Fix simulation startup issue in rgmii_phy_if
--- a/rtl/rgmii_phy_if.v
+++ b/rtl/rgmii_phy_if.v
@@ -162,12 +162,12 @@ always @(posedge clk) begin
     end
 end
 
-reg [3:0] rgmii_txd_1;
-reg [3:0] rgmii_txd_2;
-reg rgmii_tx_ctl_1;
-reg rgmii_tx_ctl_2;
+reg [3:0] rgmii_txd_1 = 0;
+reg [3:0] rgmii_txd_2 = 0;
+reg rgmii_tx_ctl_1 = 1'b0;
+reg rgmii_tx_ctl_2 = 1'b0;
 
-reg gmii_clk_en;
+reg gmii_clk_en = 1'b1;
 
 always @* begin
     if (speed == 2'b00) begin
ParseResult:
UPD HdlIdDef@@rgmii_txd_1 to rgmii_txd_1
    INS HdlValueInt@@0 to rgmii_txd_1

UPD HdlIdDef@@rgmii_txd_2 to rgmii_txd_2
    INS HdlValueInt@@0 to rgmii_txd_2

UPD HdlIdDef@@rgmii_tx_ctl_1 to rgmii_tx_ctl_1
    INS HdlValueInt@@0 to rgmii_tx_ctl_1

UPD HdlIdDef@@rgmii_tx_ctl_2 to rgmii_tx_ctl_2
    INS HdlValueInt@@0 to rgmii_tx_ctl_2

UPD HdlIdDef@@gmii_clk_en to gmii_clk_en
    INS HdlValueInt@@1 to gmii_clk_en


CommitId: 585ccefa1534cba00ee915f54baf491a0b49df82
Add TX underflow error signal
--- a/rtl/eth_mac_1g.v
+++ b/rtl/eth_mac_1g.v
@@ -79,6 +79,7 @@ module eth_mac_1g #
      * Status
      */
     output wire        tx_start_packet,
+    output wire        tx_error_underflow,
     output wire        rx_start_packet,
     output wire        rx_error_bad_frame,
     output wire        rx_error_bad_fcs,

ParseResult:
INS HdlIdDef@@tx_error_underflow to ports
HdlIdDef: tx_error_underflow
    HdlDirection: OUT


CommitId: 85d11645eb5af7f9dcba37417b121315ca18e4d7
Rename frame_error to error_header_early_termination
--- a/rtl/eth_axis_rx_64.v
+++ b/rtl/eth_axis_rx_64.v
@@ -63,7 +63,7 @@ module eth_axis_rx_64
      * Status signals
      */
     output wire        busy,
-    output wire        frame_error
+    output wire        error_header_early_termination
 );
 
 /*

ParseResult:
UPD HdlIdDef@@frame_error to error_header_early_termination


CommitId: 85d11645eb5af7f9dcba37417b121315ca18e4d7
Rename frame_error to error_header_early_termination
--- a/rtl/eth_axis_rx_64.v
+++ b/rtl/eth_axis_rx_64.v
@@ -116,7 +116,7 @@ reg output_eth_payload_tlast_reg = 0;
 reg output_eth_payload_tuser_reg = 0;
 
 reg busy_reg = 0, busy_next;
-reg frame_error_reg = 0, frame_error_next;
+reg error_header_early_termination_reg = 0, error_header_early_termination_next;
 
 reg [63:0] temp_eth_payload_tdata_reg = 0;
 reg [7:0] temp_eth_payload_tkeep_reg = 0;

ParseResult:
UPD HdlIdDef@@frame_error_reg to error_header_early_termination_reg

UPD HdlIdDef@@frame_error_next to error_header_early_termination_next


CommitId: 85d11645eb5af7f9dcba37417b121315ca18e4d7
Rename frame_error to error_header_early_termination
--- a/rtl/eth_axis_rx_64.v
+++ b/rtl/eth_axis_rx_64.v
@@ -141,7 +141,7 @@ assign output_eth_payload_tlast = output_eth_payload_tlast_reg;
 assign output_eth_payload_tuser = output_eth_payload_tuser_reg;
 
 assign busy = busy_reg;
-assign frame_error = frame_error_reg;
+assign error_header_early_termination = error_header_early_termination_reg;
 
 always @* begin
     state_next = 2'bz;

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: error_header_early_termination_reg
    HdlValueId: error_header_early_termination

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@frame_error_next to error_header_early_termination_next

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: frame_error_reg
    HdlValueId: frame_error


CommitId: 85d11645eb5af7f9dcba37417b121315ca18e4d7
Rename frame_error to error_header_early_termination
--- a/rtl/eth_axis_rx_64.v
+++ b/rtl/eth_axis_rx_64.v
@@ -159,7 +159,7 @@ always @* begin
 
     output_eth_hdr_valid_next = output_eth_hdr_valid_reg & ~output_eth_hdr_ready;
 
-    frame_error_next = 0;
+    error_header_early_termination_next = 0;
 
     case (state_reg)
         STATE_IDLE: begin

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@frame_error_next to error_header_early_termination_next


CommitId: 85d11645eb5af7f9dcba37417b121315ca18e4d7
Rename frame_error to error_header_early_termination
--- a/rtl/eth_axis_rx_64.v
+++ b/rtl/eth_axis_rx_64.v
@@ -192,7 +192,7 @@ always @* begin
                 endcase
                 if (input_axis_tlast) begin
                     state_next = STATE_IDLE;
-                    frame_error_next = 1;
+                    error_header_early_termination_next = 1;
                 end
             end else begin
                 state_next = STATE_READ_HEADER;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@frame_error_next to error_header_early_termination_next

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@frame_error_next to error_header_early_termination_next


CommitId: 85d11645eb5af7f9dcba37417b121315ca18e4d7
Rename frame_error to error_header_early_termination
--- a/rtl/eth_axis_rx_64.v
+++ b/rtl/eth_axis_rx_64.v
@@ -286,7 +286,7 @@ always @(posedge clk or posedge rst) begin
         temp_eth_payload_tlast_reg <= 0;
         temp_eth_payload_tuser_reg <= 0;
         busy_reg <= 0;
-        frame_error_reg <= 0;
+        error_header_early_termination_reg <= 0;
     end else begin
         state_reg <= state_next;
 

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlValueId@@frame_error_reg to error_header_early_termination_reg


CommitId: 85d11645eb5af7f9dcba37417b121315ca18e4d7
Rename frame_error to error_header_early_termination
--- a/rtl/eth_axis_rx_64.v
+++ b/rtl/eth_axis_rx_64.v
@@ -294,7 +294,7 @@ always @(posedge clk or posedge rst) begin
 
         output_eth_hdr_valid_reg <= output_eth_hdr_valid_next;
 
-        frame_error_reg <= frame_error_next;
+        error_header_early_termination_reg <= error_header_early_termination_next;
 
         busy_reg <= state_next != STATE_IDLE;
 
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlValueId@@frame_error_next to error_header_early_termination_next
    UPD HdlValueId@@frame_error_reg to error_header_early_termination_reg


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/udp_ip_tx.v
+++ b/rtl/udp_ip_tx.v
@@ -215,38 +215,38 @@ assign error_payload_early_termination = error_payload_early_termination_reg;
 always @* begin
     state_next = STATE_IDLE;
 
-    input_udp_hdr_ready_next = 0;
-    input_udp_payload_tready_next = 0;
+    input_udp_hdr_ready_next = 1'b0;
+    input_udp_payload_tready_next = 1'b0;
 
-    store_udp_hdr = 0;
+    store_udp_hdr = 1'b0;
 
-    store_last_word = 0;
+    store_last_word = 1'b0;
 
     frame_ptr_next = frame_ptr_reg;
 
     output_ip_hdr_valid_next = output_ip_hdr_valid_reg & ~output_ip_hdr_ready;
 
-    error_payload_early_termination_next = 0;
+    error_payload_early_termination_next = 1'b0;
 
-    output_ip_payload_tdata_int = 0;
-    output_ip_payload_tvalid_int = 0;
-    output_ip_payload_tlast_int = 0;
-    output_ip_payload_tuser_int = 0;
+    output_ip_payload_tdata_int = 8'd0;
+    output_ip_payload_tvalid_int = 1'b0;
+    output_ip_payload_tlast_int = 1'b0;
+    output_ip_payload_tuser_int = 1'b0;
 
     case (state_reg)
         STATE_IDLE: begin
             // idle state - wait for data
-            frame_ptr_next = 0;
+            frame_ptr_next = 16'd0;
             input_udp_hdr_ready_next = ~output_ip_hdr_valid_reg;
 
             if (input_udp_hdr_ready & input_udp_hdr_valid) begin
-                store_udp_hdr = 1;
-                input_udp_hdr_ready_next = 0;
-                output_ip_hdr_valid_next = 1;
-                if (output_ip_payload_tready_int) begin
-                    output_ip_payload_tvalid_int = 1;
+                store_udp_hdr = 1'b1;
+                input_udp_hdr_ready_next = 1'b0;
+                output_ip_hdr_valid_next = 1'b1;
+                if (output_ip_payload_tready_int_reg) begin
+                    output_ip_payload_tvalid_int = 1'b1;
                     output_ip_payload_tdata_int = input_udp_source_port[15: 8];
-                    frame_ptr_next = 1;
+                    frame_ptr_next = 1'b1;
                 end
                 state_next = STATE_WRITE_HEADER;
             end else begin

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlValueId@@output_ip_payload_tready_int to output_ip_payload_tready_int_reg


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/udp_ip_tx.v
+++ b/rtl/udp_ip_tx.v
@@ -255,10 +255,10 @@ always @* begin
         end
         STATE_WRITE_HEADER: begin
             // write header state
-            if (output_ip_payload_tready_int) begin
+            if (output_ip_payload_tready_int_reg) begin
                 // word transfer out
-                frame_ptr_next = frame_ptr_reg+1;
-                output_ip_payload_tvalid_int = 1;
+                frame_ptr_next = frame_ptr_reg + 16'd1;
+                output_ip_payload_tvalid_int = 1'b1;
                 state_next = STATE_WRITE_HEADER;
                 case (frame_ptr_reg)
                     8'h00: output_ip_payload_tdata_int = input_udp_source_port[15: 8];

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlValueId@@output_ip_payload_tready_int to output_ip_payload_tready_int_reg


CommitId: 0d22a35bd855a7f08b34a3f1c24ebb143289d91d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_frame_join_4.v
+++ b/rtl/axis_frame_join_4.v
@@ -95,27 +95,27 @@ localparam [1:0]
 
 reg [1:0] state_reg = STATE_IDLE, state_next;
 
-reg [2:0] frame_ptr_reg = 0, frame_ptr_next;
-reg [1:0] port_sel_reg = 0, port_sel_next;
+reg [2:0] frame_ptr_reg = 3'd0, frame_ptr_next;
+reg [1:0] port_sel_reg = 2'd0, port_sel_next;
 
-reg busy_reg = 0, busy_next;
+reg busy_reg = 1'b0, busy_next;
 
 reg [7:0] input_tdata;
 reg input_tvalid;
 reg input_tlast;
 reg input_tuser;
 
-reg output_tuser_reg = 0, output_tuser_next;
+reg output_tuser_reg = 1'b0, output_tuser_next;
 
-reg input_0_axis_tready_reg = 0, input_0_axis_tready_next;
-reg input_1_axis_tready_reg = 0, input_1_axis_tready_next;
-reg input_2_axis_tready_reg = 0, input_2_axis_tready_next;
-reg input_3_axis_tready_reg = 0, input_3_axis_tready_next;
+reg input_0_axis_tready_reg = 1'b0, input_0_axis_tready_next;
+reg input_1_axis_tready_reg = 1'b0, input_1_axis_tready_next;
+reg input_2_axis_tready_reg = 1'b0, input_2_axis_tready_next;
+reg input_3_axis_tready_reg = 1'b0, input_3_axis_tready_next;
 
 // internal datapath
 reg [7:0] output_axis_tdata_int;
 reg       output_axis_tvalid_int;
-reg       output_axis_tready_int = 0;
+reg       output_axis_tready_int_reg = 1'b0;
 reg       output_axis_tlast_int;
 reg       output_axis_tuser_int;
 wire      output_axis_tready_int_early;

ParseResult:
UPD HdlIdDef@@output_axis_tready_int to output_axis_tready_int_reg


CommitId: 0d22a35bd855a7f08b34a3f1c24ebb143289d91d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_frame_join_4.v
+++ b/rtl/axis_frame_join_4.v
@@ -160,33 +160,33 @@ end
 integer offset, i;
 
 always @* begin
-    state_next = 2'bz;
+    state_next = STATE_IDLE;
 
     frame_ptr_next = frame_ptr_reg;
     port_sel_next = port_sel_reg;
 
-    input_0_axis_tready_next = 0;
-    input_1_axis_tready_next = 0;
-    input_2_axis_tready_next = 0;
-    input_3_axis_tready_next = 0;
+    input_0_axis_tready_next = 1'b0;
+    input_1_axis_tready_next = 1'b0;
+    input_2_axis_tready_next = 1'b0;
+    input_3_axis_tready_next = 1'b0;
 
-    output_axis_tdata_int = 0;
-    output_axis_tvalid_int = 0;
-    output_axis_tlast_int = 0;
-    output_axis_tuser_int = 0;
+    output_axis_tdata_int = 8'd0;
+    output_axis_tvalid_int = 1'b0;
+    output_axis_tlast_int = 1'b0;
+    output_axis_tuser_int = 1'b0;
 
     output_tuser_next = output_tuser_reg;
 
     case (state_reg)
         STATE_IDLE: begin
             // idle state - wait for data
-            frame_ptr_next = 0;
-            port_sel_next = 0;
-            output_tuser_next = 0;
+            frame_ptr_next = 3'd0;
+            port_sel_next = 2'd0;
+            output_tuser_next = 1'b0;
 
             if (TAG_ENABLE) begin
                 // next cycle if started will send tag, so do not enable input
-                input_0_axis_tready_next = 0;
+                input_0_axis_tready_next = 1'b0;
             end else begin
                 // next cycle if started will send data, so enable input
                 input_0_axis_tready_next = output_axis_tready_int_early;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueId@@STATE_IDLE to ops

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            DEL HdlValueInt@@z from ops


CommitId: 0d22a35bd855a7f08b34a3f1c24ebb143289d91d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_frame_join_4.v
+++ b/rtl/axis_frame_join_4.v
@@ -196,19 +196,19 @@ always @* begin
                 // input 0 valid; start transferring data
                 if (TAG_ENABLE) begin
                     // tag enabled, so transmit it
-                    if (output_axis_tready_int) begin
+                    if (output_axis_tready_int_reg) begin
                         // output is ready, so short-circuit first tag byte
-                        frame_ptr_next = 1;
+                        frame_ptr_next = 3'd1;
                         output_axis_tdata_int = tag[(TAG_BYTE_WIDTH-1)*8 +: 8];
-                        output_axis_tvalid_int = 1;
+                        output_axis_tvalid_int = 1'b1;
                     end
                     state_next = STATE_WRITE_TAG;
                 end else begin
                     // tag disabled, so transmit data
-                    if (output_axis_tready_int) begin
+                    if (output_axis_tready_int_reg) begin
                         // output is ready, so short-circuit first data byte
                         output_axis_tdata_int = input_0_axis_tdata;
-                        output_axis_tvalid_int = 1;
+                        output_axis_tvalid_int = 1'b1;
                     end
                     state_next = STATE_TRANSFER;
                 end

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueId@@STATE_IDLE to ops

UPD HdlStmIf@@ to 
    UPD HdlValueId@@output_axis_tready_int to output_axis_tready_int_reg

UPD HdlStmIf@@ to 
    UPD HdlValueId@@output_axis_tready_int to output_axis_tready_int_reg

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            DEL HdlValueInt@@z from ops


CommitId: 0d22a35bd855a7f08b34a3f1c24ebb143289d91d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_frame_join_4.v
+++ b/rtl/axis_frame_join_4.v
@@ -218,11 +218,11 @@ always @* begin
         end
         STATE_WRITE_TAG: begin
             // write tag data
-            if (output_axis_tready_int) begin
+            if (output_axis_tready_int_reg) begin
                 // output ready, so send tag byte
                 state_next = STATE_WRITE_TAG;
                 frame_ptr_next = frame_ptr_reg + 1;
-                output_axis_tvalid_int = 1;
+                output_axis_tvalid_int = 1'b1;
 
                 offset = 0;
                 if (TAG_ENABLE) begin

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueId@@STATE_IDLE to ops

UPD HdlStmIf@@ to 
    UPD HdlValueId@@output_axis_tready_int to output_axis_tready_int_reg

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            DEL HdlValueInt@@z from ops


CommitId: 0d22a35bd855a7f08b34a3f1c24ebb143289d91d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_frame_join_4.v
+++ b/rtl/axis_frame_join_4.v
@@ -252,7 +252,7 @@ always @* begin
                 2'd3: input_3_axis_tready_next = output_axis_tready_int_early;
             endcase
 
-            if (input_tvalid & output_axis_tready_int) begin
+            if (input_tvalid & output_axis_tready_int_reg) begin
                 // output ready, transfer byte
                 state_next = STATE_TRANSFER;
                 output_axis_tdata_int = input_tdata;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueId@@STATE_IDLE to ops

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND to AND
        UPD HdlValueId@@output_axis_tready_int to output_axis_tready_int_reg

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            DEL HdlValueInt@@z from ops


CommitId: 0d22a35bd855a7f08b34a3f1c24ebb143289d91d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_frame_join_4.v
+++ b/rtl/axis_frame_join_4.v
@@ -264,14 +264,14 @@ always @* begin
                     // save tuser - assert tuser out if ANY tuser asserts received
                     output_tuser_next = output_tuser_next | input_tuser;
                     // disable input
-                    input_0_axis_tready_next = 0;
-                    input_1_axis_tready_next = 0;
-                    input_2_axis_tready_next = 0;
-                    input_3_axis_tready_next = 0;
+                    input_0_axis_tready_next = 1'b0;
+                    input_1_axis_tready_next = 1'b0;
+                    input_2_axis_tready_next = 1'b0;
+                    input_3_axis_tready_next = 1'b0;
 
-                    if (port_sel_reg == 3) begin
+                    if (port_sel_reg == 2'd3) begin
                         // last port - send tlast and tuser and revert to idle
-                        output_axis_tlast_int = 1;
+                        output_axis_tlast_int = 1'b1;
                         output_axis_tuser_int = output_tuser_next;
                         state_next = STATE_IDLE;
                     end else begin

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueId@@STATE_IDLE to ops

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND to AND
        UPD HdlValueId@@output_axis_tready_int to output_axis_tready_int_reg

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            DEL HdlValueInt@@z from ops


CommitId: 0d22a35bd855a7f08b34a3f1c24ebb143289d91d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_frame_join_4.v
+++ b/rtl/axis_frame_join_4.v
@@ -294,14 +294,14 @@ end
 always @(posedge clk) begin
     if (rst) begin
         state_reg <= STATE_IDLE;
-        frame_ptr_reg <= 0;
-        port_sel_reg <= 0;
-        input_0_axis_tready_reg <= 0;
-        input_1_axis_tready_reg <= 0;
-        input_2_axis_tready_reg <= 0;
-        input_3_axis_tready_reg <= 0;
-        output_tuser_reg <= 0;
-        busy_reg <= 0;
+        frame_ptr_reg <= 3'd0;
+        port_sel_reg <= 2'd0;
+        input_0_axis_tready_reg <= 1'b0;
+        input_1_axis_tready_reg <= 1'b0;
+        input_2_axis_tready_reg <= 1'b0;
+        input_3_axis_tready_reg <= 1'b0;
+        output_tuser_reg <= 1'b0;
+        busy_reg <= 1'b0;
     end else begin
         state_reg <= state_next;
 

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueId@@STATE_IDLE to ops


CommitId: 8982b4f4e1b11d3eedf0f95dbfbf07c5eb0a4f41
Fix modsell pin
--- a/example/VCU108/fpga_10g/rtl/fpga.v
+++ b/example/VCU108/fpga_10g/rtl/fpga.v
@@ -80,7 +80,7 @@ module fpga (
     // input  wire       qsfp_mgt_refclk_1_n,
     // output wire       qsfp_recclk_p,
     // output wire       qsfp_recclk_n,
-    output wire       qsfp_modesell,
+    output wire       qsfp_modsell,
     output wire       qsfp_resetl,
     input  wire       qsfp_modprsl,
     input  wire       qsfp_intl,

ParseResult:
UPD HdlIdDef@@qsfp_modesell to qsfp_modsell


CommitId: 8982b4f4e1b11d3eedf0f95dbfbf07c5eb0a4f41
Fix modsell pin
--- a/example/VCU108/fpga_10g/rtl/fpga.v
+++ b/example/VCU108/fpga_10g/rtl/fpga.v
@@ -347,7 +347,7 @@ si570_i2c_master (
 );
 
 // XGMII 10G PHY
-assign qsfp_modesell = 1'b1;
+assign qsfp_modsell = 1'b0;
 assign qsfp_resetl = 1'b1;
 assign qsfp_lpmode = 1'b0;
 
ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: qsfp_modsell

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueInt: 1
    HdlValueId: qsfp_modesell


CommitId: 0691c9d61b102cdbb3ed73a449786ba096d86a08
Fix output pipeline issue
--- a/rtl/axis_frame_fifo.v
+++ b/rtl/axis_frame_fifo.v
@@ -189,7 +189,7 @@ always @* begin
 
     mem_read_data_valid_next = mem_read_data_valid_reg;
 
-    if (output_axis_tready | ~output_axis_tvalid) begin
+    if (store_output | ~mem_read_data_valid_reg) begin
         // output data not valid OR currently being transferred
         if (~empty) begin
             // not empty, perform read
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@OR to OR
        UPD HdlValueId@@output_axis_tready to store_output
        UPD HdlOp@@NEG to NEG
            UPD HdlValueId@@output_axis_tvalid to mem_read_data_valid_reg


CommitId: 0fc986041e9a936aaa3c21c0d54c2a669316995b
Fix example design LED logic
--- a/example/ML605/fpga/rtl/fpga_core.v
+++ b/example/ML605/fpga/rtl/fpga_core.v
@@ -311,9 +311,14 @@ always @(posedge clk_125mhz) begin
     if (rst_125mhz) begin
         led_reg <= 0;
     end else begin
-        valid_last <= tx_udp_payload_tvalid;
-        if (tx_udp_payload_tvalid & ~valid_last) begin
-            led_reg <= tx_udp_payload_tdata;
+        if (tx_udp_payload_tvalid) begin
+            if (~valid_last) begin
+                led_reg <= tx_udp_payload_tdata;
+                valid_last <= 1'b1;
+            end
+            if (tx_udp_payload_tlast) begin
+                valid_last <= 1'b0;
+            end
         end
     end
 end
ParseResult:
UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

INS HdlStmIf@@ to body

UPD HdlStmAssign@@ to 
    MOV HdlValueId@@tx_udp_payload_tvalid to 
    HdlValueId: tx_udp_payload_tvalid
    DEL HdlValueId@@valid_last from 

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueId: tx_udp_payload_tvalid
                HdlValueId: valid_last
            HdlStmIf
                HdlOp: AND
                    list: ops
                        HdlValueId: tx_udp_payload_tvalid
                        HdlOp: NEG
                            list: ops
                                HdlValueId: valid_last
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueId: tx_udp_payload_tdata
                            HdlValueId: led_reg
                list: elifs

UPD HdlStmIf@@ to 
    INS list@@elifs to 

INS HdlStmIf@@ to body
HdlStmIf
    HdlValueId: tx_udp_payload_tlast
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: valid_last
    list: elifs

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND to AND
        MOV HdlOp@@NEG to ops
        HdlOp: NEG
            list: ops
                HdlValueId: valid_last
        DEL HdlValueId@@tx_udp_payload_tvalid from ops
        DEL list@@ops from AND
    DEL HdlOp@@AND from 

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 1
    HdlValueId: valid_last

DEL HdlStmAssign@@ from body


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/ip_eth_rx_64.v
+++ b/rtl/ip_eth_rx_64.v
@@ -190,7 +190,7 @@ reg shift_eth_payload_extra_cycle;
 reg [63:0] output_ip_payload_tdata_int;
 reg [7:0]  output_ip_payload_tkeep_int;
 reg        output_ip_payload_tvalid_int;
-reg        output_ip_payload_tready_int = 0;
+reg        output_ip_payload_tready_int_reg = 1'b0;
 reg        output_ip_payload_tlast_int;
 reg        output_ip_payload_tuser_int;
 wire       output_ip_payload_tready_int_early;

ParseResult:
UPD HdlIdDef@@output_ip_payload_tready_int to output_ip_payload_tready_int_reg


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/ip_eth_rx_64.v
+++ b/rtl/ip_eth_rx_64.v
@@ -397,31 +397,31 @@ always @* begin
             output_ip_payload_tlast_int = shift_eth_payload_tlast;
             output_ip_payload_tuser_int = shift_eth_payload_tuser;
 
-            if (output_ip_payload_tready_int & shift_eth_payload_tvalid) begin
+            if (output_ip_payload_tready_int_reg & shift_eth_payload_tvalid) begin
                 // word transfer through
                 frame_ptr_next = frame_ptr_reg+keep2count(shift_eth_payload_tkeep);
-                transfer_in_save = 1;
+                transfer_in_save = 1'b1;
                 if (frame_ptr_next >= output_ip_length_reg) begin
                     // have entire payload
                     frame_ptr_next = output_ip_length_reg;
                     output_ip_payload_tkeep_int = shift_eth_payload_tkeep & count2keep(output_ip_length_reg - frame_ptr_reg);
                     if (shift_eth_payload_tlast) begin
-                        input_eth_payload_tready_next = 0;
-                        flush_save = 1;
+                        input_eth_payload_tready_next = 1'b0;
+                        flush_save = 1'b1;
                         input_eth_hdr_ready_next = ~output_ip_hdr_valid_reg & ~check_hdr_reg;
                         state_next = STATE_IDLE;
                     end else begin
-                        store_last_word = 1;
-                        output_ip_payload_tvalid_int = 0;
+                        store_last_word = 1'b1;
+                        output_ip_payload_tvalid_int = 1'b0;
                         state_next = STATE_READ_PAYLOAD_LAST;
                     end
                 end else begin
                     if (shift_eth_payload_tlast) begin
                         // end of frame, but length does not match
-                        error_payload_early_termination_next = 1;
-                        output_ip_payload_tuser_int = 1;
-                        input_eth_payload_tready_next = 0;
-                        flush_save = 1;
+                        error_payload_early_termination_next = 1'b1;
+                        output_ip_payload_tuser_int = 1'b1;
+                        input_eth_payload_tready_next = 1'b0;
+                        flush_save = 1'b1;
                         input_eth_hdr_ready_next = ~output_ip_hdr_valid_reg & ~check_hdr_reg;
                         state_next = STATE_IDLE;
                     end else begin

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@AND to AND
        UPD HdlValueId@@output_ip_payload_tready_int to output_ip_payload_tready_int_reg


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/ip_eth_rx_64.v
+++ b/rtl/ip_eth_rx_64.v
@@ -433,15 +433,15 @@ always @* begin
             end
 
             if (check_hdr_reg) begin
-                check_hdr_next = 0;
+                check_hdr_next = 1'b0;
 
                 hdr_sum_temp = hdr_sum_reg[15:0] + hdr_sum_reg[31:16];
                 hdr_sum_temp = hdr_sum_temp[15:0] + hdr_sum_temp[16];
 
                 if (hdr_sum_temp != 16'hffff) begin
                     // bad checksum
-                    error_invalid_checksum_next = 1;
-                    output_ip_payload_tvalid_int = 0;
+                    error_invalid_checksum_next = 1'b1;
+                    output_ip_payload_tvalid_int = 1'b0;
                     if (shift_eth_payload_tlast & shift_eth_payload_tvalid) begin
                         // only one payload cycle; return to idle now
                         input_eth_hdr_ready_next = ~output_ip_hdr_valid_reg & ~check_hdr_reg;

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@AND to AND
        UPD HdlValueId@@output_ip_payload_tready_int to output_ip_payload_tready_int_reg


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/ip_eth_rx_64.v
+++ b/rtl/ip_eth_rx_64.v
@@ -467,12 +467,12 @@ always @* begin
             output_ip_payload_tlast_int = shift_eth_payload_tlast;
             output_ip_payload_tuser_int = shift_eth_payload_tuser;
 
-            if (output_ip_payload_tready_int & shift_eth_payload_tvalid) begin
-                transfer_in_save = 1;
+            if (output_ip_payload_tready_int_reg & shift_eth_payload_tvalid) begin
+                transfer_in_save = 1'b1;
                 if (shift_eth_payload_tlast) begin
-                    input_eth_payload_tready_next = 0;
-                    flush_save = 1;
-                    input_eth_hdr_ready_next = 1;
+                    input_eth_payload_tready_next = 1'b0;
+                    flush_save = 1'b1;
+                    input_eth_hdr_ready_next = 1'b1;
                     state_next = STATE_IDLE;
                 end else begin
                     state_next = STATE_READ_PAYLOAD_LAST;

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@AND to AND
        UPD HdlValueId@@output_ip_payload_tready_int to output_ip_payload_tready_int_reg


CommitId: 51b5335318c83e2662a0edb768b05ac7cbcd6603
Remove z from default states for FSM inference
--- a/rtl/eth_axis_tx.v
+++ b/rtl/eth_axis_tx.v
@@ -113,7 +113,7 @@ assign input_eth_payload_tready = input_eth_payload_tready_reg;
 assign busy = busy_reg;
 
 always @* begin
-    state_next = 2'bz;
+    state_next = STATE_IDLE;
 
     input_eth_hdr_ready_next = 0;
     input_eth_payload_tready_next = 0;
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueId@@STATE_IDLE to ops

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            DEL HdlValueInt@@z from ops


CommitId: 0d22a35bd855a7f08b34a3f1c24ebb143289d91d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_demux_4.v
+++ b/rtl/axis_demux_4.v
@@ -80,15 +80,15 @@ module axis_demux_4 #
     input  wire [1:0]             select
 );
 
-reg [1:0] select_reg = 0, select_next;
-reg frame_reg = 0, frame_next;
+reg [1:0] select_reg = 2'd0, select_next;
+reg frame_reg = 1'b0, frame_next;
 
-reg input_axis_tready_reg = 0, input_axis_tready_next;
+reg input_axis_tready_reg = 1'b0, input_axis_tready_next;
 
 // internal datapath
 reg [DATA_WIDTH-1:0] output_axis_tdata_int;
 reg                  output_axis_tvalid_int;
-reg                  output_axis_tready_int = 0;
+reg                  output_axis_tready_int_reg = 1'b0;
 reg                  output_axis_tlast_int;
 reg                  output_axis_tuser_int;
 wire                 output_axis_tready_int_early;

ParseResult:
UPD HdlIdDef@@output_axis_tready_int to output_axis_tready_int_reg


CommitId: 0d22a35bd855a7f08b34a3f1c24ebb143289d91d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_demux_4.v
+++ b/rtl/axis_demux_4.v
@@ -157,18 +157,23 @@ always @(posedge clk) begin
 end
 
 // output datapath logic
-reg [DATA_WIDTH-1:0] output_axis_tdata_reg = 0;
-reg                  output_0_axis_tvalid_reg = 0;
-reg                  output_1_axis_tvalid_reg = 0;
-reg                  output_2_axis_tvalid_reg = 0;
-reg                  output_3_axis_tvalid_reg = 0;
-reg                  output_axis_tlast_reg = 0;
-reg                  output_axis_tuser_reg = 0;
-
-reg [DATA_WIDTH-1:0] temp_axis_tdata_reg = 0;
-reg                  temp_axis_tvalid_reg = 0;
-reg                  temp_axis_tlast_reg = 0;
-reg                  temp_axis_tuser_reg = 0;
+reg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};
+reg                  output_0_axis_tvalid_reg = 1'b0, output_0_axis_tvalid_next;
+reg                  output_1_axis_tvalid_reg = 1'b0, output_1_axis_tvalid_next;
+reg                  output_2_axis_tvalid_reg = 1'b0, output_2_axis_tvalid_next;
+reg                  output_3_axis_tvalid_reg = 1'b0, output_3_axis_tvalid_next;
+reg                  output_axis_tlast_reg = 1'b0;
+reg                  output_axis_tuser_reg = 1'b0;
+
+reg [DATA_WIDTH-1:0] temp_axis_tdata_reg = {DATA_WIDTH{1'b0}};
+reg                  temp_axis_tvalid_reg = 1'b0, temp_axis_tvalid_next;
+reg                  temp_axis_tlast_reg = 1'b0;
+reg                  temp_axis_tuser_reg = 1'b0;
+
+// datapath control
+reg store_axis_int_to_output;
+reg store_axis_int_to_temp;
+reg store_axis_temp_to_output;
 
 assign output_0_axis_tdata = output_axis_tdata_reg;
 assign output_0_axis_tvalid = output_0_axis_tvalid_reg;

ParseResult:
INS HdlIdDef@@output_0_axis_tvalid_next to objs
HdlIdDef: output_0_axis_tvalid_next
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL

INS HdlIdDef@@output_1_axis_tvalid_next to objs
HdlIdDef: output_1_axis_tvalid_next
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL

INS HdlIdDef@@output_2_axis_tvalid_next to objs
HdlIdDef: output_2_axis_tvalid_next
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL

INS HdlIdDef@@output_3_axis_tvalid_next to objs
HdlIdDef: output_3_axis_tvalid_next
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL

INS HdlIdDef@@temp_axis_tvalid_next to objs
HdlIdDef: temp_axis_tvalid_next
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL

INS HdlIdDef@@store_axis_int_to_output to objs
HdlIdDef: store_axis_int_to_output
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL

INS HdlIdDef@@store_axis_int_to_temp to objs
HdlIdDef: store_axis_int_to_temp
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL

INS HdlIdDef@@store_axis_temp_to_output to objs
HdlIdDef: store_axis_temp_to_output
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL

UPD HdlIdDef@@output_axis_tdata_reg to output_axis_tdata_reg
    INS HdlOp@@REPL_CONCAT to output_axis_tdata_reg
    UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
        INS list@@ops to REPL_CONCAT
        INS HdlValueId@@DATA_WIDTH to ops

UPD HdlIdDef@@temp_axis_tdata_reg to temp_axis_tdata_reg
    INS HdlOp@@REPL_CONCAT to temp_axis_tdata_reg
    UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
        INS list@@ops to REPL_CONCAT
        INS HdlValueId@@DATA_WIDTH to ops

UPD HdlIdDef@@output_axis_tdata_reg to output_axis_tdata_reg
    MOV HdlValueInt@@0 to output_axis_tdata_reg
    HdlValueInt: 0

UPD HdlIdDef@@temp_axis_tdata_reg to temp_axis_tdata_reg
    MOV HdlValueInt@@0 to temp_axis_tdata_reg
    HdlValueInt: 0


CommitId: 4754d947367bddef6e3cda62307e3976ed02e97b
Fix backpressure bug
--- a/rtl/axis_ram_switch.v
+++ b/rtl/axis_ram_switch.v
@@ -922,7 +922,7 @@ generate
             end
 
             // process commands and issue memory reads
-            if (cmd_valid_reg && (!ram_rd_en_reg || ram_rd_ack) && ($unsigned(out_fifo_ctrl_wr_ptr_reg - out_fifo_rd_ptr_reg) < 32)) begin
+            if (cmd_valid_reg && !cmd_status_valid_next && (!ram_rd_en_reg || ram_rd_ack) && ($unsigned(out_fifo_ctrl_wr_ptr_reg - out_fifo_rd_ptr_reg) < 32)) begin
                 // update counters
                 rd_ptr_next[ADDR_WIDTH-1:0] = rd_ptr_reg[ADDR_WIDTH-1:0] + 1;
                 len_next = len_reg - 1;
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@AND_LOG to AND_LOG
            INS HdlOp@@AND_LOG to ops
            UPD HdlOp@@AND_LOG to AND_LOG
                INS list@@ops to AND_LOG
                INS HdlOp@@NEG_LOG to ops
                HdlOp: NEG_LOG
                    list: ops
                        HdlValueId: cmd_status_valid_next

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@AND_LOG to AND_LOG
            MOV HdlValueId@@cmd_valid_reg to ops
            HdlValueId: cmd_valid_reg


CommitId: adb9c4d147f54a51d7ccd93b020b1a564205b804
Fix initial values
--- a/rtl/ptp_clock_cdc.v
+++ b/rtl/ptp_clock_cdc.v
@@ -90,7 +90,7 @@ reg [TS_NS_WIDTH-1:0] ts_ns_reg = 0;
 reg [FNS_WIDTH-1:0] ts_fns_reg = 0;
 reg [TS_NS_WIDTH-1:0] ts_ns_inc_reg = 0;
 reg [FNS_WIDTH-1:0] ts_fns_inc_reg = 0;
-reg [TS_NS_WIDTH+1-1:0] ts_ns_ovf_reg = {TS_NS_WIDTH{1'b1}};
+reg [TS_NS_WIDTH+1-1:0] ts_ns_ovf_reg = {TS_NS_WIDTH+1{1'b1}};
 reg [FNS_WIDTH-1:0] ts_fns_ovf_reg = {FNS_WIDTH{1'b1}};
 
 reg ts_step_reg = 1'b0;

ParseResult:
UPD HdlIdDef@@ts_ns_ovf_reg to ts_ns_ovf_reg
    INS HdlOp@@REPL_CONCAT to ts_ns_ovf_reg
    UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
        INS list@@ops to REPL_CONCAT
        INS HdlValueInt@@1 to ops

UPD HdlIdDef@@ts_ns_ovf_reg to ts_ns_ovf_reg
    UPD HdlOp@@REPL_CONCAT to ADD
    MOV HdlOp@@REPL_CONCAT to ts_ns_ovf_reg
    HdlOp: REPL_CONCAT
        list: ops
            HdlValueId: TS_NS_WIDTH
            HdlValueInt: 1


CommitId: adb9c4d147f54a51d7ccd93b020b1a564205b804
Fix initial values
--- a/rtl/ptp_clock_cdc.v
+++ b/rtl/ptp_clock_cdc.v
@@ -444,7 +444,7 @@ always @(posedge output_clk) begin
         ts_fns_reg <= 0;
         ts_ns_inc_reg <= 0;
         ts_fns_inc_reg <= 0;
-        ts_ns_ovf_reg <= {TS_NS_WIDTH{1'b1}};
+        ts_ns_ovf_reg <= {TS_NS_WIDTH+1{1'b1}};
         ts_fns_ovf_reg <= {FNS_WIDTH{1'b1}};
         ts_step_reg <= 0;
         pps_reg <= 0;
ParseResult:
UPD HdlStmAssign@@ to 
    INS HdlOp@@REPL_CONCAT to 
    UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
        INS list@@ops to REPL_CONCAT
        INS HdlValueInt@@1 to ops

UPD HdlStmAssign@@ to 
    UPD HdlOp@@REPL_CONCAT to ADD
    MOV HdlOp@@REPL_CONCAT to 
    HdlOp: REPL_CONCAT
        list: ops
            HdlValueId: TS_NS_WIDTH
            HdlValueInt: 1


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/ip_mux_64_4.v
+++ b/rtl/ip_mux_64_4.v
@@ -336,6 +336,25 @@ always @* begin
             selected_input_ip_source_ip = input_3_ip_source_ip;
             selected_input_ip_dest_ip = input_3_ip_dest_ip;
         end
+        default: begin
+            selected_input_ip_hdr_valid = 1'b0;
+            selected_input_eth_dest_mac = 48'd0;
+            selected_input_eth_src_mac = 48'd0;
+            selected_input_eth_type = 16'd0;
+            selected_input_ip_version = 4'd0;
+            selected_input_ip_ihl = 4'd0;
+            selected_input_ip_dscp = 6'd0;
+            selected_input_ip_ecn = 2'd0;
+            selected_input_ip_length = 16'd0;
+            selected_input_ip_identification = 16'd0;
+            selected_input_ip_flags = 3'd0;
+            selected_input_ip_fragment_offset = 13'd0;
+            selected_input_ip_ttl = 8'd0;
+            selected_input_ip_protocol = 8'd0;
+            selected_input_ip_header_checksum = 16'd0;
+            selected_input_ip_source_ip = 32'd0;
+            selected_input_ip_dest_ip = 32'd0;
+        end
     endcase
 end
 

ParseResult:
UPD HdlStmCase@@select to select
    INS HdlStmBlock@@SEQ to select
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_hdr_valid
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_eth_dest_mac
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_eth_src_mac
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_eth_type
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_version
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_ihl
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_dscp
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_ecn
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_length
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_identification
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_flags
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_fragment_offset
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_ttl
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_protocol
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_header_checksum
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_source_ip
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_dest_ip
                    HdlValueInt: 0


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/ip_mux_64_4.v
+++ b/rtl/ip_mux_64_4.v
@@ -380,6 +399,14 @@ always @* begin
             current_input_tlast = input_3_ip_payload_tlast;
             current_input_tuser = input_3_ip_payload_tuser;
         end
+        default: begin
+            current_input_tdata = 64'd0;
+            current_input_tkeep = 8'd0;
+            current_input_tvalid = 1'b0;
+            current_input_tready = 1'b0;
+            current_input_tlast = 1'b0;
+            current_input_tuser = 1'b0;
+        end
     endcase
 end
 

ParseResult:
UPD HdlStmCase@@select_reg to select_reg
    INS HdlStmBlock@@SEQ to select_reg
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tdata
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tkeep
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tvalid
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tready
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tlast
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tuser
                    HdlValueInt: 0


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/ip_mux_64_4.v
+++ b/rtl/ip_mux_64_4.v
@@ -392,10 +419,10 @@ always @* begin
     input_2_ip_hdr_ready_next = input_2_ip_hdr_ready_reg & ~input_2_ip_hdr_valid;
     input_3_ip_hdr_ready_next = input_3_ip_hdr_ready_reg & ~input_3_ip_hdr_valid;
 
-    input_0_ip_payload_tready_next = 0;
-    input_1_ip_payload_tready_next = 0;
-    input_2_ip_payload_tready_next = 0;
-    input_3_ip_payload_tready_next = 0;
+    input_0_ip_payload_tready_next = 1'b0;
+    input_1_ip_payload_tready_next = 1'b0;
+    input_2_ip_payload_tready_next = 1'b0;
+    input_3_ip_payload_tready_next = 1'b0;
 
     output_ip_hdr_valid_next = output_ip_hdr_valid_reg & ~output_ip_hdr_ready;
     output_eth_dest_mac_next = output_eth_dest_mac_reg;

ParseResult:
UPD HdlStmCase@@select_reg to select_reg
    INS HdlStmBlock@@SEQ to select_reg
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tdata
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tkeep
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tvalid
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tready
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tlast
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tuser
                    HdlValueInt: 0


CommitId: 6238ed5755fc87671156cd2c417866ab71b62a9a
Report error for invalid encoding
--- a/rtl/axis_xgmii_tx_32.v
+++ b/rtl/axis_xgmii_tx_32.v
@@ -248,10 +248,10 @@ always @* begin
             extra_cycle = 1'b1;
         end
         default: begin
-            fcs_output_txd_0 = 32'd0;
-            fcs_output_txd_1 = 32'd0;
-            fcs_output_txc_0 = 4'd0;
-            fcs_output_txc_1 = 4'd0;
+            fcs_output_txd_0 = {4{XGMII_ERROR}};
+            fcs_output_txd_1 = {4{XGMII_ERROR}};
+            fcs_output_txc_0 = 4'b1111;
+            fcs_output_txc_1 = 4'b1111;
             ifg_offset = 8'd0;
             extra_cycle = 1'b0;
         end
ParseResult:
UPD HdlStmCase@@s_tkeep_reg to s_tkeep_reg
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@REPL_CONCAT to ops
            UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                INS list@@ops to REPL_CONCAT
                INS HdlValueId@@XGMII_ERROR to ops
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@REPL_CONCAT to ops
            UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                INS list@@ops to REPL_CONCAT
                INS HdlValueId@@XGMII_ERROR to ops

UPD HdlStmCase@@s_tkeep_reg to s_tkeep_reg
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueInt@@0 to 1111
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueInt@@0 to 1111
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueInt@@0 to 4
            MOV HdlValueInt@@0 to ops
            HdlValueInt: 0
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueInt@@0 to 4
            MOV HdlValueInt@@0 to ops
            HdlValueInt: 0


CommitId: 1bec4857660fd25745f00a82511b2e25cca778b9
Fix constants
--- a/rtl/arp_64.v
+++ b/rtl/arp_64.v
@@ -288,7 +288,7 @@ always @* begin
                     outgoing_arp_tha_next = incoming_arp_sha;
                     outgoing_arp_tpa_next = incoming_arp_spa;
                 end
-            end else if (incoming_arp_oper == ARP_OPER_INARP_REPLY) begin
+            end else if (incoming_arp_oper == ARP_OPER_INARP_REQUEST) begin
                 // INARP request
                 if (incoming_arp_tha == local_mac) begin
                     // send reply frame to valid incoming request
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        UPD HdlValueId@@ARP_OPER_INARP_REPLY to ARP_OPER_INARP_REQUEST


CommitId: 42950abf127e6247d328d3246032db026c698df4
Refactor PTP period output, implement error output
--- a/rtl/ptp_perout.v
+++ b/rtl/ptp_perout.v
@@ -115,7 +115,7 @@ reg [30:0] ts_96_ns_ovf_reg = 0, ts_96_ns_ovf_next;
 reg [15:0] ts_96_fns_ovf_reg = 0, ts_96_fns_ovf_next;
 
 reg locked_reg = 1'b0, locked_next;
-reg error_reg = 1'b0;
+reg error_reg = 1'b0, error_next;
 reg level_reg = 1'b0, level_next;
 reg output_reg = 1'b0, output_next;
 

ParseResult:
INS HdlIdDef@@error_next to objs
HdlIdDef: error_next
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL


CommitId: 42950abf127e6247d328d3246032db026c698df4
Refactor PTP period output, implement error output
--- a/rtl/ptp_perout.v
+++ b/rtl/ptp_perout.v
@@ -302,6 +282,7 @@ always @(posedge clk) begin
     end
 
     locked_reg <= locked_next;
+    error_reg <= error_next;
     level_reg <= level_next;
     output_reg <= output_next;
 
ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: error_next
    HdlValueId: error_reg


CommitId: 0fc986041e9a936aaa3c21c0d54c2a669316995b
Fix example design LED logic
--- a/example/DE5-Net/fpga/rtl/fpga_core.v
+++ b/example/DE5-Net/fpga/rtl/fpga_core.v
@@ -304,9 +304,14 @@ always @(posedge clk) begin
     if (rst) begin
         led_reg <= 0;
     end else begin
-        valid_last <= tx_udp_payload_tvalid;
-        if (tx_udp_payload_tvalid & ~valid_last) begin
-            led_reg <= tx_udp_payload_tdata;
+        if (tx_udp_payload_tvalid) begin
+            if (~valid_last) begin
+                led_reg <= tx_udp_payload_tdata;
+                valid_last <= 1'b1;
+            end
+            if (tx_udp_payload_tlast) begin
+                valid_last <= 1'b0;
+            end
         end
     end
 end
ParseResult:
UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

INS HdlStmIf@@ to body

UPD HdlStmAssign@@ to 
    MOV HdlValueId@@tx_udp_payload_tvalid to 
    HdlValueId: tx_udp_payload_tvalid
    DEL HdlValueId@@valid_last from 

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueId: tx_udp_payload_tvalid
                HdlValueId: valid_last
            HdlStmIf
                HdlOp: AND
                    list: ops
                        HdlValueId: tx_udp_payload_tvalid
                        HdlOp: NEG
                            list: ops
                                HdlValueId: valid_last
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueId: tx_udp_payload_tdata
                            HdlValueId: led_reg
                list: elifs

UPD HdlStmIf@@ to 
    INS list@@elifs to 

INS HdlStmIf@@ to body
HdlStmIf
    HdlValueId: tx_udp_payload_tlast
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: valid_last
    list: elifs

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND to AND
        MOV HdlOp@@NEG to ops
        HdlOp: NEG
            list: ops
                HdlValueId: valid_last
        DEL HdlValueId@@tx_udp_payload_tvalid from ops
        DEL list@@ops from AND
    DEL HdlOp@@AND from 

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 1
    HdlValueId: valid_last

DEL HdlStmAssign@@ from body


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/udp_demux_64_4.v
+++ b/rtl/udp_demux_64_4.v
@@ -354,6 +354,12 @@ always @* begin
             current_output_tvalid = output_3_udp_payload_tvalid;
             current_output_tready = output_3_udp_payload_tready;
         end
+        default: begin
+            current_output_udp_hdr_valid = 1'b0;
+            current_output_udp_hdr_ready = 1'b0;
+            current_output_tvalid = 1'b0;
+            current_output_tready = 1'b0;
+        end
     endcase
 end
 

ParseResult:
UPD HdlStmCase@@select_reg to select_reg
    INS HdlStmBlock@@SEQ to select_reg
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_output_udp_hdr_valid
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_output_udp_hdr_ready
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_output_tvalid
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_output_tready
                    HdlValueInt: 0


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/udp_demux_64_4.v
+++ b/rtl/udp_demux_64_4.v
@@ -362,7 +368,7 @@ always @* begin
     frame_next = frame_reg;
 
     input_udp_hdr_ready_next = input_udp_hdr_ready_reg & ~input_udp_hdr_valid;
-    input_udp_payload_tready_next = 0;
+    input_udp_payload_tready_next = 1'b0;
     output_0_udp_hdr_valid_next = output_0_udp_hdr_valid_reg & ~output_0_udp_hdr_ready;
     output_1_udp_hdr_valid_next = output_1_udp_hdr_valid_reg & ~output_1_udp_hdr_ready;
     output_2_udp_hdr_valid_next = output_2_udp_hdr_valid_reg & ~output_2_udp_hdr_ready;

ParseResult:
UPD HdlStmCase@@select_reg to select_reg
    INS HdlStmBlock@@SEQ to select_reg
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_output_udp_hdr_valid
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_output_udp_hdr_ready
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_output_tvalid
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_output_tready
                    HdlValueInt: 0


CommitId: 0691c9d61b102cdbb3ed73a449786ba096d86a08
Fix output pipeline issue
--- a/rtl/axis_async_frame_fifo_64.v
+++ b/rtl/axis_async_frame_fifo_64.v
@@ -317,7 +317,7 @@ always @* begin
 
     mem_read_data_valid_next = mem_read_data_valid_reg;
 
-    if (output_axis_tready | ~output_axis_tvalid) begin
+    if (store_output | ~mem_read_data_valid_reg) begin
         // output data not valid OR currently being transferred
         if (~empty) begin
             // not empty, perform read
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@OR to OR
        UPD HdlValueId@@output_axis_tready to store_output
        UPD HdlOp@@NEG to NEG
            UPD HdlValueId@@output_axis_tvalid to mem_read_data_valid_reg


CommitId: 839ea23ac4166fd790fbb61a21bf1fcfcdb806ec
Fix arb mux header backpressure
--- a/rtl/udp_arb_mux.v
+++ b/rtl/udp_arb_mux.v
@@ -123,7 +123,7 @@ parameter CL_S_COUNT = $clog2(S_COUNT);
 
 reg frame_reg = 1'b0, frame_next;
 
-reg s_udp_hdr_ready_mask_reg = 1'b0, s_udp_hdr_ready_mask_next;
+reg [S_COUNT-1:0] s_udp_hdr_ready_reg = {S_COUNT{1'b0}}, s_udp_hdr_ready_next;
 
 reg m_udp_hdr_valid_reg = 1'b0, m_udp_hdr_valid_next;
 reg [47:0] m_eth_dest_mac_reg = 48'd0, m_eth_dest_mac_next;

ParseResult:
INS HdlIdDef@@s_udp_hdr_ready_reg to objs
HdlIdDef: s_udp_hdr_ready_reg
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: S_COUNT
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlOp: REPL_CONCAT
        list: ops
            HdlValueId: S_COUNT
            HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@s_udp_hdr_ready_next to objs
HdlIdDef: s_udp_hdr_ready_next
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: S_COUNT
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@s_udp_hdr_ready_mask_reg from objs
HdlIdDef: s_udp_hdr_ready_mask_reg
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@s_udp_hdr_ready_mask_next from objs
HdlIdDef: s_udp_hdr_ready_mask_next
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL


CommitId: 839ea23ac4166fd790fbb61a21bf1fcfcdb806ec
Fix arb mux header backpressure
--- a/rtl/udp_arb_mux.v
+++ b/rtl/udp_arb_mux.v
@@ -164,7 +164,7 @@ reg  [DEST_WIDTH-1:0] m_udp_payload_axis_tdest_int;
 reg  [USER_WIDTH-1:0] m_udp_payload_axis_tuser_int;
 wire                  m_udp_payload_axis_tready_int_early;
 
-assign s_udp_hdr_ready = (!s_udp_hdr_ready_mask_reg && grant_valid) << grant_encoded;
+assign s_udp_hdr_ready = s_udp_hdr_ready_reg;
 
 assign s_udp_payload_axis_tready = (m_udp_payload_axis_tready_int_reg && grant_valid) << grant_encoded;
 

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: s_udp_hdr_ready_reg
    HdlValueId: s_udp_hdr_ready

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: SLL
        list: ops
            HdlOp: AND_LOG
                list: ops
                    HdlOp: NEG_LOG
                        list: ops
                            HdlValueId: s_udp_hdr_ready_mask_reg
                    HdlValueId: grant_valid
            HdlValueId: grant_encoded
    HdlValueId: s_udp_hdr_ready


CommitId: 839ea23ac4166fd790fbb61a21bf1fcfcdb806ec
Fix arb mux header backpressure
--- a/rtl/udp_arb_mux.v
+++ b/rtl/udp_arb_mux.v
@@ -223,7 +223,7 @@ assign acknowledge = grant & s_udp_payload_axis_tvalid & s_udp_payload_axis_trea
 always @* begin
     frame_next = frame_reg;
 
-    s_udp_hdr_ready_mask_next = s_udp_hdr_ready_mask_reg;
+    s_udp_hdr_ready_next = {S_COUNT{1'b0}};
 
     m_udp_hdr_valid_next = m_udp_hdr_valid_reg && !m_udp_hdr_ready;
     m_eth_dest_mac_next = m_eth_dest_mac_reg;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@s_udp_hdr_ready_mask_next to s_udp_hdr_ready_next
            UPD HdlValueId@@s_udp_hdr_ready_mask_reg to S_COUNT
            MOV HdlValueId@@s_udp_hdr_ready_mask_reg to ops
            HdlValueId: s_udp_hdr_ready_mask_reg

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@REPL_CONCAT to ops
            UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                INS list@@ops to REPL_CONCAT
                INS HdlValueInt@@0 to ops


CommitId: 839ea23ac4166fd790fbb61a21bf1fcfcdb806ec
Fix arb mux header backpressure
--- a/rtl/udp_arb_mux.v
+++ b/rtl/udp_arb_mux.v
@@ -251,15 +251,14 @@ always @* begin
         // end of frame detection
         if (s_udp_payload_axis_tlast[grant_encoded]) begin
             frame_next = 1'b0;
-            s_udp_hdr_ready_mask_next = 1'b0;
         end
     end
 
-    if (!frame_reg && grant_valid) begin
+    if (!frame_reg && grant_valid && (m_udp_hdr_ready || !m_udp_hdr_valid)) begin
         // start of frame
         frame_next = 1'b1;
 
-        s_udp_hdr_ready_mask_next = 1'b1;
+        s_udp_hdr_ready_next = grant;
 
         m_udp_hdr_valid_next = 1'b1;
         m_eth_dest_mac_next = s_eth_dest_mac[grant_encoded*48 +: 48];

ParseResult:
UPD HdlStmIf@@ to 
    INS HdlOp@@AND_LOG to 
    UPD HdlOp@@AND_LOG to AND_LOG
        INS list@@ops to AND_LOG
        INS HdlOp@@OR_LOG to ops
        HdlOp: OR_LOG
            list: ops
                HdlValueId: m_udp_hdr_ready
                HdlOp: NEG_LOG
                    list: ops
                        HdlValueId: m_udp_hdr_valid
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueId@@grant to ops

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@s_udp_hdr_ready_mask_next to s_udp_hdr_ready_next
            UPD HdlValueId@@s_udp_hdr_ready_mask_reg to S_COUNT
            MOV HdlValueId@@s_udp_hdr_ready_mask_reg to ops
            HdlValueId: s_udp_hdr_ready_mask_reg

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@REPL_CONCAT to ops
            UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                INS list@@ops to REPL_CONCAT
                INS HdlValueInt@@0 to ops

UPD HdlStmIf@@ to 
    MOV HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlOp: NEG_LOG
                list: ops
                    HdlValueId: frame_reg
            HdlValueId: grant_valid
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@s_udp_hdr_ready_mask_next to s_udp_hdr_ready_next
            DEL HdlValueInt@@1 from ops

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: s_udp_hdr_ready_mask_next
                HdlValueInt: 0


CommitId: 839ea23ac4166fd790fbb61a21bf1fcfcdb806ec
Fix arb mux header backpressure
--- a/rtl/udp_arb_mux.v
+++ b/rtl/udp_arb_mux.v
@@ -295,16 +294,11 @@ always @* begin
 end
 
 always @(posedge clk) begin
-    if (rst) begin
-        frame_reg <= 1'b0;
-        s_udp_hdr_ready_mask_reg <= 1'b0;
-        m_udp_hdr_valid_reg <= 1'b0;
-    end else begin
-        frame_reg <= frame_next;
-        s_udp_hdr_ready_mask_reg <= s_udp_hdr_ready_mask_next;
-        m_udp_hdr_valid_reg <= m_udp_hdr_valid_next;
-    end
+    frame_reg <= frame_next;
+
+    s_udp_hdr_ready_reg <= s_udp_hdr_ready_next;
 
+    m_udp_hdr_valid_reg <= m_udp_hdr_valid_next;
     m_eth_dest_mac_reg <= m_eth_dest_mac_next;
     m_eth_src_mac_reg <= m_eth_src_mac_next;
     m_eth_type_reg <= m_eth_type_next;

ParseResult:
MOV HdlStmIf@@ to body
HdlStmIf
    HdlValueId: rst
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: frame_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: s_udp_hdr_ready_mask_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: m_udp_hdr_valid_reg
    list: elifs
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueId: frame_next
                HdlValueId: frame_reg
            HdlStmAssign
                HdlValueId: s_udp_hdr_ready_mask_next
                HdlValueId: s_udp_hdr_ready_mask_reg
            HdlStmAssign
                HdlValueId: m_udp_hdr_valid_next
                HdlValueId: m_udp_hdr_valid_reg

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: frame_next
    HdlValueId: frame_reg

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: s_udp_hdr_ready_mask_next
    HdlValueId: s_udp_hdr_ready_mask_reg

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: m_udp_hdr_valid_next
    HdlValueId: m_udp_hdr_valid_reg

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@s_udp_hdr_ready_mask_next to s_udp_hdr_ready_next
    UPD HdlValueId@@s_udp_hdr_ready_mask_reg to s_udp_hdr_ready_reg

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@s_udp_hdr_ready_mask_next to s_udp_hdr_ready_next
            UPD HdlValueId@@s_udp_hdr_ready_mask_reg to S_COUNT
            MOV HdlValueId@@s_udp_hdr_ready_mask_reg to ops
            HdlValueId: s_udp_hdr_ready_mask_reg

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@s_udp_hdr_ready_mask_reg to s_udp_hdr_ready_reg
    MOV HdlValueInt@@0 to 
    HdlValueInt: 0

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 


CommitId: 839ea23ac4166fd790fbb61a21bf1fcfcdb806ec
Fix arb mux header backpressure
--- a/rtl/udp_arb_mux.v
+++ b/rtl/udp_arb_mux.v
@@ -325,6 +319,12 @@ always @(posedge clk) begin
     m_udp_dest_port_reg <= m_udp_dest_port_next;
     m_udp_length_reg <= m_udp_length_next;
     m_udp_checksum_reg <= m_udp_checksum_next;
+
+    if (rst) begin
+        frame_reg <= 1'b0;
+        s_udp_hdr_ready_reg <= {S_COUNT{1'b0}};
+        m_udp_hdr_valid_reg <= 1'b0;
+    end
 end
 
 // output datapath logic
ParseResult:
UPD HdlStmAssign@@ to 
    INS HdlOp@@REPL_CONCAT to 
    UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
        INS list@@ops to REPL_CONCAT
        INS HdlValueId@@S_COUNT to ops


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/arp_eth_rx.v
+++ b/rtl/arp_eth_rx.v
@@ -329,15 +329,12 @@ end
 always @(posedge clk) begin
     if (rst) begin
         state_reg <= STATE_IDLE;
-        frame_ptr_reg <= 0;
-        input_eth_payload_tready_reg <= 0;
-        output_frame_valid_reg <= 0;
-        output_eth_dest_mac_reg <= 0;
-        output_eth_src_mac_reg <= 0;
-        output_eth_type_reg <= 0;
-        busy_reg <= 0;
-        error_header_early_termination_reg <= 0;
-        error_invalid_header_reg <= 0;
+        frame_ptr_reg <= 8'd0;
+        input_eth_payload_tready_reg <= 1'b0;
+        output_frame_valid_reg <= 1'b0;
+        busy_reg <= 1'b0;
+        error_header_early_termination_reg <= 1'b0;
+        error_invalid_header_reg <= 1'b0;
     end else begin
         state_reg <= state_next;
 

ParseResult:
UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueId: state_next
                HdlValueId: state_reg
            HdlStmAssign
                HdlValueId: input_eth_hdr_ready_next
                HdlValueId: input_eth_hdr_ready_reg
            HdlStmAssign
                HdlValueId: input_eth_payload_tready_next
                HdlValueId: input_eth_payload_tready_reg
            HdlStmAssign
                HdlValueId: frame_ptr_next
                HdlValueId: frame_ptr_reg
            HdlStmAssign
                HdlValueId: output_frame_valid_next
                HdlValueId: output_frame_valid_reg
            HdlStmAssign
                HdlValueId: error_header_early_termination_next
                HdlValueId: error_header_early_termination_reg
            HdlStmAssign
                HdlValueId: error_invalid_header_next
                HdlValueId: error_invalid_header_reg
            HdlStmAssign
                HdlOp: NE
                    list: ops
                        HdlValueId: state_next
                        HdlValueId: STATE_IDLE
                HdlValueId: busy_reg
            HdlStmIf
                HdlValueId: store_eth_hdr
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueId: input_eth_dest_mac
                            HdlValueId: output_eth_dest_mac_reg
                        HdlStmAssign
                            HdlValueId: input_eth_src_mac
                            HdlValueId: output_eth_src_mac_reg
                        HdlStmAssign
                            HdlValueId: input_eth_type
                            HdlValueId: output_eth_type_reg
                list: elifs
            HdlStmIf
                HdlValueId: store_arp_htype_0
                HdlStmAssign: if_true
                    HdlValueId: input_eth_payload_tdata
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: output_arp_htype_reg
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 7
                                    HdlValueInt: 0
                list: elifs
            HdlStmIf
                HdlValueId: store_arp_htype_1
                HdlStmAssign: if_true
                    HdlValueId: input_eth_payload_tdata
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: output_arp_htype_reg
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 15
                                    HdlValueInt: 8
                list: elifs
            HdlStmIf
                HdlValueId: store_arp_ptype_0
                HdlStmAssign: if_true
                    HdlValueId: input_eth_payload_tdata
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: output_arp_ptype_reg
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 7
                                    HdlValueInt: 0
                list: elifs
            HdlStmIf
                HdlValueId: store_arp_ptype_1
                HdlStmAssign: if_true
                    HdlValueId: input_eth_payload_tdata
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: output_arp_ptype_reg
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 15
                                    HdlValueInt: 8
                list: elifs
            HdlStmIf
                HdlValueId: store_arp_hlen
                HdlStmAssign: if_true
                    HdlValueId: input_eth_payload_tdata
                    HdlValueId: output_arp_hlen_reg
                list: elifs
            HdlStmIf
                HdlValueId: store_arp_plen
                HdlStmAssign: if_true
                    HdlValueId: input_eth_payload_tdata
                    HdlValueId: output_arp_plen_reg
                list: elifs
            HdlStmIf
                HdlValueId: store_arp_oper_0
                HdlStmAssign: if_true
                    HdlValueId: input_eth_payload_tdata
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: output_arp_oper_reg
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 7
                                    HdlValueInt: 0
                list: elifs
            HdlStmIf
                HdlValueId: store_arp_oper_1
                HdlStmAssign: if_true
                    HdlValueId: input_eth_payload_tdata
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: output_arp_oper_reg
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 15
                                    HdlValueInt: 8
                list: elifs
            HdlStmIf
                HdlValueId: store_arp_sha_0
                HdlStmAssign: if_true
                    HdlValueId: input_eth_payload_tdata
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: output_arp_sha_reg
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 7
                                    HdlValueInt: 0
                list: elifs
            HdlStmIf
                HdlValueId: store_arp_sha_1
                HdlStmAssign: if_true
                    HdlValueId: input_eth_payload_tdata
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: output_arp_sha_reg
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 15
                                    HdlValueInt: 8
                list: elifs
            HdlStmIf
                HdlValueId: store_arp_sha_2
                HdlStmAssign: if_true
                    HdlValueId: input_eth_payload_tdata
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: output_arp_sha_reg
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 23
                                    HdlValueInt: 16
                list: elifs
            HdlStmIf
                HdlValueId: store_arp_sha_3
                HdlStmAssign: if_true
                    HdlValueId: input_eth_payload_tdata
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: output_arp_sha_reg
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 31
                                    HdlValueInt: 24
                list: elifs
            HdlStmIf
                HdlValueId: store_arp_sha_4
                HdlStmAssign: if_true
                    HdlValueId: input_eth_payload_tdata
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: output_arp_sha_reg
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 39
                                    HdlValueInt: 32
                list: elifs
            HdlStmIf
                HdlValueId: store_arp_sha_5
                HdlStmAssign: if_true
                    HdlValueId: input_eth_payload_tdata
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: output_arp_sha_reg
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 47
                                    HdlValueInt: 40
                list: elifs
            HdlStmIf
                HdlValueId: store_arp_spa_0
                HdlStmAssign: if_true
                    HdlValueId: input_eth_payload_tdata
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: output_arp_spa_reg
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 7
                                    HdlValueInt: 0
                list: elifs
            HdlStmIf
                HdlValueId: store_arp_spa_1
                HdlStmAssign: if_true
                    HdlValueId: input_eth_payload_tdata
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: output_arp_spa_reg
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 15
                                    HdlValueInt: 8
                list: elifs
            HdlStmIf
                HdlValueId: store_arp_spa_2
                HdlStmAssign: if_true
                    HdlValueId: input_eth_payload_tdata
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: output_arp_spa_reg
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 23
                                    HdlValueInt: 16
                list: elifs
            HdlStmIf
                HdlValueId: store_arp_spa_3
                HdlStmAssign: if_true
                    HdlValueId: input_eth_payload_tdata
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: output_arp_spa_reg
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 31
                                    HdlValueInt: 24
                list: elifs
            HdlStmIf
                HdlValueId: store_arp_tha_0
                HdlStmAssign: if_true
                    HdlValueId: input_eth_payload_tdata
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: output_arp_tha_reg
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 7
                                    HdlValueInt: 0
                list: elifs
            HdlStmIf
                HdlValueId: store_arp_tha_1
                HdlStmAssign: if_true
                    HdlValueId: input_eth_payload_tdata
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: output_arp_tha_reg
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 15
                                    HdlValueInt: 8
                list: elifs
            HdlStmIf
                HdlValueId: store_arp_tha_2
                HdlStmAssign: if_true
                    HdlValueId: input_eth_payload_tdata
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: output_arp_tha_reg
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 23
                                    HdlValueInt: 16
                list: elifs
            HdlStmIf
                HdlValueId: store_arp_tha_3
                HdlStmAssign: if_true
                    HdlValueId: input_eth_payload_tdata
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: output_arp_tha_reg
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 31
                                    HdlValueInt: 24
                list: elifs
            HdlStmIf
                HdlValueId: store_arp_tha_4
                HdlStmAssign: if_true
                    HdlValueId: input_eth_payload_tdata
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: output_arp_tha_reg
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 39
                                    HdlValueInt: 32
                list: elifs
            HdlStmIf
                HdlValueId: store_arp_tha_5
                HdlStmAssign: if_true
                    HdlValueId: input_eth_payload_tdata
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: output_arp_tha_reg
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 47
                                    HdlValueInt: 40
                list: elifs
            HdlStmIf
                HdlValueId: store_arp_tpa_0
                HdlStmAssign: if_true
                    HdlValueId: input_eth_payload_tdata
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: output_arp_tpa_reg
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 7
                                    HdlValueInt: 0
                list: elifs
            HdlStmIf
                HdlValueId: store_arp_tpa_1
                HdlStmAssign: if_true
                    HdlValueId: input_eth_payload_tdata
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: output_arp_tpa_reg
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 15
                                    HdlValueInt: 8
                list: elifs
            HdlStmIf
                HdlValueId: store_arp_tpa_2
                HdlStmAssign: if_true
                    HdlValueId: input_eth_payload_tdata
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: output_arp_tpa_reg
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 23
                                    HdlValueInt: 16
                list: elifs
            HdlStmIf
                HdlValueId: store_arp_tpa_3
                HdlStmAssign: if_true
                    HdlValueId: input_eth_payload_tdata
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: output_arp_tpa_reg
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 31
                                    HdlValueInt: 24
                list: elifs
    MOV HdlValueId@@rst to 
    HdlValueId: rst
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueId: STATE_IDLE
                HdlValueId: state_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: frame_ptr_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: input_eth_payload_tready_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: output_frame_valid_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: output_eth_dest_mac_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: output_eth_src_mac_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: output_eth_type_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: busy_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: error_header_early_termination_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: error_invalid_header_reg
    MOV list@@elifs to 
    list: elifs

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: state_next
    HdlValueId: state_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: output_eth_dest_mac_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: output_eth_src_mac_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: output_eth_type_reg

DEL HdlStmIf@@ from body

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 


CommitId: 3d90e80da8e60daf5727e003d3b059e9b21b41da
Fix frame FIFO full logic bug
--- a/rtl/axis_async_fifo.v
+++ b/rtl/axis_async_fifo.v
@@ -124,6 +124,7 @@ localparam WIDTH       = USER_OFFSET + (USER_ENABLE ? USER_WIDTH : 0);
 reg [ADDR_WIDTH:0] wr_ptr_reg = {ADDR_WIDTH+1{1'b0}}, wr_ptr_next;
 reg [ADDR_WIDTH:0] wr_ptr_cur_reg = {ADDR_WIDTH+1{1'b0}}, wr_ptr_cur_next;
 reg [ADDR_WIDTH:0] wr_ptr_gray_reg = {ADDR_WIDTH+1{1'b0}}, wr_ptr_gray_next;
+reg [ADDR_WIDTH:0] wr_ptr_cur_gray_reg = {ADDR_WIDTH+1{1'b0}}, wr_ptr_cur_gray_next;
 reg [ADDR_WIDTH:0] wr_addr_reg = {ADDR_WIDTH+1{1'b0}};
 reg [ADDR_WIDTH:0] rd_ptr_reg = {ADDR_WIDTH+1{1'b0}}, rd_ptr_next;
 reg [ADDR_WIDTH:0] rd_ptr_gray_reg = {ADDR_WIDTH+1{1'b0}}, rd_ptr_gray_next;

ParseResult:
INS HdlIdDef@@wr_ptr_cur_gray_reg to objs
HdlIdDef: wr_ptr_cur_gray_reg
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueId: ADDR_WIDTH
                    HdlValueInt: 0
    HdlOp: REPL_CONCAT
        list: ops
            HdlOp: ADD
                list: ops
                    HdlValueId: ADDR_WIDTH
                    HdlValueInt: 1
            HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@wr_ptr_cur_gray_next to objs
HdlIdDef: wr_ptr_cur_gray_next
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueId: ADDR_WIDTH
                    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 3d90e80da8e60daf5727e003d3b059e9b21b41da
Fix frame FIFO full logic bug
--- a/rtl/axis_async_fifo.v
+++ b/rtl/axis_async_fifo.v
@@ -155,11 +156,14 @@ reg m_axis_tvalid_reg = 1'b0, m_axis_tvalid_next;
 wire full = ((wr_ptr_gray_reg[ADDR_WIDTH] != rd_ptr_gray_sync2_reg[ADDR_WIDTH]) &&
              (wr_ptr_gray_reg[ADDR_WIDTH-1] != rd_ptr_gray_sync2_reg[ADDR_WIDTH-1]) &&
              (wr_ptr_gray_reg[ADDR_WIDTH-2:0] == rd_ptr_gray_sync2_reg[ADDR_WIDTH-2:0]));
+wire full_cur = ((wr_ptr_cur_gray_reg[ADDR_WIDTH] != rd_ptr_gray_sync2_reg[ADDR_WIDTH]) &&
+                 (wr_ptr_cur_gray_reg[ADDR_WIDTH-1] != rd_ptr_gray_sync2_reg[ADDR_WIDTH-1]) &&
+                 (wr_ptr_cur_gray_reg[ADDR_WIDTH-2:0] == rd_ptr_gray_sync2_reg[ADDR_WIDTH-2:0]));
 // empty when pointers match exactly
 wire empty = rd_ptr_gray_reg == wr_ptr_gray_sync2_reg;
 // overflow within packet
-wire full_cur = ((wr_ptr_reg[ADDR_WIDTH] != wr_ptr_cur_reg[ADDR_WIDTH]) &&
-                 (wr_ptr_reg[ADDR_WIDTH-1:0] == wr_ptr_cur_reg[ADDR_WIDTH-1:0]));
+wire full_wr = ((wr_ptr_reg[ADDR_WIDTH] != wr_ptr_cur_reg[ADDR_WIDTH]) &&
+                (wr_ptr_reg[ADDR_WIDTH-1:0] == wr_ptr_cur_reg[ADDR_WIDTH-1:0]));
 
 // control signals
 reg write;

ParseResult:
INS HdlIdDef@@full_cur to objs
HdlIdDef: full_cur
    HdlOp: AND_LOG
        list: ops
            HdlOp: AND_LOG
                list: ops
                    HdlOp: NE
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: wr_ptr_cur_gray_reg
                                    HdlValueId: ADDR_WIDTH
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: rd_ptr_gray_sync2_reg
                                    HdlValueId: ADDR_WIDTH
                    HdlOp: NE
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: wr_ptr_cur_gray_reg
                                    HdlOp: SUB
                                        list: ops
                                            HdlValueId: ADDR_WIDTH
                                            HdlValueInt: 1
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: rd_ptr_gray_sync2_reg
                                    HdlOp: SUB
                                        list: ops
                                            HdlValueId: ADDR_WIDTH
                                            HdlValueInt: 1
            HdlOp: EQ
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: wr_ptr_cur_gray_reg
                            HdlOp: DOWNTO
                                list: ops
                                    HdlOp: SUB
                                        list: ops
                                            HdlValueId: ADDR_WIDTH
                                            HdlValueInt: 2
                                    HdlValueInt: 0
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: rd_ptr_gray_sync2_reg
                            HdlOp: DOWNTO
                                list: ops
                                    HdlOp: SUB
                                        list: ops
                                            HdlValueId: ADDR_WIDTH
                                            HdlValueInt: 2
                                    HdlValueInt: 0
    HdlDirection: INTERNAL

UPD HdlIdDef@@full_cur to full_wr


CommitId: 3d90e80da8e60daf5727e003d3b059e9b21b41da
Fix frame FIFO full logic bug
--- a/rtl/axis_async_fifo.v
+++ b/rtl/axis_async_fifo.v
@@ -184,7 +188,7 @@ reg good_frame_sync2_reg = 1'b0;
 reg good_frame_sync3_reg = 1'b0;
 reg good_frame_sync4_reg = 1'b0;
 
-assign s_axis_tready = (!full || DROP_WHEN_FULL) && !s_rst_sync3_reg;
+assign s_axis_tready = (FRAME_FIFO ? (!full_cur || full_wr || DROP_WHEN_FULL) : !full) && !s_rst_sync3_reg;
 
 generate
     assign s_axis[DATA_WIDTH-1:0] = s_axis_tdata;

ParseResult:
INS HdlStmAssign@@ to objs

UPD HdlStmAssign@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        MOV HdlOp@@NEG_LOG to ops
        HdlOp: NEG_LOG
            list: ops
                HdlValueId: s_rst_sync3_reg
        UPD HdlOp@@OR_LOG to OR_LOG
            MOV HdlOp@@NEG_LOG to ops
            HdlOp: NEG_LOG
                list: ops
                    HdlValueId: full
            DEL HdlValueId@@DROP_WHEN_FULL from ops
            DEL list@@ops from OR_LOG
        DEL HdlOp@@OR_LOG from ops
        DEL list@@ops from AND_LOG
    DEL HdlOp@@AND_LOG from 
    DEL HdlValueId@@s_axis_tready from 

DEL HdlStmAssign@@ from objs


CommitId: 3d90e80da8e60daf5727e003d3b059e9b21b41da
Fix frame FIFO full logic bug
--- a/rtl/axis_async_fifo.v
+++ b/rtl/axis_async_fifo.v
@@ -295,6 +300,7 @@ always @(posedge s_clk) begin
         wr_ptr_reg <= {ADDR_WIDTH+1{1'b0}};
         wr_ptr_cur_reg <= {ADDR_WIDTH+1{1'b0}};
         wr_ptr_gray_reg <= {ADDR_WIDTH+1{1'b0}};
+        wr_ptr_cur_gray_reg <= {ADDR_WIDTH+1{1'b0}};
 
         drop_frame_reg <= 1'b0;
         overflow_reg <= 1'b0;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ops to ASSIGN
            INS HdlValueId@@wr_ptr_cur_gray_reg to ops

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlOp: REPL_CONCAT
        list: ops
            HdlOp: ADD
                list: ops
                    HdlValueId: ADDR_WIDTH
                    HdlValueInt: 1
            HdlValueInt: 0
    HdlValueId: wr_ptr_cur_gray_reg

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: wr_ptr_cur_gray_next
                HdlOp: XOR
                    list: ops
                        HdlValueId: wr_ptr_cur_next
                        HdlOp: SRL
                            list: ops
                                HdlValueId: wr_ptr_cur_next
                                HdlValueInt: 1

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: wr_ptr_cur_gray_next
                HdlOp: XOR
                    list: ops
                        HdlValueId: wr_ptr_cur_next
                        HdlOp: SRL
                            list: ops
                                HdlValueId: wr_ptr_cur_next
                                HdlValueInt: 1


CommitId: 3d90e80da8e60daf5727e003d3b059e9b21b41da
Fix frame FIFO full logic bug
--- a/rtl/axis_async_fifo.v
+++ b/rtl/axis_async_fifo.v
@@ -304,6 +310,7 @@ always @(posedge s_clk) begin
         wr_ptr_reg <= wr_ptr_next;
         wr_ptr_cur_reg <= wr_ptr_cur_next;
         wr_ptr_gray_reg <= wr_ptr_gray_next;
+        wr_ptr_cur_gray_reg <= wr_ptr_cur_gray_next;
 
         drop_frame_reg <= drop_frame_next;
         overflow_reg <= overflow_next;
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ops to ASSIGN
            INS HdlValueId@@wr_ptr_cur_gray_reg to ops

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: wr_ptr_cur_gray_next
    HdlValueId: wr_ptr_cur_gray_reg

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: wr_ptr_cur_gray_next
                HdlOp: XOR
                    list: ops
                        HdlValueId: wr_ptr_cur_next
                        HdlOp: SRL
                            list: ops
                                HdlValueId: wr_ptr_cur_next
                                HdlValueInt: 1

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: wr_ptr_cur_gray_next
                HdlOp: XOR
                    list: ops
                        HdlValueId: wr_ptr_cur_next
                        HdlOp: SRL
                            list: ops
                                HdlValueId: wr_ptr_cur_next
                                HdlValueInt: 1


CommitId: 0efb135b7a5feb228734b651647bf1ad5219b79a
Fix STATE_WAIT_END
--- a/rtl/axis_xgmii_tx_64.v
+++ b/rtl/axis_xgmii_tx_64.v
@@ -597,6 +597,8 @@ always @* begin
         end
         STATE_WAIT_END: begin
             // wait for end of frame
+            s_axis_tready_next = 1'b1;
+
             if (ifg_count_reg > 8'd8) begin
                 ifg_count_next = ifg_count_reg - 8'd8;
             end else begin

ParseResult:
UPD HdlStmCase@@state_reg to state_reg
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: s_axis_tready_next
                HdlValueInt: 1


CommitId: 0efb135b7a5feb228734b651647bf1ad5219b79a
Fix STATE_WAIT_END
--- a/rtl/axis_xgmii_tx_64.v
+++ b/rtl/axis_xgmii_tx_64.v
@@ -607,6 +609,8 @@ always @* begin
 
             if (s_axis_tvalid) begin
                 if (s_axis_tlast) begin
+                    s_axis_tready_next = 1'b0;
+
                     if (ENABLE_DIC) begin
                         if (ifg_count_next > 8'd7) begin
                             state_next = STATE_IFG;
ParseResult:
UPD HdlStmCase@@state_reg to state_reg
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: s_axis_tready_next
                HdlValueInt: 1

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: s_axis_tready_next
                HdlValueInt: 0


CommitId: 3d90e80da8e60daf5727e003d3b059e9b21b41da
Fix frame FIFO full logic bug
--- a/rtl/axis_fifo.v
+++ b/rtl/axis_fifo.v
@@ -132,11 +132,13 @@ reg m_axis_tvalid_reg = 1'b0, m_axis_tvalid_next;
 // full when first MSB different but rest same
 wire full = ((wr_ptr_reg[ADDR_WIDTH] != rd_ptr_reg[ADDR_WIDTH]) &&
              (wr_ptr_reg[ADDR_WIDTH-1:0] == rd_ptr_reg[ADDR_WIDTH-1:0]));
+wire full_cur = ((wr_ptr_cur_reg[ADDR_WIDTH] != rd_ptr_reg[ADDR_WIDTH]) &&
+                 (wr_ptr_cur_reg[ADDR_WIDTH-1:0] == rd_ptr_reg[ADDR_WIDTH-1:0]));
 // empty when pointers match exactly
 wire empty = wr_ptr_reg == rd_ptr_reg;
 // overflow within packet
-wire full_cur = ((wr_ptr_reg[ADDR_WIDTH] != wr_ptr_cur_reg[ADDR_WIDTH]) &&
-                 (wr_ptr_reg[ADDR_WIDTH-1:0] == wr_ptr_cur_reg[ADDR_WIDTH-1:0]));
+wire full_wr = ((wr_ptr_reg[ADDR_WIDTH] != wr_ptr_cur_reg[ADDR_WIDTH]) &&
+                (wr_ptr_reg[ADDR_WIDTH-1:0] == wr_ptr_cur_reg[ADDR_WIDTH-1:0]));
 
 // control signals
 reg write;

ParseResult:
INS HdlIdDef@@full_cur to objs
HdlIdDef: full_cur
    HdlOp: AND_LOG
        list: ops
            HdlOp: NE
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: wr_ptr_cur_reg
                            HdlValueId: ADDR_WIDTH
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: rd_ptr_reg
                            HdlValueId: ADDR_WIDTH
            HdlOp: EQ
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: wr_ptr_cur_reg
                            HdlOp: DOWNTO
                                list: ops
                                    HdlOp: SUB
                                        list: ops
                                            HdlValueId: ADDR_WIDTH
                                            HdlValueInt: 1
                                    HdlValueInt: 0
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: rd_ptr_reg
                            HdlOp: DOWNTO
                                list: ops
                                    HdlOp: SUB
                                        list: ops
                                            HdlValueId: ADDR_WIDTH
                                            HdlValueInt: 1
                                    HdlValueInt: 0
    HdlDirection: INTERNAL

UPD HdlIdDef@@full_cur to full_wr


CommitId: 3d90e80da8e60daf5727e003d3b059e9b21b41da
Fix frame FIFO full logic bug
--- a/rtl/axis_fifo.v
+++ b/rtl/axis_fifo.v
@@ -148,7 +150,7 @@ reg overflow_reg = 1'b0, overflow_next;
 reg bad_frame_reg = 1'b0, bad_frame_next;
 reg good_frame_reg = 1'b0, good_frame_next;
 
-assign s_axis_tready = (!full || DROP_WHEN_FULL);
+assign s_axis_tready = FRAME_FIFO ? (!full_cur || full_wr || DROP_WHEN_FULL) : !full;
 
 generate
     assign s_axis[DATA_WIDTH-1:0] = s_axis_tdata;

ParseResult:
INS HdlStmAssign@@ to objs

UPD HdlStmAssign@@ to 
    UPD HdlOp@@OR_LOG to OR_LOG
        MOV HdlOp@@NEG_LOG to ops
        HdlOp: NEG_LOG
            list: ops
                HdlValueId: full
        DEL HdlValueId@@DROP_WHEN_FULL from ops
        DEL list@@ops from OR_LOG
    DEL HdlOp@@OR_LOG from 
    DEL HdlValueId@@s_axis_tready from 

DEL HdlStmAssign@@ from objs


CommitId: 0fc986041e9a936aaa3c21c0d54c2a669316995b
Fix example design LED logic
--- a/example/VCU108/fpga_1g/rtl/fpga_core.v
+++ b/example/VCU108/fpga_1g/rtl/fpga_core.v
@@ -291,9 +291,14 @@ always @(posedge clk) begin
     if (rst) begin
         led_reg <= 0;
     end else begin
-        valid_last <= tx_udp_payload_tvalid;
-        if (tx_udp_payload_tvalid & ~valid_last) begin
-            led_reg <= tx_udp_payload_tdata;
+        if (tx_udp_payload_tvalid) begin
+            if (~valid_last) begin
+                led_reg <= tx_udp_payload_tdata;
+                valid_last <= 1'b1;
+            end
+            if (tx_udp_payload_tlast) begin
+                valid_last <= 1'b0;
+            end
         end
     end
 end
ParseResult:
UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

INS HdlStmIf@@ to body

UPD HdlStmAssign@@ to 
    MOV HdlValueId@@tx_udp_payload_tvalid to 
    HdlValueId: tx_udp_payload_tvalid
    DEL HdlValueId@@valid_last from 

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueId: tx_udp_payload_tvalid
                HdlValueId: valid_last
            HdlStmIf
                HdlOp: AND
                    list: ops
                        HdlValueId: tx_udp_payload_tvalid
                        HdlOp: NEG
                            list: ops
                                HdlValueId: valid_last
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueId: tx_udp_payload_tdata
                            HdlValueId: led_reg
                list: elifs

UPD HdlStmIf@@ to 
    INS list@@elifs to 

INS HdlStmIf@@ to body
HdlStmIf
    HdlValueId: tx_udp_payload_tlast
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: valid_last
    list: elifs

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND to AND
        MOV HdlOp@@NEG to ops
        HdlOp: NEG
            list: ops
                HdlValueId: valid_last
        DEL HdlValueId@@tx_udp_payload_tvalid from ops
        DEL list@@ops from AND
    DEL HdlOp@@AND from 

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 1
    HdlValueId: valid_last

DEL HdlStmAssign@@ from body


CommitId: a9c04a465150ae5fc9cd8f32906213d9ba9afb06
Fix frame FIFO drop
--- a/rtl/axis_fifo.v
+++ b/rtl/axis_fifo.v
@@ -204,7 +204,7 @@ assign status_good_frame = good_frame_reg;
 always @* begin
     write = 1'b0;
 
-    drop_frame_next = 1'b0;
+    drop_frame_next = drop_frame_reg;
     overflow_next = 1'b0;
     bad_frame_next = 1'b0;
     good_frame_next = 1'b0;
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueId@@drop_frame_reg to ops

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            DEL HdlValueInt@@0 from ops


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/ip_eth_tx_64.v
+++ b/rtl/ip_eth_tx_64.v
@@ -176,7 +176,7 @@ reg shift_ip_payload_extra_cycle;
 reg [63:0] output_eth_payload_tdata_int;
 reg [7:0]  output_eth_payload_tkeep_int;
 reg        output_eth_payload_tvalid_int;
-reg        output_eth_payload_tready_int = 0;
+reg        output_eth_payload_tready_int_reg = 1'b0;
 reg        output_eth_payload_tlast_int;
 reg        output_eth_payload_tuser_int;
 wire       output_eth_payload_tready_int_early;

ParseResult:
UPD HdlIdDef@@output_eth_payload_tready_int to output_eth_payload_tready_int_reg


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/ip_eth_tx_64.v
+++ b/rtl/ip_eth_tx_64.v
@@ -247,40 +247,40 @@ end
 always @* begin
     state_next = STATE_IDLE;
 
-    input_ip_hdr_ready_next = 0;
-    input_ip_payload_tready_next = 0;
+    input_ip_hdr_ready_next = 1'b0;
+    input_ip_payload_tready_next = 1'b0;
 
-    store_ip_hdr = 0;
+    store_ip_hdr = 1'b0;
 
-    store_last_word = 0;
+    store_last_word = 1'b0;
 
-    flush_save = 0;
-    transfer_in_save = 0;
+    flush_save = 1'b0;
+    transfer_in_save = 1'b0;
 
     frame_ptr_next = frame_ptr_reg;
 
-    hdr_sum_temp = 0;
+    hdr_sum_temp = 16'd0;
     hdr_sum_next = hdr_sum_reg;
 
     output_eth_hdr_valid_next = output_eth_hdr_valid_reg & ~output_eth_hdr_ready;
 
-    error_payload_early_termination_next = 0;
+    error_payload_early_termination_next = 1'b0;
 
-    output_eth_payload_tdata_int = 0;
-    output_eth_payload_tkeep_int = 0;
-    output_eth_payload_tvalid_int = 0;
-    output_eth_payload_tlast_int = 0;
-    output_eth_payload_tuser_int = 0;
+    output_eth_payload_tdata_int = 1'b0;
+    output_eth_payload_tkeep_int = 1'b0;
+    output_eth_payload_tvalid_int = 1'b0;
+    output_eth_payload_tlast_int = 1'b0;
+    output_eth_payload_tuser_int = 1'b0;
 
     case (state_reg)
         STATE_IDLE: begin
             // idle state - wait for data
-            frame_ptr_next = 0;
-            flush_save = 1;
+            frame_ptr_next = 16'd0;
+            flush_save = 1'b1;
             input_ip_hdr_ready_next = ~output_eth_hdr_valid_reg;
 
             if (input_ip_hdr_ready & input_ip_hdr_valid) begin
-                store_ip_hdr = 1;
+                store_ip_hdr = 1'b1;
                 hdr_sum_next = {4'd4, 4'd5, input_ip_dscp, input_ip_ecn} +
                                input_ip_length +
                                input_ip_identification +

ParseResult:
UPD HdlStmCase@@state_reg to state_reg
    INS HdlStmCaseType@@CASE to state_reg
    INS HdlValueId@@state_reg to state_reg

UPD HdlStmCase@@state_reg to state_reg
    DEL HdlStmCaseType@@CASE from state_reg
    DEL HdlValueId@@state_reg from state_reg


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/ip_eth_tx_64.v
+++ b/rtl/ip_eth_tx_64.v
@@ -290,10 +290,10 @@ always @* begin
                                input_ip_source_ip[15: 0] +
                                input_ip_dest_ip[31:16] +
                                input_ip_dest_ip[15: 0];
-                input_ip_hdr_ready_next = 0;
-                output_eth_hdr_valid_next = 1;
-                if (output_eth_payload_tready_int) begin
-                    output_eth_payload_tvalid_int = 1;
+                input_ip_hdr_ready_next = 1'b0;
+                output_eth_hdr_valid_next = 1'b1;
+                if (output_eth_payload_tready_int_reg) begin
+                    output_eth_payload_tvalid_int = 1'b1;
                     output_eth_payload_tdata_int[ 7: 0] = {4'd4, 4'd5}; // ip_version, ip_ihl
                     output_eth_payload_tdata_int[15: 8] = {input_ip_dscp, input_ip_ecn};
                     output_eth_payload_tdata_int[23:16] = input_ip_length[15: 8];

ParseResult:
UPD HdlStmCase@@state_reg to state_reg
    INS HdlStmCaseType@@CASE to state_reg
    INS HdlValueId@@state_reg to state_reg

UPD HdlStmIf@@ to 
    UPD HdlValueId@@output_eth_payload_tready_int to output_eth_payload_tready_int_reg

UPD HdlStmCase@@state_reg to state_reg
    DEL HdlStmCaseType@@CASE from state_reg
    DEL HdlValueId@@state_reg from state_reg


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/ip_eth_tx_64.v
+++ b/rtl/ip_eth_tx_64.v
@@ -303,7 +303,7 @@ always @* begin
                     output_eth_payload_tdata_int[55:48] = {input_ip_flags, input_ip_fragment_offset[12: 8]};
                     output_eth_payload_tdata_int[63:56] = input_ip_fragment_offset[ 7: 0];
                     output_eth_payload_tkeep_int = 8'hff;
-                    frame_ptr_next = 8;
+                    frame_ptr_next = 16'd8;
                 end
                 state_next = STATE_WRITE_HEADER;
             end else begin

ParseResult:
UPD HdlStmCase@@state_reg to state_reg
    INS HdlStmCaseType@@CASE to state_reg
    INS HdlValueId@@state_reg to state_reg

UPD HdlStmIf@@ to 
    UPD HdlValueId@@output_eth_payload_tready_int to output_eth_payload_tready_int_reg

UPD HdlStmCase@@state_reg to state_reg
    DEL HdlStmCaseType@@CASE from state_reg
    DEL HdlValueId@@state_reg from state_reg


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/ip_eth_tx_64.v
+++ b/rtl/ip_eth_tx_64.v
@@ -312,9 +312,9 @@ always @* begin
         end
         STATE_WRITE_HEADER: begin
             // write header
-            if (output_eth_payload_tready_int) begin
-                frame_ptr_next = frame_ptr_reg+8;
-                output_eth_payload_tvalid_int = 1;
+            if (output_eth_payload_tready_int_reg) begin
+                frame_ptr_next = frame_ptr_reg + 16'd8;
+                output_eth_payload_tvalid_int = 1'b1;
                 state_next = STATE_WRITE_HEADER;
                 case (frame_ptr_reg)
                     8'h00: begin

ParseResult:
UPD HdlStmCase@@state_reg to state_reg
    INS HdlStmCaseType@@CASE to state_reg
    INS HdlValueId@@state_reg to state_reg

UPD HdlStmIf@@ to 
    UPD HdlValueId@@output_eth_payload_tready_int to output_eth_payload_tready_int_reg

UPD HdlStmCase@@state_reg to state_reg
    DEL HdlStmCaseType@@CASE from state_reg
    DEL HdlValueId@@state_reg from state_reg


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/ip_eth_tx_64.v
+++ b/rtl/ip_eth_tx_64.v
@@ -353,8 +353,8 @@ always @* begin
             input_ip_payload_tready_next = output_eth_payload_tready_int_early & shift_ip_payload_input_tready;
 
             if (input_ip_payload_tready & input_ip_payload_tvalid) begin
-                output_eth_payload_tvalid_int = 1;
-                transfer_in_save = 1;
+                output_eth_payload_tvalid_int = 1'b1;
+                transfer_in_save = 1'b1;
 
                 output_eth_payload_tdata_int[ 7: 0] = ip_dest_ip_reg[31:24];
                 output_eth_payload_tdata_int[15: 8] = ip_dest_ip_reg[23:16];

ParseResult:
UPD HdlStmCase@@state_reg to state_reg
    INS HdlStmCaseType@@CASE to state_reg
    INS HdlValueId@@state_reg to state_reg

UPD HdlStmCase@@state_reg to state_reg
    DEL HdlStmCaseType@@CASE from state_reg
    DEL HdlValueId@@state_reg from state_reg


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/ip_eth_tx_64.v
+++ b/rtl/ip_eth_tx_64.v
@@ -375,20 +375,20 @@ always @* begin
                     output_eth_payload_tkeep_int = count2keep(ip_length_reg - frame_ptr_reg);
                     if (shift_ip_payload_tlast) begin
                         input_ip_hdr_ready_next = ~output_eth_hdr_valid_reg;
-                        input_ip_payload_tready_next = 0;
+                        input_ip_payload_tready_next = 1'b0;
                         state_next = STATE_IDLE;
                     end else begin
-                        store_last_word = 1;
+                        store_last_word = 1'b1;
                         input_ip_payload_tready_next = shift_ip_payload_input_tready;
-                        output_eth_payload_tvalid_int = 0;
+                        output_eth_payload_tvalid_int = 1'b0;
                         state_next = STATE_WRITE_PAYLOAD_LAST;
                     end
                 end else begin
                     if (shift_ip_payload_tlast) begin
                         // end of frame, but length does not match
-                        error_payload_early_termination_next = 1;
+                        error_payload_early_termination_next = 1'b1;
                         input_ip_payload_tready_next = shift_ip_payload_input_tready;
-                        output_eth_payload_tuser_int = 1;
+                        output_eth_payload_tuser_int = 1'b1;
                         state_next = STATE_WAIT_LAST;
                     end else begin
                         state_next = STATE_WRITE_PAYLOAD;

ParseResult:
UPD HdlStmCase@@state_reg to state_reg
    INS HdlStmCaseType@@CASE to state_reg
    INS HdlValueId@@state_reg to state_reg

UPD HdlStmCase@@state_reg to state_reg
    DEL HdlStmCaseType@@CASE from state_reg
    DEL HdlValueId@@state_reg from state_reg


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/ip_eth_tx_64.v
+++ b/rtl/ip_eth_tx_64.v
@@ -408,31 +408,31 @@ always @* begin
             output_eth_payload_tlast_int = shift_ip_payload_tlast;
             output_eth_payload_tuser_int = shift_ip_payload_tuser;
 
-            if (output_eth_payload_tready_int & shift_ip_payload_tvalid) begin
+            if (output_eth_payload_tready_int_reg & shift_ip_payload_tvalid) begin
                 // word transfer through
                 frame_ptr_next = frame_ptr_reg+keep2count(shift_ip_payload_tkeep);
-                transfer_in_save = 1;
+                transfer_in_save = 1'b1;
                 if (frame_ptr_next >= ip_length_reg) begin
                     // have entire payload
                     frame_ptr_next = ip_length_reg;
                     output_eth_payload_tkeep_int = count2keep(ip_length_reg - frame_ptr_reg);
                     if (shift_ip_payload_tlast) begin
-                        input_ip_payload_tready_next = 0;
-                        flush_save = 1;
+                        input_ip_payload_tready_next = 1'b0;
+                        flush_save = 1'b1;
                         input_ip_hdr_ready_next = ~output_eth_hdr_valid_reg;
                         state_next = STATE_IDLE;
                     end else begin
-                        store_last_word = 1;
-                        output_eth_payload_tvalid_int = 0;
+                        store_last_word = 1'b1;
+                        output_eth_payload_tvalid_int = 1'b0;
                         state_next = STATE_WRITE_PAYLOAD_LAST;
                     end
                 end else begin
                     if (shift_ip_payload_tlast) begin
                         // end of frame, but length does not match
-                        error_payload_early_termination_next = 1;
-                        output_eth_payload_tuser_int = 1;
-                        input_ip_payload_tready_next = 0;
-                        flush_save = 1;
+                        error_payload_early_termination_next = 1'b1;
+                        output_eth_payload_tuser_int = 1'b1;
+                        input_ip_payload_tready_next = 1'b0;
+                        flush_save = 1'b1;
                         input_ip_hdr_ready_next = ~output_eth_hdr_valid_reg;
                         state_next = STATE_IDLE;
                     end else begin

ParseResult:
UPD HdlStmCase@@state_reg to state_reg
    INS HdlStmCaseType@@CASE to state_reg
    INS HdlValueId@@state_reg to state_reg

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND to AND
        UPD HdlValueId@@output_eth_payload_tready_int to output_eth_payload_tready_int_reg

UPD HdlStmCase@@state_reg to state_reg
    DEL HdlStmCaseType@@CASE from state_reg
    DEL HdlValueId@@state_reg from state_reg


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/ip_eth_tx_64.v
+++ b/rtl/ip_eth_tx_64.v
@@ -453,11 +453,11 @@ always @* begin
             output_eth_payload_tlast_int = shift_ip_payload_tlast;
             output_eth_payload_tuser_int = shift_ip_payload_tuser;
 
-            if (output_eth_payload_tready_int & shift_ip_payload_tvalid) begin
-                transfer_in_save = 1;
+            if (output_eth_payload_tready_int_reg & shift_ip_payload_tvalid) begin
+                transfer_in_save = 1'b1;
                 if (shift_ip_payload_tlast) begin
                     input_ip_hdr_ready_next = ~output_eth_hdr_valid_reg;
-                    input_ip_payload_tready_next = 0;
+                    input_ip_payload_tready_next = 1'b0;
                     state_next = STATE_IDLE;
                 end else begin
                     state_next = STATE_WRITE_PAYLOAD_LAST;

ParseResult:
UPD HdlStmCase@@state_reg to state_reg
    INS HdlStmCaseType@@CASE to state_reg
    INS HdlValueId@@state_reg to state_reg

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND to AND
        UPD HdlValueId@@output_eth_payload_tready_int to output_eth_payload_tready_int_reg

UPD HdlStmCase@@state_reg to state_reg
    DEL HdlStmCaseType@@CASE from state_reg
    DEL HdlValueId@@state_reg from state_reg


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/ip_eth_tx_64.v
+++ b/rtl/ip_eth_tx_64.v
@@ -471,10 +471,10 @@ always @* begin
             input_ip_payload_tready_next = shift_ip_payload_input_tready;
 
             if (shift_ip_payload_tvalid) begin
-                transfer_in_save = 1;
+                transfer_in_save = 1'b1;
                 if (shift_ip_payload_tlast) begin
                     input_ip_hdr_ready_next = ~output_eth_hdr_valid_reg;
-                    input_ip_payload_tready_next = 0;
+                    input_ip_payload_tready_next = 1'b0;
                     state_next = STATE_IDLE;
                 end else begin
                     state_next = STATE_WAIT_LAST;

ParseResult:
UPD HdlStmCase@@state_reg to state_reg
    INS HdlStmCaseType@@CASE to state_reg
    INS HdlValueId@@state_reg to state_reg

UPD HdlStmCase@@state_reg to state_reg
    DEL HdlStmCaseType@@CASE from state_reg
    DEL HdlValueId@@state_reg from state_reg


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/eth_mac_1g_tx.v
+++ b/rtl/eth_mac_1g_tx.v
@@ -66,8 +66,8 @@ localparam [2:0]
     STATE_PAYLOAD = 3'd2,
     STATE_PAD = 3'd3,
     STATE_FCS = 3'd4,
-    STATE_IFG = 3'd5,
-    STATE_WAIT_END = 3'd6;
+    STATE_WAIT_END = 3'd5,
+    STATE_IFG = 3'd6;
 
 reg [2:0] state_reg = STATE_IDLE, state_next;
 

ParseResult:
MOV HdlIdDef@@STATE_IFG to objs
HdlIdDef: STATE_IFG
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: wire
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 2
                    HdlValueInt: 0
    HdlValueInt: 5
    HdlDirection: INTERNAL

UPD HdlIdDef@@STATE_WAIT_END to STATE_WAIT_END
    UPD HdlValueInt@@6 to 5

UPD HdlIdDef@@STATE_IFG to STATE_IFG
    UPD HdlValueInt@@5 to 6


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/eth_mac_1g_tx.v
+++ b/rtl/eth_mac_1g_tx.v
@@ -75,13 +75,13 @@ reg [2:0] state_reg = STATE_IDLE, state_next;
 reg reset_crc;
 reg update_crc;
 
-reg [7:0] frame_ptr_reg = 0, frame_ptr_next;
+reg [15:0] frame_ptr_reg = 16'd0, frame_ptr_next;
 
-reg [7:0] gmii_txd_reg = 0, gmii_txd_next;
-reg gmii_tx_en_reg = 0, gmii_tx_en_next;
-reg gmii_tx_er_reg = 0, gmii_tx_er_next;
+reg [7:0] gmii_txd_reg = 8'd0, gmii_txd_next;
+reg gmii_tx_en_reg = 1'b0, gmii_tx_en_next;
+reg gmii_tx_er_reg = 1'b0, gmii_tx_er_next;
 
-reg input_axis_tready_reg = 0, input_axis_tready_next;
+reg input_axis_tready_reg = 1'b0, input_axis_tready_next;
 
 reg [31:0] crc_state = 32'hFFFFFFFF;
 wire [31:0] crc_next;

ParseResult:
UPD HdlIdDef@@frame_ptr_reg to frame_ptr_reg
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlValueInt@@7 to 15

UPD HdlIdDef@@frame_ptr_next to frame_ptr_next
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlValueInt@@7 to 15


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/eth_mac_1g_tx.v
+++ b/rtl/eth_mac_1g_tx.v
@@ -102,26 +102,26 @@ eth_crc_8_inst (
 always @* begin
     state_next = STATE_IDLE;
 
-    reset_crc = 0;
-    update_crc = 0;
+    reset_crc = 1'b0;
+    update_crc = 1'b0;
 
     frame_ptr_next = frame_ptr_reg;
 
-    input_axis_tready_next = 0;
+    input_axis_tready_next = 1'b0;
 
-    gmii_txd_next = 0;
-    gmii_tx_en_next = 0;
-    gmii_tx_er_next = 0;
+    gmii_txd_next = 8'd0;
+    gmii_tx_en_next = 1'b0;
+    gmii_tx_er_next = 1'b0;
 
     case (state_reg)
         STATE_IDLE: begin
             // idle state - wait for packet
-            reset_crc = 1;
+            reset_crc = 1'b1;
 
             if (input_axis_tvalid) begin
-                frame_ptr_next = 1;
+                frame_ptr_next = 16'd1;
                 gmii_txd_next = 8'h55; // Preamble
-                gmii_tx_en_next = 1;
+                gmii_tx_en_next = 1'b1;
                 state_next = STATE_PREAMBLE;
             end else begin
                 state_next = STATE_IDLE;

ParseResult:
UPD HdlStmCase@@state_reg to state_reg
    MOV tuple@@ to cases
    tuple
        HdlValueId: STATE_IFG
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: frame_ptr_next
                        HdlOp: ADD
                            list: ops
                                HdlValueId: frame_ptr_reg
                                HdlValueInt: 1
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: reset_crc
                        HdlValueInt: 1
                HdlStmIf
                    HdlOp: LT
                        list: ops
                            HdlValueId: frame_ptr_reg
                            HdlOp: SUB
                                list: ops
                                    HdlValueId: ifg_delay
                                    HdlValueInt: 1
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: state_next
                                    HdlValueId: STATE_IFG
                    list: elifs
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: state_next
                                    HdlValueId: STATE_IDLE


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/eth_mac_1g_tx.v
+++ b/rtl/eth_mac_1g_tx.v
@@ -129,16 +129,16 @@ always @* begin
         end
         STATE_PREAMBLE: begin
             // send preamble
-            reset_crc = 1;
-            frame_ptr_next = frame_ptr_reg + 1;
+            reset_crc = 1'b1;
+            frame_ptr_next = frame_ptr_reg + 16'd1;
 
             gmii_txd_next = 8'h55; // Preamble
-            gmii_tx_en_next = 1;
+            gmii_tx_en_next = 1'b1;
 
-            if (frame_ptr_reg == 7) begin
+            if (frame_ptr_reg == 16'd7) begin
                 // end of preamble; start payload
-                frame_ptr_next = 0;
-                input_axis_tready_next = 1;
+                frame_ptr_next = 16'd0;
+                input_axis_tready_next = 1'b1;
                 gmii_txd_next = 8'hD5; // SFD
                 state_next = STATE_PAYLOAD;
             end else begin

ParseResult:
UPD HdlStmCase@@state_reg to state_reg
    MOV tuple@@ to cases
    tuple
        HdlValueId: STATE_IFG
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: frame_ptr_next
                        HdlOp: ADD
                            list: ops
                                HdlValueId: frame_ptr_reg
                                HdlValueInt: 1
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: reset_crc
                        HdlValueInt: 1
                HdlStmIf
                    HdlOp: LT
                        list: ops
                            HdlValueId: frame_ptr_reg
                            HdlOp: SUB
                                list: ops
                                    HdlValueId: ifg_delay
                                    HdlValueInt: 1
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: state_next
                                    HdlValueId: STATE_IFG
                    list: elifs
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: state_next
                                    HdlValueId: STATE_IDLE


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/eth_mac_1g_tx.v
+++ b/rtl/eth_mac_1g_tx.v
@@ -147,26 +147,26 @@ always @* begin
         end
         STATE_PAYLOAD: begin
             // send payload
-            update_crc = 1;
-            input_axis_tready_next = 1;
+            update_crc = 1'b1;
+            input_axis_tready_next = 1'b1;
 
-            frame_ptr_next = frame_ptr_reg + 1;
+            frame_ptr_next = frame_ptr_reg + 16'd1;
 
             gmii_txd_next = input_axis_tdata;
-            gmii_tx_en_next = 1;
+            gmii_tx_en_next = 1'b1;
 
             if (input_axis_tvalid) begin
                 if (input_axis_tlast) begin
-                    input_axis_tready_next = 0;
+                    input_axis_tready_next = 1'b0;
                     if (input_axis_tuser) begin
-                        gmii_tx_er_next = 1;
-                        frame_ptr_next = 0;
+                        gmii_tx_er_next = 1'b1;
+                        frame_ptr_next = 1'b0;
                         state_next = STATE_IFG;
                     end else begin
                         if (ENABLE_PADDING && frame_ptr_reg < MIN_FRAME_LENGTH-5) begin
                             state_next = STATE_PAD;
                         end else begin
-                            frame_ptr_next = 0;
+                            frame_ptr_next = 16'd0;
                             state_next = STATE_FCS;
                         end
                     end

ParseResult:
UPD HdlStmCase@@state_reg to state_reg
    MOV tuple@@ to cases
    tuple
        HdlValueId: STATE_IFG
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: frame_ptr_next
                        HdlOp: ADD
                            list: ops
                                HdlValueId: frame_ptr_reg
                                HdlValueInt: 1
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: reset_crc
                        HdlValueInt: 1
                HdlStmIf
                    HdlOp: LT
                        list: ops
                            HdlValueId: frame_ptr_reg
                            HdlOp: SUB
                                list: ops
                                    HdlValueId: ifg_delay
                                    HdlValueInt: 1
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: state_next
                                    HdlValueId: STATE_IFG
                    list: elifs
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: state_next
                                    HdlValueId: STATE_IDLE


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/eth_mac_1g_tx.v
+++ b/rtl/eth_mac_1g_tx.v
@@ -175,29 +175,29 @@ always @* begin
                 end
             end else begin
                 // tvalid deassert, fail frame
-                gmii_tx_er_next = 1;
-                frame_ptr_next = 0;
+                gmii_tx_er_next = 1'b1;
+                frame_ptr_next = 16'd0;
                 state_next = STATE_WAIT_END;
             end
         end
         STATE_PAD: begin
             // send padding
-            update_crc = 1;
-            frame_ptr_next = frame_ptr_reg + 1;
+            update_crc = 1'b1;
+            frame_ptr_next = frame_ptr_reg + 16'd1;
 
-            gmii_txd_next = 0;
-            gmii_tx_en_next = 1;
+            gmii_txd_next = 8'd0;
+            gmii_tx_en_next = 1'b1;
 
             if (frame_ptr_reg < MIN_FRAME_LENGTH-5) begin
                 state_next = STATE_PAD;
             end else begin
-                frame_ptr_next = 0;
+                frame_ptr_next = 16'd0;
                 state_next = STATE_FCS;
             end
         end
         STATE_FCS: begin
             // send FCS
-            frame_ptr_next = frame_ptr_reg + 1;
+            frame_ptr_next = frame_ptr_reg + 16'd1;
 
             case (frame_ptr_reg)
                 2'd0: gmii_txd_next = ~crc_state[7:0];

ParseResult:
UPD HdlStmCase@@state_reg to state_reg
    MOV tuple@@ to cases
    tuple
        HdlValueId: STATE_IFG
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: frame_ptr_next
                        HdlOp: ADD
                            list: ops
                                HdlValueId: frame_ptr_reg
                                HdlValueInt: 1
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: reset_crc
                        HdlValueInt: 1
                HdlStmIf
                    HdlOp: LT
                        list: ops
                            HdlValueId: frame_ptr_reg
                            HdlOp: SUB
                                list: ops
                                    HdlValueId: ifg_delay
                                    HdlValueInt: 1
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: state_next
                                    HdlValueId: STATE_IFG
                    list: elifs
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: state_next
                                    HdlValueId: STATE_IDLE


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/eth_mac_1g_tx.v
+++ b/rtl/eth_mac_1g_tx.v
@@ -205,30 +205,19 @@ always @* begin
                 2'd2: gmii_txd_next = ~crc_state[23:16];
                 2'd3: gmii_txd_next = ~crc_state[31:24];
             endcase
-            gmii_tx_en_next = 1;
+            gmii_tx_en_next = 1'b1;
 
             if (frame_ptr_reg < 3) begin
                 state_next = STATE_FCS;
             end else begin
-                frame_ptr_next = 0;
+                frame_ptr_next = 16'd0;
                 state_next = STATE_IFG;
             end
         end
-        STATE_IFG: begin
-            // send IFG
-            frame_ptr_next = frame_ptr_reg + 1;
-            reset_crc = 1;
-
-            if (frame_ptr_reg < ifg_delay-1) begin
-                state_next = STATE_IFG;
-            end else begin
-                state_next = STATE_IDLE;
-            end
-        end
         STATE_WAIT_END: begin
             // wait for end of frame
-            frame_ptr_next = frame_ptr_reg + 1;
-            reset_crc = 1;
+            frame_ptr_next = frame_ptr_reg + 16'd1;
+            reset_crc = 1'b1;
 
             if (input_axis_tvalid) begin
                 if (input_axis_tlast) begin

ParseResult:
UPD HdlStmCase@@state_reg to state_reg
    MOV tuple@@ to cases
    tuple
        HdlValueId: STATE_IFG
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: frame_ptr_next
                        HdlOp: ADD
                            list: ops
                                HdlValueId: frame_ptr_reg
                                HdlValueInt: 1
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: reset_crc
                        HdlValueInt: 1
                HdlStmIf
                    HdlOp: LT
                        list: ops
                            HdlValueId: frame_ptr_reg
                            HdlOp: SUB
                                list: ops
                                    HdlValueId: ifg_delay
                                    HdlValueInt: 1
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: state_next
                                    HdlValueId: STATE_IFG
                    list: elifs
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: state_next
                                    HdlValueId: STATE_IDLE


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/eth_mac_1g_tx.v
+++ b/rtl/eth_mac_1g_tx.v
@@ -244,6 +233,17 @@ always @* begin
                 state_next = STATE_WAIT_END;
             end
         end
+        STATE_IFG: begin
+            // send IFG
+            frame_ptr_next = frame_ptr_reg + 16'd1;
+            reset_crc = 1'b1;
+
+            if (frame_ptr_reg < ifg_delay-1) begin
+                state_next = STATE_IFG;
+            end else begin
+                state_next = STATE_IDLE;
+            end
+        end
     endcase
 end
 

ParseResult:
UPD HdlStmCase@@state_reg to state_reg
    MOV tuple@@ to cases
    tuple
        HdlValueId: STATE_IFG
        HdlStmBlock: SEQ
            list: body
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: frame_ptr_next
                        HdlOp: ADD
                            list: ops
                                HdlValueId: frame_ptr_reg
                                HdlValueInt: 1
                HdlOp: ASSIGN
                    list: ops
                        HdlValueId: reset_crc
                        HdlValueInt: 1
                HdlStmIf
                    HdlOp: LT
                        list: ops
                            HdlValueId: frame_ptr_reg
                            HdlOp: SUB
                                list: ops
                                    HdlValueId: ifg_delay
                                    HdlValueInt: 1
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: state_next
                                    HdlValueId: STATE_IFG
                    list: elifs
                    HdlStmBlock: SEQ
                        list: body
                            HdlOp: ASSIGN
                                list: ops
                                    HdlValueId: state_next
                                    HdlValueId: STATE_IDLE


CommitId: 51b5335318c83e2662a0edb768b05ac7cbcd6603
Remove z from default states for FSM inference
--- a/rtl/eth_axis_rx_64.v
+++ b/rtl/eth_axis_rx_64.v
@@ -162,7 +162,7 @@ always @* begin
 end
 
 always @* begin
-    state_next = 2'bz;
+    state_next = STATE_IDLE;
 
     input_axis_tready_next = 0;
 
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueId@@STATE_IDLE to ops

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            DEL HdlValueInt@@z from ops


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/ip_demux_64_4.v
+++ b/rtl/ip_demux_64_4.v
@@ -314,6 +314,12 @@ always @* begin
             current_output_tvalid = output_3_ip_payload_tvalid;
             current_output_tready = output_3_ip_payload_tready;
         end
+        default: begin
+            current_output_ip_hdr_valid = 1'b0;
+            current_output_ip_hdr_ready = 1'b0;
+            current_output_tvalid = 1'b0;
+            current_output_tready = 1'b0;
+        end
     endcase
 end
 

ParseResult:
UPD HdlStmCase@@select_reg to select_reg
    INS HdlStmBlock@@SEQ to select_reg
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_output_ip_hdr_valid
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_output_ip_hdr_ready
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_output_tvalid
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_output_tready
                    HdlValueInt: 0


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/ip_demux_64_4.v
+++ b/rtl/ip_demux_64_4.v
@@ -322,7 +328,7 @@ always @* begin
     frame_next = frame_reg;
 
     input_ip_hdr_ready_next = input_ip_hdr_ready_reg & ~input_ip_hdr_valid;
-    input_ip_payload_tready_next = 0;
+    input_ip_payload_tready_next = 1'b0;
     output_0_ip_hdr_valid_next = output_0_ip_hdr_valid_reg & ~output_0_ip_hdr_ready;
     output_1_ip_hdr_valid_next = output_1_ip_hdr_valid_reg & ~output_1_ip_hdr_ready;
     output_2_ip_hdr_valid_next = output_2_ip_hdr_valid_reg & ~output_2_ip_hdr_ready;

ParseResult:
UPD HdlStmCase@@select_reg to select_reg
    INS HdlStmBlock@@SEQ to select_reg
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_output_ip_hdr_valid
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_output_ip_hdr_ready
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_output_tvalid
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_output_tready
                    HdlValueInt: 0


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/arp_eth_rx_64.v
+++ b/rtl/arp_eth_rx_64.v
@@ -160,32 +160,32 @@ assign error_invalid_header = error_invalid_header_reg;
 always @* begin
     state_next = STATE_IDLE;
 
-    input_eth_hdr_ready_next = 0;
-    input_eth_payload_tready_next = 0;
+    input_eth_hdr_ready_next = 1'b0;
+    input_eth_payload_tready_next = 1'b0;
 
-    store_eth_hdr = 0;
-    store_arp_hdr_word_0 = 0;
-    store_arp_hdr_word_1 = 0;
-    store_arp_hdr_word_2 = 0;
-    store_arp_hdr_word_3 = 0;
+    store_eth_hdr = 1'b0;
+    store_arp_hdr_word_0 = 1'b0;
+    store_arp_hdr_word_1 = 1'b0;
+    store_arp_hdr_word_2 = 1'b0;
+    store_arp_hdr_word_3 = 1'b0;
 
     frame_ptr_next = frame_ptr_reg;
 
     output_frame_valid_next = output_frame_valid_reg & ~output_frame_ready;
 
-    error_header_early_termination_next = 0;
-    error_invalid_header_next = 0;
+    error_header_early_termination_next = 1'b0;
+    error_invalid_header_next = 1'b0;
 
     case (state_reg)
         STATE_IDLE: begin
             // idle state - wait for data
-            frame_ptr_next = 0;
+            frame_ptr_next = 8'd0;
             input_eth_hdr_ready_next = ~output_frame_valid_reg;
 
             if (input_eth_hdr_ready & input_eth_hdr_valid) begin
-                input_eth_hdr_ready_next = 0;
-                input_eth_payload_tready_next = 1;
-                store_eth_hdr = 1;
+                input_eth_hdr_ready_next = 1'b0;
+                input_eth_payload_tready_next = 1'b1;
+                store_eth_hdr = 1'b1;
                 state_next = STATE_READ_HEADER;
             end else begin
                 state_next = STATE_IDLE;

ParseResult:
UPD HdlModuleDef@@arp_eth_rx_64 to arp_eth_rx_64
    MOV list@@objs to arp_eth_rx_64
    list: objs
        HdlIdDef: STATE_IDLE
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: wire
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 2
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: STATE_READ_HEADER
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: wire
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 2
                            HdlValueInt: 0
            HdlValueInt: 1
            HdlDirection: INTERNAL
        HdlIdDef: STATE_WAIT_LAST
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: wire
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 2
                            HdlValueInt: 0
            HdlValueInt: 2
            HdlDirection: INTERNAL
        HdlIdDef: state_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 2
                            HdlValueInt: 0
            HdlValueId: STATE_IDLE
            HdlDirection: INTERNAL
        HdlIdDef: state_next
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 2
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: store_eth_hdr
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlIdDef: store_arp_hdr_word_0
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlIdDef: store_arp_hdr_word_1
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlIdDef: store_arp_hdr_word_2
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlIdDef: store_arp_hdr_word_3
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlIdDef: frame_ptr_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 7
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: frame_ptr_next
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 7
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: input_eth_hdr_ready_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: input_eth_hdr_ready_next
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlIdDef: input_eth_payload_tready_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: input_eth_payload_tready_next
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlIdDef: output_frame_valid_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_frame_valid_next
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlIdDef: output_eth_dest_mac_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 47
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_eth_src_mac_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 47
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_eth_type_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 15
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_arp_htype_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 15
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_arp_ptype_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 15
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_arp_hlen_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 7
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_arp_plen_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 7
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_arp_oper_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 15
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_arp_sha_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 47
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_arp_spa_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 31
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_arp_tha_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 47
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_arp_tpa_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 31
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: busy_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: error_header_early_termination_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: error_header_early_termination_next
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlIdDef: error_invalid_header_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: error_invalid_header_next
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlStmAssign
            HdlValueId: input_eth_hdr_ready_reg
            HdlValueId: input_eth_hdr_ready
        HdlStmAssign
            HdlValueId: input_eth_payload_tready_reg
            HdlValueId: input_eth_payload_tready
        HdlStmAssign
            HdlValueId: output_frame_valid_reg
            HdlValueId: output_frame_valid
        HdlStmAssign
            HdlValueId: output_eth_dest_mac_reg
            HdlValueId: output_eth_dest_mac
        HdlStmAssign
            HdlValueId: output_eth_src_mac_reg
            HdlValueId: output_eth_src_mac
        HdlStmAssign
            HdlValueId: output_eth_type_reg
            HdlValueId: output_eth_type
        HdlStmAssign
            HdlValueId: output_arp_htype_reg
            HdlValueId: output_arp_htype
        HdlStmAssign
            HdlValueId: output_arp_ptype_reg
            HdlValueId: output_arp_ptype
        HdlStmAssign
            HdlValueId: output_arp_hlen_reg
            HdlValueId: output_arp_hlen
        HdlStmAssign
            HdlValueId: output_arp_plen_reg
            HdlValueId: output_arp_plen
        HdlStmAssign
            HdlValueId: output_arp_oper_reg
            HdlValueId: output_arp_oper
        HdlStmAssign
            HdlValueId: output_arp_sha_reg
            HdlValueId: output_arp_sha
        HdlStmAssign
            HdlValueId: output_arp_spa_reg
            HdlValueId: output_arp_spa
        HdlStmAssign
            HdlValueId: output_arp_tha_reg
            HdlValueId: output_arp_tha
        HdlStmAssign
            HdlValueId: output_arp_tpa_reg
            HdlValueId: output_arp_tpa
        HdlStmAssign
            HdlValueId: busy_reg
            HdlValueId: busy
        HdlStmAssign
            HdlValueId: error_header_early_termination_reg
            HdlValueId: error_header_early_termination
        HdlStmAssign
            HdlValueId: error_invalid_header_reg
            HdlValueId: error_invalid_header
        HdlStmProcess
            list: sensitivity
                HdlAll
            HdlStmBlock: SEQ
                list: body
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: state_next
                            HdlValueId: STATE_IDLE
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: input_eth_hdr_ready_next
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: input_eth_payload_tready_next
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: store_eth_hdr
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: store_arp_hdr_word_0
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: store_arp_hdr_word_1
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: store_arp_hdr_word_2
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: store_arp_hdr_word_3
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: frame_ptr_next
                            HdlValueId: frame_ptr_reg
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: output_frame_valid_next
                            HdlOp: AND
                                list: ops
                                    HdlValueId: output_frame_valid_reg
                                    HdlOp: NEG
                                        list: ops
                                            HdlValueId: output_frame_ready
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: error_header_early_termination_next
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: error_invalid_header_next
                            HdlValueInt: 0
                    HdlStmCase: state_reg
                        HdlStmCaseType: CASE
                        HdlValueId: state_reg
                        list: cases
                            tuple
                                HdlValueId: STATE_IDLE
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: frame_ptr_next
                                                HdlValueInt: 0
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: input_eth_hdr_ready_next
                                                HdlOp: NEG
                                                    list: ops
                                                        HdlValueId: output_frame_valid_reg
                                        HdlStmIf
                                            HdlOp: AND
                                                list: ops
                                                    HdlValueId: input_eth_hdr_ready
                                                    HdlValueId: input_eth_hdr_valid
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: input_eth_hdr_ready_next
                                                            HdlValueInt: 0
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: input_eth_payload_tready_next
                                                            HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: store_eth_hdr
                                                            HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: state_next
                                                            HdlValueId: STATE_READ_HEADER
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: state_next
                                                            HdlValueId: STATE_IDLE
                            tuple
                                HdlValueId: STATE_READ_HEADER
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: input_eth_payload_tready_next
                                                HdlValueInt: 1
                                        HdlStmIf
                                            HdlValueId: input_eth_payload_tvalid
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: frame_ptr_next
                                                            HdlOp: ADD
                                                                list: ops
                                                                    HdlValueId: frame_ptr_reg
                                                                    HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: state_next
                                                            HdlValueId: STATE_READ_HEADER
                                                    HdlStmCase: frame_ptr_reg
                                                        HdlStmCaseType: CASE
                                                        HdlValueId: frame_ptr_reg
                                                        list: cases
                                                            tuple
                                                                HdlValueInt: 00
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: store_arp_hdr_word_0
                                                                        HdlValueInt: 1
                                                            tuple
                                                                HdlValueInt: 01
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: store_arp_hdr_word_1
                                                                        HdlValueInt: 1
                                                            tuple
                                                                HdlValueInt: 02
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: store_arp_hdr_word_2
                                                                        HdlValueInt: 1
                                                            tuple
                                                                HdlValueInt: 03
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: store_arp_hdr_word_3
                                                                                HdlValueInt: 1
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: state_next
                                                                                HdlValueId: STATE_WAIT_LAST
                                                    HdlStmIf
                                                        HdlValueId: input_eth_payload_tlast
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmIf
                                                                    HdlOp: OR
                                                                        list: ops
                                                                            HdlOp: NE
                                                                                list: ops
                                                                                    HdlValueId: frame_ptr_reg
                                                                                    HdlValueInt: 03
                                                                            HdlOp: NE
                                                                                list: ops
                                                                                    HdlOp: AND
                                                                                        list: ops
                                                                                            HdlValueId: input_eth_payload_tkeep
                                                                                            HdlValueInt: 0f
                                                                                    HdlValueInt: 0f
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: error_header_early_termination_next
                                                                                    HdlValueInt: 1
                                                                    list: elifs
                                                                        tuple
                                                                            HdlOp: OR_LOG
                                                                                list: ops
                                                                                    HdlOp: NE
                                                                                        list: ops
                                                                                            HdlValueId: output_arp_hlen
                                                                                            HdlValueInt: 6
                                                                                    HdlOp: NE
                                                                                        list: ops
                                                                                            HdlValueId: output_arp_plen
                                                                                            HdlValueInt: 4
                                                                            HdlStmBlock: SEQ
                                                                                list: body
                                                                                    HdlOp: ASSIGN
                                                                                        list: ops
                                                                                            HdlValueId: error_invalid_header_next
                                                                                            HdlValueInt: 1
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: output_frame_valid_next
                                                                                    HdlOp: NEG
                                                                                        list: ops
                                                                                            HdlValueId: input_eth_payload_tuser
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: input_eth_hdr_ready_next
                                                                        HdlOp: NEG
                                                                            list: ops
                                                                                HdlValueId: output_frame_valid_reg
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: input_eth_payload_tready_next
                                                                        HdlValueInt: 0
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: state_next
                                                                        HdlValueId: STATE_IDLE
                                                        list: elifs
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: state_next
                                                            HdlValueId: STATE_READ_HEADER
                            tuple
                                HdlValueId: STATE_WAIT_LAST
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: input_eth_payload_tready_next
                                                HdlValueInt: 1
                                        HdlStmIf
                                            HdlValueId: input_eth_payload_tvalid
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmIf
                                                        HdlValueId: input_eth_payload_tlast
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmIf
                                                                    HdlOp: OR_LOG
                                                                        list: ops
                                                                            HdlOp: NE
                                                                                list: ops
                                                                                    HdlValueId: output_arp_hlen
                                                                                    HdlValueInt: 6
                                                                            HdlOp: NE
                                                                                list: ops
                                                                                    HdlValueId: output_arp_plen
                                                                                    HdlValueInt: 4
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: error_invalid_header_next
                                                                                    HdlValueInt: 1
                                                                    list: elifs
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: output_frame_valid_next
                                                                                    HdlOp: NEG
                                                                                        list: ops
                                                                                            HdlValueId: input_eth_payload_tuser
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: input_eth_hdr_ready_next
                                                                        HdlOp: NEG
                                                                            list: ops
                                                                                HdlValueId: output_frame_valid_reg
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: input_eth_payload_tready_next
                                                                        HdlValueInt: 0
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: state_next
                                                                        HdlValueId: STATE_IDLE
                                                        list: elifs
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: state_next
                                                                        HdlValueId: STATE_WAIT_LAST
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: state_next
                                                            HdlValueId: STATE_WAIT_LAST
        HdlStmProcess
            list: sensitivity
                HdlOp: RISING
                    list: ops
                        HdlValueId: clk
            HdlStmBlock: SEQ
                list: body
                    HdlStmIf
                        HdlValueId: rst
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueId: STATE_IDLE
                                    HdlValueId: state_reg
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: frame_ptr_reg
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: input_eth_payload_tready_reg
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: output_frame_valid_reg
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: output_eth_dest_mac_reg
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: output_eth_src_mac_reg
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: output_eth_type_reg
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: busy_reg
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: error_header_early_termination_reg
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: error_invalid_header_reg
                        list: elifs
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueId: state_next
                                    HdlValueId: state_reg
                                HdlStmAssign
                                    HdlValueId: input_eth_hdr_ready_next
                                    HdlValueId: input_eth_hdr_ready_reg
                                HdlStmAssign
                                    HdlValueId: input_eth_payload_tready_next
                                    HdlValueId: input_eth_payload_tready_reg
                                HdlStmAssign
                                    HdlValueId: frame_ptr_next
                                    HdlValueId: frame_ptr_reg
                                HdlStmAssign
                                    HdlValueId: output_frame_valid_next
                                    HdlValueId: output_frame_valid_reg
                                HdlStmAssign
                                    HdlValueId: error_header_early_termination_next
                                    HdlValueId: error_header_early_termination_reg
                                HdlStmAssign
                                    HdlValueId: error_invalid_header_next
                                    HdlValueId: error_invalid_header_reg
                                HdlStmAssign
                                    HdlOp: NE
                                        list: ops
                                            HdlValueId: state_next
                                            HdlValueId: STATE_IDLE
                                    HdlValueId: busy_reg
                                HdlStmIf
                                    HdlValueId: store_eth_hdr
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueId: input_eth_dest_mac
                                                HdlValueId: output_eth_dest_mac_reg
                                            HdlStmAssign
                                                HdlValueId: input_eth_src_mac
                                                HdlValueId: output_eth_src_mac_reg
                                            HdlStmAssign
                                                HdlValueId: input_eth_type
                                                HdlValueId: output_eth_type_reg
                                    list: elifs
                                HdlStmIf
                                    HdlValueId: store_arp_hdr_word_0
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_htype_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_htype_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 23
                                                                HdlValueInt: 16
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_ptype_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 24
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_ptype_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 39
                                                                HdlValueInt: 32
                                                HdlValueId: output_arp_hlen_reg
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 47
                                                                HdlValueInt: 40
                                                HdlValueId: output_arp_plen_reg
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 55
                                                                HdlValueInt: 48
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_oper_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 63
                                                                HdlValueInt: 56
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_oper_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                    list: elifs
                                HdlStmIf
                                    HdlValueId: store_arp_hdr_word_1
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_sha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 47
                                                                HdlValueInt: 40
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_sha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 39
                                                                HdlValueInt: 32
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 23
                                                                HdlValueInt: 16
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_sha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 24
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 24
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_sha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 23
                                                                HdlValueInt: 16
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 39
                                                                HdlValueInt: 32
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_sha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 47
                                                                HdlValueInt: 40
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_sha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 55
                                                                HdlValueInt: 48
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_spa_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 24
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 63
                                                                HdlValueInt: 56
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_spa_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 23
                                                                HdlValueInt: 16
                                    list: elifs
                                HdlStmIf
                                    HdlValueId: store_arp_hdr_word_2
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_spa_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_spa_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 23
                                                                HdlValueInt: 16
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 47
                                                                HdlValueInt: 40
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 24
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 39
                                                                HdlValueInt: 32
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 39
                                                                HdlValueInt: 32
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 24
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 47
                                                                HdlValueInt: 40
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 23
                                                                HdlValueInt: 16
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 55
                                                                HdlValueInt: 48
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 63
                                                                HdlValueInt: 56
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                    list: elifs
                                HdlStmIf
                                    HdlValueId: store_arp_hdr_word_3
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tpa_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 24
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tpa_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 23
                                                                HdlValueInt: 16
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 23
                                                                HdlValueInt: 16
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tpa_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 24
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tpa_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                    list: elifs

MOV HdlModuleDef@@arp_eth_rx_64 to objs
HdlModuleDef: arp_eth_rx_64
    HdlModuleDec: arp_eth_rx_64
        list: params
        list: ports
            HdlIdDef: clk
                HdlDirection: IN
            HdlIdDef: rst
                HdlDirection: IN
            HdlIdDef: input_eth_hdr_valid
                HdlDirection: IN
            HdlIdDef: input_eth_hdr_ready
                HdlDirection: OUT
            HdlIdDef: input_eth_dest_mac
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: wire
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 47
                                HdlValueInt: 0
                HdlDirection: IN
            HdlIdDef: input_eth_src_mac
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: wire
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 47
                                HdlValueInt: 0
                HdlDirection: IN
            HdlIdDef: input_eth_type
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: wire
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 15
                                HdlValueInt: 0
                HdlDirection: IN
            HdlIdDef: input_eth_payload_tdata
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: wire
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 63
                                HdlValueInt: 0
                HdlDirection: IN
            HdlIdDef: input_eth_payload_tkeep
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: wire
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 7
                                HdlValueInt: 0
                HdlDirection: IN
            HdlIdDef: input_eth_payload_tvalid
                HdlDirection: IN
            HdlIdDef: input_eth_payload_tready
                HdlDirection: OUT
            HdlIdDef: input_eth_payload_tlast
                HdlDirection: IN
            HdlIdDef: input_eth_payload_tuser
                HdlDirection: IN
            HdlIdDef: output_frame_valid
                HdlDirection: OUT
            HdlIdDef: output_frame_ready
                HdlDirection: IN
            HdlIdDef: output_eth_dest_mac
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: wire
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 47
                                HdlValueInt: 0
                HdlDirection: OUT
            HdlIdDef: output_eth_src_mac
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: wire
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 47
                                HdlValueInt: 0
                HdlDirection: OUT
            HdlIdDef: output_eth_type
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: wire
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 15
                                HdlValueInt: 0
                HdlDirection: OUT
            HdlIdDef: output_arp_htype
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: wire
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 15
                                HdlValueInt: 0
                HdlDirection: OUT
            HdlIdDef: output_arp_ptype
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: wire
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 15
                                HdlValueInt: 0
                HdlDirection: OUT
            HdlIdDef: output_arp_hlen
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: wire
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 7
                                HdlValueInt: 0
                HdlDirection: OUT
            HdlIdDef: output_arp_plen
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: wire
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 7
                                HdlValueInt: 0
                HdlDirection: OUT
            HdlIdDef: output_arp_oper
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: wire
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 15
                                HdlValueInt: 0
                HdlDirection: OUT
            HdlIdDef: output_arp_sha
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: wire
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 47
                                HdlValueInt: 0
                HdlDirection: OUT
            HdlIdDef: output_arp_spa
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: wire
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 31
                                HdlValueInt: 0
                HdlDirection: OUT
            HdlIdDef: output_arp_tha
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: wire
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 47
                                HdlValueInt: 0
                HdlDirection: OUT
            HdlIdDef: output_arp_tpa
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: wire
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 31
                                HdlValueInt: 0
                HdlDirection: OUT
            HdlIdDef: busy
                HdlDirection: OUT
            HdlIdDef: error_header_early_termination
                HdlDirection: OUT
            HdlIdDef: error_invalid_header
                HdlDirection: OUT
        list: objs
    list: objs
        HdlIdDef: STATE_IDLE
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: wire
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 2
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: STATE_READ_HEADER
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: wire
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 2
                            HdlValueInt: 0
            HdlValueInt: 1
            HdlDirection: INTERNAL
        HdlIdDef: STATE_WAIT_LAST
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: wire
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 2
                            HdlValueInt: 0
            HdlValueInt: 2
            HdlDirection: INTERNAL
        HdlIdDef: state_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 2
                            HdlValueInt: 0
            HdlValueId: STATE_IDLE
            HdlDirection: INTERNAL
        HdlIdDef: state_next
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 2
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: store_eth_hdr
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlIdDef: store_arp_hdr_word_0
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlIdDef: store_arp_hdr_word_1
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlIdDef: store_arp_hdr_word_2
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlIdDef: store_arp_hdr_word_3
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlIdDef: frame_ptr_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 7
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: frame_ptr_next
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 7
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: input_eth_hdr_ready_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: input_eth_hdr_ready_next
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlIdDef: input_eth_payload_tready_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: input_eth_payload_tready_next
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlIdDef: output_frame_valid_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_frame_valid_next
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlIdDef: output_eth_dest_mac_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 47
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_eth_src_mac_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 47
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_eth_type_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 15
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_arp_htype_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 15
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_arp_ptype_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 15
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_arp_hlen_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 7
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_arp_plen_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 7
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_arp_oper_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 15
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_arp_sha_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 47
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_arp_spa_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 31
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_arp_tha_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 47
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_arp_tpa_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 31
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: busy_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: error_header_early_termination_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: error_header_early_termination_next
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlIdDef: error_invalid_header_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: error_invalid_header_next
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlStmAssign
            HdlValueId: input_eth_hdr_ready_reg
            HdlValueId: input_eth_hdr_ready
        HdlStmAssign
            HdlValueId: input_eth_payload_tready_reg
            HdlValueId: input_eth_payload_tready
        HdlStmAssign
            HdlValueId: output_frame_valid_reg
            HdlValueId: output_frame_valid
        HdlStmAssign
            HdlValueId: output_eth_dest_mac_reg
            HdlValueId: output_eth_dest_mac
        HdlStmAssign
            HdlValueId: output_eth_src_mac_reg
            HdlValueId: output_eth_src_mac
        HdlStmAssign
            HdlValueId: output_eth_type_reg
            HdlValueId: output_eth_type
        HdlStmAssign
            HdlValueId: output_arp_htype_reg
            HdlValueId: output_arp_htype
        HdlStmAssign
            HdlValueId: output_arp_ptype_reg
            HdlValueId: output_arp_ptype
        HdlStmAssign
            HdlValueId: output_arp_hlen_reg
            HdlValueId: output_arp_hlen
        HdlStmAssign
            HdlValueId: output_arp_plen_reg
            HdlValueId: output_arp_plen
        HdlStmAssign
            HdlValueId: output_arp_oper_reg
            HdlValueId: output_arp_oper
        HdlStmAssign
            HdlValueId: output_arp_sha_reg
            HdlValueId: output_arp_sha
        HdlStmAssign
            HdlValueId: output_arp_spa_reg
            HdlValueId: output_arp_spa
        HdlStmAssign
            HdlValueId: output_arp_tha_reg
            HdlValueId: output_arp_tha
        HdlStmAssign
            HdlValueId: output_arp_tpa_reg
            HdlValueId: output_arp_tpa
        HdlStmAssign
            HdlValueId: busy_reg
            HdlValueId: busy
        HdlStmAssign
            HdlValueId: error_header_early_termination_reg
            HdlValueId: error_header_early_termination
        HdlStmAssign
            HdlValueId: error_invalid_header_reg
            HdlValueId: error_invalid_header
        HdlStmProcess
            list: sensitivity
                HdlAll
            HdlStmBlock: SEQ
                list: body
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: state_next
                            HdlValueId: STATE_IDLE
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: input_eth_hdr_ready_next
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: input_eth_payload_tready_next
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: store_eth_hdr
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: store_arp_hdr_word_0
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: store_arp_hdr_word_1
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: store_arp_hdr_word_2
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: store_arp_hdr_word_3
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: frame_ptr_next
                            HdlValueId: frame_ptr_reg
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: output_frame_valid_next
                            HdlOp: AND
                                list: ops
                                    HdlValueId: output_frame_valid_reg
                                    HdlOp: NEG
                                        list: ops
                                            HdlValueId: output_frame_ready
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: error_header_early_termination_next
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: error_invalid_header_next
                            HdlValueInt: 0
                    HdlStmCase: state_reg
                        HdlStmCaseType: CASE
                        HdlValueId: state_reg
                        list: cases
                            tuple
                                HdlValueId: STATE_IDLE
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: frame_ptr_next
                                                HdlValueInt: 0
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: input_eth_hdr_ready_next
                                                HdlOp: NEG
                                                    list: ops
                                                        HdlValueId: output_frame_valid_reg
                                        HdlStmIf
                                            HdlOp: AND
                                                list: ops
                                                    HdlValueId: input_eth_hdr_ready
                                                    HdlValueId: input_eth_hdr_valid
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: input_eth_hdr_ready_next
                                                            HdlValueInt: 0
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: input_eth_payload_tready_next
                                                            HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: store_eth_hdr
                                                            HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: state_next
                                                            HdlValueId: STATE_READ_HEADER
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: state_next
                                                            HdlValueId: STATE_IDLE
                            tuple
                                HdlValueId: STATE_READ_HEADER
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: input_eth_payload_tready_next
                                                HdlValueInt: 1
                                        HdlStmIf
                                            HdlValueId: input_eth_payload_tvalid
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: frame_ptr_next
                                                            HdlOp: ADD
                                                                list: ops
                                                                    HdlValueId: frame_ptr_reg
                                                                    HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: state_next
                                                            HdlValueId: STATE_READ_HEADER
                                                    HdlStmCase: frame_ptr_reg
                                                        HdlStmCaseType: CASE
                                                        HdlValueId: frame_ptr_reg
                                                        list: cases
                                                            tuple
                                                                HdlValueInt: 00
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: store_arp_hdr_word_0
                                                                        HdlValueInt: 1
                                                            tuple
                                                                HdlValueInt: 01
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: store_arp_hdr_word_1
                                                                        HdlValueInt: 1
                                                            tuple
                                                                HdlValueInt: 02
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: store_arp_hdr_word_2
                                                                        HdlValueInt: 1
                                                            tuple
                                                                HdlValueInt: 03
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: store_arp_hdr_word_3
                                                                                HdlValueInt: 1
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: state_next
                                                                                HdlValueId: STATE_WAIT_LAST
                                                    HdlStmIf
                                                        HdlValueId: input_eth_payload_tlast
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmIf
                                                                    HdlOp: OR
                                                                        list: ops
                                                                            HdlOp: NE
                                                                                list: ops
                                                                                    HdlValueId: frame_ptr_reg
                                                                                    HdlValueInt: 03
                                                                            HdlOp: NE
                                                                                list: ops
                                                                                    HdlOp: AND
                                                                                        list: ops
                                                                                            HdlValueId: input_eth_payload_tkeep
                                                                                            HdlValueInt: 0f
                                                                                    HdlValueInt: 0f
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: error_header_early_termination_next
                                                                                    HdlValueInt: 1
                                                                    list: elifs
                                                                        tuple
                                                                            HdlOp: OR_LOG
                                                                                list: ops
                                                                                    HdlOp: NE
                                                                                        list: ops
                                                                                            HdlValueId: output_arp_hlen
                                                                                            HdlValueInt: 6
                                                                                    HdlOp: NE
                                                                                        list: ops
                                                                                            HdlValueId: output_arp_plen
                                                                                            HdlValueInt: 4
                                                                            HdlStmBlock: SEQ
                                                                                list: body
                                                                                    HdlOp: ASSIGN
                                                                                        list: ops
                                                                                            HdlValueId: error_invalid_header_next
                                                                                            HdlValueInt: 1
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: output_frame_valid_next
                                                                                    HdlOp: NEG
                                                                                        list: ops
                                                                                            HdlValueId: input_eth_payload_tuser
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: input_eth_hdr_ready_next
                                                                        HdlOp: NEG
                                                                            list: ops
                                                                                HdlValueId: output_frame_valid_reg
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: input_eth_payload_tready_next
                                                                        HdlValueInt: 0
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: state_next
                                                                        HdlValueId: STATE_IDLE
                                                        list: elifs
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: state_next
                                                            HdlValueId: STATE_READ_HEADER
                            tuple
                                HdlValueId: STATE_WAIT_LAST
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: input_eth_payload_tready_next
                                                HdlValueInt: 1
                                        HdlStmIf
                                            HdlValueId: input_eth_payload_tvalid
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmIf
                                                        HdlValueId: input_eth_payload_tlast
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmIf
                                                                    HdlOp: OR_LOG
                                                                        list: ops
                                                                            HdlOp: NE
                                                                                list: ops
                                                                                    HdlValueId: output_arp_hlen
                                                                                    HdlValueInt: 6
                                                                            HdlOp: NE
                                                                                list: ops
                                                                                    HdlValueId: output_arp_plen
                                                                                    HdlValueInt: 4
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: error_invalid_header_next
                                                                                    HdlValueInt: 1
                                                                    list: elifs
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: output_frame_valid_next
                                                                                    HdlOp: NEG
                                                                                        list: ops
                                                                                            HdlValueId: input_eth_payload_tuser
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: input_eth_hdr_ready_next
                                                                        HdlOp: NEG
                                                                            list: ops
                                                                                HdlValueId: output_frame_valid_reg
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: input_eth_payload_tready_next
                                                                        HdlValueInt: 0
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: state_next
                                                                        HdlValueId: STATE_IDLE
                                                        list: elifs
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: state_next
                                                                        HdlValueId: STATE_WAIT_LAST
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: state_next
                                                            HdlValueId: STATE_WAIT_LAST
        HdlStmProcess
            list: sensitivity
                HdlOp: RISING
                    list: ops
                        HdlValueId: clk
            HdlStmBlock: SEQ
                list: body
                    HdlStmIf
                        HdlValueId: rst
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueId: STATE_IDLE
                                    HdlValueId: state_reg
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: frame_ptr_reg
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: input_eth_payload_tready_reg
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: output_frame_valid_reg
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: output_eth_dest_mac_reg
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: output_eth_src_mac_reg
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: output_eth_type_reg
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: busy_reg
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: error_header_early_termination_reg
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: error_invalid_header_reg
                        list: elifs
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueId: state_next
                                    HdlValueId: state_reg
                                HdlStmAssign
                                    HdlValueId: input_eth_hdr_ready_next
                                    HdlValueId: input_eth_hdr_ready_reg
                                HdlStmAssign
                                    HdlValueId: input_eth_payload_tready_next
                                    HdlValueId: input_eth_payload_tready_reg
                                HdlStmAssign
                                    HdlValueId: frame_ptr_next
                                    HdlValueId: frame_ptr_reg
                                HdlStmAssign
                                    HdlValueId: output_frame_valid_next
                                    HdlValueId: output_frame_valid_reg
                                HdlStmAssign
                                    HdlValueId: error_header_early_termination_next
                                    HdlValueId: error_header_early_termination_reg
                                HdlStmAssign
                                    HdlValueId: error_invalid_header_next
                                    HdlValueId: error_invalid_header_reg
                                HdlStmAssign
                                    HdlOp: NE
                                        list: ops
                                            HdlValueId: state_next
                                            HdlValueId: STATE_IDLE
                                    HdlValueId: busy_reg
                                HdlStmIf
                                    HdlValueId: store_eth_hdr
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueId: input_eth_dest_mac
                                                HdlValueId: output_eth_dest_mac_reg
                                            HdlStmAssign
                                                HdlValueId: input_eth_src_mac
                                                HdlValueId: output_eth_src_mac_reg
                                            HdlStmAssign
                                                HdlValueId: input_eth_type
                                                HdlValueId: output_eth_type_reg
                                    list: elifs
                                HdlStmIf
                                    HdlValueId: store_arp_hdr_word_0
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_htype_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_htype_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 23
                                                                HdlValueInt: 16
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_ptype_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 24
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_ptype_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 39
                                                                HdlValueInt: 32
                                                HdlValueId: output_arp_hlen_reg
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 47
                                                                HdlValueInt: 40
                                                HdlValueId: output_arp_plen_reg
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 55
                                                                HdlValueInt: 48
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_oper_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 63
                                                                HdlValueInt: 56
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_oper_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                    list: elifs
                                HdlStmIf
                                    HdlValueId: store_arp_hdr_word_1
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_sha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 47
                                                                HdlValueInt: 40
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_sha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 39
                                                                HdlValueInt: 32
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 23
                                                                HdlValueInt: 16
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_sha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 24
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 24
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_sha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 23
                                                                HdlValueInt: 16
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 39
                                                                HdlValueInt: 32
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_sha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 47
                                                                HdlValueInt: 40
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_sha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 55
                                                                HdlValueInt: 48
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_spa_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 24
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 63
                                                                HdlValueInt: 56
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_spa_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 23
                                                                HdlValueInt: 16
                                    list: elifs
                                HdlStmIf
                                    HdlValueId: store_arp_hdr_word_2
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_spa_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_spa_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 23
                                                                HdlValueInt: 16
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 47
                                                                HdlValueInt: 40
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 24
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 39
                                                                HdlValueInt: 32
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 39
                                                                HdlValueInt: 32
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 24
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 47
                                                                HdlValueInt: 40
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 23
                                                                HdlValueInt: 16
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 55
                                                                HdlValueInt: 48
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 63
                                                                HdlValueInt: 56
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                    list: elifs
                                HdlStmIf
                                    HdlValueId: store_arp_hdr_word_3
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tpa_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 24
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tpa_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 23
                                                                HdlValueInt: 16
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 23
                                                                HdlValueInt: 16
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tpa_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 24
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tpa_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                    list: elifs

MOV HdlStmProcess@@ to objs
HdlStmProcess
    list: sensitivity
        HdlAll
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: state_next
                    HdlValueId: STATE_IDLE
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: input_eth_hdr_ready_next
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: input_eth_payload_tready_next
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: store_eth_hdr
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: store_arp_hdr_word_0
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: store_arp_hdr_word_1
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: store_arp_hdr_word_2
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: store_arp_hdr_word_3
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: frame_ptr_next
                    HdlValueId: frame_ptr_reg
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: output_frame_valid_next
                    HdlOp: AND
                        list: ops
                            HdlValueId: output_frame_valid_reg
                            HdlOp: NEG
                                list: ops
                                    HdlValueId: output_frame_ready
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: error_header_early_termination_next
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: error_invalid_header_next
                    HdlValueInt: 0
            HdlStmCase: state_reg
                HdlStmCaseType: CASE
                HdlValueId: state_reg
                list: cases
                    tuple
                        HdlValueId: STATE_IDLE
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: frame_ptr_next
                                        HdlValueInt: 0
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: input_eth_hdr_ready_next
                                        HdlOp: NEG
                                            list: ops
                                                HdlValueId: output_frame_valid_reg
                                HdlStmIf
                                    HdlOp: AND
                                        list: ops
                                            HdlValueId: input_eth_hdr_ready
                                            HdlValueId: input_eth_hdr_valid
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: input_eth_hdr_ready_next
                                                    HdlValueInt: 0
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: input_eth_payload_tready_next
                                                    HdlValueInt: 1
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: store_eth_hdr
                                                    HdlValueInt: 1
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: state_next
                                                    HdlValueId: STATE_READ_HEADER
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: state_next
                                                    HdlValueId: STATE_IDLE
                    tuple
                        HdlValueId: STATE_READ_HEADER
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: input_eth_payload_tready_next
                                        HdlValueInt: 1
                                HdlStmIf
                                    HdlValueId: input_eth_payload_tvalid
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: frame_ptr_next
                                                    HdlOp: ADD
                                                        list: ops
                                                            HdlValueId: frame_ptr_reg
                                                            HdlValueInt: 1
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: state_next
                                                    HdlValueId: STATE_READ_HEADER
                                            HdlStmCase: frame_ptr_reg
                                                HdlStmCaseType: CASE
                                                HdlValueId: frame_ptr_reg
                                                list: cases
                                                    tuple
                                                        HdlValueInt: 00
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: store_arp_hdr_word_0
                                                                HdlValueInt: 1
                                                    tuple
                                                        HdlValueInt: 01
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: store_arp_hdr_word_1
                                                                HdlValueInt: 1
                                                    tuple
                                                        HdlValueInt: 02
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: store_arp_hdr_word_2
                                                                HdlValueInt: 1
                                                    tuple
                                                        HdlValueInt: 03
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: store_arp_hdr_word_3
                                                                        HdlValueInt: 1
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: state_next
                                                                        HdlValueId: STATE_WAIT_LAST
                                            HdlStmIf
                                                HdlValueId: input_eth_payload_tlast
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlStmIf
                                                            HdlOp: OR
                                                                list: ops
                                                                    HdlOp: NE
                                                                        list: ops
                                                                            HdlValueId: frame_ptr_reg
                                                                            HdlValueInt: 03
                                                                    HdlOp: NE
                                                                        list: ops
                                                                            HdlOp: AND
                                                                                list: ops
                                                                                    HdlValueId: input_eth_payload_tkeep
                                                                                    HdlValueInt: 0f
                                                                            HdlValueInt: 0f
                                                            HdlStmBlock: SEQ
                                                                list: body
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: error_header_early_termination_next
                                                                            HdlValueInt: 1
                                                            list: elifs
                                                                tuple
                                                                    HdlOp: OR_LOG
                                                                        list: ops
                                                                            HdlOp: NE
                                                                                list: ops
                                                                                    HdlValueId: output_arp_hlen
                                                                                    HdlValueInt: 6
                                                                            HdlOp: NE
                                                                                list: ops
                                                                                    HdlValueId: output_arp_plen
                                                                                    HdlValueInt: 4
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: error_invalid_header_next
                                                                                    HdlValueInt: 1
                                                            HdlStmBlock: SEQ
                                                                list: body
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: output_frame_valid_next
                                                                            HdlOp: NEG
                                                                                list: ops
                                                                                    HdlValueId: input_eth_payload_tuser
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: input_eth_hdr_ready_next
                                                                HdlOp: NEG
                                                                    list: ops
                                                                        HdlValueId: output_frame_valid_reg
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: input_eth_payload_tready_next
                                                                HdlValueInt: 0
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: state_next
                                                                HdlValueId: STATE_IDLE
                                                list: elifs
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: state_next
                                                    HdlValueId: STATE_READ_HEADER
                    tuple
                        HdlValueId: STATE_WAIT_LAST
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: input_eth_payload_tready_next
                                        HdlValueInt: 1
                                HdlStmIf
                                    HdlValueId: input_eth_payload_tvalid
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmIf
                                                HdlValueId: input_eth_payload_tlast
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlStmIf
                                                            HdlOp: OR_LOG
                                                                list: ops
                                                                    HdlOp: NE
                                                                        list: ops
                                                                            HdlValueId: output_arp_hlen
                                                                            HdlValueInt: 6
                                                                    HdlOp: NE
                                                                        list: ops
                                                                            HdlValueId: output_arp_plen
                                                                            HdlValueInt: 4
                                                            HdlStmBlock: SEQ
                                                                list: body
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: error_invalid_header_next
                                                                            HdlValueInt: 1
                                                            list: elifs
                                                            HdlStmBlock: SEQ
                                                                list: body
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: output_frame_valid_next
                                                                            HdlOp: NEG
                                                                                list: ops
                                                                                    HdlValueId: input_eth_payload_tuser
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: input_eth_hdr_ready_next
                                                                HdlOp: NEG
                                                                    list: ops
                                                                        HdlValueId: output_frame_valid_reg
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: input_eth_payload_tready_next
                                                                HdlValueInt: 0
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: state_next
                                                                HdlValueId: STATE_IDLE
                                                list: elifs
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: state_next
                                                                HdlValueId: STATE_WAIT_LAST
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: state_next
                                                    HdlValueId: STATE_WAIT_LAST


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/arp_eth_rx_64.v
+++ b/rtl/arp_eth_rx_64.v
@@ -193,31 +193,31 @@ always @* begin
         end
         STATE_READ_HEADER: begin
             // read header state
-            input_eth_payload_tready_next = 1;
+            input_eth_payload_tready_next = 1'b1;
 
             if (input_eth_payload_tvalid) begin
                 // word transfer in - store it
-                frame_ptr_next = frame_ptr_reg+1;
+                frame_ptr_next = frame_ptr_reg + 8'd1;
                 state_next = STATE_READ_HEADER;
                 case (frame_ptr_reg)
-                    8'h00: store_arp_hdr_word_0 = 1;
-                    8'h01: store_arp_hdr_word_1 = 1;
-                    8'h02: store_arp_hdr_word_2 = 1;
+                    8'h00: store_arp_hdr_word_0 = 1'b1;
+                    8'h01: store_arp_hdr_word_1 = 1'b1;
+                    8'h02: store_arp_hdr_word_2 = 1'b1;
                     8'h03: begin
-                        store_arp_hdr_word_3 = 1;
+                        store_arp_hdr_word_3 = 1'b1;
                         state_next = STATE_WAIT_LAST;
                     end
                 endcase
                 if (input_eth_payload_tlast) begin
                     if (frame_ptr_reg != 8'h03 | (input_eth_payload_tkeep & 8'h0F) != 8'h0F) begin
-                        error_header_early_termination_next = 1;
-                    end else if (output_arp_hlen != 6 || output_arp_plen != 4) begin
-                        error_invalid_header_next = 1;
+                        error_header_early_termination_next = 1'b1;
+                    end else if (output_arp_hlen != 4'd6 || output_arp_plen != 4'd4) begin
+                        error_invalid_header_next = 1'b1;
                     end else begin
                         output_frame_valid_next = ~input_eth_payload_tuser;
                     end
                     input_eth_hdr_ready_next = ~output_frame_valid_reg;
-                    input_eth_payload_tready_next = 0;
+                    input_eth_payload_tready_next = 1'b0;
                     state_next = STATE_IDLE;
                 end
             end else begin

ParseResult:
UPD HdlModuleDef@@arp_eth_rx_64 to arp_eth_rx_64
    MOV list@@objs to arp_eth_rx_64
    list: objs
        HdlIdDef: STATE_IDLE
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: wire
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 2
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: STATE_READ_HEADER
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: wire
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 2
                            HdlValueInt: 0
            HdlValueInt: 1
            HdlDirection: INTERNAL
        HdlIdDef: STATE_WAIT_LAST
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: wire
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 2
                            HdlValueInt: 0
            HdlValueInt: 2
            HdlDirection: INTERNAL
        HdlIdDef: state_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 2
                            HdlValueInt: 0
            HdlValueId: STATE_IDLE
            HdlDirection: INTERNAL
        HdlIdDef: state_next
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 2
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: store_eth_hdr
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlIdDef: store_arp_hdr_word_0
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlIdDef: store_arp_hdr_word_1
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlIdDef: store_arp_hdr_word_2
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlIdDef: store_arp_hdr_word_3
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlIdDef: frame_ptr_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 7
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: frame_ptr_next
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 7
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: input_eth_hdr_ready_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: input_eth_hdr_ready_next
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlIdDef: input_eth_payload_tready_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: input_eth_payload_tready_next
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlIdDef: output_frame_valid_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_frame_valid_next
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlIdDef: output_eth_dest_mac_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 47
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_eth_src_mac_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 47
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_eth_type_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 15
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_arp_htype_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 15
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_arp_ptype_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 15
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_arp_hlen_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 7
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_arp_plen_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 7
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_arp_oper_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 15
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_arp_sha_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 47
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_arp_spa_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 31
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_arp_tha_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 47
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_arp_tpa_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 31
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: busy_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: error_header_early_termination_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: error_header_early_termination_next
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlIdDef: error_invalid_header_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: error_invalid_header_next
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlStmAssign
            HdlValueId: input_eth_hdr_ready_reg
            HdlValueId: input_eth_hdr_ready
        HdlStmAssign
            HdlValueId: input_eth_payload_tready_reg
            HdlValueId: input_eth_payload_tready
        HdlStmAssign
            HdlValueId: output_frame_valid_reg
            HdlValueId: output_frame_valid
        HdlStmAssign
            HdlValueId: output_eth_dest_mac_reg
            HdlValueId: output_eth_dest_mac
        HdlStmAssign
            HdlValueId: output_eth_src_mac_reg
            HdlValueId: output_eth_src_mac
        HdlStmAssign
            HdlValueId: output_eth_type_reg
            HdlValueId: output_eth_type
        HdlStmAssign
            HdlValueId: output_arp_htype_reg
            HdlValueId: output_arp_htype
        HdlStmAssign
            HdlValueId: output_arp_ptype_reg
            HdlValueId: output_arp_ptype
        HdlStmAssign
            HdlValueId: output_arp_hlen_reg
            HdlValueId: output_arp_hlen
        HdlStmAssign
            HdlValueId: output_arp_plen_reg
            HdlValueId: output_arp_plen
        HdlStmAssign
            HdlValueId: output_arp_oper_reg
            HdlValueId: output_arp_oper
        HdlStmAssign
            HdlValueId: output_arp_sha_reg
            HdlValueId: output_arp_sha
        HdlStmAssign
            HdlValueId: output_arp_spa_reg
            HdlValueId: output_arp_spa
        HdlStmAssign
            HdlValueId: output_arp_tha_reg
            HdlValueId: output_arp_tha
        HdlStmAssign
            HdlValueId: output_arp_tpa_reg
            HdlValueId: output_arp_tpa
        HdlStmAssign
            HdlValueId: busy_reg
            HdlValueId: busy
        HdlStmAssign
            HdlValueId: error_header_early_termination_reg
            HdlValueId: error_header_early_termination
        HdlStmAssign
            HdlValueId: error_invalid_header_reg
            HdlValueId: error_invalid_header
        HdlStmProcess
            list: sensitivity
                HdlAll
            HdlStmBlock: SEQ
                list: body
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: state_next
                            HdlValueId: STATE_IDLE
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: input_eth_hdr_ready_next
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: input_eth_payload_tready_next
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: store_eth_hdr
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: store_arp_hdr_word_0
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: store_arp_hdr_word_1
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: store_arp_hdr_word_2
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: store_arp_hdr_word_3
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: frame_ptr_next
                            HdlValueId: frame_ptr_reg
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: output_frame_valid_next
                            HdlOp: AND
                                list: ops
                                    HdlValueId: output_frame_valid_reg
                                    HdlOp: NEG
                                        list: ops
                                            HdlValueId: output_frame_ready
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: error_header_early_termination_next
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: error_invalid_header_next
                            HdlValueInt: 0
                    HdlStmCase: state_reg
                        HdlStmCaseType: CASE
                        HdlValueId: state_reg
                        list: cases
                            tuple
                                HdlValueId: STATE_IDLE
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: frame_ptr_next
                                                HdlValueInt: 0
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: input_eth_hdr_ready_next
                                                HdlOp: NEG
                                                    list: ops
                                                        HdlValueId: output_frame_valid_reg
                                        HdlStmIf
                                            HdlOp: AND
                                                list: ops
                                                    HdlValueId: input_eth_hdr_ready
                                                    HdlValueId: input_eth_hdr_valid
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: input_eth_hdr_ready_next
                                                            HdlValueInt: 0
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: input_eth_payload_tready_next
                                                            HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: store_eth_hdr
                                                            HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: state_next
                                                            HdlValueId: STATE_READ_HEADER
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: state_next
                                                            HdlValueId: STATE_IDLE
                            tuple
                                HdlValueId: STATE_READ_HEADER
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: input_eth_payload_tready_next
                                                HdlValueInt: 1
                                        HdlStmIf
                                            HdlValueId: input_eth_payload_tvalid
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: frame_ptr_next
                                                            HdlOp: ADD
                                                                list: ops
                                                                    HdlValueId: frame_ptr_reg
                                                                    HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: state_next
                                                            HdlValueId: STATE_READ_HEADER
                                                    HdlStmCase: frame_ptr_reg
                                                        HdlStmCaseType: CASE
                                                        HdlValueId: frame_ptr_reg
                                                        list: cases
                                                            tuple
                                                                HdlValueInt: 00
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: store_arp_hdr_word_0
                                                                        HdlValueInt: 1
                                                            tuple
                                                                HdlValueInt: 01
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: store_arp_hdr_word_1
                                                                        HdlValueInt: 1
                                                            tuple
                                                                HdlValueInt: 02
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: store_arp_hdr_word_2
                                                                        HdlValueInt: 1
                                                            tuple
                                                                HdlValueInt: 03
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: store_arp_hdr_word_3
                                                                                HdlValueInt: 1
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: state_next
                                                                                HdlValueId: STATE_WAIT_LAST
                                                    HdlStmIf
                                                        HdlValueId: input_eth_payload_tlast
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmIf
                                                                    HdlOp: OR
                                                                        list: ops
                                                                            HdlOp: NE
                                                                                list: ops
                                                                                    HdlValueId: frame_ptr_reg
                                                                                    HdlValueInt: 03
                                                                            HdlOp: NE
                                                                                list: ops
                                                                                    HdlOp: AND
                                                                                        list: ops
                                                                                            HdlValueId: input_eth_payload_tkeep
                                                                                            HdlValueInt: 0f
                                                                                    HdlValueInt: 0f
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: error_header_early_termination_next
                                                                                    HdlValueInt: 1
                                                                    list: elifs
                                                                        tuple
                                                                            HdlOp: OR_LOG
                                                                                list: ops
                                                                                    HdlOp: NE
                                                                                        list: ops
                                                                                            HdlValueId: output_arp_hlen
                                                                                            HdlValueInt: 6
                                                                                    HdlOp: NE
                                                                                        list: ops
                                                                                            HdlValueId: output_arp_plen
                                                                                            HdlValueInt: 4
                                                                            HdlStmBlock: SEQ
                                                                                list: body
                                                                                    HdlOp: ASSIGN
                                                                                        list: ops
                                                                                            HdlValueId: error_invalid_header_next
                                                                                            HdlValueInt: 1
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: output_frame_valid_next
                                                                                    HdlOp: NEG
                                                                                        list: ops
                                                                                            HdlValueId: input_eth_payload_tuser
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: input_eth_hdr_ready_next
                                                                        HdlOp: NEG
                                                                            list: ops
                                                                                HdlValueId: output_frame_valid_reg
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: input_eth_payload_tready_next
                                                                        HdlValueInt: 0
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: state_next
                                                                        HdlValueId: STATE_IDLE
                                                        list: elifs
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: state_next
                                                            HdlValueId: STATE_READ_HEADER
                            tuple
                                HdlValueId: STATE_WAIT_LAST
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: input_eth_payload_tready_next
                                                HdlValueInt: 1
                                        HdlStmIf
                                            HdlValueId: input_eth_payload_tvalid
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmIf
                                                        HdlValueId: input_eth_payload_tlast
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmIf
                                                                    HdlOp: OR_LOG
                                                                        list: ops
                                                                            HdlOp: NE
                                                                                list: ops
                                                                                    HdlValueId: output_arp_hlen
                                                                                    HdlValueInt: 6
                                                                            HdlOp: NE
                                                                                list: ops
                                                                                    HdlValueId: output_arp_plen
                                                                                    HdlValueInt: 4
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: error_invalid_header_next
                                                                                    HdlValueInt: 1
                                                                    list: elifs
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: output_frame_valid_next
                                                                                    HdlOp: NEG
                                                                                        list: ops
                                                                                            HdlValueId: input_eth_payload_tuser
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: input_eth_hdr_ready_next
                                                                        HdlOp: NEG
                                                                            list: ops
                                                                                HdlValueId: output_frame_valid_reg
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: input_eth_payload_tready_next
                                                                        HdlValueInt: 0
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: state_next
                                                                        HdlValueId: STATE_IDLE
                                                        list: elifs
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: state_next
                                                                        HdlValueId: STATE_WAIT_LAST
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: state_next
                                                            HdlValueId: STATE_WAIT_LAST
        HdlStmProcess
            list: sensitivity
                HdlOp: RISING
                    list: ops
                        HdlValueId: clk
            HdlStmBlock: SEQ
                list: body
                    HdlStmIf
                        HdlValueId: rst
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueId: STATE_IDLE
                                    HdlValueId: state_reg
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: frame_ptr_reg
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: input_eth_payload_tready_reg
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: output_frame_valid_reg
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: output_eth_dest_mac_reg
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: output_eth_src_mac_reg
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: output_eth_type_reg
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: busy_reg
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: error_header_early_termination_reg
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: error_invalid_header_reg
                        list: elifs
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueId: state_next
                                    HdlValueId: state_reg
                                HdlStmAssign
                                    HdlValueId: input_eth_hdr_ready_next
                                    HdlValueId: input_eth_hdr_ready_reg
                                HdlStmAssign
                                    HdlValueId: input_eth_payload_tready_next
                                    HdlValueId: input_eth_payload_tready_reg
                                HdlStmAssign
                                    HdlValueId: frame_ptr_next
                                    HdlValueId: frame_ptr_reg
                                HdlStmAssign
                                    HdlValueId: output_frame_valid_next
                                    HdlValueId: output_frame_valid_reg
                                HdlStmAssign
                                    HdlValueId: error_header_early_termination_next
                                    HdlValueId: error_header_early_termination_reg
                                HdlStmAssign
                                    HdlValueId: error_invalid_header_next
                                    HdlValueId: error_invalid_header_reg
                                HdlStmAssign
                                    HdlOp: NE
                                        list: ops
                                            HdlValueId: state_next
                                            HdlValueId: STATE_IDLE
                                    HdlValueId: busy_reg
                                HdlStmIf
                                    HdlValueId: store_eth_hdr
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueId: input_eth_dest_mac
                                                HdlValueId: output_eth_dest_mac_reg
                                            HdlStmAssign
                                                HdlValueId: input_eth_src_mac
                                                HdlValueId: output_eth_src_mac_reg
                                            HdlStmAssign
                                                HdlValueId: input_eth_type
                                                HdlValueId: output_eth_type_reg
                                    list: elifs
                                HdlStmIf
                                    HdlValueId: store_arp_hdr_word_0
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_htype_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_htype_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 23
                                                                HdlValueInt: 16
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_ptype_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 24
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_ptype_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 39
                                                                HdlValueInt: 32
                                                HdlValueId: output_arp_hlen_reg
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 47
                                                                HdlValueInt: 40
                                                HdlValueId: output_arp_plen_reg
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 55
                                                                HdlValueInt: 48
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_oper_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 63
                                                                HdlValueInt: 56
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_oper_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                    list: elifs
                                HdlStmIf
                                    HdlValueId: store_arp_hdr_word_1
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_sha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 47
                                                                HdlValueInt: 40
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_sha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 39
                                                                HdlValueInt: 32
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 23
                                                                HdlValueInt: 16
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_sha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 24
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 24
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_sha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 23
                                                                HdlValueInt: 16
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 39
                                                                HdlValueInt: 32
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_sha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 47
                                                                HdlValueInt: 40
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_sha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 55
                                                                HdlValueInt: 48
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_spa_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 24
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 63
                                                                HdlValueInt: 56
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_spa_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 23
                                                                HdlValueInt: 16
                                    list: elifs
                                HdlStmIf
                                    HdlValueId: store_arp_hdr_word_2
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_spa_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_spa_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 23
                                                                HdlValueInt: 16
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 47
                                                                HdlValueInt: 40
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 24
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 39
                                                                HdlValueInt: 32
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 39
                                                                HdlValueInt: 32
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 24
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 47
                                                                HdlValueInt: 40
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 23
                                                                HdlValueInt: 16
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 55
                                                                HdlValueInt: 48
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 63
                                                                HdlValueInt: 56
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                    list: elifs
                                HdlStmIf
                                    HdlValueId: store_arp_hdr_word_3
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tpa_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 24
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tpa_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 23
                                                                HdlValueInt: 16
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 23
                                                                HdlValueInt: 16
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tpa_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 24
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tpa_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                    list: elifs

MOV HdlModuleDef@@arp_eth_rx_64 to objs
HdlModuleDef: arp_eth_rx_64
    HdlModuleDec: arp_eth_rx_64
        list: params
        list: ports
            HdlIdDef: clk
                HdlDirection: IN
            HdlIdDef: rst
                HdlDirection: IN
            HdlIdDef: input_eth_hdr_valid
                HdlDirection: IN
            HdlIdDef: input_eth_hdr_ready
                HdlDirection: OUT
            HdlIdDef: input_eth_dest_mac
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: wire
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 47
                                HdlValueInt: 0
                HdlDirection: IN
            HdlIdDef: input_eth_src_mac
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: wire
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 47
                                HdlValueInt: 0
                HdlDirection: IN
            HdlIdDef: input_eth_type
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: wire
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 15
                                HdlValueInt: 0
                HdlDirection: IN
            HdlIdDef: input_eth_payload_tdata
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: wire
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 63
                                HdlValueInt: 0
                HdlDirection: IN
            HdlIdDef: input_eth_payload_tkeep
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: wire
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 7
                                HdlValueInt: 0
                HdlDirection: IN
            HdlIdDef: input_eth_payload_tvalid
                HdlDirection: IN
            HdlIdDef: input_eth_payload_tready
                HdlDirection: OUT
            HdlIdDef: input_eth_payload_tlast
                HdlDirection: IN
            HdlIdDef: input_eth_payload_tuser
                HdlDirection: IN
            HdlIdDef: output_frame_valid
                HdlDirection: OUT
            HdlIdDef: output_frame_ready
                HdlDirection: IN
            HdlIdDef: output_eth_dest_mac
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: wire
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 47
                                HdlValueInt: 0
                HdlDirection: OUT
            HdlIdDef: output_eth_src_mac
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: wire
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 47
                                HdlValueInt: 0
                HdlDirection: OUT
            HdlIdDef: output_eth_type
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: wire
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 15
                                HdlValueInt: 0
                HdlDirection: OUT
            HdlIdDef: output_arp_htype
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: wire
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 15
                                HdlValueInt: 0
                HdlDirection: OUT
            HdlIdDef: output_arp_ptype
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: wire
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 15
                                HdlValueInt: 0
                HdlDirection: OUT
            HdlIdDef: output_arp_hlen
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: wire
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 7
                                HdlValueInt: 0
                HdlDirection: OUT
            HdlIdDef: output_arp_plen
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: wire
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 7
                                HdlValueInt: 0
                HdlDirection: OUT
            HdlIdDef: output_arp_oper
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: wire
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 15
                                HdlValueInt: 0
                HdlDirection: OUT
            HdlIdDef: output_arp_sha
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: wire
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 47
                                HdlValueInt: 0
                HdlDirection: OUT
            HdlIdDef: output_arp_spa
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: wire
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 31
                                HdlValueInt: 0
                HdlDirection: OUT
            HdlIdDef: output_arp_tha
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: wire
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 47
                                HdlValueInt: 0
                HdlDirection: OUT
            HdlIdDef: output_arp_tpa
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: wire
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 31
                                HdlValueInt: 0
                HdlDirection: OUT
            HdlIdDef: busy
                HdlDirection: OUT
            HdlIdDef: error_header_early_termination
                HdlDirection: OUT
            HdlIdDef: error_invalid_header
                HdlDirection: OUT
        list: objs
    list: objs
        HdlIdDef: STATE_IDLE
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: wire
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 2
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: STATE_READ_HEADER
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: wire
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 2
                            HdlValueInt: 0
            HdlValueInt: 1
            HdlDirection: INTERNAL
        HdlIdDef: STATE_WAIT_LAST
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: wire
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 2
                            HdlValueInt: 0
            HdlValueInt: 2
            HdlDirection: INTERNAL
        HdlIdDef: state_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 2
                            HdlValueInt: 0
            HdlValueId: STATE_IDLE
            HdlDirection: INTERNAL
        HdlIdDef: state_next
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 2
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: store_eth_hdr
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlIdDef: store_arp_hdr_word_0
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlIdDef: store_arp_hdr_word_1
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlIdDef: store_arp_hdr_word_2
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlIdDef: store_arp_hdr_word_3
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlIdDef: frame_ptr_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 7
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: frame_ptr_next
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 7
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: input_eth_hdr_ready_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: input_eth_hdr_ready_next
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlIdDef: input_eth_payload_tready_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: input_eth_payload_tready_next
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlIdDef: output_frame_valid_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_frame_valid_next
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlIdDef: output_eth_dest_mac_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 47
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_eth_src_mac_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 47
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_eth_type_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 15
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_arp_htype_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 15
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_arp_ptype_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 15
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_arp_hlen_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 7
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_arp_plen_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 7
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_arp_oper_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 15
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_arp_sha_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 47
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_arp_spa_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 31
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_arp_tha_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 47
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_arp_tpa_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 31
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: busy_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: error_header_early_termination_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: error_header_early_termination_next
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlIdDef: error_invalid_header_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: error_invalid_header_next
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlStmAssign
            HdlValueId: input_eth_hdr_ready_reg
            HdlValueId: input_eth_hdr_ready
        HdlStmAssign
            HdlValueId: input_eth_payload_tready_reg
            HdlValueId: input_eth_payload_tready
        HdlStmAssign
            HdlValueId: output_frame_valid_reg
            HdlValueId: output_frame_valid
        HdlStmAssign
            HdlValueId: output_eth_dest_mac_reg
            HdlValueId: output_eth_dest_mac
        HdlStmAssign
            HdlValueId: output_eth_src_mac_reg
            HdlValueId: output_eth_src_mac
        HdlStmAssign
            HdlValueId: output_eth_type_reg
            HdlValueId: output_eth_type
        HdlStmAssign
            HdlValueId: output_arp_htype_reg
            HdlValueId: output_arp_htype
        HdlStmAssign
            HdlValueId: output_arp_ptype_reg
            HdlValueId: output_arp_ptype
        HdlStmAssign
            HdlValueId: output_arp_hlen_reg
            HdlValueId: output_arp_hlen
        HdlStmAssign
            HdlValueId: output_arp_plen_reg
            HdlValueId: output_arp_plen
        HdlStmAssign
            HdlValueId: output_arp_oper_reg
            HdlValueId: output_arp_oper
        HdlStmAssign
            HdlValueId: output_arp_sha_reg
            HdlValueId: output_arp_sha
        HdlStmAssign
            HdlValueId: output_arp_spa_reg
            HdlValueId: output_arp_spa
        HdlStmAssign
            HdlValueId: output_arp_tha_reg
            HdlValueId: output_arp_tha
        HdlStmAssign
            HdlValueId: output_arp_tpa_reg
            HdlValueId: output_arp_tpa
        HdlStmAssign
            HdlValueId: busy_reg
            HdlValueId: busy
        HdlStmAssign
            HdlValueId: error_header_early_termination_reg
            HdlValueId: error_header_early_termination
        HdlStmAssign
            HdlValueId: error_invalid_header_reg
            HdlValueId: error_invalid_header
        HdlStmProcess
            list: sensitivity
                HdlAll
            HdlStmBlock: SEQ
                list: body
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: state_next
                            HdlValueId: STATE_IDLE
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: input_eth_hdr_ready_next
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: input_eth_payload_tready_next
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: store_eth_hdr
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: store_arp_hdr_word_0
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: store_arp_hdr_word_1
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: store_arp_hdr_word_2
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: store_arp_hdr_word_3
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: frame_ptr_next
                            HdlValueId: frame_ptr_reg
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: output_frame_valid_next
                            HdlOp: AND
                                list: ops
                                    HdlValueId: output_frame_valid_reg
                                    HdlOp: NEG
                                        list: ops
                                            HdlValueId: output_frame_ready
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: error_header_early_termination_next
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: error_invalid_header_next
                            HdlValueInt: 0
                    HdlStmCase: state_reg
                        HdlStmCaseType: CASE
                        HdlValueId: state_reg
                        list: cases
                            tuple
                                HdlValueId: STATE_IDLE
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: frame_ptr_next
                                                HdlValueInt: 0
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: input_eth_hdr_ready_next
                                                HdlOp: NEG
                                                    list: ops
                                                        HdlValueId: output_frame_valid_reg
                                        HdlStmIf
                                            HdlOp: AND
                                                list: ops
                                                    HdlValueId: input_eth_hdr_ready
                                                    HdlValueId: input_eth_hdr_valid
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: input_eth_hdr_ready_next
                                                            HdlValueInt: 0
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: input_eth_payload_tready_next
                                                            HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: store_eth_hdr
                                                            HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: state_next
                                                            HdlValueId: STATE_READ_HEADER
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: state_next
                                                            HdlValueId: STATE_IDLE
                            tuple
                                HdlValueId: STATE_READ_HEADER
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: input_eth_payload_tready_next
                                                HdlValueInt: 1
                                        HdlStmIf
                                            HdlValueId: input_eth_payload_tvalid
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: frame_ptr_next
                                                            HdlOp: ADD
                                                                list: ops
                                                                    HdlValueId: frame_ptr_reg
                                                                    HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: state_next
                                                            HdlValueId: STATE_READ_HEADER
                                                    HdlStmCase: frame_ptr_reg
                                                        HdlStmCaseType: CASE
                                                        HdlValueId: frame_ptr_reg
                                                        list: cases
                                                            tuple
                                                                HdlValueInt: 00
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: store_arp_hdr_word_0
                                                                        HdlValueInt: 1
                                                            tuple
                                                                HdlValueInt: 01
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: store_arp_hdr_word_1
                                                                        HdlValueInt: 1
                                                            tuple
                                                                HdlValueInt: 02
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: store_arp_hdr_word_2
                                                                        HdlValueInt: 1
                                                            tuple
                                                                HdlValueInt: 03
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: store_arp_hdr_word_3
                                                                                HdlValueInt: 1
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: state_next
                                                                                HdlValueId: STATE_WAIT_LAST
                                                    HdlStmIf
                                                        HdlValueId: input_eth_payload_tlast
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmIf
                                                                    HdlOp: OR
                                                                        list: ops
                                                                            HdlOp: NE
                                                                                list: ops
                                                                                    HdlValueId: frame_ptr_reg
                                                                                    HdlValueInt: 03
                                                                            HdlOp: NE
                                                                                list: ops
                                                                                    HdlOp: AND
                                                                                        list: ops
                                                                                            HdlValueId: input_eth_payload_tkeep
                                                                                            HdlValueInt: 0f
                                                                                    HdlValueInt: 0f
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: error_header_early_termination_next
                                                                                    HdlValueInt: 1
                                                                    list: elifs
                                                                        tuple
                                                                            HdlOp: OR_LOG
                                                                                list: ops
                                                                                    HdlOp: NE
                                                                                        list: ops
                                                                                            HdlValueId: output_arp_hlen
                                                                                            HdlValueInt: 6
                                                                                    HdlOp: NE
                                                                                        list: ops
                                                                                            HdlValueId: output_arp_plen
                                                                                            HdlValueInt: 4
                                                                            HdlStmBlock: SEQ
                                                                                list: body
                                                                                    HdlOp: ASSIGN
                                                                                        list: ops
                                                                                            HdlValueId: error_invalid_header_next
                                                                                            HdlValueInt: 1
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: output_frame_valid_next
                                                                                    HdlOp: NEG
                                                                                        list: ops
                                                                                            HdlValueId: input_eth_payload_tuser
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: input_eth_hdr_ready_next
                                                                        HdlOp: NEG
                                                                            list: ops
                                                                                HdlValueId: output_frame_valid_reg
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: input_eth_payload_tready_next
                                                                        HdlValueInt: 0
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: state_next
                                                                        HdlValueId: STATE_IDLE
                                                        list: elifs
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: state_next
                                                            HdlValueId: STATE_READ_HEADER
                            tuple
                                HdlValueId: STATE_WAIT_LAST
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: input_eth_payload_tready_next
                                                HdlValueInt: 1
                                        HdlStmIf
                                            HdlValueId: input_eth_payload_tvalid
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmIf
                                                        HdlValueId: input_eth_payload_tlast
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmIf
                                                                    HdlOp: OR_LOG
                                                                        list: ops
                                                                            HdlOp: NE
                                                                                list: ops
                                                                                    HdlValueId: output_arp_hlen
                                                                                    HdlValueInt: 6
                                                                            HdlOp: NE
                                                                                list: ops
                                                                                    HdlValueId: output_arp_plen
                                                                                    HdlValueInt: 4
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: error_invalid_header_next
                                                                                    HdlValueInt: 1
                                                                    list: elifs
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: output_frame_valid_next
                                                                                    HdlOp: NEG
                                                                                        list: ops
                                                                                            HdlValueId: input_eth_payload_tuser
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: input_eth_hdr_ready_next
                                                                        HdlOp: NEG
                                                                            list: ops
                                                                                HdlValueId: output_frame_valid_reg
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: input_eth_payload_tready_next
                                                                        HdlValueInt: 0
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: state_next
                                                                        HdlValueId: STATE_IDLE
                                                        list: elifs
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: state_next
                                                                        HdlValueId: STATE_WAIT_LAST
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: state_next
                                                            HdlValueId: STATE_WAIT_LAST
        HdlStmProcess
            list: sensitivity
                HdlOp: RISING
                    list: ops
                        HdlValueId: clk
            HdlStmBlock: SEQ
                list: body
                    HdlStmIf
                        HdlValueId: rst
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueId: STATE_IDLE
                                    HdlValueId: state_reg
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: frame_ptr_reg
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: input_eth_payload_tready_reg
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: output_frame_valid_reg
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: output_eth_dest_mac_reg
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: output_eth_src_mac_reg
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: output_eth_type_reg
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: busy_reg
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: error_header_early_termination_reg
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: error_invalid_header_reg
                        list: elifs
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueId: state_next
                                    HdlValueId: state_reg
                                HdlStmAssign
                                    HdlValueId: input_eth_hdr_ready_next
                                    HdlValueId: input_eth_hdr_ready_reg
                                HdlStmAssign
                                    HdlValueId: input_eth_payload_tready_next
                                    HdlValueId: input_eth_payload_tready_reg
                                HdlStmAssign
                                    HdlValueId: frame_ptr_next
                                    HdlValueId: frame_ptr_reg
                                HdlStmAssign
                                    HdlValueId: output_frame_valid_next
                                    HdlValueId: output_frame_valid_reg
                                HdlStmAssign
                                    HdlValueId: error_header_early_termination_next
                                    HdlValueId: error_header_early_termination_reg
                                HdlStmAssign
                                    HdlValueId: error_invalid_header_next
                                    HdlValueId: error_invalid_header_reg
                                HdlStmAssign
                                    HdlOp: NE
                                        list: ops
                                            HdlValueId: state_next
                                            HdlValueId: STATE_IDLE
                                    HdlValueId: busy_reg
                                HdlStmIf
                                    HdlValueId: store_eth_hdr
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueId: input_eth_dest_mac
                                                HdlValueId: output_eth_dest_mac_reg
                                            HdlStmAssign
                                                HdlValueId: input_eth_src_mac
                                                HdlValueId: output_eth_src_mac_reg
                                            HdlStmAssign
                                                HdlValueId: input_eth_type
                                                HdlValueId: output_eth_type_reg
                                    list: elifs
                                HdlStmIf
                                    HdlValueId: store_arp_hdr_word_0
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_htype_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_htype_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 23
                                                                HdlValueInt: 16
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_ptype_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 24
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_ptype_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 39
                                                                HdlValueInt: 32
                                                HdlValueId: output_arp_hlen_reg
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 47
                                                                HdlValueInt: 40
                                                HdlValueId: output_arp_plen_reg
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 55
                                                                HdlValueInt: 48
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_oper_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 63
                                                                HdlValueInt: 56
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_oper_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                    list: elifs
                                HdlStmIf
                                    HdlValueId: store_arp_hdr_word_1
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_sha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 47
                                                                HdlValueInt: 40
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_sha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 39
                                                                HdlValueInt: 32
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 23
                                                                HdlValueInt: 16
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_sha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 24
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 24
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_sha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 23
                                                                HdlValueInt: 16
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 39
                                                                HdlValueInt: 32
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_sha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 47
                                                                HdlValueInt: 40
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_sha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 55
                                                                HdlValueInt: 48
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_spa_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 24
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 63
                                                                HdlValueInt: 56
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_spa_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 23
                                                                HdlValueInt: 16
                                    list: elifs
                                HdlStmIf
                                    HdlValueId: store_arp_hdr_word_2
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_spa_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_spa_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 23
                                                                HdlValueInt: 16
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 47
                                                                HdlValueInt: 40
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 24
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 39
                                                                HdlValueInt: 32
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 39
                                                                HdlValueInt: 32
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 24
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 47
                                                                HdlValueInt: 40
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 23
                                                                HdlValueInt: 16
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 55
                                                                HdlValueInt: 48
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 63
                                                                HdlValueInt: 56
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                    list: elifs
                                HdlStmIf
                                    HdlValueId: store_arp_hdr_word_3
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tpa_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 24
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tpa_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 23
                                                                HdlValueInt: 16
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 23
                                                                HdlValueInt: 16
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tpa_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 24
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tpa_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                    list: elifs

MOV HdlStmProcess@@ to objs
HdlStmProcess
    list: sensitivity
        HdlAll
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: state_next
                    HdlValueId: STATE_IDLE
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: input_eth_hdr_ready_next
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: input_eth_payload_tready_next
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: store_eth_hdr
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: store_arp_hdr_word_0
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: store_arp_hdr_word_1
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: store_arp_hdr_word_2
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: store_arp_hdr_word_3
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: frame_ptr_next
                    HdlValueId: frame_ptr_reg
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: output_frame_valid_next
                    HdlOp: AND
                        list: ops
                            HdlValueId: output_frame_valid_reg
                            HdlOp: NEG
                                list: ops
                                    HdlValueId: output_frame_ready
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: error_header_early_termination_next
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: error_invalid_header_next
                    HdlValueInt: 0
            HdlStmCase: state_reg
                HdlStmCaseType: CASE
                HdlValueId: state_reg
                list: cases
                    tuple
                        HdlValueId: STATE_IDLE
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: frame_ptr_next
                                        HdlValueInt: 0
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: input_eth_hdr_ready_next
                                        HdlOp: NEG
                                            list: ops
                                                HdlValueId: output_frame_valid_reg
                                HdlStmIf
                                    HdlOp: AND
                                        list: ops
                                            HdlValueId: input_eth_hdr_ready
                                            HdlValueId: input_eth_hdr_valid
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: input_eth_hdr_ready_next
                                                    HdlValueInt: 0
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: input_eth_payload_tready_next
                                                    HdlValueInt: 1
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: store_eth_hdr
                                                    HdlValueInt: 1
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: state_next
                                                    HdlValueId: STATE_READ_HEADER
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: state_next
                                                    HdlValueId: STATE_IDLE
                    tuple
                        HdlValueId: STATE_READ_HEADER
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: input_eth_payload_tready_next
                                        HdlValueInt: 1
                                HdlStmIf
                                    HdlValueId: input_eth_payload_tvalid
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: frame_ptr_next
                                                    HdlOp: ADD
                                                        list: ops
                                                            HdlValueId: frame_ptr_reg
                                                            HdlValueInt: 1
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: state_next
                                                    HdlValueId: STATE_READ_HEADER
                                            HdlStmCase: frame_ptr_reg
                                                HdlStmCaseType: CASE
                                                HdlValueId: frame_ptr_reg
                                                list: cases
                                                    tuple
                                                        HdlValueInt: 00
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: store_arp_hdr_word_0
                                                                HdlValueInt: 1
                                                    tuple
                                                        HdlValueInt: 01
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: store_arp_hdr_word_1
                                                                HdlValueInt: 1
                                                    tuple
                                                        HdlValueInt: 02
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: store_arp_hdr_word_2
                                                                HdlValueInt: 1
                                                    tuple
                                                        HdlValueInt: 03
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: store_arp_hdr_word_3
                                                                        HdlValueInt: 1
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: state_next
                                                                        HdlValueId: STATE_WAIT_LAST
                                            HdlStmIf
                                                HdlValueId: input_eth_payload_tlast
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlStmIf
                                                            HdlOp: OR
                                                                list: ops
                                                                    HdlOp: NE
                                                                        list: ops
                                                                            HdlValueId: frame_ptr_reg
                                                                            HdlValueInt: 03
                                                                    HdlOp: NE
                                                                        list: ops
                                                                            HdlOp: AND
                                                                                list: ops
                                                                                    HdlValueId: input_eth_payload_tkeep
                                                                                    HdlValueInt: 0f
                                                                            HdlValueInt: 0f
                                                            HdlStmBlock: SEQ
                                                                list: body
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: error_header_early_termination_next
                                                                            HdlValueInt: 1
                                                            list: elifs
                                                                tuple
                                                                    HdlOp: OR_LOG
                                                                        list: ops
                                                                            HdlOp: NE
                                                                                list: ops
                                                                                    HdlValueId: output_arp_hlen
                                                                                    HdlValueInt: 6
                                                                            HdlOp: NE
                                                                                list: ops
                                                                                    HdlValueId: output_arp_plen
                                                                                    HdlValueInt: 4
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: error_invalid_header_next
                                                                                    HdlValueInt: 1
                                                            HdlStmBlock: SEQ
                                                                list: body
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: output_frame_valid_next
                                                                            HdlOp: NEG
                                                                                list: ops
                                                                                    HdlValueId: input_eth_payload_tuser
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: input_eth_hdr_ready_next
                                                                HdlOp: NEG
                                                                    list: ops
                                                                        HdlValueId: output_frame_valid_reg
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: input_eth_payload_tready_next
                                                                HdlValueInt: 0
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: state_next
                                                                HdlValueId: STATE_IDLE
                                                list: elifs
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: state_next
                                                    HdlValueId: STATE_READ_HEADER
                    tuple
                        HdlValueId: STATE_WAIT_LAST
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: input_eth_payload_tready_next
                                        HdlValueInt: 1
                                HdlStmIf
                                    HdlValueId: input_eth_payload_tvalid
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmIf
                                                HdlValueId: input_eth_payload_tlast
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlStmIf
                                                            HdlOp: OR_LOG
                                                                list: ops
                                                                    HdlOp: NE
                                                                        list: ops
                                                                            HdlValueId: output_arp_hlen
                                                                            HdlValueInt: 6
                                                                    HdlOp: NE
                                                                        list: ops
                                                                            HdlValueId: output_arp_plen
                                                                            HdlValueInt: 4
                                                            HdlStmBlock: SEQ
                                                                list: body
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: error_invalid_header_next
                                                                            HdlValueInt: 1
                                                            list: elifs
                                                            HdlStmBlock: SEQ
                                                                list: body
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: output_frame_valid_next
                                                                            HdlOp: NEG
                                                                                list: ops
                                                                                    HdlValueId: input_eth_payload_tuser
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: input_eth_hdr_ready_next
                                                                HdlOp: NEG
                                                                    list: ops
                                                                        HdlValueId: output_frame_valid_reg
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: input_eth_payload_tready_next
                                                                HdlValueInt: 0
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: state_next
                                                                HdlValueId: STATE_IDLE
                                                list: elifs
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: state_next
                                                                HdlValueId: STATE_WAIT_LAST
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: state_next
                                                    HdlValueId: STATE_WAIT_LAST


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/arp_eth_rx_64.v
+++ b/rtl/arp_eth_rx_64.v
@@ -226,19 +226,19 @@ always @* begin
         end
         STATE_WAIT_LAST: begin
             // wait for end of frame; read and discard
-            input_eth_payload_tready_next = 1;
+            input_eth_payload_tready_next = 1'b1;
 
             if (input_eth_payload_tvalid) begin
                 if (input_eth_payload_tlast) begin
-                    if (output_arp_hlen != 6 || output_arp_plen != 4) begin
+                    if (output_arp_hlen != 4'd6 || output_arp_plen != 4'd4) begin
                         // lengths not valid
-                        error_invalid_header_next = 1;
+                        error_invalid_header_next = 1'b1;
                     end else begin
                         // otherwise, transfer tuser
                         output_frame_valid_next = ~input_eth_payload_tuser;
                     end
                     input_eth_hdr_ready_next = ~output_frame_valid_reg;
-                    input_eth_payload_tready_next = 0;
+                    input_eth_payload_tready_next = 1'b0;
                     state_next = STATE_IDLE;
                 end else begin
                     state_next = STATE_WAIT_LAST;

ParseResult:
UPD HdlModuleDef@@arp_eth_rx_64 to arp_eth_rx_64
    MOV list@@objs to arp_eth_rx_64
    list: objs
        HdlIdDef: STATE_IDLE
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: wire
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 2
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: STATE_READ_HEADER
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: wire
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 2
                            HdlValueInt: 0
            HdlValueInt: 1
            HdlDirection: INTERNAL
        HdlIdDef: STATE_WAIT_LAST
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: wire
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 2
                            HdlValueInt: 0
            HdlValueInt: 2
            HdlDirection: INTERNAL
        HdlIdDef: state_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 2
                            HdlValueInt: 0
            HdlValueId: STATE_IDLE
            HdlDirection: INTERNAL
        HdlIdDef: state_next
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 2
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: store_eth_hdr
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlIdDef: store_arp_hdr_word_0
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlIdDef: store_arp_hdr_word_1
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlIdDef: store_arp_hdr_word_2
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlIdDef: store_arp_hdr_word_3
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlIdDef: frame_ptr_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 7
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: frame_ptr_next
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 7
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: input_eth_hdr_ready_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: input_eth_hdr_ready_next
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlIdDef: input_eth_payload_tready_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: input_eth_payload_tready_next
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlIdDef: output_frame_valid_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_frame_valid_next
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlIdDef: output_eth_dest_mac_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 47
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_eth_src_mac_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 47
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_eth_type_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 15
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_arp_htype_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 15
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_arp_ptype_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 15
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_arp_hlen_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 7
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_arp_plen_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 7
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_arp_oper_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 15
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_arp_sha_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 47
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_arp_spa_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 31
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_arp_tha_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 47
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_arp_tpa_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 31
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: busy_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: error_header_early_termination_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: error_header_early_termination_next
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlIdDef: error_invalid_header_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: error_invalid_header_next
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlStmAssign
            HdlValueId: input_eth_hdr_ready_reg
            HdlValueId: input_eth_hdr_ready
        HdlStmAssign
            HdlValueId: input_eth_payload_tready_reg
            HdlValueId: input_eth_payload_tready
        HdlStmAssign
            HdlValueId: output_frame_valid_reg
            HdlValueId: output_frame_valid
        HdlStmAssign
            HdlValueId: output_eth_dest_mac_reg
            HdlValueId: output_eth_dest_mac
        HdlStmAssign
            HdlValueId: output_eth_src_mac_reg
            HdlValueId: output_eth_src_mac
        HdlStmAssign
            HdlValueId: output_eth_type_reg
            HdlValueId: output_eth_type
        HdlStmAssign
            HdlValueId: output_arp_htype_reg
            HdlValueId: output_arp_htype
        HdlStmAssign
            HdlValueId: output_arp_ptype_reg
            HdlValueId: output_arp_ptype
        HdlStmAssign
            HdlValueId: output_arp_hlen_reg
            HdlValueId: output_arp_hlen
        HdlStmAssign
            HdlValueId: output_arp_plen_reg
            HdlValueId: output_arp_plen
        HdlStmAssign
            HdlValueId: output_arp_oper_reg
            HdlValueId: output_arp_oper
        HdlStmAssign
            HdlValueId: output_arp_sha_reg
            HdlValueId: output_arp_sha
        HdlStmAssign
            HdlValueId: output_arp_spa_reg
            HdlValueId: output_arp_spa
        HdlStmAssign
            HdlValueId: output_arp_tha_reg
            HdlValueId: output_arp_tha
        HdlStmAssign
            HdlValueId: output_arp_tpa_reg
            HdlValueId: output_arp_tpa
        HdlStmAssign
            HdlValueId: busy_reg
            HdlValueId: busy
        HdlStmAssign
            HdlValueId: error_header_early_termination_reg
            HdlValueId: error_header_early_termination
        HdlStmAssign
            HdlValueId: error_invalid_header_reg
            HdlValueId: error_invalid_header
        HdlStmProcess
            list: sensitivity
                HdlAll
            HdlStmBlock: SEQ
                list: body
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: state_next
                            HdlValueId: STATE_IDLE
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: input_eth_hdr_ready_next
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: input_eth_payload_tready_next
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: store_eth_hdr
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: store_arp_hdr_word_0
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: store_arp_hdr_word_1
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: store_arp_hdr_word_2
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: store_arp_hdr_word_3
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: frame_ptr_next
                            HdlValueId: frame_ptr_reg
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: output_frame_valid_next
                            HdlOp: AND
                                list: ops
                                    HdlValueId: output_frame_valid_reg
                                    HdlOp: NEG
                                        list: ops
                                            HdlValueId: output_frame_ready
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: error_header_early_termination_next
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: error_invalid_header_next
                            HdlValueInt: 0
                    HdlStmCase: state_reg
                        HdlStmCaseType: CASE
                        HdlValueId: state_reg
                        list: cases
                            tuple
                                HdlValueId: STATE_IDLE
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: frame_ptr_next
                                                HdlValueInt: 0
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: input_eth_hdr_ready_next
                                                HdlOp: NEG
                                                    list: ops
                                                        HdlValueId: output_frame_valid_reg
                                        HdlStmIf
                                            HdlOp: AND
                                                list: ops
                                                    HdlValueId: input_eth_hdr_ready
                                                    HdlValueId: input_eth_hdr_valid
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: input_eth_hdr_ready_next
                                                            HdlValueInt: 0
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: input_eth_payload_tready_next
                                                            HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: store_eth_hdr
                                                            HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: state_next
                                                            HdlValueId: STATE_READ_HEADER
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: state_next
                                                            HdlValueId: STATE_IDLE
                            tuple
                                HdlValueId: STATE_READ_HEADER
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: input_eth_payload_tready_next
                                                HdlValueInt: 1
                                        HdlStmIf
                                            HdlValueId: input_eth_payload_tvalid
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: frame_ptr_next
                                                            HdlOp: ADD
                                                                list: ops
                                                                    HdlValueId: frame_ptr_reg
                                                                    HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: state_next
                                                            HdlValueId: STATE_READ_HEADER
                                                    HdlStmCase: frame_ptr_reg
                                                        HdlStmCaseType: CASE
                                                        HdlValueId: frame_ptr_reg
                                                        list: cases
                                                            tuple
                                                                HdlValueInt: 00
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: store_arp_hdr_word_0
                                                                        HdlValueInt: 1
                                                            tuple
                                                                HdlValueInt: 01
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: store_arp_hdr_word_1
                                                                        HdlValueInt: 1
                                                            tuple
                                                                HdlValueInt: 02
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: store_arp_hdr_word_2
                                                                        HdlValueInt: 1
                                                            tuple
                                                                HdlValueInt: 03
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: store_arp_hdr_word_3
                                                                                HdlValueInt: 1
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: state_next
                                                                                HdlValueId: STATE_WAIT_LAST
                                                    HdlStmIf
                                                        HdlValueId: input_eth_payload_tlast
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmIf
                                                                    HdlOp: OR
                                                                        list: ops
                                                                            HdlOp: NE
                                                                                list: ops
                                                                                    HdlValueId: frame_ptr_reg
                                                                                    HdlValueInt: 03
                                                                            HdlOp: NE
                                                                                list: ops
                                                                                    HdlOp: AND
                                                                                        list: ops
                                                                                            HdlValueId: input_eth_payload_tkeep
                                                                                            HdlValueInt: 0f
                                                                                    HdlValueInt: 0f
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: error_header_early_termination_next
                                                                                    HdlValueInt: 1
                                                                    list: elifs
                                                                        tuple
                                                                            HdlOp: OR_LOG
                                                                                list: ops
                                                                                    HdlOp: NE
                                                                                        list: ops
                                                                                            HdlValueId: output_arp_hlen
                                                                                            HdlValueInt: 6
                                                                                    HdlOp: NE
                                                                                        list: ops
                                                                                            HdlValueId: output_arp_plen
                                                                                            HdlValueInt: 4
                                                                            HdlStmBlock: SEQ
                                                                                list: body
                                                                                    HdlOp: ASSIGN
                                                                                        list: ops
                                                                                            HdlValueId: error_invalid_header_next
                                                                                            HdlValueInt: 1
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: output_frame_valid_next
                                                                                    HdlOp: NEG
                                                                                        list: ops
                                                                                            HdlValueId: input_eth_payload_tuser
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: input_eth_hdr_ready_next
                                                                        HdlOp: NEG
                                                                            list: ops
                                                                                HdlValueId: output_frame_valid_reg
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: input_eth_payload_tready_next
                                                                        HdlValueInt: 0
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: state_next
                                                                        HdlValueId: STATE_IDLE
                                                        list: elifs
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: state_next
                                                            HdlValueId: STATE_READ_HEADER
                            tuple
                                HdlValueId: STATE_WAIT_LAST
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: input_eth_payload_tready_next
                                                HdlValueInt: 1
                                        HdlStmIf
                                            HdlValueId: input_eth_payload_tvalid
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmIf
                                                        HdlValueId: input_eth_payload_tlast
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmIf
                                                                    HdlOp: OR_LOG
                                                                        list: ops
                                                                            HdlOp: NE
                                                                                list: ops
                                                                                    HdlValueId: output_arp_hlen
                                                                                    HdlValueInt: 6
                                                                            HdlOp: NE
                                                                                list: ops
                                                                                    HdlValueId: output_arp_plen
                                                                                    HdlValueInt: 4
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: error_invalid_header_next
                                                                                    HdlValueInt: 1
                                                                    list: elifs
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: output_frame_valid_next
                                                                                    HdlOp: NEG
                                                                                        list: ops
                                                                                            HdlValueId: input_eth_payload_tuser
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: input_eth_hdr_ready_next
                                                                        HdlOp: NEG
                                                                            list: ops
                                                                                HdlValueId: output_frame_valid_reg
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: input_eth_payload_tready_next
                                                                        HdlValueInt: 0
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: state_next
                                                                        HdlValueId: STATE_IDLE
                                                        list: elifs
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: state_next
                                                                        HdlValueId: STATE_WAIT_LAST
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: state_next
                                                            HdlValueId: STATE_WAIT_LAST
        HdlStmProcess
            list: sensitivity
                HdlOp: RISING
                    list: ops
                        HdlValueId: clk
            HdlStmBlock: SEQ
                list: body
                    HdlStmIf
                        HdlValueId: rst
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueId: STATE_IDLE
                                    HdlValueId: state_reg
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: frame_ptr_reg
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: input_eth_payload_tready_reg
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: output_frame_valid_reg
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: output_eth_dest_mac_reg
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: output_eth_src_mac_reg
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: output_eth_type_reg
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: busy_reg
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: error_header_early_termination_reg
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: error_invalid_header_reg
                        list: elifs
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueId: state_next
                                    HdlValueId: state_reg
                                HdlStmAssign
                                    HdlValueId: input_eth_hdr_ready_next
                                    HdlValueId: input_eth_hdr_ready_reg
                                HdlStmAssign
                                    HdlValueId: input_eth_payload_tready_next
                                    HdlValueId: input_eth_payload_tready_reg
                                HdlStmAssign
                                    HdlValueId: frame_ptr_next
                                    HdlValueId: frame_ptr_reg
                                HdlStmAssign
                                    HdlValueId: output_frame_valid_next
                                    HdlValueId: output_frame_valid_reg
                                HdlStmAssign
                                    HdlValueId: error_header_early_termination_next
                                    HdlValueId: error_header_early_termination_reg
                                HdlStmAssign
                                    HdlValueId: error_invalid_header_next
                                    HdlValueId: error_invalid_header_reg
                                HdlStmAssign
                                    HdlOp: NE
                                        list: ops
                                            HdlValueId: state_next
                                            HdlValueId: STATE_IDLE
                                    HdlValueId: busy_reg
                                HdlStmIf
                                    HdlValueId: store_eth_hdr
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueId: input_eth_dest_mac
                                                HdlValueId: output_eth_dest_mac_reg
                                            HdlStmAssign
                                                HdlValueId: input_eth_src_mac
                                                HdlValueId: output_eth_src_mac_reg
                                            HdlStmAssign
                                                HdlValueId: input_eth_type
                                                HdlValueId: output_eth_type_reg
                                    list: elifs
                                HdlStmIf
                                    HdlValueId: store_arp_hdr_word_0
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_htype_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_htype_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 23
                                                                HdlValueInt: 16
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_ptype_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 24
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_ptype_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 39
                                                                HdlValueInt: 32
                                                HdlValueId: output_arp_hlen_reg
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 47
                                                                HdlValueInt: 40
                                                HdlValueId: output_arp_plen_reg
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 55
                                                                HdlValueInt: 48
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_oper_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 63
                                                                HdlValueInt: 56
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_oper_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                    list: elifs
                                HdlStmIf
                                    HdlValueId: store_arp_hdr_word_1
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_sha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 47
                                                                HdlValueInt: 40
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_sha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 39
                                                                HdlValueInt: 32
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 23
                                                                HdlValueInt: 16
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_sha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 24
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 24
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_sha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 23
                                                                HdlValueInt: 16
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 39
                                                                HdlValueInt: 32
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_sha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 47
                                                                HdlValueInt: 40
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_sha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 55
                                                                HdlValueInt: 48
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_spa_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 24
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 63
                                                                HdlValueInt: 56
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_spa_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 23
                                                                HdlValueInt: 16
                                    list: elifs
                                HdlStmIf
                                    HdlValueId: store_arp_hdr_word_2
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_spa_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_spa_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 23
                                                                HdlValueInt: 16
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 47
                                                                HdlValueInt: 40
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 24
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 39
                                                                HdlValueInt: 32
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 39
                                                                HdlValueInt: 32
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 24
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 47
                                                                HdlValueInt: 40
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 23
                                                                HdlValueInt: 16
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 55
                                                                HdlValueInt: 48
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 63
                                                                HdlValueInt: 56
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                    list: elifs
                                HdlStmIf
                                    HdlValueId: store_arp_hdr_word_3
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tpa_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 24
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tpa_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 23
                                                                HdlValueInt: 16
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 23
                                                                HdlValueInt: 16
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tpa_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 24
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tpa_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                    list: elifs

MOV HdlModuleDef@@arp_eth_rx_64 to objs
HdlModuleDef: arp_eth_rx_64
    HdlModuleDec: arp_eth_rx_64
        list: params
        list: ports
            HdlIdDef: clk
                HdlDirection: IN
            HdlIdDef: rst
                HdlDirection: IN
            HdlIdDef: input_eth_hdr_valid
                HdlDirection: IN
            HdlIdDef: input_eth_hdr_ready
                HdlDirection: OUT
            HdlIdDef: input_eth_dest_mac
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: wire
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 47
                                HdlValueInt: 0
                HdlDirection: IN
            HdlIdDef: input_eth_src_mac
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: wire
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 47
                                HdlValueInt: 0
                HdlDirection: IN
            HdlIdDef: input_eth_type
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: wire
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 15
                                HdlValueInt: 0
                HdlDirection: IN
            HdlIdDef: input_eth_payload_tdata
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: wire
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 63
                                HdlValueInt: 0
                HdlDirection: IN
            HdlIdDef: input_eth_payload_tkeep
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: wire
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 7
                                HdlValueInt: 0
                HdlDirection: IN
            HdlIdDef: input_eth_payload_tvalid
                HdlDirection: IN
            HdlIdDef: input_eth_payload_tready
                HdlDirection: OUT
            HdlIdDef: input_eth_payload_tlast
                HdlDirection: IN
            HdlIdDef: input_eth_payload_tuser
                HdlDirection: IN
            HdlIdDef: output_frame_valid
                HdlDirection: OUT
            HdlIdDef: output_frame_ready
                HdlDirection: IN
            HdlIdDef: output_eth_dest_mac
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: wire
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 47
                                HdlValueInt: 0
                HdlDirection: OUT
            HdlIdDef: output_eth_src_mac
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: wire
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 47
                                HdlValueInt: 0
                HdlDirection: OUT
            HdlIdDef: output_eth_type
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: wire
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 15
                                HdlValueInt: 0
                HdlDirection: OUT
            HdlIdDef: output_arp_htype
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: wire
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 15
                                HdlValueInt: 0
                HdlDirection: OUT
            HdlIdDef: output_arp_ptype
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: wire
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 15
                                HdlValueInt: 0
                HdlDirection: OUT
            HdlIdDef: output_arp_hlen
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: wire
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 7
                                HdlValueInt: 0
                HdlDirection: OUT
            HdlIdDef: output_arp_plen
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: wire
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 7
                                HdlValueInt: 0
                HdlDirection: OUT
            HdlIdDef: output_arp_oper
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: wire
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 15
                                HdlValueInt: 0
                HdlDirection: OUT
            HdlIdDef: output_arp_sha
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: wire
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 47
                                HdlValueInt: 0
                HdlDirection: OUT
            HdlIdDef: output_arp_spa
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: wire
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 31
                                HdlValueInt: 0
                HdlDirection: OUT
            HdlIdDef: output_arp_tha
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: wire
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 47
                                HdlValueInt: 0
                HdlDirection: OUT
            HdlIdDef: output_arp_tpa
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: wire
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 31
                                HdlValueInt: 0
                HdlDirection: OUT
            HdlIdDef: busy
                HdlDirection: OUT
            HdlIdDef: error_header_early_termination
                HdlDirection: OUT
            HdlIdDef: error_invalid_header
                HdlDirection: OUT
        list: objs
    list: objs
        HdlIdDef: STATE_IDLE
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: wire
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 2
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: STATE_READ_HEADER
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: wire
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 2
                            HdlValueInt: 0
            HdlValueInt: 1
            HdlDirection: INTERNAL
        HdlIdDef: STATE_WAIT_LAST
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: wire
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 2
                            HdlValueInt: 0
            HdlValueInt: 2
            HdlDirection: INTERNAL
        HdlIdDef: state_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 2
                            HdlValueInt: 0
            HdlValueId: STATE_IDLE
            HdlDirection: INTERNAL
        HdlIdDef: state_next
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 2
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: store_eth_hdr
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlIdDef: store_arp_hdr_word_0
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlIdDef: store_arp_hdr_word_1
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlIdDef: store_arp_hdr_word_2
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlIdDef: store_arp_hdr_word_3
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlIdDef: frame_ptr_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 7
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: frame_ptr_next
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 7
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: input_eth_hdr_ready_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: input_eth_hdr_ready_next
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlIdDef: input_eth_payload_tready_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: input_eth_payload_tready_next
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlIdDef: output_frame_valid_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_frame_valid_next
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlIdDef: output_eth_dest_mac_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 47
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_eth_src_mac_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 47
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_eth_type_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 15
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_arp_htype_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 15
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_arp_ptype_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 15
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_arp_hlen_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 7
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_arp_plen_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 7
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_arp_oper_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 15
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_arp_sha_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 47
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_arp_spa_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 31
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_arp_tha_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 47
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_arp_tpa_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 31
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: busy_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: error_header_early_termination_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: error_header_early_termination_next
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlIdDef: error_invalid_header_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: error_invalid_header_next
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlStmAssign
            HdlValueId: input_eth_hdr_ready_reg
            HdlValueId: input_eth_hdr_ready
        HdlStmAssign
            HdlValueId: input_eth_payload_tready_reg
            HdlValueId: input_eth_payload_tready
        HdlStmAssign
            HdlValueId: output_frame_valid_reg
            HdlValueId: output_frame_valid
        HdlStmAssign
            HdlValueId: output_eth_dest_mac_reg
            HdlValueId: output_eth_dest_mac
        HdlStmAssign
            HdlValueId: output_eth_src_mac_reg
            HdlValueId: output_eth_src_mac
        HdlStmAssign
            HdlValueId: output_eth_type_reg
            HdlValueId: output_eth_type
        HdlStmAssign
            HdlValueId: output_arp_htype_reg
            HdlValueId: output_arp_htype
        HdlStmAssign
            HdlValueId: output_arp_ptype_reg
            HdlValueId: output_arp_ptype
        HdlStmAssign
            HdlValueId: output_arp_hlen_reg
            HdlValueId: output_arp_hlen
        HdlStmAssign
            HdlValueId: output_arp_plen_reg
            HdlValueId: output_arp_plen
        HdlStmAssign
            HdlValueId: output_arp_oper_reg
            HdlValueId: output_arp_oper
        HdlStmAssign
            HdlValueId: output_arp_sha_reg
            HdlValueId: output_arp_sha
        HdlStmAssign
            HdlValueId: output_arp_spa_reg
            HdlValueId: output_arp_spa
        HdlStmAssign
            HdlValueId: output_arp_tha_reg
            HdlValueId: output_arp_tha
        HdlStmAssign
            HdlValueId: output_arp_tpa_reg
            HdlValueId: output_arp_tpa
        HdlStmAssign
            HdlValueId: busy_reg
            HdlValueId: busy
        HdlStmAssign
            HdlValueId: error_header_early_termination_reg
            HdlValueId: error_header_early_termination
        HdlStmAssign
            HdlValueId: error_invalid_header_reg
            HdlValueId: error_invalid_header
        HdlStmProcess
            list: sensitivity
                HdlAll
            HdlStmBlock: SEQ
                list: body
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: state_next
                            HdlValueId: STATE_IDLE
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: input_eth_hdr_ready_next
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: input_eth_payload_tready_next
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: store_eth_hdr
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: store_arp_hdr_word_0
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: store_arp_hdr_word_1
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: store_arp_hdr_word_2
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: store_arp_hdr_word_3
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: frame_ptr_next
                            HdlValueId: frame_ptr_reg
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: output_frame_valid_next
                            HdlOp: AND
                                list: ops
                                    HdlValueId: output_frame_valid_reg
                                    HdlOp: NEG
                                        list: ops
                                            HdlValueId: output_frame_ready
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: error_header_early_termination_next
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: error_invalid_header_next
                            HdlValueInt: 0
                    HdlStmCase: state_reg
                        HdlStmCaseType: CASE
                        HdlValueId: state_reg
                        list: cases
                            tuple
                                HdlValueId: STATE_IDLE
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: frame_ptr_next
                                                HdlValueInt: 0
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: input_eth_hdr_ready_next
                                                HdlOp: NEG
                                                    list: ops
                                                        HdlValueId: output_frame_valid_reg
                                        HdlStmIf
                                            HdlOp: AND
                                                list: ops
                                                    HdlValueId: input_eth_hdr_ready
                                                    HdlValueId: input_eth_hdr_valid
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: input_eth_hdr_ready_next
                                                            HdlValueInt: 0
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: input_eth_payload_tready_next
                                                            HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: store_eth_hdr
                                                            HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: state_next
                                                            HdlValueId: STATE_READ_HEADER
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: state_next
                                                            HdlValueId: STATE_IDLE
                            tuple
                                HdlValueId: STATE_READ_HEADER
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: input_eth_payload_tready_next
                                                HdlValueInt: 1
                                        HdlStmIf
                                            HdlValueId: input_eth_payload_tvalid
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: frame_ptr_next
                                                            HdlOp: ADD
                                                                list: ops
                                                                    HdlValueId: frame_ptr_reg
                                                                    HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: state_next
                                                            HdlValueId: STATE_READ_HEADER
                                                    HdlStmCase: frame_ptr_reg
                                                        HdlStmCaseType: CASE
                                                        HdlValueId: frame_ptr_reg
                                                        list: cases
                                                            tuple
                                                                HdlValueInt: 00
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: store_arp_hdr_word_0
                                                                        HdlValueInt: 1
                                                            tuple
                                                                HdlValueInt: 01
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: store_arp_hdr_word_1
                                                                        HdlValueInt: 1
                                                            tuple
                                                                HdlValueInt: 02
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: store_arp_hdr_word_2
                                                                        HdlValueInt: 1
                                                            tuple
                                                                HdlValueInt: 03
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: store_arp_hdr_word_3
                                                                                HdlValueInt: 1
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: state_next
                                                                                HdlValueId: STATE_WAIT_LAST
                                                    HdlStmIf
                                                        HdlValueId: input_eth_payload_tlast
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmIf
                                                                    HdlOp: OR
                                                                        list: ops
                                                                            HdlOp: NE
                                                                                list: ops
                                                                                    HdlValueId: frame_ptr_reg
                                                                                    HdlValueInt: 03
                                                                            HdlOp: NE
                                                                                list: ops
                                                                                    HdlOp: AND
                                                                                        list: ops
                                                                                            HdlValueId: input_eth_payload_tkeep
                                                                                            HdlValueInt: 0f
                                                                                    HdlValueInt: 0f
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: error_header_early_termination_next
                                                                                    HdlValueInt: 1
                                                                    list: elifs
                                                                        tuple
                                                                            HdlOp: OR_LOG
                                                                                list: ops
                                                                                    HdlOp: NE
                                                                                        list: ops
                                                                                            HdlValueId: output_arp_hlen
                                                                                            HdlValueInt: 6
                                                                                    HdlOp: NE
                                                                                        list: ops
                                                                                            HdlValueId: output_arp_plen
                                                                                            HdlValueInt: 4
                                                                            HdlStmBlock: SEQ
                                                                                list: body
                                                                                    HdlOp: ASSIGN
                                                                                        list: ops
                                                                                            HdlValueId: error_invalid_header_next
                                                                                            HdlValueInt: 1
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: output_frame_valid_next
                                                                                    HdlOp: NEG
                                                                                        list: ops
                                                                                            HdlValueId: input_eth_payload_tuser
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: input_eth_hdr_ready_next
                                                                        HdlOp: NEG
                                                                            list: ops
                                                                                HdlValueId: output_frame_valid_reg
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: input_eth_payload_tready_next
                                                                        HdlValueInt: 0
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: state_next
                                                                        HdlValueId: STATE_IDLE
                                                        list: elifs
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: state_next
                                                            HdlValueId: STATE_READ_HEADER
                            tuple
                                HdlValueId: STATE_WAIT_LAST
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: input_eth_payload_tready_next
                                                HdlValueInt: 1
                                        HdlStmIf
                                            HdlValueId: input_eth_payload_tvalid
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmIf
                                                        HdlValueId: input_eth_payload_tlast
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmIf
                                                                    HdlOp: OR_LOG
                                                                        list: ops
                                                                            HdlOp: NE
                                                                                list: ops
                                                                                    HdlValueId: output_arp_hlen
                                                                                    HdlValueInt: 6
                                                                            HdlOp: NE
                                                                                list: ops
                                                                                    HdlValueId: output_arp_plen
                                                                                    HdlValueInt: 4
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: error_invalid_header_next
                                                                                    HdlValueInt: 1
                                                                    list: elifs
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: output_frame_valid_next
                                                                                    HdlOp: NEG
                                                                                        list: ops
                                                                                            HdlValueId: input_eth_payload_tuser
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: input_eth_hdr_ready_next
                                                                        HdlOp: NEG
                                                                            list: ops
                                                                                HdlValueId: output_frame_valid_reg
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: input_eth_payload_tready_next
                                                                        HdlValueInt: 0
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: state_next
                                                                        HdlValueId: STATE_IDLE
                                                        list: elifs
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: state_next
                                                                        HdlValueId: STATE_WAIT_LAST
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: state_next
                                                            HdlValueId: STATE_WAIT_LAST
        HdlStmProcess
            list: sensitivity
                HdlOp: RISING
                    list: ops
                        HdlValueId: clk
            HdlStmBlock: SEQ
                list: body
                    HdlStmIf
                        HdlValueId: rst
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueId: STATE_IDLE
                                    HdlValueId: state_reg
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: frame_ptr_reg
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: input_eth_payload_tready_reg
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: output_frame_valid_reg
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: output_eth_dest_mac_reg
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: output_eth_src_mac_reg
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: output_eth_type_reg
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: busy_reg
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: error_header_early_termination_reg
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: error_invalid_header_reg
                        list: elifs
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueId: state_next
                                    HdlValueId: state_reg
                                HdlStmAssign
                                    HdlValueId: input_eth_hdr_ready_next
                                    HdlValueId: input_eth_hdr_ready_reg
                                HdlStmAssign
                                    HdlValueId: input_eth_payload_tready_next
                                    HdlValueId: input_eth_payload_tready_reg
                                HdlStmAssign
                                    HdlValueId: frame_ptr_next
                                    HdlValueId: frame_ptr_reg
                                HdlStmAssign
                                    HdlValueId: output_frame_valid_next
                                    HdlValueId: output_frame_valid_reg
                                HdlStmAssign
                                    HdlValueId: error_header_early_termination_next
                                    HdlValueId: error_header_early_termination_reg
                                HdlStmAssign
                                    HdlValueId: error_invalid_header_next
                                    HdlValueId: error_invalid_header_reg
                                HdlStmAssign
                                    HdlOp: NE
                                        list: ops
                                            HdlValueId: state_next
                                            HdlValueId: STATE_IDLE
                                    HdlValueId: busy_reg
                                HdlStmIf
                                    HdlValueId: store_eth_hdr
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueId: input_eth_dest_mac
                                                HdlValueId: output_eth_dest_mac_reg
                                            HdlStmAssign
                                                HdlValueId: input_eth_src_mac
                                                HdlValueId: output_eth_src_mac_reg
                                            HdlStmAssign
                                                HdlValueId: input_eth_type
                                                HdlValueId: output_eth_type_reg
                                    list: elifs
                                HdlStmIf
                                    HdlValueId: store_arp_hdr_word_0
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_htype_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_htype_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 23
                                                                HdlValueInt: 16
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_ptype_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 24
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_ptype_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 39
                                                                HdlValueInt: 32
                                                HdlValueId: output_arp_hlen_reg
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 47
                                                                HdlValueInt: 40
                                                HdlValueId: output_arp_plen_reg
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 55
                                                                HdlValueInt: 48
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_oper_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 63
                                                                HdlValueInt: 56
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_oper_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                    list: elifs
                                HdlStmIf
                                    HdlValueId: store_arp_hdr_word_1
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_sha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 47
                                                                HdlValueInt: 40
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_sha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 39
                                                                HdlValueInt: 32
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 23
                                                                HdlValueInt: 16
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_sha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 24
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 24
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_sha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 23
                                                                HdlValueInt: 16
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 39
                                                                HdlValueInt: 32
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_sha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 47
                                                                HdlValueInt: 40
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_sha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 55
                                                                HdlValueInt: 48
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_spa_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 24
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 63
                                                                HdlValueInt: 56
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_spa_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 23
                                                                HdlValueInt: 16
                                    list: elifs
                                HdlStmIf
                                    HdlValueId: store_arp_hdr_word_2
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_spa_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_spa_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 23
                                                                HdlValueInt: 16
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 47
                                                                HdlValueInt: 40
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 24
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 39
                                                                HdlValueInt: 32
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 39
                                                                HdlValueInt: 32
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 24
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 47
                                                                HdlValueInt: 40
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 23
                                                                HdlValueInt: 16
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 55
                                                                HdlValueInt: 48
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 63
                                                                HdlValueInt: 56
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                    list: elifs
                                HdlStmIf
                                    HdlValueId: store_arp_hdr_word_3
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tpa_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 24
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tpa_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 23
                                                                HdlValueInt: 16
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 23
                                                                HdlValueInt: 16
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tpa_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 24
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tpa_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                    list: elifs

MOV HdlStmProcess@@ to objs
HdlStmProcess
    list: sensitivity
        HdlAll
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: state_next
                    HdlValueId: STATE_IDLE
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: input_eth_hdr_ready_next
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: input_eth_payload_tready_next
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: store_eth_hdr
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: store_arp_hdr_word_0
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: store_arp_hdr_word_1
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: store_arp_hdr_word_2
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: store_arp_hdr_word_3
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: frame_ptr_next
                    HdlValueId: frame_ptr_reg
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: output_frame_valid_next
                    HdlOp: AND
                        list: ops
                            HdlValueId: output_frame_valid_reg
                            HdlOp: NEG
                                list: ops
                                    HdlValueId: output_frame_ready
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: error_header_early_termination_next
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: error_invalid_header_next
                    HdlValueInt: 0
            HdlStmCase: state_reg
                HdlStmCaseType: CASE
                HdlValueId: state_reg
                list: cases
                    tuple
                        HdlValueId: STATE_IDLE
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: frame_ptr_next
                                        HdlValueInt: 0
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: input_eth_hdr_ready_next
                                        HdlOp: NEG
                                            list: ops
                                                HdlValueId: output_frame_valid_reg
                                HdlStmIf
                                    HdlOp: AND
                                        list: ops
                                            HdlValueId: input_eth_hdr_ready
                                            HdlValueId: input_eth_hdr_valid
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: input_eth_hdr_ready_next
                                                    HdlValueInt: 0
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: input_eth_payload_tready_next
                                                    HdlValueInt: 1
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: store_eth_hdr
                                                    HdlValueInt: 1
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: state_next
                                                    HdlValueId: STATE_READ_HEADER
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: state_next
                                                    HdlValueId: STATE_IDLE
                    tuple
                        HdlValueId: STATE_READ_HEADER
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: input_eth_payload_tready_next
                                        HdlValueInt: 1
                                HdlStmIf
                                    HdlValueId: input_eth_payload_tvalid
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: frame_ptr_next
                                                    HdlOp: ADD
                                                        list: ops
                                                            HdlValueId: frame_ptr_reg
                                                            HdlValueInt: 1
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: state_next
                                                    HdlValueId: STATE_READ_HEADER
                                            HdlStmCase: frame_ptr_reg
                                                HdlStmCaseType: CASE
                                                HdlValueId: frame_ptr_reg
                                                list: cases
                                                    tuple
                                                        HdlValueInt: 00
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: store_arp_hdr_word_0
                                                                HdlValueInt: 1
                                                    tuple
                                                        HdlValueInt: 01
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: store_arp_hdr_word_1
                                                                HdlValueInt: 1
                                                    tuple
                                                        HdlValueInt: 02
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: store_arp_hdr_word_2
                                                                HdlValueInt: 1
                                                    tuple
                                                        HdlValueInt: 03
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: store_arp_hdr_word_3
                                                                        HdlValueInt: 1
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: state_next
                                                                        HdlValueId: STATE_WAIT_LAST
                                            HdlStmIf
                                                HdlValueId: input_eth_payload_tlast
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlStmIf
                                                            HdlOp: OR
                                                                list: ops
                                                                    HdlOp: NE
                                                                        list: ops
                                                                            HdlValueId: frame_ptr_reg
                                                                            HdlValueInt: 03
                                                                    HdlOp: NE
                                                                        list: ops
                                                                            HdlOp: AND
                                                                                list: ops
                                                                                    HdlValueId: input_eth_payload_tkeep
                                                                                    HdlValueInt: 0f
                                                                            HdlValueInt: 0f
                                                            HdlStmBlock: SEQ
                                                                list: body
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: error_header_early_termination_next
                                                                            HdlValueInt: 1
                                                            list: elifs
                                                                tuple
                                                                    HdlOp: OR_LOG
                                                                        list: ops
                                                                            HdlOp: NE
                                                                                list: ops
                                                                                    HdlValueId: output_arp_hlen
                                                                                    HdlValueInt: 6
                                                                            HdlOp: NE
                                                                                list: ops
                                                                                    HdlValueId: output_arp_plen
                                                                                    HdlValueInt: 4
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: error_invalid_header_next
                                                                                    HdlValueInt: 1
                                                            HdlStmBlock: SEQ
                                                                list: body
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: output_frame_valid_next
                                                                            HdlOp: NEG
                                                                                list: ops
                                                                                    HdlValueId: input_eth_payload_tuser
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: input_eth_hdr_ready_next
                                                                HdlOp: NEG
                                                                    list: ops
                                                                        HdlValueId: output_frame_valid_reg
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: input_eth_payload_tready_next
                                                                HdlValueInt: 0
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: state_next
                                                                HdlValueId: STATE_IDLE
                                                list: elifs
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: state_next
                                                    HdlValueId: STATE_READ_HEADER
                    tuple
                        HdlValueId: STATE_WAIT_LAST
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: input_eth_payload_tready_next
                                        HdlValueInt: 1
                                HdlStmIf
                                    HdlValueId: input_eth_payload_tvalid
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmIf
                                                HdlValueId: input_eth_payload_tlast
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlStmIf
                                                            HdlOp: OR_LOG
                                                                list: ops
                                                                    HdlOp: NE
                                                                        list: ops
                                                                            HdlValueId: output_arp_hlen
                                                                            HdlValueInt: 6
                                                                    HdlOp: NE
                                                                        list: ops
                                                                            HdlValueId: output_arp_plen
                                                                            HdlValueInt: 4
                                                            HdlStmBlock: SEQ
                                                                list: body
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: error_invalid_header_next
                                                                            HdlValueInt: 1
                                                            list: elifs
                                                            HdlStmBlock: SEQ
                                                                list: body
                                                                    HdlOp: ASSIGN
                                                                        list: ops
                                                                            HdlValueId: output_frame_valid_next
                                                                            HdlOp: NEG
                                                                                list: ops
                                                                                    HdlValueId: input_eth_payload_tuser
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: input_eth_hdr_ready_next
                                                                HdlOp: NEG
                                                                    list: ops
                                                                        HdlValueId: output_frame_valid_reg
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: input_eth_payload_tready_next
                                                                HdlValueInt: 0
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: state_next
                                                                HdlValueId: STATE_IDLE
                                                list: elifs
                                                HdlStmBlock: SEQ
                                                    list: body
                                                        HdlOp: ASSIGN
                                                            list: ops
                                                                HdlValueId: state_next
                                                                HdlValueId: STATE_WAIT_LAST
                                    list: elifs
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlOp: ASSIGN
                                                list: ops
                                                    HdlValueId: state_next
                                                    HdlValueId: STATE_WAIT_LAST


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/arp_eth_rx_64.v
+++ b/rtl/arp_eth_rx_64.v
@@ -254,15 +254,12 @@ end
 always @(posedge clk) begin
     if (rst) begin
         state_reg <= STATE_IDLE;
-        frame_ptr_reg <= 0;
-        input_eth_payload_tready_reg <= 0;
-        output_frame_valid_reg <= 0;
-        output_eth_dest_mac_reg <= 0;
-        output_eth_src_mac_reg <= 0;
-        output_eth_type_reg <= 0;
-        busy_reg <= 0;
-        error_header_early_termination_reg <= 0;
-        error_invalid_header_reg <= 0;
+        frame_ptr_reg <= 8'd0;
+        input_eth_payload_tready_reg <= 1'b0;
+        output_frame_valid_reg <= 1'b0;
+        busy_reg <= 1'b0;
+        error_header_early_termination_reg <= 1'b0;
+        error_invalid_header_reg <= 1'b0;
     end else begin
         state_reg <= state_next;
 

ParseResult:
UPD HdlModuleDef@@arp_eth_rx_64 to arp_eth_rx_64
    MOV list@@objs to arp_eth_rx_64
    list: objs
        HdlIdDef: STATE_IDLE
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: wire
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 2
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: STATE_READ_HEADER
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: wire
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 2
                            HdlValueInt: 0
            HdlValueInt: 1
            HdlDirection: INTERNAL
        HdlIdDef: STATE_WAIT_LAST
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: wire
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 2
                            HdlValueInt: 0
            HdlValueInt: 2
            HdlDirection: INTERNAL
        HdlIdDef: state_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 2
                            HdlValueInt: 0
            HdlValueId: STATE_IDLE
            HdlDirection: INTERNAL
        HdlIdDef: state_next
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 2
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: store_eth_hdr
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlIdDef: store_arp_hdr_word_0
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlIdDef: store_arp_hdr_word_1
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlIdDef: store_arp_hdr_word_2
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlIdDef: store_arp_hdr_word_3
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlIdDef: frame_ptr_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 7
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: frame_ptr_next
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 7
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: input_eth_hdr_ready_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: input_eth_hdr_ready_next
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlIdDef: input_eth_payload_tready_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: input_eth_payload_tready_next
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlIdDef: output_frame_valid_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_frame_valid_next
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlIdDef: output_eth_dest_mac_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 47
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_eth_src_mac_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 47
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_eth_type_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 15
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_arp_htype_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 15
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_arp_ptype_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 15
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_arp_hlen_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 7
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_arp_plen_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 7
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_arp_oper_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 15
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_arp_sha_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 47
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_arp_spa_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 31
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_arp_tha_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 47
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_arp_tpa_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 31
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: busy_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: error_header_early_termination_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: error_header_early_termination_next
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlIdDef: error_invalid_header_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: error_invalid_header_next
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlStmAssign
            HdlValueId: input_eth_hdr_ready_reg
            HdlValueId: input_eth_hdr_ready
        HdlStmAssign
            HdlValueId: input_eth_payload_tready_reg
            HdlValueId: input_eth_payload_tready
        HdlStmAssign
            HdlValueId: output_frame_valid_reg
            HdlValueId: output_frame_valid
        HdlStmAssign
            HdlValueId: output_eth_dest_mac_reg
            HdlValueId: output_eth_dest_mac
        HdlStmAssign
            HdlValueId: output_eth_src_mac_reg
            HdlValueId: output_eth_src_mac
        HdlStmAssign
            HdlValueId: output_eth_type_reg
            HdlValueId: output_eth_type
        HdlStmAssign
            HdlValueId: output_arp_htype_reg
            HdlValueId: output_arp_htype
        HdlStmAssign
            HdlValueId: output_arp_ptype_reg
            HdlValueId: output_arp_ptype
        HdlStmAssign
            HdlValueId: output_arp_hlen_reg
            HdlValueId: output_arp_hlen
        HdlStmAssign
            HdlValueId: output_arp_plen_reg
            HdlValueId: output_arp_plen
        HdlStmAssign
            HdlValueId: output_arp_oper_reg
            HdlValueId: output_arp_oper
        HdlStmAssign
            HdlValueId: output_arp_sha_reg
            HdlValueId: output_arp_sha
        HdlStmAssign
            HdlValueId: output_arp_spa_reg
            HdlValueId: output_arp_spa
        HdlStmAssign
            HdlValueId: output_arp_tha_reg
            HdlValueId: output_arp_tha
        HdlStmAssign
            HdlValueId: output_arp_tpa_reg
            HdlValueId: output_arp_tpa
        HdlStmAssign
            HdlValueId: busy_reg
            HdlValueId: busy
        HdlStmAssign
            HdlValueId: error_header_early_termination_reg
            HdlValueId: error_header_early_termination
        HdlStmAssign
            HdlValueId: error_invalid_header_reg
            HdlValueId: error_invalid_header
        HdlStmProcess
            list: sensitivity
                HdlAll
            HdlStmBlock: SEQ
                list: body
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: state_next
                            HdlValueId: STATE_IDLE
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: input_eth_hdr_ready_next
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: input_eth_payload_tready_next
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: store_eth_hdr
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: store_arp_hdr_word_0
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: store_arp_hdr_word_1
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: store_arp_hdr_word_2
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: store_arp_hdr_word_3
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: frame_ptr_next
                            HdlValueId: frame_ptr_reg
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: output_frame_valid_next
                            HdlOp: AND
                                list: ops
                                    HdlValueId: output_frame_valid_reg
                                    HdlOp: NEG
                                        list: ops
                                            HdlValueId: output_frame_ready
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: error_header_early_termination_next
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: error_invalid_header_next
                            HdlValueInt: 0
                    HdlStmCase: state_reg
                        HdlStmCaseType: CASE
                        HdlValueId: state_reg
                        list: cases
                            tuple
                                HdlValueId: STATE_IDLE
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: frame_ptr_next
                                                HdlValueInt: 0
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: input_eth_hdr_ready_next
                                                HdlOp: NEG
                                                    list: ops
                                                        HdlValueId: output_frame_valid_reg
                                        HdlStmIf
                                            HdlOp: AND
                                                list: ops
                                                    HdlValueId: input_eth_hdr_ready
                                                    HdlValueId: input_eth_hdr_valid
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: input_eth_hdr_ready_next
                                                            HdlValueInt: 0
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: input_eth_payload_tready_next
                                                            HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: store_eth_hdr
                                                            HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: state_next
                                                            HdlValueId: STATE_READ_HEADER
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: state_next
                                                            HdlValueId: STATE_IDLE
                            tuple
                                HdlValueId: STATE_READ_HEADER
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: input_eth_payload_tready_next
                                                HdlValueInt: 1
                                        HdlStmIf
                                            HdlValueId: input_eth_payload_tvalid
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: frame_ptr_next
                                                            HdlOp: ADD
                                                                list: ops
                                                                    HdlValueId: frame_ptr_reg
                                                                    HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: state_next
                                                            HdlValueId: STATE_READ_HEADER
                                                    HdlStmCase: frame_ptr_reg
                                                        HdlStmCaseType: CASE
                                                        HdlValueId: frame_ptr_reg
                                                        list: cases
                                                            tuple
                                                                HdlValueInt: 00
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: store_arp_hdr_word_0
                                                                        HdlValueInt: 1
                                                            tuple
                                                                HdlValueInt: 01
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: store_arp_hdr_word_1
                                                                        HdlValueInt: 1
                                                            tuple
                                                                HdlValueInt: 02
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: store_arp_hdr_word_2
                                                                        HdlValueInt: 1
                                                            tuple
                                                                HdlValueInt: 03
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: store_arp_hdr_word_3
                                                                                HdlValueInt: 1
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: state_next
                                                                                HdlValueId: STATE_WAIT_LAST
                                                    HdlStmIf
                                                        HdlValueId: input_eth_payload_tlast
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmIf
                                                                    HdlOp: OR
                                                                        list: ops
                                                                            HdlOp: NE
                                                                                list: ops
                                                                                    HdlValueId: frame_ptr_reg
                                                                                    HdlValueInt: 03
                                                                            HdlOp: NE
                                                                                list: ops
                                                                                    HdlOp: AND
                                                                                        list: ops
                                                                                            HdlValueId: input_eth_payload_tkeep
                                                                                            HdlValueInt: 0f
                                                                                    HdlValueInt: 0f
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: error_header_early_termination_next
                                                                                    HdlValueInt: 1
                                                                    list: elifs
                                                                        tuple
                                                                            HdlOp: OR_LOG
                                                                                list: ops
                                                                                    HdlOp: NE
                                                                                        list: ops
                                                                                            HdlValueId: output_arp_hlen
                                                                                            HdlValueInt: 6
                                                                                    HdlOp: NE
                                                                                        list: ops
                                                                                            HdlValueId: output_arp_plen
                                                                                            HdlValueInt: 4
                                                                            HdlStmBlock: SEQ
                                                                                list: body
                                                                                    HdlOp: ASSIGN
                                                                                        list: ops
                                                                                            HdlValueId: error_invalid_header_next
                                                                                            HdlValueInt: 1
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: output_frame_valid_next
                                                                                    HdlOp: NEG
                                                                                        list: ops
                                                                                            HdlValueId: input_eth_payload_tuser
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: input_eth_hdr_ready_next
                                                                        HdlOp: NEG
                                                                            list: ops
                                                                                HdlValueId: output_frame_valid_reg
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: input_eth_payload_tready_next
                                                                        HdlValueInt: 0
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: state_next
                                                                        HdlValueId: STATE_IDLE
                                                        list: elifs
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: state_next
                                                            HdlValueId: STATE_READ_HEADER
                            tuple
                                HdlValueId: STATE_WAIT_LAST
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: input_eth_payload_tready_next
                                                HdlValueInt: 1
                                        HdlStmIf
                                            HdlValueId: input_eth_payload_tvalid
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmIf
                                                        HdlValueId: input_eth_payload_tlast
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmIf
                                                                    HdlOp: OR_LOG
                                                                        list: ops
                                                                            HdlOp: NE
                                                                                list: ops
                                                                                    HdlValueId: output_arp_hlen
                                                                                    HdlValueInt: 6
                                                                            HdlOp: NE
                                                                                list: ops
                                                                                    HdlValueId: output_arp_plen
                                                                                    HdlValueInt: 4
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: error_invalid_header_next
                                                                                    HdlValueInt: 1
                                                                    list: elifs
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: output_frame_valid_next
                                                                                    HdlOp: NEG
                                                                                        list: ops
                                                                                            HdlValueId: input_eth_payload_tuser
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: input_eth_hdr_ready_next
                                                                        HdlOp: NEG
                                                                            list: ops
                                                                                HdlValueId: output_frame_valid_reg
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: input_eth_payload_tready_next
                                                                        HdlValueInt: 0
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: state_next
                                                                        HdlValueId: STATE_IDLE
                                                        list: elifs
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: state_next
                                                                        HdlValueId: STATE_WAIT_LAST
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: state_next
                                                            HdlValueId: STATE_WAIT_LAST
        HdlStmProcess
            list: sensitivity
                HdlOp: RISING
                    list: ops
                        HdlValueId: clk
            HdlStmBlock: SEQ
                list: body
                    HdlStmIf
                        HdlValueId: rst
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueId: STATE_IDLE
                                    HdlValueId: state_reg
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: frame_ptr_reg
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: input_eth_payload_tready_reg
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: output_frame_valid_reg
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: output_eth_dest_mac_reg
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: output_eth_src_mac_reg
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: output_eth_type_reg
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: busy_reg
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: error_header_early_termination_reg
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: error_invalid_header_reg
                        list: elifs
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueId: state_next
                                    HdlValueId: state_reg
                                HdlStmAssign
                                    HdlValueId: input_eth_hdr_ready_next
                                    HdlValueId: input_eth_hdr_ready_reg
                                HdlStmAssign
                                    HdlValueId: input_eth_payload_tready_next
                                    HdlValueId: input_eth_payload_tready_reg
                                HdlStmAssign
                                    HdlValueId: frame_ptr_next
                                    HdlValueId: frame_ptr_reg
                                HdlStmAssign
                                    HdlValueId: output_frame_valid_next
                                    HdlValueId: output_frame_valid_reg
                                HdlStmAssign
                                    HdlValueId: error_header_early_termination_next
                                    HdlValueId: error_header_early_termination_reg
                                HdlStmAssign
                                    HdlValueId: error_invalid_header_next
                                    HdlValueId: error_invalid_header_reg
                                HdlStmAssign
                                    HdlOp: NE
                                        list: ops
                                            HdlValueId: state_next
                                            HdlValueId: STATE_IDLE
                                    HdlValueId: busy_reg
                                HdlStmIf
                                    HdlValueId: store_eth_hdr
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueId: input_eth_dest_mac
                                                HdlValueId: output_eth_dest_mac_reg
                                            HdlStmAssign
                                                HdlValueId: input_eth_src_mac
                                                HdlValueId: output_eth_src_mac_reg
                                            HdlStmAssign
                                                HdlValueId: input_eth_type
                                                HdlValueId: output_eth_type_reg
                                    list: elifs
                                HdlStmIf
                                    HdlValueId: store_arp_hdr_word_0
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_htype_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_htype_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 23
                                                                HdlValueInt: 16
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_ptype_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 24
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_ptype_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 39
                                                                HdlValueInt: 32
                                                HdlValueId: output_arp_hlen_reg
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 47
                                                                HdlValueInt: 40
                                                HdlValueId: output_arp_plen_reg
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 55
                                                                HdlValueInt: 48
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_oper_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 63
                                                                HdlValueInt: 56
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_oper_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                    list: elifs
                                HdlStmIf
                                    HdlValueId: store_arp_hdr_word_1
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_sha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 47
                                                                HdlValueInt: 40
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_sha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 39
                                                                HdlValueInt: 32
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 23
                                                                HdlValueInt: 16
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_sha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 24
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 24
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_sha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 23
                                                                HdlValueInt: 16
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 39
                                                                HdlValueInt: 32
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_sha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 47
                                                                HdlValueInt: 40
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_sha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 55
                                                                HdlValueInt: 48
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_spa_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 24
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 63
                                                                HdlValueInt: 56
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_spa_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 23
                                                                HdlValueInt: 16
                                    list: elifs
                                HdlStmIf
                                    HdlValueId: store_arp_hdr_word_2
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_spa_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_spa_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 23
                                                                HdlValueInt: 16
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 47
                                                                HdlValueInt: 40
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 24
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 39
                                                                HdlValueInt: 32
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 39
                                                                HdlValueInt: 32
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 24
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 47
                                                                HdlValueInt: 40
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 23
                                                                HdlValueInt: 16
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 55
                                                                HdlValueInt: 48
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 63
                                                                HdlValueInt: 56
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                    list: elifs
                                HdlStmIf
                                    HdlValueId: store_arp_hdr_word_3
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tpa_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 24
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tpa_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 23
                                                                HdlValueInt: 16
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 23
                                                                HdlValueInt: 16
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tpa_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 24
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tpa_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                    list: elifs

MOV HdlModuleDef@@arp_eth_rx_64 to objs
HdlModuleDef: arp_eth_rx_64
    HdlModuleDec: arp_eth_rx_64
        list: params
        list: ports
            HdlIdDef: clk
                HdlDirection: IN
            HdlIdDef: rst
                HdlDirection: IN
            HdlIdDef: input_eth_hdr_valid
                HdlDirection: IN
            HdlIdDef: input_eth_hdr_ready
                HdlDirection: OUT
            HdlIdDef: input_eth_dest_mac
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: wire
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 47
                                HdlValueInt: 0
                HdlDirection: IN
            HdlIdDef: input_eth_src_mac
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: wire
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 47
                                HdlValueInt: 0
                HdlDirection: IN
            HdlIdDef: input_eth_type
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: wire
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 15
                                HdlValueInt: 0
                HdlDirection: IN
            HdlIdDef: input_eth_payload_tdata
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: wire
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 63
                                HdlValueInt: 0
                HdlDirection: IN
            HdlIdDef: input_eth_payload_tkeep
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: wire
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 7
                                HdlValueInt: 0
                HdlDirection: IN
            HdlIdDef: input_eth_payload_tvalid
                HdlDirection: IN
            HdlIdDef: input_eth_payload_tready
                HdlDirection: OUT
            HdlIdDef: input_eth_payload_tlast
                HdlDirection: IN
            HdlIdDef: input_eth_payload_tuser
                HdlDirection: IN
            HdlIdDef: output_frame_valid
                HdlDirection: OUT
            HdlIdDef: output_frame_ready
                HdlDirection: IN
            HdlIdDef: output_eth_dest_mac
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: wire
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 47
                                HdlValueInt: 0
                HdlDirection: OUT
            HdlIdDef: output_eth_src_mac
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: wire
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 47
                                HdlValueInt: 0
                HdlDirection: OUT
            HdlIdDef: output_eth_type
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: wire
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 15
                                HdlValueInt: 0
                HdlDirection: OUT
            HdlIdDef: output_arp_htype
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: wire
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 15
                                HdlValueInt: 0
                HdlDirection: OUT
            HdlIdDef: output_arp_ptype
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: wire
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 15
                                HdlValueInt: 0
                HdlDirection: OUT
            HdlIdDef: output_arp_hlen
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: wire
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 7
                                HdlValueInt: 0
                HdlDirection: OUT
            HdlIdDef: output_arp_plen
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: wire
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 7
                                HdlValueInt: 0
                HdlDirection: OUT
            HdlIdDef: output_arp_oper
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: wire
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 15
                                HdlValueInt: 0
                HdlDirection: OUT
            HdlIdDef: output_arp_sha
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: wire
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 47
                                HdlValueInt: 0
                HdlDirection: OUT
            HdlIdDef: output_arp_spa
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: wire
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 31
                                HdlValueInt: 0
                HdlDirection: OUT
            HdlIdDef: output_arp_tha
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: wire
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 47
                                HdlValueInt: 0
                HdlDirection: OUT
            HdlIdDef: output_arp_tpa
                HdlOp: PARAMETRIZATION
                    list: ops
                        HdlValueId: wire
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 31
                                HdlValueInt: 0
                HdlDirection: OUT
            HdlIdDef: busy
                HdlDirection: OUT
            HdlIdDef: error_header_early_termination
                HdlDirection: OUT
            HdlIdDef: error_invalid_header
                HdlDirection: OUT
        list: objs
    list: objs
        HdlIdDef: STATE_IDLE
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: wire
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 2
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: STATE_READ_HEADER
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: wire
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 2
                            HdlValueInt: 0
            HdlValueInt: 1
            HdlDirection: INTERNAL
        HdlIdDef: STATE_WAIT_LAST
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: wire
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 2
                            HdlValueInt: 0
            HdlValueInt: 2
            HdlDirection: INTERNAL
        HdlIdDef: state_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 2
                            HdlValueInt: 0
            HdlValueId: STATE_IDLE
            HdlDirection: INTERNAL
        HdlIdDef: state_next
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 2
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: store_eth_hdr
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlIdDef: store_arp_hdr_word_0
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlIdDef: store_arp_hdr_word_1
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlIdDef: store_arp_hdr_word_2
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlIdDef: store_arp_hdr_word_3
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlIdDef: frame_ptr_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 7
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: frame_ptr_next
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 7
                            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: input_eth_hdr_ready_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: input_eth_hdr_ready_next
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlIdDef: input_eth_payload_tready_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: input_eth_payload_tready_next
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlIdDef: output_frame_valid_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_frame_valid_next
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlIdDef: output_eth_dest_mac_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 47
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_eth_src_mac_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 47
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_eth_type_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 15
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_arp_htype_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 15
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_arp_ptype_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 15
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_arp_hlen_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 7
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_arp_plen_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 7
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_arp_oper_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 15
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_arp_sha_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 47
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_arp_spa_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 31
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_arp_tha_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 47
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: output_arp_tpa_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
                    HdlOp: DOWNTO
                        list: ops
                            HdlValueInt: 31
                            HdlValueInt: 0
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: busy_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: error_header_early_termination_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: error_header_early_termination_next
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlIdDef: error_invalid_header_reg
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlValueInt: 0
            HdlDirection: INTERNAL
        HdlIdDef: error_invalid_header_next
            HdlOp: PARAMETRIZATION
                list: ops
                    HdlValueId: reg
            HdlDirection: INTERNAL
        HdlStmAssign
            HdlValueId: input_eth_hdr_ready_reg
            HdlValueId: input_eth_hdr_ready
        HdlStmAssign
            HdlValueId: input_eth_payload_tready_reg
            HdlValueId: input_eth_payload_tready
        HdlStmAssign
            HdlValueId: output_frame_valid_reg
            HdlValueId: output_frame_valid
        HdlStmAssign
            HdlValueId: output_eth_dest_mac_reg
            HdlValueId: output_eth_dest_mac
        HdlStmAssign
            HdlValueId: output_eth_src_mac_reg
            HdlValueId: output_eth_src_mac
        HdlStmAssign
            HdlValueId: output_eth_type_reg
            HdlValueId: output_eth_type
        HdlStmAssign
            HdlValueId: output_arp_htype_reg
            HdlValueId: output_arp_htype
        HdlStmAssign
            HdlValueId: output_arp_ptype_reg
            HdlValueId: output_arp_ptype
        HdlStmAssign
            HdlValueId: output_arp_hlen_reg
            HdlValueId: output_arp_hlen
        HdlStmAssign
            HdlValueId: output_arp_plen_reg
            HdlValueId: output_arp_plen
        HdlStmAssign
            HdlValueId: output_arp_oper_reg
            HdlValueId: output_arp_oper
        HdlStmAssign
            HdlValueId: output_arp_sha_reg
            HdlValueId: output_arp_sha
        HdlStmAssign
            HdlValueId: output_arp_spa_reg
            HdlValueId: output_arp_spa
        HdlStmAssign
            HdlValueId: output_arp_tha_reg
            HdlValueId: output_arp_tha
        HdlStmAssign
            HdlValueId: output_arp_tpa_reg
            HdlValueId: output_arp_tpa
        HdlStmAssign
            HdlValueId: busy_reg
            HdlValueId: busy
        HdlStmAssign
            HdlValueId: error_header_early_termination_reg
            HdlValueId: error_header_early_termination
        HdlStmAssign
            HdlValueId: error_invalid_header_reg
            HdlValueId: error_invalid_header
        HdlStmProcess
            list: sensitivity
                HdlAll
            HdlStmBlock: SEQ
                list: body
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: state_next
                            HdlValueId: STATE_IDLE
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: input_eth_hdr_ready_next
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: input_eth_payload_tready_next
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: store_eth_hdr
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: store_arp_hdr_word_0
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: store_arp_hdr_word_1
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: store_arp_hdr_word_2
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: store_arp_hdr_word_3
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: frame_ptr_next
                            HdlValueId: frame_ptr_reg
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: output_frame_valid_next
                            HdlOp: AND
                                list: ops
                                    HdlValueId: output_frame_valid_reg
                                    HdlOp: NEG
                                        list: ops
                                            HdlValueId: output_frame_ready
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: error_header_early_termination_next
                            HdlValueInt: 0
                    HdlOp: ASSIGN
                        list: ops
                            HdlValueId: error_invalid_header_next
                            HdlValueInt: 0
                    HdlStmCase: state_reg
                        HdlStmCaseType: CASE
                        HdlValueId: state_reg
                        list: cases
                            tuple
                                HdlValueId: STATE_IDLE
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: frame_ptr_next
                                                HdlValueInt: 0
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: input_eth_hdr_ready_next
                                                HdlOp: NEG
                                                    list: ops
                                                        HdlValueId: output_frame_valid_reg
                                        HdlStmIf
                                            HdlOp: AND
                                                list: ops
                                                    HdlValueId: input_eth_hdr_ready
                                                    HdlValueId: input_eth_hdr_valid
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: input_eth_hdr_ready_next
                                                            HdlValueInt: 0
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: input_eth_payload_tready_next
                                                            HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: store_eth_hdr
                                                            HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: state_next
                                                            HdlValueId: STATE_READ_HEADER
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: state_next
                                                            HdlValueId: STATE_IDLE
                            tuple
                                HdlValueId: STATE_READ_HEADER
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: input_eth_payload_tready_next
                                                HdlValueInt: 1
                                        HdlStmIf
                                            HdlValueId: input_eth_payload_tvalid
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: frame_ptr_next
                                                            HdlOp: ADD
                                                                list: ops
                                                                    HdlValueId: frame_ptr_reg
                                                                    HdlValueInt: 1
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: state_next
                                                            HdlValueId: STATE_READ_HEADER
                                                    HdlStmCase: frame_ptr_reg
                                                        HdlStmCaseType: CASE
                                                        HdlValueId: frame_ptr_reg
                                                        list: cases
                                                            tuple
                                                                HdlValueInt: 00
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: store_arp_hdr_word_0
                                                                        HdlValueInt: 1
                                                            tuple
                                                                HdlValueInt: 01
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: store_arp_hdr_word_1
                                                                        HdlValueInt: 1
                                                            tuple
                                                                HdlValueInt: 02
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: store_arp_hdr_word_2
                                                                        HdlValueInt: 1
                                                            tuple
                                                                HdlValueInt: 03
                                                                HdlStmBlock: SEQ
                                                                    list: body
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: store_arp_hdr_word_3
                                                                                HdlValueInt: 1
                                                                        HdlOp: ASSIGN
                                                                            list: ops
                                                                                HdlValueId: state_next
                                                                                HdlValueId: STATE_WAIT_LAST
                                                    HdlStmIf
                                                        HdlValueId: input_eth_payload_tlast
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmIf
                                                                    HdlOp: OR
                                                                        list: ops
                                                                            HdlOp: NE
                                                                                list: ops
                                                                                    HdlValueId: frame_ptr_reg
                                                                                    HdlValueInt: 03
                                                                            HdlOp: NE
                                                                                list: ops
                                                                                    HdlOp: AND
                                                                                        list: ops
                                                                                            HdlValueId: input_eth_payload_tkeep
                                                                                            HdlValueInt: 0f
                                                                                    HdlValueInt: 0f
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: error_header_early_termination_next
                                                                                    HdlValueInt: 1
                                                                    list: elifs
                                                                        tuple
                                                                            HdlOp: OR_LOG
                                                                                list: ops
                                                                                    HdlOp: NE
                                                                                        list: ops
                                                                                            HdlValueId: output_arp_hlen
                                                                                            HdlValueInt: 6
                                                                                    HdlOp: NE
                                                                                        list: ops
                                                                                            HdlValueId: output_arp_plen
                                                                                            HdlValueInt: 4
                                                                            HdlStmBlock: SEQ
                                                                                list: body
                                                                                    HdlOp: ASSIGN
                                                                                        list: ops
                                                                                            HdlValueId: error_invalid_header_next
                                                                                            HdlValueInt: 1
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: output_frame_valid_next
                                                                                    HdlOp: NEG
                                                                                        list: ops
                                                                                            HdlValueId: input_eth_payload_tuser
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: input_eth_hdr_ready_next
                                                                        HdlOp: NEG
                                                                            list: ops
                                                                                HdlValueId: output_frame_valid_reg
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: input_eth_payload_tready_next
                                                                        HdlValueInt: 0
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: state_next
                                                                        HdlValueId: STATE_IDLE
                                                        list: elifs
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: state_next
                                                            HdlValueId: STATE_READ_HEADER
                            tuple
                                HdlValueId: STATE_WAIT_LAST
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlOp: ASSIGN
                                            list: ops
                                                HdlValueId: input_eth_payload_tready_next
                                                HdlValueInt: 1
                                        HdlStmIf
                                            HdlValueId: input_eth_payload_tvalid
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlStmIf
                                                        HdlValueId: input_eth_payload_tlast
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlStmIf
                                                                    HdlOp: OR_LOG
                                                                        list: ops
                                                                            HdlOp: NE
                                                                                list: ops
                                                                                    HdlValueId: output_arp_hlen
                                                                                    HdlValueInt: 6
                                                                            HdlOp: NE
                                                                                list: ops
                                                                                    HdlValueId: output_arp_plen
                                                                                    HdlValueInt: 4
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: error_invalid_header_next
                                                                                    HdlValueInt: 1
                                                                    list: elifs
                                                                    HdlStmBlock: SEQ
                                                                        list: body
                                                                            HdlOp: ASSIGN
                                                                                list: ops
                                                                                    HdlValueId: output_frame_valid_next
                                                                                    HdlOp: NEG
                                                                                        list: ops
                                                                                            HdlValueId: input_eth_payload_tuser
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: input_eth_hdr_ready_next
                                                                        HdlOp: NEG
                                                                            list: ops
                                                                                HdlValueId: output_frame_valid_reg
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: input_eth_payload_tready_next
                                                                        HdlValueInt: 0
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: state_next
                                                                        HdlValueId: STATE_IDLE
                                                        list: elifs
                                                        HdlStmBlock: SEQ
                                                            list: body
                                                                HdlOp: ASSIGN
                                                                    list: ops
                                                                        HdlValueId: state_next
                                                                        HdlValueId: STATE_WAIT_LAST
                                            list: elifs
                                            HdlStmBlock: SEQ
                                                list: body
                                                    HdlOp: ASSIGN
                                                        list: ops
                                                            HdlValueId: state_next
                                                            HdlValueId: STATE_WAIT_LAST
        HdlStmProcess
            list: sensitivity
                HdlOp: RISING
                    list: ops
                        HdlValueId: clk
            HdlStmBlock: SEQ
                list: body
                    HdlStmIf
                        HdlValueId: rst
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueId: STATE_IDLE
                                    HdlValueId: state_reg
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: frame_ptr_reg
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: input_eth_payload_tready_reg
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: output_frame_valid_reg
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: output_eth_dest_mac_reg
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: output_eth_src_mac_reg
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: output_eth_type_reg
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: busy_reg
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: error_header_early_termination_reg
                                HdlStmAssign
                                    HdlValueInt: 0
                                    HdlValueId: error_invalid_header_reg
                        list: elifs
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueId: state_next
                                    HdlValueId: state_reg
                                HdlStmAssign
                                    HdlValueId: input_eth_hdr_ready_next
                                    HdlValueId: input_eth_hdr_ready_reg
                                HdlStmAssign
                                    HdlValueId: input_eth_payload_tready_next
                                    HdlValueId: input_eth_payload_tready_reg
                                HdlStmAssign
                                    HdlValueId: frame_ptr_next
                                    HdlValueId: frame_ptr_reg
                                HdlStmAssign
                                    HdlValueId: output_frame_valid_next
                                    HdlValueId: output_frame_valid_reg
                                HdlStmAssign
                                    HdlValueId: error_header_early_termination_next
                                    HdlValueId: error_header_early_termination_reg
                                HdlStmAssign
                                    HdlValueId: error_invalid_header_next
                                    HdlValueId: error_invalid_header_reg
                                HdlStmAssign
                                    HdlOp: NE
                                        list: ops
                                            HdlValueId: state_next
                                            HdlValueId: STATE_IDLE
                                    HdlValueId: busy_reg
                                HdlStmIf
                                    HdlValueId: store_eth_hdr
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueId: input_eth_dest_mac
                                                HdlValueId: output_eth_dest_mac_reg
                                            HdlStmAssign
                                                HdlValueId: input_eth_src_mac
                                                HdlValueId: output_eth_src_mac_reg
                                            HdlStmAssign
                                                HdlValueId: input_eth_type
                                                HdlValueId: output_eth_type_reg
                                    list: elifs
                                HdlStmIf
                                    HdlValueId: store_arp_hdr_word_0
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_htype_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_htype_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 23
                                                                HdlValueInt: 16
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_ptype_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 24
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_ptype_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 39
                                                                HdlValueInt: 32
                                                HdlValueId: output_arp_hlen_reg
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 47
                                                                HdlValueInt: 40
                                                HdlValueId: output_arp_plen_reg
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 55
                                                                HdlValueInt: 48
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_oper_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 63
                                                                HdlValueInt: 56
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_oper_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                    list: elifs
                                HdlStmIf
                                    HdlValueId: store_arp_hdr_word_1
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_sha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 47
                                                                HdlValueInt: 40
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_sha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 39
                                                                HdlValueInt: 32
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 23
                                                                HdlValueInt: 16
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_sha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 24
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 24
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_sha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 23
                                                                HdlValueInt: 16
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 39
                                                                HdlValueInt: 32
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_sha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 47
                                                                HdlValueInt: 40
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_sha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 55
                                                                HdlValueInt: 48
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_spa_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 24
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 63
                                                                HdlValueInt: 56
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_spa_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 23
                                                                HdlValueInt: 16
                                    list: elifs
                                HdlStmIf
                                    HdlValueId: store_arp_hdr_word_2
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_spa_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_spa_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 23
                                                                HdlValueInt: 16
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 47
                                                                HdlValueInt: 40
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 24
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 39
                                                                HdlValueInt: 32
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 39
                                                                HdlValueInt: 32
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 24
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 47
                                                                HdlValueInt: 40
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 23
                                                                HdlValueInt: 16
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 55
                                                                HdlValueInt: 48
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 63
                                                                HdlValueInt: 56
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tha_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                    list: elifs
                                HdlStmIf
                                    HdlValueId: store_arp_hdr_word_3
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tpa_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 24
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tpa_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 23
                                                                HdlValueInt: 16
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 23
                                                                HdlValueInt: 16
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tpa_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 15
                                                                HdlValueInt: 8
                                            HdlStmAssign
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: input_eth_payload_tdata
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 31
                                                                HdlValueInt: 24
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: output_arp_tpa_reg
                                                        HdlOp: DOWNTO
                                                            list: ops
                                                                HdlValueInt: 7
                                                                HdlValueInt: 0
                                    list: elifs

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD list@@body to objs
        MOV list@@body to SEQ
        list: body
            HdlStmIf
                HdlValueId: rst
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueId: STATE_IDLE
                            HdlValueId: state_reg
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: frame_ptr_reg
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: input_eth_payload_tready_reg
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: output_frame_valid_reg
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: output_eth_dest_mac_reg
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: output_eth_src_mac_reg
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: output_eth_type_reg
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: busy_reg
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: error_header_early_termination_reg
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: error_invalid_header_reg
                list: elifs
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueId: state_next
                            HdlValueId: state_reg
                        HdlStmAssign
                            HdlValueId: input_eth_hdr_ready_next
                            HdlValueId: input_eth_hdr_ready_reg
                        HdlStmAssign
                            HdlValueId: input_eth_payload_tready_next
                            HdlValueId: input_eth_payload_tready_reg
                        HdlStmAssign
                            HdlValueId: frame_ptr_next
                            HdlValueId: frame_ptr_reg
                        HdlStmAssign
                            HdlValueId: output_frame_valid_next
                            HdlValueId: output_frame_valid_reg
                        HdlStmAssign
                            HdlValueId: error_header_early_termination_next
                            HdlValueId: error_header_early_termination_reg
                        HdlStmAssign
                            HdlValueId: error_invalid_header_next
                            HdlValueId: error_invalid_header_reg
                        HdlStmAssign
                            HdlOp: NE
                                list: ops
                                    HdlValueId: state_next
                                    HdlValueId: STATE_IDLE
                            HdlValueId: busy_reg
                        HdlStmIf
                            HdlValueId: store_eth_hdr
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmAssign
                                        HdlValueId: input_eth_dest_mac
                                        HdlValueId: output_eth_dest_mac_reg
                                    HdlStmAssign
                                        HdlValueId: input_eth_src_mac
                                        HdlValueId: output_eth_src_mac_reg
                                    HdlStmAssign
                                        HdlValueId: input_eth_type
                                        HdlValueId: output_eth_type_reg
                            list: elifs
                        HdlStmIf
                            HdlValueId: store_arp_hdr_word_0
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmAssign
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: input_eth_payload_tdata
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 7
                                                        HdlValueInt: 0
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: output_arp_htype_reg
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 15
                                                        HdlValueInt: 8
                                    HdlStmAssign
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: input_eth_payload_tdata
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 15
                                                        HdlValueInt: 8
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: output_arp_htype_reg
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 7
                                                        HdlValueInt: 0
                                    HdlStmAssign
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: input_eth_payload_tdata
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 23
                                                        HdlValueInt: 16
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: output_arp_ptype_reg
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 15
                                                        HdlValueInt: 8
                                    HdlStmAssign
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: input_eth_payload_tdata
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 31
                                                        HdlValueInt: 24
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: output_arp_ptype_reg
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 7
                                                        HdlValueInt: 0
                                    HdlStmAssign
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: input_eth_payload_tdata
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 39
                                                        HdlValueInt: 32
                                        HdlValueId: output_arp_hlen_reg
                                    HdlStmAssign
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: input_eth_payload_tdata
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 47
                                                        HdlValueInt: 40
                                        HdlValueId: output_arp_plen_reg
                                    HdlStmAssign
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: input_eth_payload_tdata
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 55
                                                        HdlValueInt: 48
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: output_arp_oper_reg
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 15
                                                        HdlValueInt: 8
                                    HdlStmAssign
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: input_eth_payload_tdata
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 63
                                                        HdlValueInt: 56
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: output_arp_oper_reg
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 7
                                                        HdlValueInt: 0
                            list: elifs
                        HdlStmIf
                            HdlValueId: store_arp_hdr_word_1
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmAssign
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: input_eth_payload_tdata
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 7
                                                        HdlValueInt: 0
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: output_arp_sha_reg
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 47
                                                        HdlValueInt: 40
                                    HdlStmAssign
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: input_eth_payload_tdata
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 15
                                                        HdlValueInt: 8
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: output_arp_sha_reg
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 39
                                                        HdlValueInt: 32
                                    HdlStmAssign
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: input_eth_payload_tdata
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 23
                                                        HdlValueInt: 16
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: output_arp_sha_reg
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 31
                                                        HdlValueInt: 24
                                    HdlStmAssign
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: input_eth_payload_tdata
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 31
                                                        HdlValueInt: 24
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: output_arp_sha_reg
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 23
                                                        HdlValueInt: 16
                                    HdlStmAssign
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: input_eth_payload_tdata
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 39
                                                        HdlValueInt: 32
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: output_arp_sha_reg
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 15
                                                        HdlValueInt: 8
                                    HdlStmAssign
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: input_eth_payload_tdata
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 47
                                                        HdlValueInt: 40
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: output_arp_sha_reg
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 7
                                                        HdlValueInt: 0
                                    HdlStmAssign
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: input_eth_payload_tdata
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 55
                                                        HdlValueInt: 48
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: output_arp_spa_reg
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 31
                                                        HdlValueInt: 24
                                    HdlStmAssign
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: input_eth_payload_tdata
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 63
                                                        HdlValueInt: 56
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: output_arp_spa_reg
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 23
                                                        HdlValueInt: 16
                            list: elifs
                        HdlStmIf
                            HdlValueId: store_arp_hdr_word_2
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmAssign
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: input_eth_payload_tdata
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 7
                                                        HdlValueInt: 0
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: output_arp_spa_reg
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 15
                                                        HdlValueInt: 8
                                    HdlStmAssign
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: input_eth_payload_tdata
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 15
                                                        HdlValueInt: 8
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: output_arp_spa_reg
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 7
                                                        HdlValueInt: 0
                                    HdlStmAssign
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: input_eth_payload_tdata
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 23
                                                        HdlValueInt: 16
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: output_arp_tha_reg
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 47
                                                        HdlValueInt: 40
                                    HdlStmAssign
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: input_eth_payload_tdata
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 31
                                                        HdlValueInt: 24
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: output_arp_tha_reg
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 39
                                                        HdlValueInt: 32
                                    HdlStmAssign
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: input_eth_payload_tdata
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 39
                                                        HdlValueInt: 32
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: output_arp_tha_reg
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 31
                                                        HdlValueInt: 24
                                    HdlStmAssign
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: input_eth_payload_tdata
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 47
                                                        HdlValueInt: 40
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: output_arp_tha_reg
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 23
                                                        HdlValueInt: 16
                                    HdlStmAssign
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: input_eth_payload_tdata
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 55
                                                        HdlValueInt: 48
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: output_arp_tha_reg
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 15
                                                        HdlValueInt: 8
                                    HdlStmAssign
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: input_eth_payload_tdata
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 63
                                                        HdlValueInt: 56
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: output_arp_tha_reg
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 7
                                                        HdlValueInt: 0
                            list: elifs
                        HdlStmIf
                            HdlValueId: store_arp_hdr_word_3
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmAssign
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: input_eth_payload_tdata
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 7
                                                        HdlValueInt: 0
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: output_arp_tpa_reg
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 31
                                                        HdlValueInt: 24
                                    HdlStmAssign
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: input_eth_payload_tdata
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 15
                                                        HdlValueInt: 8
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: output_arp_tpa_reg
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 23
                                                        HdlValueInt: 16
                                    HdlStmAssign
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: input_eth_payload_tdata
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 23
                                                        HdlValueInt: 16
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: output_arp_tpa_reg
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 15
                                                        HdlValueInt: 8
                                    HdlStmAssign
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: input_eth_payload_tdata
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 31
                                                        HdlValueInt: 24
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: output_arp_tpa_reg
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 7
                                                        HdlValueInt: 0
                            list: elifs
    DEL HdlStmBlock@@SEQ from 

MOV HdlStmProcess@@ to objs
HdlStmProcess
    list: sensitivity
        HdlOp: RISING
            list: ops
                HdlValueId: clk
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlValueId: rst
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueId: STATE_IDLE
                            HdlValueId: state_reg
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: frame_ptr_reg
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: input_eth_payload_tready_reg
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: output_frame_valid_reg
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: output_eth_dest_mac_reg
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: output_eth_src_mac_reg
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: output_eth_type_reg
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: busy_reg
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: error_header_early_termination_reg
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: error_invalid_header_reg
                list: elifs
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueId: state_next
                            HdlValueId: state_reg
                        HdlStmAssign
                            HdlValueId: input_eth_hdr_ready_next
                            HdlValueId: input_eth_hdr_ready_reg
                        HdlStmAssign
                            HdlValueId: input_eth_payload_tready_next
                            HdlValueId: input_eth_payload_tready_reg
                        HdlStmAssign
                            HdlValueId: frame_ptr_next
                            HdlValueId: frame_ptr_reg
                        HdlStmAssign
                            HdlValueId: output_frame_valid_next
                            HdlValueId: output_frame_valid_reg
                        HdlStmAssign
                            HdlValueId: error_header_early_termination_next
                            HdlValueId: error_header_early_termination_reg
                        HdlStmAssign
                            HdlValueId: error_invalid_header_next
                            HdlValueId: error_invalid_header_reg
                        HdlStmAssign
                            HdlOp: NE
                                list: ops
                                    HdlValueId: state_next
                                    HdlValueId: STATE_IDLE
                            HdlValueId: busy_reg
                        HdlStmIf
                            HdlValueId: store_eth_hdr
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmAssign
                                        HdlValueId: input_eth_dest_mac
                                        HdlValueId: output_eth_dest_mac_reg
                                    HdlStmAssign
                                        HdlValueId: input_eth_src_mac
                                        HdlValueId: output_eth_src_mac_reg
                                    HdlStmAssign
                                        HdlValueId: input_eth_type
                                        HdlValueId: output_eth_type_reg
                            list: elifs
                        HdlStmIf
                            HdlValueId: store_arp_hdr_word_0
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmAssign
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: input_eth_payload_tdata
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 7
                                                        HdlValueInt: 0
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: output_arp_htype_reg
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 15
                                                        HdlValueInt: 8
                                    HdlStmAssign
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: input_eth_payload_tdata
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 15
                                                        HdlValueInt: 8
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: output_arp_htype_reg
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 7
                                                        HdlValueInt: 0
                                    HdlStmAssign
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: input_eth_payload_tdata
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 23
                                                        HdlValueInt: 16
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: output_arp_ptype_reg
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 15
                                                        HdlValueInt: 8
                                    HdlStmAssign
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: input_eth_payload_tdata
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 31
                                                        HdlValueInt: 24
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: output_arp_ptype_reg
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 7
                                                        HdlValueInt: 0
                                    HdlStmAssign
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: input_eth_payload_tdata
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 39
                                                        HdlValueInt: 32
                                        HdlValueId: output_arp_hlen_reg
                                    HdlStmAssign
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: input_eth_payload_tdata
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 47
                                                        HdlValueInt: 40
                                        HdlValueId: output_arp_plen_reg
                                    HdlStmAssign
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: input_eth_payload_tdata
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 55
                                                        HdlValueInt: 48
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: output_arp_oper_reg
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 15
                                                        HdlValueInt: 8
                                    HdlStmAssign
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: input_eth_payload_tdata
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 63
                                                        HdlValueInt: 56
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: output_arp_oper_reg
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 7
                                                        HdlValueInt: 0
                            list: elifs
                        HdlStmIf
                            HdlValueId: store_arp_hdr_word_1
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmAssign
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: input_eth_payload_tdata
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 7
                                                        HdlValueInt: 0
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: output_arp_sha_reg
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 47
                                                        HdlValueInt: 40
                                    HdlStmAssign
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: input_eth_payload_tdata
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 15
                                                        HdlValueInt: 8
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: output_arp_sha_reg
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 39
                                                        HdlValueInt: 32
                                    HdlStmAssign
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: input_eth_payload_tdata
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 23
                                                        HdlValueInt: 16
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: output_arp_sha_reg
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 31
                                                        HdlValueInt: 24
                                    HdlStmAssign
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: input_eth_payload_tdata
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 31
                                                        HdlValueInt: 24
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: output_arp_sha_reg
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 23
                                                        HdlValueInt: 16
                                    HdlStmAssign
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: input_eth_payload_tdata
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 39
                                                        HdlValueInt: 32
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: output_arp_sha_reg
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 15
                                                        HdlValueInt: 8
                                    HdlStmAssign
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: input_eth_payload_tdata
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 47
                                                        HdlValueInt: 40
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: output_arp_sha_reg
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 7
                                                        HdlValueInt: 0
                                    HdlStmAssign
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: input_eth_payload_tdata
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 55
                                                        HdlValueInt: 48
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: output_arp_spa_reg
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 31
                                                        HdlValueInt: 24
                                    HdlStmAssign
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: input_eth_payload_tdata
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 63
                                                        HdlValueInt: 56
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: output_arp_spa_reg
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 23
                                                        HdlValueInt: 16
                            list: elifs
                        HdlStmIf
                            HdlValueId: store_arp_hdr_word_2
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmAssign
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: input_eth_payload_tdata
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 7
                                                        HdlValueInt: 0
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: output_arp_spa_reg
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 15
                                                        HdlValueInt: 8
                                    HdlStmAssign
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: input_eth_payload_tdata
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 15
                                                        HdlValueInt: 8
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: output_arp_spa_reg
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 7
                                                        HdlValueInt: 0
                                    HdlStmAssign
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: input_eth_payload_tdata
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 23
                                                        HdlValueInt: 16
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: output_arp_tha_reg
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 47
                                                        HdlValueInt: 40
                                    HdlStmAssign
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: input_eth_payload_tdata
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 31
                                                        HdlValueInt: 24
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: output_arp_tha_reg
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 39
                                                        HdlValueInt: 32
                                    HdlStmAssign
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: input_eth_payload_tdata
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 39
                                                        HdlValueInt: 32
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: output_arp_tha_reg
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 31
                                                        HdlValueInt: 24
                                    HdlStmAssign
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: input_eth_payload_tdata
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 47
                                                        HdlValueInt: 40
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: output_arp_tha_reg
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 23
                                                        HdlValueInt: 16
                                    HdlStmAssign
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: input_eth_payload_tdata
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 55
                                                        HdlValueInt: 48
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: output_arp_tha_reg
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 15
                                                        HdlValueInt: 8
                                    HdlStmAssign
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: input_eth_payload_tdata
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 63
                                                        HdlValueInt: 56
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: output_arp_tha_reg
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 7
                                                        HdlValueInt: 0
                            list: elifs
                        HdlStmIf
                            HdlValueId: store_arp_hdr_word_3
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmAssign
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: input_eth_payload_tdata
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 7
                                                        HdlValueInt: 0
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: output_arp_tpa_reg
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 31
                                                        HdlValueInt: 24
                                    HdlStmAssign
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: input_eth_payload_tdata
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 15
                                                        HdlValueInt: 8
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: output_arp_tpa_reg
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 23
                                                        HdlValueInt: 16
                                    HdlStmAssign
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: input_eth_payload_tdata
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 23
                                                        HdlValueInt: 16
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: output_arp_tpa_reg
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 15
                                                        HdlValueInt: 8
                                    HdlStmAssign
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: input_eth_payload_tdata
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 31
                                                        HdlValueInt: 24
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: output_arp_tpa_reg
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 7
                                                        HdlValueInt: 0
                            list: elifs

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueId: state_next
                HdlValueId: state_reg
            HdlStmAssign
                HdlValueId: input_eth_hdr_ready_next
                HdlValueId: input_eth_hdr_ready_reg
            HdlStmAssign
                HdlValueId: input_eth_payload_tready_next
                HdlValueId: input_eth_payload_tready_reg
            HdlStmAssign
                HdlValueId: frame_ptr_next
                HdlValueId: frame_ptr_reg
            HdlStmAssign
                HdlValueId: output_frame_valid_next
                HdlValueId: output_frame_valid_reg
            HdlStmAssign
                HdlValueId: error_header_early_termination_next
                HdlValueId: error_header_early_termination_reg
            HdlStmAssign
                HdlValueId: error_invalid_header_next
                HdlValueId: error_invalid_header_reg
            HdlStmAssign
                HdlOp: NE
                    list: ops
                        HdlValueId: state_next
                        HdlValueId: STATE_IDLE
                HdlValueId: busy_reg
            HdlStmIf
                HdlValueId: store_eth_hdr
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueId: input_eth_dest_mac
                            HdlValueId: output_eth_dest_mac_reg
                        HdlStmAssign
                            HdlValueId: input_eth_src_mac
                            HdlValueId: output_eth_src_mac_reg
                        HdlStmAssign
                            HdlValueId: input_eth_type
                            HdlValueId: output_eth_type_reg
                list: elifs
            HdlStmIf
                HdlValueId: store_arp_hdr_word_0
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_eth_payload_tdata
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 7
                                            HdlValueInt: 0
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: output_arp_htype_reg
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 15
                                            HdlValueInt: 8
                        HdlStmAssign
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_eth_payload_tdata
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 15
                                            HdlValueInt: 8
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: output_arp_htype_reg
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 7
                                            HdlValueInt: 0
                        HdlStmAssign
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_eth_payload_tdata
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 23
                                            HdlValueInt: 16
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: output_arp_ptype_reg
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 15
                                            HdlValueInt: 8
                        HdlStmAssign
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_eth_payload_tdata
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 31
                                            HdlValueInt: 24
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: output_arp_ptype_reg
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 7
                                            HdlValueInt: 0
                        HdlStmAssign
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_eth_payload_tdata
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 39
                                            HdlValueInt: 32
                            HdlValueId: output_arp_hlen_reg
                        HdlStmAssign
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_eth_payload_tdata
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 47
                                            HdlValueInt: 40
                            HdlValueId: output_arp_plen_reg
                        HdlStmAssign
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_eth_payload_tdata
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 55
                                            HdlValueInt: 48
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: output_arp_oper_reg
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 15
                                            HdlValueInt: 8
                        HdlStmAssign
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_eth_payload_tdata
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 63
                                            HdlValueInt: 56
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: output_arp_oper_reg
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 7
                                            HdlValueInt: 0
                list: elifs
            HdlStmIf
                HdlValueId: store_arp_hdr_word_1
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_eth_payload_tdata
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 7
                                            HdlValueInt: 0
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: output_arp_sha_reg
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 47
                                            HdlValueInt: 40
                        HdlStmAssign
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_eth_payload_tdata
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 15
                                            HdlValueInt: 8
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: output_arp_sha_reg
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 39
                                            HdlValueInt: 32
                        HdlStmAssign
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_eth_payload_tdata
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 23
                                            HdlValueInt: 16
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: output_arp_sha_reg
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 31
                                            HdlValueInt: 24
                        HdlStmAssign
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_eth_payload_tdata
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 31
                                            HdlValueInt: 24
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: output_arp_sha_reg
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 23
                                            HdlValueInt: 16
                        HdlStmAssign
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_eth_payload_tdata
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 39
                                            HdlValueInt: 32
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: output_arp_sha_reg
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 15
                                            HdlValueInt: 8
                        HdlStmAssign
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_eth_payload_tdata
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 47
                                            HdlValueInt: 40
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: output_arp_sha_reg
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 7
                                            HdlValueInt: 0
                        HdlStmAssign
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_eth_payload_tdata
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 55
                                            HdlValueInt: 48
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: output_arp_spa_reg
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 31
                                            HdlValueInt: 24
                        HdlStmAssign
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_eth_payload_tdata
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 63
                                            HdlValueInt: 56
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: output_arp_spa_reg
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 23
                                            HdlValueInt: 16
                list: elifs
            HdlStmIf
                HdlValueId: store_arp_hdr_word_2
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_eth_payload_tdata
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 7
                                            HdlValueInt: 0
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: output_arp_spa_reg
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 15
                                            HdlValueInt: 8
                        HdlStmAssign
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_eth_payload_tdata
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 15
                                            HdlValueInt: 8
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: output_arp_spa_reg
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 7
                                            HdlValueInt: 0
                        HdlStmAssign
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_eth_payload_tdata
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 23
                                            HdlValueInt: 16
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: output_arp_tha_reg
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 47
                                            HdlValueInt: 40
                        HdlStmAssign
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_eth_payload_tdata
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 31
                                            HdlValueInt: 24
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: output_arp_tha_reg
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 39
                                            HdlValueInt: 32
                        HdlStmAssign
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_eth_payload_tdata
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 39
                                            HdlValueInt: 32
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: output_arp_tha_reg
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 31
                                            HdlValueInt: 24
                        HdlStmAssign
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_eth_payload_tdata
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 47
                                            HdlValueInt: 40
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: output_arp_tha_reg
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 23
                                            HdlValueInt: 16
                        HdlStmAssign
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_eth_payload_tdata
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 55
                                            HdlValueInt: 48
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: output_arp_tha_reg
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 15
                                            HdlValueInt: 8
                        HdlStmAssign
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_eth_payload_tdata
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 63
                                            HdlValueInt: 56
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: output_arp_tha_reg
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 7
                                            HdlValueInt: 0
                list: elifs
            HdlStmIf
                HdlValueId: store_arp_hdr_word_3
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_eth_payload_tdata
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 7
                                            HdlValueInt: 0
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: output_arp_tpa_reg
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 31
                                            HdlValueInt: 24
                        HdlStmAssign
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_eth_payload_tdata
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 15
                                            HdlValueInt: 8
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: output_arp_tpa_reg
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 23
                                            HdlValueInt: 16
                        HdlStmAssign
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_eth_payload_tdata
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 23
                                            HdlValueInt: 16
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: output_arp_tpa_reg
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 15
                                            HdlValueInt: 8
                        HdlStmAssign
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_eth_payload_tdata
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 31
                                            HdlValueInt: 24
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: output_arp_tpa_reg
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 7
                                            HdlValueInt: 0
                list: elifs
    MOV HdlValueId@@rst to 
    HdlValueId: rst
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueId: STATE_IDLE
                HdlValueId: state_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: frame_ptr_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: input_eth_payload_tready_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: output_frame_valid_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: output_eth_dest_mac_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: output_eth_src_mac_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: output_eth_type_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: busy_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: error_header_early_termination_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: error_invalid_header_reg
    MOV list@@elifs to 
    list: elifs

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: state_next
    HdlValueId: state_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: output_eth_dest_mac_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: output_eth_src_mac_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: output_eth_type_reg

DEL HdlStmIf@@ from body


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/arp_eth_tx_64.v
+++ b/rtl/arp_eth_tx_64.v
@@ -103,30 +103,30 @@ reg [1:0] state_reg = STATE_IDLE, state_next;
 // datapath control signals
 reg store_frame;
 
-reg [7:0] frame_ptr_reg = 0, frame_ptr_next;
+reg [7:0] frame_ptr_reg = 8'd0, frame_ptr_next;
 
-reg [15:0] arp_htype_reg = 0;
-reg [15:0] arp_ptype_reg = 0;
-reg [15:0] arp_oper_reg = 0;
-reg [47:0] arp_sha_reg = 0;
-reg [31:0] arp_spa_reg = 0;
-reg [47:0] arp_tha_reg = 0;
-reg [31:0] arp_tpa_reg = 0;
+reg [15:0] arp_htype_reg = 16'd0;
+reg [15:0] arp_ptype_reg = 16'd0;
+reg [15:0] arp_oper_reg = 16'd0;
+reg [47:0] arp_sha_reg = 48'd0;
+reg [31:0] arp_spa_reg = 32'd0;
+reg [47:0] arp_tha_reg = 48'd0;
+reg [31:0] arp_tpa_reg = 32'd0;
 
-reg input_frame_ready_reg = 0, input_frame_ready_next;
+reg input_frame_ready_reg = 1'b0, input_frame_ready_next;
 
-reg output_eth_hdr_valid_reg = 0, output_eth_hdr_valid_next;
-reg [47:0] output_eth_dest_mac_reg = 0;
-reg [47:0] output_eth_src_mac_reg = 0;
-reg [15:0] output_eth_type_reg = 0;
+reg output_eth_hdr_valid_reg = 1'b0, output_eth_hdr_valid_next;
+reg [47:0] output_eth_dest_mac_reg = 48'd0;
+reg [47:0] output_eth_src_mac_reg = 48'd0;
+reg [15:0] output_eth_type_reg = 16'd0;
 
-reg busy_reg = 0;
+reg busy_reg = 1'b0;
 
 // internal datapath
 reg [63:0] output_eth_payload_tdata_int;
 reg [7:0]  output_eth_payload_tkeep_int;
 reg        output_eth_payload_tvalid_int;
-reg        output_eth_payload_tready_int = 0;
+reg        output_eth_payload_tready_int_reg = 1'b0;
 reg        output_eth_payload_tlast_int;
 reg        output_eth_payload_tuser_int;
 wire       output_eth_payload_tready_int_early;

ParseResult:
UPD HdlIdDef@@output_eth_payload_tready_int to output_eth_payload_tready_int_reg


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/arp_eth_tx_64.v
+++ b/rtl/arp_eth_tx_64.v
@@ -143,42 +143,42 @@ assign busy = busy_reg;
 always @* begin
     state_next = STATE_IDLE;
 
-    input_frame_ready_next = 0;
+    input_frame_ready_next = 1'b0;
 
-    store_frame = 0;
+    store_frame = 1'b0;
 
     frame_ptr_next = frame_ptr_reg;
 
     output_eth_hdr_valid_next = output_eth_hdr_valid_reg & ~output_eth_hdr_ready;
 
-    output_eth_payload_tdata_int = 0;
-    output_eth_payload_tkeep_int = 0;
-    output_eth_payload_tvalid_int = 0;
-    output_eth_payload_tlast_int = 0;
-    output_eth_payload_tuser_int = 0;
+    output_eth_payload_tdata_int = 64'd0;
+    output_eth_payload_tkeep_int = 8'd0;
+    output_eth_payload_tvalid_int = 1'b0;
+    output_eth_payload_tlast_int = 1'b0;
+    output_eth_payload_tuser_int = 1'b0;
 
     case (state_reg)
         STATE_IDLE: begin
             // idle state - wait for data
-            frame_ptr_next = 0;
+            frame_ptr_next = 8'd0;
             input_frame_ready_next = ~output_eth_hdr_valid_reg;
 
             if (input_frame_ready & input_frame_valid) begin
-                store_frame = 1;
-                input_frame_ready_next = 0;
-                output_eth_hdr_valid_next = 1;
-                if (output_eth_payload_tready_int) begin
-                    output_eth_payload_tvalid_int = 1;
+                store_frame = 1'b1;
+                input_frame_ready_next = 1'b0;
+                output_eth_hdr_valid_next = 1'b1;
+                if (output_eth_payload_tready_int_reg) begin
+                    output_eth_payload_tvalid_int = 1'b1;
                     output_eth_payload_tdata_int[ 7: 0] = input_arp_htype[15: 8];
                     output_eth_payload_tdata_int[15: 8] = input_arp_htype[ 7: 0];
                     output_eth_payload_tdata_int[23:16] = input_arp_ptype[15: 8];
                     output_eth_payload_tdata_int[31:24] = input_arp_ptype[ 7: 0];
-                    output_eth_payload_tdata_int[39:32] = 6; // hlen
-                    output_eth_payload_tdata_int[47:40] = 4; // plen
+                    output_eth_payload_tdata_int[39:32] = 8'd6; // hlen
+                    output_eth_payload_tdata_int[47:40] = 8'd4; // plen
                     output_eth_payload_tdata_int[55:48] = input_arp_oper[15: 8];
                     output_eth_payload_tdata_int[63:56] = input_arp_oper[ 7: 0];
                     output_eth_payload_tkeep_int = 8'hff;
-                    frame_ptr_next = 8;
+                    frame_ptr_next = 8'd8;
                 end
                 state_next = STATE_WRITE_HEADER;
             end else begin

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlValueId@@output_eth_payload_tready_int to output_eth_payload_tready_int_reg


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/arp_eth_tx_64.v
+++ b/rtl/arp_eth_tx_64.v
@@ -187,10 +187,10 @@ always @* begin
         end
         STATE_WRITE_HEADER: begin
             // read header state
-            if (output_eth_payload_tready_int) begin
+            if (output_eth_payload_tready_int_reg) begin
                 // word transfer out
-                frame_ptr_next = frame_ptr_reg+8;
-                output_eth_payload_tvalid_int = 1;
+                frame_ptr_next = frame_ptr_reg + 8'd8;
+                output_eth_payload_tvalid_int = 1'b1;
                 state_next = STATE_WRITE_HEADER;
                 case (frame_ptr_reg)
                     8'h00: begin

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlValueId@@output_eth_payload_tready_int to output_eth_payload_tready_int_reg


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/arp_eth_tx_64.v
+++ b/rtl/arp_eth_tx_64.v
@@ -198,8 +198,8 @@ always @* begin
                         output_eth_payload_tdata_int[15: 8] = input_arp_htype[ 7: 0];
                         output_eth_payload_tdata_int[23:16] = input_arp_ptype[15: 8];
                         output_eth_payload_tdata_int[31:24] = input_arp_ptype[ 7: 0];
-                        output_eth_payload_tdata_int[39:32] = 6; // hlen
-                        output_eth_payload_tdata_int[47:40] = 4; // plen
+                        output_eth_payload_tdata_int[39:32] = 8'd6; // hlen
+                        output_eth_payload_tdata_int[47:40] = 8'd4; // plen
                         output_eth_payload_tdata_int[55:48] = input_arp_oper[15: 8];
                         output_eth_payload_tdata_int[63:56] = input_arp_oper[ 7: 0];
                         output_eth_payload_tkeep_int = 8'hff;

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlValueId@@output_eth_payload_tready_int to output_eth_payload_tready_int_reg


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/arp_eth_tx_64.v
+++ b/rtl/arp_eth_tx_64.v
@@ -236,7 +236,7 @@ always @* begin
                         output_eth_payload_tdata_int[55:48] = 0;
                         output_eth_payload_tdata_int[63:56] = 0;
                         output_eth_payload_tkeep_int = 8'h0f;
-                        output_eth_payload_tlast_int = 1;
+                        output_eth_payload_tlast_int = 1'b1;
                         input_frame_ready_next = ~output_eth_hdr_valid_reg;
                         state_next = STATE_IDLE;
                     end

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlValueId@@output_eth_payload_tready_int to output_eth_payload_tready_int_reg


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/arp_eth_tx_64.v
+++ b/rtl/arp_eth_tx_64.v
@@ -251,19 +251,10 @@ end
 always @(posedge clk) begin
     if (rst) begin
         state_reg <= STATE_IDLE;
-        frame_ptr_reg <= 0;
-        input_frame_ready_reg <= 0;
-        output_eth_dest_mac_reg <= 0;
-        output_eth_src_mac_reg <= 0;
-        output_eth_type_reg <= 0;
-        arp_htype_reg <= 0;
-        arp_ptype_reg <= 0;
-        arp_oper_reg <= 0;
-        arp_sha_reg <= 0;
-        arp_spa_reg <= 0;
-        arp_tha_reg <= 0;
-        arp_tpa_reg <= 0;
-        busy_reg <= 0;
+        frame_ptr_reg <= 8'd0;
+        input_frame_ready_reg <= 1'b0;
+        output_eth_hdr_valid_reg <= 1'b0;
+        busy_reg <= 1'b0;
     end else begin
         state_reg <= state_next;
 

ParseResult:
UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueId: state_next
                HdlValueId: state_reg
            HdlStmAssign
                HdlValueId: frame_ptr_next
                HdlValueId: frame_ptr_reg
            HdlStmAssign
                HdlValueId: input_frame_ready_next
                HdlValueId: input_frame_ready_reg
            HdlStmAssign
                HdlValueId: output_eth_hdr_valid_next
                HdlValueId: output_eth_hdr_valid_reg
            HdlStmAssign
                HdlOp: NE
                    list: ops
                        HdlValueId: state_next
                        HdlValueId: STATE_IDLE
                HdlValueId: busy_reg
            HdlStmIf
                HdlValueId: store_frame
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueId: input_eth_dest_mac
                            HdlValueId: output_eth_dest_mac_reg
                        HdlStmAssign
                            HdlValueId: input_eth_src_mac
                            HdlValueId: output_eth_src_mac_reg
                        HdlStmAssign
                            HdlValueId: input_eth_type
                            HdlValueId: output_eth_type_reg
                        HdlStmAssign
                            HdlValueId: input_arp_htype
                            HdlValueId: arp_htype_reg
                        HdlStmAssign
                            HdlValueId: input_arp_ptype
                            HdlValueId: arp_ptype_reg
                        HdlStmAssign
                            HdlValueId: input_arp_oper
                            HdlValueId: arp_oper_reg
                        HdlStmAssign
                            HdlValueId: input_arp_sha
                            HdlValueId: arp_sha_reg
                        HdlStmAssign
                            HdlValueId: input_arp_spa
                            HdlValueId: arp_spa_reg
                        HdlStmAssign
                            HdlValueId: input_arp_tha
                            HdlValueId: arp_tha_reg
                        HdlStmAssign
                            HdlValueId: input_arp_tpa
                            HdlValueId: arp_tpa_reg
                list: elifs
    MOV HdlValueId@@rst to 
    HdlValueId: rst
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueId: STATE_IDLE
                HdlValueId: state_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: frame_ptr_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: input_frame_ready_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: output_eth_dest_mac_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: output_eth_src_mac_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: output_eth_type_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: arp_htype_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: arp_ptype_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: arp_oper_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: arp_sha_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: arp_spa_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: arp_tha_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: arp_tpa_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: busy_reg
    MOV list@@elifs to 
    list: elifs

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: state_next
    HdlValueId: state_reg

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@output_eth_type_reg to output_eth_hdr_valid_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: output_eth_dest_mac_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: output_eth_src_mac_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: arp_htype_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: arp_ptype_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: arp_oper_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: arp_sha_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: arp_spa_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: arp_tha_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: arp_tpa_reg

DEL HdlStmIf@@ from body

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 


CommitId: 51b5335318c83e2662a0edb768b05ac7cbcd6603
Remove z from default states for FSM inference
--- a/rtl/eth_axis_tx_64.v
+++ b/rtl/eth_axis_tx_64.v
@@ -155,7 +155,7 @@ always @* begin
 end
 
 always @* begin
-    state_next = 2'bz;
+    state_next = STATE_IDLE;
 
     input_eth_hdr_ready_next = 0;
     input_eth_payload_tready_next = 0;
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueId@@STATE_IDLE to ops

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            DEL HdlValueInt@@z from ops


CommitId: 0d22a35bd855a7f08b34a3f1c24ebb143289d91d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_rate_limit_64.v
+++ b/rtl/axis_rate_limit_64.v
@@ -70,21 +70,22 @@ module axis_rate_limit_64 #
 reg [DATA_WIDTH-1:0] output_axis_tdata_int;
 reg [KEEP_WIDTH-1:0] output_axis_tkeep_int;
 reg                  output_axis_tvalid_int;
-reg                  output_axis_tready_int = 0;
+reg                  output_axis_tready_int_reg = 1'b0;
 reg                  output_axis_tlast_int;
 reg                  output_axis_tuser_int;
 wire                 output_axis_tready_int_early;
 
-reg [23:0] acc_reg = 0, acc_next;
+reg [23:0] acc_reg = 24'd0, acc_next;
 reg pause;
-reg frame_reg = 0, frame_next;
+reg frame_reg = 1'b0, frame_next;
+
+reg input_axis_tready_reg = 1'b0, input_axis_tready_next;
 
-reg input_axis_tready_reg = 0, input_axis_tready_next;
 assign input_axis_tready = input_axis_tready_reg;
 
 always @* begin
     acc_next = acc_reg;
-    pause = 0;
+    pause = 1'b0;
     frame_next = frame_reg;
 
     if (acc_reg >= rate_num) begin

ParseResult:
UPD HdlIdDef@@output_axis_tready_int to output_axis_tready_int_reg


CommitId: 0d22a35bd855a7f08b34a3f1c24ebb143289d91d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_rate_limit_64.v
+++ b/rtl/axis_rate_limit_64.v
@@ -127,17 +128,22 @@ always @(posedge clk) begin
 end
 
 // output datapath logic
-reg [DATA_WIDTH-1:0] output_axis_tdata_reg = 0;
-reg [KEEP_WIDTH-1:0] output_axis_tkeep_reg = 0;
-reg                  output_axis_tvalid_reg = 0;
-reg                  output_axis_tlast_reg = 0;
-reg                  output_axis_tuser_reg = 0;
-
-reg [DATA_WIDTH-1:0] temp_axis_tdata_reg = 0;
-reg [KEEP_WIDTH-1:0] temp_axis_tkeep_reg = 0;
-reg                  temp_axis_tvalid_reg = 0;
-reg                  temp_axis_tlast_reg = 0;
-reg                  temp_axis_tuser_reg = 0;
+reg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};
+reg [KEEP_WIDTH-1:0] output_axis_tkeep_reg = {KEEP_WIDTH{1'b0}};
+reg                  output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;
+reg                  output_axis_tlast_reg = 1'b0;
+reg                  output_axis_tuser_reg = 1'b0;
+
+reg [DATA_WIDTH-1:0] temp_axis_tdata_reg = {DATA_WIDTH{1'b0}};
+reg [KEEP_WIDTH-1:0] temp_axis_tkeep_reg = {KEEP_WIDTH{1'b0}};
+reg                  temp_axis_tvalid_reg = 1'b0, temp_axis_tvalid_next;
+reg                  temp_axis_tlast_reg = 1'b0;
+reg                  temp_axis_tuser_reg = 1'b0;
+
+// datapath control
+reg store_axis_int_to_output;
+reg store_axis_int_to_temp;
+reg store_axis_temp_to_output;
 
 assign output_axis_tdata = output_axis_tdata_reg;
 assign output_axis_tkeep = output_axis_tkeep_reg;

ParseResult:
INS HdlIdDef@@output_axis_tvalid_next to objs
HdlIdDef: output_axis_tvalid_next
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL

INS HdlIdDef@@temp_axis_tvalid_next to objs
HdlIdDef: temp_axis_tvalid_next
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL

INS HdlIdDef@@store_axis_int_to_output to objs
HdlIdDef: store_axis_int_to_output
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL

INS HdlIdDef@@store_axis_int_to_temp to objs
HdlIdDef: store_axis_int_to_temp
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL

INS HdlIdDef@@store_axis_temp_to_output to objs
HdlIdDef: store_axis_temp_to_output
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL

UPD HdlIdDef@@output_axis_tdata_reg to output_axis_tdata_reg
    INS HdlOp@@REPL_CONCAT to output_axis_tdata_reg
    UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
        INS list@@ops to REPL_CONCAT
        INS HdlValueId@@DATA_WIDTH to ops

UPD HdlIdDef@@output_axis_tkeep_reg to output_axis_tkeep_reg
    INS HdlOp@@REPL_CONCAT to output_axis_tkeep_reg
    UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
        INS list@@ops to REPL_CONCAT
        INS HdlValueId@@KEEP_WIDTH to ops

UPD HdlIdDef@@temp_axis_tdata_reg to temp_axis_tdata_reg
    INS HdlOp@@REPL_CONCAT to temp_axis_tdata_reg
    UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
        INS list@@ops to REPL_CONCAT
        INS HdlValueId@@DATA_WIDTH to ops

UPD HdlIdDef@@temp_axis_tkeep_reg to temp_axis_tkeep_reg
    INS HdlOp@@REPL_CONCAT to temp_axis_tkeep_reg
    UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
        INS list@@ops to REPL_CONCAT
        INS HdlValueId@@KEEP_WIDTH to ops

UPD HdlIdDef@@output_axis_tdata_reg to output_axis_tdata_reg
    MOV HdlValueInt@@0 to output_axis_tdata_reg
    HdlValueInt: 0

UPD HdlIdDef@@output_axis_tkeep_reg to output_axis_tkeep_reg
    MOV HdlValueInt@@0 to output_axis_tkeep_reg
    HdlValueInt: 0

UPD HdlIdDef@@temp_axis_tdata_reg to temp_axis_tdata_reg
    MOV HdlValueInt@@0 to temp_axis_tdata_reg
    HdlValueInt: 0

UPD HdlIdDef@@temp_axis_tkeep_reg to temp_axis_tkeep_reg
    MOV HdlValueInt@@0 to temp_axis_tkeep_reg
    HdlValueInt: 0


CommitId: 51b5335318c83e2662a0edb768b05ac7cbcd6603
Remove z from default states for FSM inference
--- a/rtl/ip_64.v
+++ b/rtl/ip_64.v
@@ -262,7 +262,7 @@ assign arp_request_ip = input_ip_dest_ip;
 assign tx_error_arp_failed = arp_response_error;
 
 always @* begin
-    state_next = 8'bz;
+    state_next = STATE_IDLE;
 
     arp_request_valid_next = 0;
     drop_packet_next = 0;
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueId@@STATE_IDLE to ops

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            DEL HdlValueInt@@z from ops


CommitId: 585ccefa1534cba00ee915f54baf491a0b49df82
Add TX underflow error signal
--- a/rtl/axis_baser_tx_64.v
+++ b/rtl/axis_baser_tx_64.v
@@ -67,7 +67,8 @@ module axis_baser_tx_64 #
      * Status
      */
     output wire                  start_packet_0,
-    output wire                  start_packet_4
+    output wire                  start_packet_4,
+    output wire                  error_underflow
 );
 
 // bus width assertions

ParseResult:
INS HdlIdDef@@error_underflow to ports
HdlIdDef: error_underflow
    HdlDirection: OUT


CommitId: 585ccefa1534cba00ee915f54baf491a0b49df82
Add TX underflow error signal
--- a/rtl/axis_baser_tx_64.v
+++ b/rtl/axis_baser_tx_64.v
@@ -211,6 +212,7 @@ reg [3:0] output_type_reg = OUTPUT_TYPE_IDLE, output_type_next;
 
 reg start_packet_0_reg = 1'b0, start_packet_0_next;
 reg start_packet_4_reg = 1'b0, start_packet_4_next;
+reg error_underflow_reg = 1'b0, error_underflow_next;
 
 assign s_axis_tready = s_axis_tready_reg;
 

ParseResult:
INS HdlIdDef@@error_underflow_reg to objs
HdlIdDef: error_underflow_reg
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@error_underflow_next to objs
HdlIdDef: error_underflow_next
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL


CommitId: 585ccefa1534cba00ee915f54baf491a0b49df82
Add TX underflow error signal
--- a/rtl/axis_baser_tx_64.v
+++ b/rtl/axis_baser_tx_64.v
@@ -219,6 +221,7 @@ assign encoded_tx_hdr = encoded_tx_hdr_reg;
 
 assign start_packet_0 = start_packet_0_reg;
 assign start_packet_4 = start_packet_4_reg;
+assign error_underflow = error_underflow_reg;
 
 lfsr #(
     .LFSR_WIDTH(32),

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: error_underflow_reg
    HdlValueId: error_underflow


CommitId: 585ccefa1534cba00ee915f54baf491a0b49df82
Add TX underflow error signal
--- a/rtl/axis_baser_tx_64.v
+++ b/rtl/axis_baser_tx_64.v
@@ -474,6 +477,7 @@ always @* begin
 
     start_packet_0_next = 1'b0;
     start_packet_4_next = 1'b0;
+    error_underflow_next = 1'b0;
 
     case (state_reg)
         STATE_IDLE: begin

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: error_underflow_next
                HdlValueInt: 0


CommitId: 585ccefa1534cba00ee915f54baf491a0b49df82
Add TX underflow error signal
--- a/rtl/axis_baser_tx_64.v
+++ b/rtl/axis_baser_tx_64.v
@@ -554,10 +558,11 @@ always @* begin
                     state_next = STATE_PAYLOAD;
                 end
             end else begin
-                // tvalid deassert, fail framec
+                // tvalid deassert, fail frame
                 output_type_next = OUTPUT_TYPE_ERROR;
                 frame_ptr_next = 16'd0;
                 ifg_count_next = 8'd8;
+                error_underflow_next = 1'b1;
                 state_next = STATE_WAIT_END;
             end
         end

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: error_underflow_next
                HdlValueInt: 0

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: error_underflow_next
                HdlValueInt: 1


CommitId: 585ccefa1534cba00ee915f54baf491a0b49df82
Add TX underflow error signal
--- a/rtl/axis_baser_tx_64.v
+++ b/rtl/axis_baser_tx_64.v
@@ -728,6 +733,7 @@ always @(posedge clk) begin
 
         start_packet_0_reg <= 1'b0;
         start_packet_4_reg <= 1'b0;
+        error_underflow_reg <= 1'b0;
 
         crc_state <= 32'hFFFFFFFF;
 

ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: error_underflow_reg


CommitId: 585ccefa1534cba00ee915f54baf491a0b49df82
Add TX underflow error signal
--- a/rtl/axis_baser_tx_64.v
+++ b/rtl/axis_baser_tx_64.v
@@ -747,6 +753,7 @@ always @(posedge clk) begin
 
         start_packet_0_reg <= start_packet_0_next;
         start_packet_4_reg <= start_packet_4_next;
+        error_underflow_reg <= error_underflow_next;
 
         delay_type_valid <= 1'b0;
 
ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: error_underflow_next
    HdlValueId: error_underflow_reg


CommitId: 0fc986041e9a936aaa3c21c0d54c2a669316995b
Fix example design LED logic
--- a/example/NexysVideo/fpga/rtl/fpga_core.v
+++ b/example/NexysVideo/fpga/rtl/fpga_core.v
@@ -305,9 +305,14 @@ always @(posedge clk) begin
     if (rst) begin
         led_reg <= 0;
     end else begin
-        valid_last <= tx_udp_payload_tvalid;
-        if (tx_udp_payload_tvalid & ~valid_last) begin
-            led_reg <= tx_udp_payload_tdata;
+        if (tx_udp_payload_tvalid) begin
+            if (~valid_last) begin
+                led_reg <= tx_udp_payload_tdata;
+                valid_last <= 1'b1;
+            end
+            if (tx_udp_payload_tlast) begin
+                valid_last <= 1'b0;
+            end
         end
     end
 end
ParseResult:
UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

INS HdlStmIf@@ to body

UPD HdlStmAssign@@ to 
    MOV HdlValueId@@tx_udp_payload_tvalid to 
    HdlValueId: tx_udp_payload_tvalid
    DEL HdlValueId@@valid_last from 

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueId: tx_udp_payload_tvalid
                HdlValueId: valid_last
            HdlStmIf
                HdlOp: AND
                    list: ops
                        HdlValueId: tx_udp_payload_tvalid
                        HdlOp: NEG
                            list: ops
                                HdlValueId: valid_last
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueId: tx_udp_payload_tdata
                            HdlValueId: led_reg
                list: elifs

UPD HdlStmIf@@ to 
    INS list@@elifs to 

INS HdlStmIf@@ to body
HdlStmIf
    HdlValueId: tx_udp_payload_tlast
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: valid_last
    list: elifs

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND to AND
        MOV HdlOp@@NEG to ops
        HdlOp: NEG
            list: ops
                HdlValueId: valid_last
        DEL HdlValueId@@tx_udp_payload_tvalid from ops
        DEL list@@ops from AND
    DEL HdlOp@@AND from 

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 1
    HdlValueId: valid_last

DEL HdlStmAssign@@ from body


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/ip_eth_tx.v
+++ b/rtl/ip_eth_tx.v
@@ -195,27 +195,27 @@ always @* begin
 
     output_eth_hdr_valid_next = output_eth_hdr_valid_reg & ~output_eth_hdr_ready;
 
-    error_payload_early_termination_next = 0;
+    error_payload_early_termination_next = 1'b0;
 
-    output_eth_payload_tdata_int = 0;
-    output_eth_payload_tvalid_int = 0;
-    output_eth_payload_tlast_int = 0;
-    output_eth_payload_tuser_int = 0;
+    output_eth_payload_tdata_int = 8'd0;
+    output_eth_payload_tvalid_int = 1'b0;
+    output_eth_payload_tlast_int = 1'b0;
+    output_eth_payload_tuser_int = 1'b0;
 
     case (state_reg)
         STATE_IDLE: begin
             // idle state - wait for data
-            frame_ptr_next = 0;
+            frame_ptr_next = 16'd0;
             input_ip_hdr_ready_next = ~output_eth_hdr_valid_reg;
 
             if (input_ip_hdr_ready & input_ip_hdr_valid) begin
-                store_ip_hdr = 1;
-                input_ip_hdr_ready_next = 0;
-                output_eth_hdr_valid_next = 1;
-                if (output_eth_payload_tready_int) begin
-                    output_eth_payload_tvalid_int = 1;
+                store_ip_hdr = 1'b1;
+                input_ip_hdr_ready_next = 1'b0;
+                output_eth_hdr_valid_next = 1'b1;
+                if (output_eth_payload_tready_int_reg) begin
+                    output_eth_payload_tvalid_int = 1'b1;
                     output_eth_payload_tdata_int = {4'd4, 4'd5}; // ip_version, ip_ihl
-                    frame_ptr_next = 1;
+                    frame_ptr_next = 16'd1;
                 end
                 state_next = STATE_WRITE_HEADER;
             end else begin

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlValueId@@output_eth_payload_tready_int to output_eth_payload_tready_int_reg


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/ip_eth_tx.v
+++ b/rtl/ip_eth_tx.v
@@ -224,8 +224,8 @@ always @* begin
         end
         STATE_WRITE_HEADER: begin
             // write header
-            if (output_eth_payload_tready_int) begin
-                frame_ptr_next = frame_ptr_reg+1;
+            if (output_eth_payload_tready_int_reg) begin
+                frame_ptr_next = frame_ptr_reg + 16'd1;
                 output_eth_payload_tvalid_int = 1;
                 state_next = STATE_WRITE_HEADER;
                 case (frame_ptr_reg)

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlValueId@@output_eth_payload_tready_int to output_eth_payload_tready_int_reg


CommitId: 3816eb3c20f40b72d2d23cb6964a8bd8126985c2
Fix parameters
--- a/rtl/axis_rate_limit.v
+++ b/rtl/axis_rate_limit.v
@@ -31,8 +31,7 @@ THE SOFTWARE.
  */
 module axis_rate_limit #
 (
-    parameter DATA_WIDTH = 64,
-    parameter KEEP_WIDTH = (DATA_WIDTH/8)
+    parameter DATA_WIDTH = 8
 )
 (
     input  wire                   clk,
ParseResult:
UPD HdlIdDef@@KEEP_WIDTH to DATA_WIDTH

UPD HdlIdDef@@KEEP_WIDTH to KEEP_WIDTH
    UPD HdlOp@@DIV to DIV
        MOV HdlValueInt@@8 to ops
        HdlValueInt: 8
        DEL HdlValueId@@DATA_WIDTH from ops
        DEL list@@ops from DIV
    DEL HdlOp@@DIV from KEEP_WIDTH

DEL HdlIdDef@@DATA_WIDTH from params
HdlIdDef: DATA_WIDTH
    HdlValueInt: 64
    HdlDirection: INTERNAL


CommitId: abe0d926ba92b46ef297c69adddfee2dd12ef55f
Consider any control characters in packet body as errors
--- a/rtl/eth_mac_10g_rx.v
+++ b/rtl/eth_mac_10g_rx.v
@@ -255,38 +255,49 @@ end
 
 // mask errors to within packet
 reg [7:0] detect_error_masked;
+reg [7:0] control_masked;
 
 always @* begin
     case (detect_term)
     8'b00000000: begin
         detect_error_masked = detect_error;
+        control_masked = xgmii_rxc_d0;
     end
     8'b00000001: begin
         detect_error_masked = 0;
+        control_masked = 0;
     end
     8'b00000010: begin
         detect_error_masked = detect_error[0];
+        control_masked = xgmii_rxc_d0[0];
     end
     8'b00000100: begin
         detect_error_masked = detect_error[1:0];
+        control_masked = xgmii_rxc_d0[1:0];
     end
     8'b00001000: begin
         detect_error_masked = detect_error[2:0];
+        control_masked = xgmii_rxc_d0[2:0];
     end
     8'b00010000: begin
         detect_error_masked = detect_error[3:0];
+        control_masked = xgmii_rxc_d0[3:0];
     end
     8'b00100000: begin
         detect_error_masked = detect_error[4:0];
+        control_masked = xgmii_rxc_d0[4:0];
     end
     8'b01000000: begin
         detect_error_masked = detect_error[5:0];
+        control_masked = xgmii_rxc_d0[5:0];
     end
     8'b10000000: begin
         detect_error_masked = detect_error[6:0];
+        control_masked = xgmii_rxc_d0[6:0];
     end
     default: begin
         detect_error_masked = detect_error;
+        control_masked = xgmii_rxc_d0;
     end
     endcase
 end

ParseResult:
INS HdlIdDef@@control_masked to objs
HdlIdDef: control_masked
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 7
                    HdlValueInt: 0
    HdlDirection: INTERNAL

UPD HdlStmCase@@detect_term to detect_term
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: control_masked
                HdlValueId: xgmii_rxc_d0
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: control_masked
                HdlValueId: xgmii_rxc_d0
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: control_masked
                HdlValueInt: 0
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: control_masked
                HdlOp: INDEX
                    list: ops
                        HdlValueId: xgmii_rxc_d0
                        HdlValueInt: 0
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: control_masked
                HdlOp: INDEX
                    list: ops
                        HdlValueId: xgmii_rxc_d0
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 1
                                HdlValueInt: 0
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: control_masked
                HdlOp: INDEX
                    list: ops
                        HdlValueId: xgmii_rxc_d0
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 2
                                HdlValueInt: 0
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: control_masked
                HdlOp: INDEX
                    list: ops
                        HdlValueId: xgmii_rxc_d0
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 3
                                HdlValueInt: 0
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: control_masked
                HdlOp: INDEX
                    list: ops
                        HdlValueId: xgmii_rxc_d0
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 4
                                HdlValueInt: 0
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: control_masked
                HdlOp: INDEX
                    list: ops
                        HdlValueId: xgmii_rxc_d0
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 5
                                HdlValueInt: 0
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: control_masked
                HdlOp: INDEX
                    list: ops
                        HdlValueId: xgmii_rxc_d0
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 6
                                HdlValueInt: 0


CommitId: abe0d926ba92b46ef297c69adddfee2dd12ef55f
Consider any control characters in packet body as errors
--- a/rtl/eth_mac_10g_rx.v
+++ b/rtl/eth_mac_10g_rx.v
@@ -360,8 +371,8 @@ always @* begin
                 error_bad_frame_next = 1;
                 reset_crc = 1;
                 state_next = STATE_PAYLOAD;
-            end else if (detect_error_masked) begin
-                // error condition
+            end else if (control_masked) begin
+                // control or error characters in packet
                 output_axis_tlast_next = 1;
                 output_axis_tuser_next = 1;
                 error_bad_frame_next = 1;
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlValueId@@detect_error_masked to control_masked


CommitId: 2794c315e840562a1facdb87b4bb34740928cfc5
Fix synthesizer complaints
--- a/rtl/axis_xgmii_rx_64.v
+++ b/rtl/axis_xgmii_rx_64.v
@@ -516,10 +516,10 @@ always @(posedge clk) begin
         end
     end else if (xgmii_rxc[4] && xgmii_rxd[39:32] == XGMII_START) begin
         if (PTP_TS_WIDTH == 96) begin
-            ptp_ts_reg[45:0] <= ptp_ts[45:0] + (PTP_PERIOD_NS * 2**16 + PTP_PERIOD_FNS) * 1.5;
+            ptp_ts_reg[45:0] <= ptp_ts[45:0] + (((PTP_PERIOD_NS * 2**16 + PTP_PERIOD_FNS) * 3) >> 1);
             ptp_ts_reg[95:48] <= ptp_ts[95:48];
         end else begin
-            ptp_ts_reg <= ptp_ts + (PTP_PERIOD_NS * 2**16 + PTP_PERIOD_FNS) * 1.5;
+            ptp_ts_reg <= ptp_ts + (((PTP_PERIOD_NS * 2**16 + PTP_PERIOD_FNS) * 3) >> 1);
         end
     end
 
ParseResult:
UPD HdlStmAssign@@ to 
    INS HdlOp@@ADD to 
    UPD HdlOp@@ADD to ADD
        INS list@@ops to ADD
        UPD HdlOp@@SRL to SRL
            INS HdlValueInt@@1 to ops
            UPD HdlOp@@MUL to MUL
                INS HdlValueInt@@3 to ops

UPD HdlStmAssign@@ to 
    UPD HdlOp@@ADD to ADD
        INS HdlOp@@SRL to ops
        UPD HdlOp@@SRL to SRL
            INS list@@ops to SRL
            INS HdlValueInt@@1 to ops
            UPD HdlOp@@MUL to MUL
                INS HdlValueInt@@3 to ops

UPD HdlStmAssign@@ to 
    UPD HdlOp@@ADD to ADD
        MOV HdlValueId@@ptp_ts to ops
        HdlValueId: ptp_ts
        UPD HdlOp@@MUL to MUL
            DEL float@@ from ops
    UPD HdlOp@@ADD to SRL
    MOV HdlOp@@ADD to 
    HdlOp: ADD
        list: ops
            HdlValueId: ptp_ts
            HdlOp: MUL
                list: ops
                    HdlOp: ADD
                        list: ops
                            HdlOp: MUL
                                list: ops
                                    HdlValueId: PTP_PERIOD_NS
                                    HdlOp: POW
                                        list: ops
                                            HdlValueInt: 2
                                            HdlValueInt: 16
                            HdlValueId: PTP_PERIOD_FNS
                    float

UPD HdlStmAssign@@ to 
    UPD HdlOp@@ADD to ADD
        MOV HdlOp@@MUL to ops
        HdlOp: MUL
            list: ops
                HdlOp: ADD
                    list: ops
                        HdlOp: MUL
                            list: ops
                                HdlValueId: PTP_PERIOD_NS
                                HdlOp: POW
                                    list: ops
                                        HdlValueInt: 2
                                        HdlValueInt: 16
                        HdlValueId: PTP_PERIOD_FNS
                float
        UPD HdlOp@@MUL to MUL
            DEL float@@ from ops


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/eth_demux_64_4.v
+++ b/rtl/eth_demux_64_4.v
@@ -107,25 +107,25 @@ module eth_demux_64_4
     input  wire [1:0]  select
 );
 
-reg [1:0] select_reg = 0, select_next;
-reg frame_reg = 0, frame_next;
+reg [1:0] select_reg = 2'd0, select_next;
+reg frame_reg = 1'b0, frame_next;
 
-reg input_eth_hdr_ready_reg = 0, input_eth_hdr_ready_next;
-reg input_eth_payload_tready_reg = 0, input_eth_payload_tready_next;
+reg input_eth_hdr_ready_reg = 1'b0, input_eth_hdr_ready_next;
+reg input_eth_payload_tready_reg = 1'b0, input_eth_payload_tready_next;
 
-reg output_0_eth_hdr_valid_reg = 0, output_0_eth_hdr_valid_next;
-reg output_1_eth_hdr_valid_reg = 0, output_1_eth_hdr_valid_next;
-reg output_2_eth_hdr_valid_reg = 0, output_2_eth_hdr_valid_next;
-reg output_3_eth_hdr_valid_reg = 0, output_3_eth_hdr_valid_next;
-reg [47:0] output_eth_dest_mac_reg = 0, output_eth_dest_mac_next;
-reg [47:0] output_eth_src_mac_reg = 0, output_eth_src_mac_next;
-reg [15:0] output_eth_type_reg = 0, output_eth_type_next;
+reg output_0_eth_hdr_valid_reg = 1'b0, output_0_eth_hdr_valid_next;
+reg output_1_eth_hdr_valid_reg = 1'b0, output_1_eth_hdr_valid_next;
+reg output_2_eth_hdr_valid_reg = 1'b0, output_2_eth_hdr_valid_next;
+reg output_3_eth_hdr_valid_reg = 1'b0, output_3_eth_hdr_valid_next;
+reg [47:0] output_eth_dest_mac_reg = 48'd0, output_eth_dest_mac_next;
+reg [47:0] output_eth_src_mac_reg = 48'd0, output_eth_src_mac_next;
+reg [15:0] output_eth_type_reg = 16'd0, output_eth_type_next;
 
 // internal datapath
 reg [63:0] output_eth_payload_tdata_int;
 reg [7:0]  output_eth_payload_tkeep_int;
 reg        output_eth_payload_tvalid_int;
-reg        output_eth_payload_tready_int = 0;
+reg        output_eth_payload_tready_int_reg = 1'b0;
 reg        output_eth_payload_tlast_int;
 reg        output_eth_payload_tuser_int;
 wire       output_eth_payload_tready_int_early;

ParseResult:
UPD HdlIdDef@@output_eth_payload_tready_int to output_eth_payload_tready_int_reg


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/eth_demux_64_4.v
+++ b/rtl/eth_demux_64_4.v
@@ -184,6 +184,12 @@ always @* begin
             current_output_tvalid = output_3_eth_payload_tvalid;
             current_output_tready = output_3_eth_payload_tready;
         end
+        default: begin
+            current_output_eth_hdr_valid = 1'b0;
+            current_output_eth_hdr_ready = 1'b0;
+            current_output_tvalid = 1'b0;
+            current_output_tready = 1'b0;
+        end
     endcase
 end
 

ParseResult:
UPD HdlStmCase@@select_reg to select_reg
    INS HdlStmBlock@@SEQ to select_reg
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_output_eth_hdr_valid
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_output_eth_hdr_ready
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_output_tvalid
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_output_tready
                    HdlValueInt: 0


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/eth_demux_64_4.v
+++ b/rtl/eth_demux_64_4.v
@@ -192,7 +198,7 @@ always @* begin
     frame_next = frame_reg;
 
     input_eth_hdr_ready_next = input_eth_hdr_ready_reg & ~input_eth_hdr_valid;
-    input_eth_payload_tready_next = 0;
+    input_eth_payload_tready_next = 1'b0;
     output_0_eth_hdr_valid_next = output_0_eth_hdr_valid_reg & ~output_0_eth_hdr_ready;
     output_1_eth_hdr_valid_next = output_1_eth_hdr_valid_reg & ~output_1_eth_hdr_ready;
     output_2_eth_hdr_valid_next = output_2_eth_hdr_valid_reg & ~output_2_eth_hdr_ready;

ParseResult:
UPD HdlStmCase@@select_reg to select_reg
    INS HdlStmBlock@@SEQ to select_reg
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_output_eth_hdr_valid
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_output_eth_hdr_ready
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_output_tvalid
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_output_tready
                    HdlValueInt: 0


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/eth_demux_64_4.v
+++ b/rtl/eth_demux_64_4.v
@@ -235,17 +241,14 @@ end
 
 always @(posedge clk) begin
     if (rst) begin
-        select_reg <= 0;
-        frame_reg <= 0;
-        input_eth_hdr_ready_reg <= 0;
-        input_eth_payload_tready_reg <= 0;
-        output_0_eth_hdr_valid_reg <= 0;
-        output_1_eth_hdr_valid_reg <= 0;
-        output_2_eth_hdr_valid_reg <= 0;
-        output_3_eth_hdr_valid_reg <= 0;
-        output_eth_dest_mac_reg <= 0;
-        output_eth_src_mac_reg <= 0;
-        output_eth_type_reg <= 0;
+        select_reg <= 2'd0;
+        frame_reg <= 1'b0;
+        input_eth_hdr_ready_reg <= 1'b0;
+        input_eth_payload_tready_reg <= 1'b0;
+        output_0_eth_hdr_valid_reg <= 1'b0;
+        output_1_eth_hdr_valid_reg <= 1'b0;
+        output_2_eth_hdr_valid_reg <= 1'b0;
+        output_3_eth_hdr_valid_reg <= 1'b0;
     end else begin
         select_reg <= select_next;
         frame_reg <= frame_next;

ParseResult:
DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: output_eth_dest_mac_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: output_eth_src_mac_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: output_eth_type_reg


CommitId: 303dec816548404af956fec51ee513e85d922831
Sum errors across data and header
--- a/rtl/eth_phy_10g_rx_if.v
+++ b/rtl/eth_phy_10g_rx_if.v
@@ -158,7 +158,7 @@ integer i;
 always @* begin
     rx_error_count_1_temp = 0;
     rx_error_count_2_temp = 0;
-    for (i = 0; i < DATA_WIDTH; i = i + 1) begin
+    for (i = 0; i < DATA_WIDTH+HDR_WIDTH; i = i + 1) begin
         if (i & 1) begin
             rx_error_count_1_temp = rx_error_count_1_temp + prbs31_data[i];
         end else begin
ParseResult:
UPD HdlStmFor@@ to 
    UPD HdlOp@@LT to LT
        INS HdlOp@@ADD to ops
        UPD HdlOp@@ADD to ADD
            INS list@@ops to ADD
            INS HdlValueId@@HDR_WIDTH to ops

UPD HdlStmFor@@ to 
    UPD HdlOp@@LT to LT
        MOV HdlValueId@@DATA_WIDTH to ops
        HdlValueId: DATA_WIDTH


CommitId: ccc15324a6aea80d6790a0f4f4bc125e8d5bfa9c
Fix bad frame mask
--- a/rtl/axis_fifo.v
+++ b/rtl/axis_fifo.v
@@ -207,7 +207,7 @@ always @* begin
             wr_ptr_cur_next = wr_ptr_cur_reg + 1;
             if (s_axis_tlast) begin
                 // end of frame
-                if (DROP_BAD_FRAME && (USER_BAD_FRAME_MASK & s_axis_tuser == USER_BAD_FRAME_VALUE)) begin
+                if (DROP_BAD_FRAME && USER_BAD_FRAME_MASK & ~(s_axis_tuser ^ USER_BAD_FRAME_VALUE)) begin
                     // bad packet, reset write pointer
                     wr_ptr_cur_next = wr_ptr_reg;
                     bad_frame_next = 1'b1;
ParseResult:
UPD HdlStmIf@@ to 
    INS HdlOp@@AND_LOG to 
    UPD HdlOp@@AND_LOG to AND_LOG
        INS list@@ops to AND_LOG
        INS HdlValueId@@DROP_BAD_FRAME to ops

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND
    MOV HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlValueId: DROP_BAD_FRAME
            HdlOp: AND
                list: ops
                    HdlValueId: USER_BAD_FRAME_MASK
                    HdlOp: EQ
                        list: ops
                            HdlValueId: s_axis_tuser
                            HdlValueId: USER_BAD_FRAME_VALUE
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlValueId@@DROP_BAD_FRAME to USER_BAD_FRAME_MASK
        UPD HdlOp@@AND to NEG
        UPD HdlOp@@AND to AND
            UPD HdlOp@@EQ to XOR
            DEL HdlValueId@@USER_BAD_FRAME_MASK from ops


CommitId: 2794c315e840562a1facdb87b4bb34740928cfc5
Fix synthesizer complaints
--- a/rtl/axis_baser_tx_64.v
+++ b/rtl/axis_baser_tx_64.v
@@ -532,10 +532,10 @@ always @* begin
                     // need to send more idles - swap lanes
                     swap_lanes = 1'b1;
                     if (PTP_TS_WIDTH == 96) begin
-                        m_axis_ptp_ts_next[45:0] <= ptp_ts[45:0] + (PTP_PERIOD_NS * 2**16 + PTP_PERIOD_FNS) * 1.5;
+                        m_axis_ptp_ts_next[45:0] <= ptp_ts[45:0] + (((PTP_PERIOD_NS * 2**16 + PTP_PERIOD_FNS) * 3) >> 1);
                         m_axis_ptp_ts_next[95:48] <= ptp_ts[95:48];
                     end else begin
-                        m_axis_ptp_ts_next = ptp_ts + (PTP_PERIOD_NS * 2**16 + PTP_PERIOD_FNS) * 1.5;
+                        m_axis_ptp_ts_next = ptp_ts + (((PTP_PERIOD_NS * 2**16 + PTP_PERIOD_FNS) * 3) >> 1);
                     end
                     m_axis_ptp_ts_tag_next = s_axis_tuser >> 1;
                     m_axis_ptp_ts_valid_int_next = 1'b1;
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        INS HdlOp@@ASSIGN to body
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueId@@m_axis_ptp_ts_next to ops
            UPD HdlOp@@ADD to ADD
                UPD HdlOp@@SRL to SRL
                    INS HdlValueInt@@1 to ops
                    UPD HdlOp@@MUL to MUL
                        INS HdlValueInt@@3 to ops

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD list@@body to ops
        MOV list@@body to SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: m_axis_ptp_ts_next
                    HdlOp: ADD
                        list: ops
                            HdlValueId: ptp_ts
                            HdlOp: MUL
                                list: ops
                                    HdlOp: ADD
                                        list: ops
                                            HdlOp: MUL
                                                list: ops
                                                    HdlValueId: PTP_PERIOD_NS
                                                    HdlOp: POW
                                                        list: ops
                                                            HdlValueInt: 2
                                                            HdlValueInt: 16
                                            HdlValueId: PTP_PERIOD_FNS
                                    float
        UPD HdlOp@@ASSIGN to ADD
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@m_axis_ptp_ts_next to ptp_ts
            UPD HdlOp@@ADD to SRL
            UPD HdlOp@@ADD to ADD
                DEL HdlValueId@@ptp_ts from ops
                UPD HdlOp@@MUL to MUL
                    DEL float@@ from ops

UPD HdlStmAssign@@ to 
    UPD HdlOp@@ADD to ADD
        INS HdlOp@@SRL to ops
        UPD HdlOp@@SRL to SRL
            INS list@@ops to SRL
            INS HdlValueInt@@1 to ops
            UPD HdlOp@@MUL to MUL
                INS HdlValueInt@@3 to ops

UPD HdlStmAssign@@ to 
    UPD HdlOp@@ADD to ADD
        MOV HdlOp@@MUL to ops
        HdlOp: MUL
            list: ops
                HdlOp: ADD
                    list: ops
                        HdlOp: MUL
                            list: ops
                                HdlValueId: PTP_PERIOD_NS
                                HdlOp: POW
                                    list: ops
                                        HdlValueInt: 2
                                        HdlValueInt: 16
                        HdlValueId: PTP_PERIOD_FNS
                float
        UPD HdlOp@@MUL to MUL
            DEL float@@ from ops


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/ip_demux_4.v
+++ b/rtl/ip_demux_4.v
@@ -308,6 +308,12 @@ always @* begin
             current_output_tvalid = output_3_ip_payload_tvalid;
             current_output_tready = output_3_ip_payload_tready;
         end
+        default: begin
+            current_output_ip_hdr_valid = 1'b0;
+            current_output_ip_hdr_ready = 1'b0;
+            current_output_tvalid = 1'b0;
+            current_output_tready = 1'b0;
+        end
     endcase
 end
 

ParseResult:
UPD HdlStmCase@@select_reg to select_reg
    INS HdlStmBlock@@SEQ to select_reg
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_output_ip_hdr_valid
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_output_ip_hdr_ready
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_output_tvalid
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_output_tready
                    HdlValueInt: 0


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/ip_demux_4.v
+++ b/rtl/ip_demux_4.v
@@ -316,7 +322,7 @@ always @* begin
     frame_next = frame_reg;
 
     input_ip_hdr_ready_next = input_ip_hdr_ready_reg & ~input_ip_hdr_valid;
-    input_ip_payload_tready_next = 0;
+    input_ip_payload_tready_next = 1'b0;
     output_0_ip_hdr_valid_next = output_0_ip_hdr_valid_reg & ~output_0_ip_hdr_ready;
     output_1_ip_hdr_valid_next = output_1_ip_hdr_valid_reg & ~output_1_ip_hdr_ready;
     output_2_ip_hdr_valid_next = output_2_ip_hdr_valid_reg & ~output_2_ip_hdr_ready;

ParseResult:
UPD HdlStmCase@@select_reg to select_reg
    INS HdlStmBlock@@SEQ to select_reg
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_output_ip_hdr_valid
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_output_ip_hdr_ready
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_output_tvalid
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_output_tready
                    HdlValueInt: 0


CommitId: 51b5335318c83e2662a0edb768b05ac7cbcd6603
Remove z from default states for FSM inference
--- a/rtl/ip.v
+++ b/rtl/ip.v
@@ -253,7 +253,7 @@ assign arp_request_ip = input_ip_dest_ip;
 assign tx_error_arp_failed = arp_response_error;
 
 always @* begin
-    state_next = 8'bz;
+    state_next = STATE_IDLE;
 
     arp_request_valid_next = 0;
     drop_packet_next = 0;
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueId@@STATE_IDLE to ops

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            DEL HdlValueInt@@z from ops


CommitId: 77211926f2dd114cdc8d1963e557db832f0df6bf
Fix classifier logic
--- a/rtl/udp_complete_64.v
+++ b/rtl/udp_complete_64.v
@@ -356,7 +356,8 @@ assign output_ip_payload_tvalid = input_select_ip_reg & ip_rx_ip_payload_tvalid;
 assign output_ip_payload_tlast = ip_rx_ip_payload_tlast;
 assign output_ip_payload_tuser = ip_rx_ip_payload_tuser;
 
-assign ip_rx_ip_hdr_ready = udp_rx_ip_hdr_ready & output_ip_hdr_ready;
+assign ip_rx_ip_hdr_ready = (input_select_udp & udp_rx_ip_hdr_ready) |
+                            (input_select_ip & output_ip_hdr_ready);
 
 assign ip_rx_ip_payload_tready = (input_select_udp_reg & udp_rx_ip_payload_tready) |
                                  (input_select_ip_reg & output_ip_payload_tready);
ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: OR
        list: ops
            HdlOp: AND
                list: ops
                    HdlValueId: input_select_udp
                    HdlValueId: udp_rx_ip_hdr_ready
            HdlOp: AND
                list: ops
                    HdlValueId: input_select_ip
                    HdlValueId: output_ip_hdr_ready
    HdlValueId: ip_rx_ip_hdr_ready

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: AND
        list: ops
            HdlValueId: udp_rx_ip_hdr_ready
            HdlValueId: output_ip_hdr_ready
    HdlValueId: ip_rx_ip_hdr_ready


CommitId: ccc15324a6aea80d6790a0f4f4bc125e8d5bfa9c
Fix bad frame mask
--- a/rtl/axis_async_fifo.v
+++ b/rtl/axis_async_fifo.v
@@ -302,7 +302,7 @@ always @* begin
             wr_ptr_cur_gray_next = wr_ptr_cur_next ^ (wr_ptr_cur_next >> 1);
             if (s_axis_tlast) begin
                 // end of frame
-                if (DROP_BAD_FRAME && (USER_BAD_FRAME_MASK & s_axis_tuser == USER_BAD_FRAME_VALUE)) begin
+                if (DROP_BAD_FRAME && USER_BAD_FRAME_MASK & ~(s_axis_tuser ^ USER_BAD_FRAME_VALUE)) begin
                     // bad packet, reset write pointer
                     wr_ptr_cur_next = wr_ptr_reg;
                     wr_ptr_cur_gray_next = wr_ptr_cur_next ^ (wr_ptr_cur_next >> 1);
ParseResult:
UPD HdlStmIf@@ to 
    INS HdlOp@@AND_LOG to 
    UPD HdlOp@@AND_LOG to AND_LOG
        INS list@@ops to AND_LOG
        INS HdlValueId@@DROP_BAD_FRAME to ops

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND
    MOV HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlValueId: DROP_BAD_FRAME
            HdlOp: AND
                list: ops
                    HdlValueId: USER_BAD_FRAME_MASK
                    HdlOp: EQ
                        list: ops
                            HdlValueId: s_axis_tuser
                            HdlValueId: USER_BAD_FRAME_VALUE
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlValueId@@DROP_BAD_FRAME to USER_BAD_FRAME_MASK
        UPD HdlOp@@AND to NEG
        UPD HdlOp@@AND to AND
            UPD HdlOp@@EQ to XOR
            DEL HdlValueId@@USER_BAD_FRAME_MASK from ops


CommitId: fb4abb6b39fe1536162dfdc41d3cf64beb8fa834
Fix widths
--- a/rtl/eth_axis_rx_64.v
+++ b/rtl/eth_axis_rx_64.v
@@ -326,13 +326,13 @@ always @(posedge clk) begin
 end
 
 // output datapath logic
-reg [64:0] m_eth_payload_axis_tdata_reg = 64'd0;
+reg [63:0] m_eth_payload_axis_tdata_reg = 64'd0;
 reg [7:0]  m_eth_payload_axis_tkeep_reg = 8'd0;
 reg        m_eth_payload_axis_tvalid_reg = 1'b0, m_eth_payload_axis_tvalid_next;
 reg        m_eth_payload_axis_tlast_reg = 1'b0;
 reg        m_eth_payload_axis_tuser_reg = 1'b0;
 
-reg [64:0] temp_m_eth_payload_axis_tdata_reg = 64'd0;
+reg [63:0] temp_m_eth_payload_axis_tdata_reg = 64'd0;
 reg [7:0]  temp_m_eth_payload_axis_tkeep_reg = 8'd0;
 reg        temp_m_eth_payload_axis_tvalid_reg = 1'b0, temp_m_eth_payload_axis_tvalid_next;
 reg        temp_m_eth_payload_axis_tlast_reg = 1'b0;
ParseResult:
INS HdlIdDef@@m_eth_payload_axis_tdata_reg to objs
HdlIdDef: m_eth_payload_axis_tdata_reg
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 63
                    HdlValueInt: 0
    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@temp_m_eth_payload_axis_tdata_reg to objs
HdlIdDef: temp_m_eth_payload_axis_tdata_reg
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 63
                    HdlValueInt: 0
    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@m_eth_payload_axis_tdata_reg from objs
HdlIdDef: m_eth_payload_axis_tdata_reg
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 64
                    HdlValueInt: 0
    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@temp_m_eth_payload_axis_tdata_reg from objs
HdlIdDef: temp_m_eth_payload_axis_tdata_reg
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 64
                    HdlValueInt: 0
    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/ip.v
+++ b/rtl/ip.v
@@ -313,11 +313,10 @@ end
 always @(posedge clk) begin
     if (rst) begin
         state_reg <= STATE_IDLE;
-        arp_request_valid_reg <= 0;
-        drop_packet_reg <= 0;
-        input_ip_hdr_ready_reg <= 0;
+        arp_request_valid_reg <= 1'b0;
+        drop_packet_reg <= 1'b0;
+        input_ip_hdr_ready_reg <= 1'b0;
         outgoing_ip_hdr_valid_reg <= 1'b0;
-        outgoing_eth_dest_mac_reg <= 48'h000000000000;
     end else begin
         state_reg <= state_next;
 

ParseResult:
DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 000000000000
    HdlValueId: outgoing_eth_dest_mac_reg


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/ip.v
+++ b/rtl/ip.v
@@ -327,8 +326,9 @@ always @(posedge clk) begin
         input_ip_hdr_ready_reg <= input_ip_hdr_ready_next;
 
         outgoing_ip_hdr_valid_reg <= outgoing_ip_hdr_valid_next;
-        outgoing_eth_dest_mac_reg <= outgoing_eth_dest_mac_next;
     end
+
+    outgoing_eth_dest_mac_reg <= outgoing_eth_dest_mac_next;
 end
 
 endmodule
ParseResult:
MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: outgoing_eth_dest_mac_next
    HdlValueId: outgoing_eth_dest_mac_reg


CommitId: 9891d75c2f646bac2dc1bf700661647d34c31865
Fix STATE_WAIT_END
--- a/rtl/axis_baser_tx_64.v
+++ b/rtl/axis_baser_tx_64.v
@@ -664,8 +664,10 @@ always @* begin
         end
         STATE_WAIT_END: begin
             // wait for end of frame
-            if (ifg_count_reg > 8'd8) begin
-                ifg_count_next = ifg_count_reg - 8'd8;
+            s_axis_tready_next = 1'b1;
+
+            if (ifg_count_reg > 8'd4) begin
+                ifg_count_next = ifg_count_reg - 8'd4;
             end else begin
                 ifg_count_next = 8'd0;
             end

ParseResult:
UPD HdlStmCase@@state_reg to state_reg
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: s_axis_tready_next
                HdlValueInt: 1

UPD HdlStmIf@@ to 
    UPD HdlOp@@GT to GT
        UPD HdlValueInt@@8 to 4
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@SUB to SUB
                UPD HdlValueInt@@8 to 4


CommitId: 9891d75c2f646bac2dc1bf700661647d34c31865
Fix STATE_WAIT_END
--- a/rtl/axis_baser_tx_64.v
+++ b/rtl/axis_baser_tx_64.v
@@ -674,6 +676,8 @@ always @* begin
 
             if (s_axis_tvalid) begin
                 if (s_axis_tlast) begin
+                    s_axis_tready_next = 1'b0;
+
                     if (ENABLE_DIC) begin
                         if (ifg_count_next > 8'd7) begin
                             state_next = STATE_IFG;
ParseResult:
UPD HdlStmCase@@state_reg to state_reg
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: s_axis_tready_next
                HdlValueInt: 1

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: s_axis_tready_next
                HdlValueInt: 0


CommitId: 51b5335318c83e2662a0edb768b05ac7cbcd6603
Remove z from default states for FSM inference
--- a/rtl/arp_eth_rx_64.v
+++ b/rtl/arp_eth_rx_64.v
@@ -158,7 +158,7 @@ assign error_header_early_termination = error_header_early_termination_reg;
 assign error_invalid_header = error_invalid_header_reg;
 
 always @* begin
-    state_next = 2'bz;
+    state_next = STATE_IDLE;
 
     input_eth_hdr_ready_next = 0;
     input_eth_payload_tready_next = 0;
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueId@@STATE_IDLE to ops

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            DEL HdlValueInt@@z from ops


CommitId: 51b5335318c83e2662a0edb768b05ac7cbcd6603
Remove z from default states for FSM inference
--- a/rtl/ip_eth_tx.v
+++ b/rtl/ip_eth_tx.v
@@ -180,7 +180,7 @@ function [15:0] add1c16b;
 endfunction
 
 always @* begin
-    state_next = 2'bz;
+    state_next = STATE_IDLE;
 
     input_ip_hdr_ready_next = 0;
     input_ip_payload_tready_next = 0;
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueId@@STATE_IDLE to ops

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            DEL HdlValueInt@@z from ops


CommitId: 0efb135b7a5feb228734b651647bf1ad5219b79a
Fix STATE_WAIT_END
--- a/rtl/axis_xgmii_tx_32.v
+++ b/rtl/axis_xgmii_tx_32.v
@@ -482,8 +482,10 @@ always @* begin
         end
         STATE_WAIT_END: begin
             // wait for end of frame
-            if (ifg_count_reg > 8'd8) begin
-                ifg_count_next = ifg_count_reg - 8'd8;
+            s_axis_tready_next = 1'b1;
+
+            if (ifg_count_reg > 8'd4) begin
+                ifg_count_next = ifg_count_reg - 8'd4;
             end else begin
                 ifg_count_next = 8'd0;
             end

ParseResult:
UPD HdlStmCase@@state_reg to state_reg
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: s_axis_tready_next
                HdlValueInt: 1

UPD HdlStmIf@@ to 
    UPD HdlOp@@GT to GT
        UPD HdlValueInt@@8 to 4
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@SUB to SUB
                UPD HdlValueInt@@8 to 4


CommitId: 0efb135b7a5feb228734b651647bf1ad5219b79a
Fix STATE_WAIT_END
--- a/rtl/axis_xgmii_tx_32.v
+++ b/rtl/axis_xgmii_tx_32.v
@@ -492,6 +494,8 @@ always @* begin
 
             if (s_axis_tvalid) begin
                 if (s_axis_tlast) begin
+                    s_axis_tready_next = 1'b0;
+
                     if (ENABLE_DIC) begin
                         if (ifg_count_next > 8'd3) begin
                             state_next = STATE_IFG;
ParseResult:
UPD HdlStmCase@@state_reg to state_reg
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: s_axis_tready_next
                HdlValueInt: 1

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: s_axis_tready_next
                HdlValueInt: 0


CommitId: 6b85aed564a7a3667e630d2c6eac84ea9f54f3d7
Any control characters in packet considered an error
--- a/rtl/axis_xgmii_rx_64.v
+++ b/rtl/axis_xgmii_rx_64.v
@@ -307,8 +307,8 @@ always @* begin
 
             if (xgmii_rxc_d1[0] && xgmii_rxd_d1[7:0] == XGMII_START) begin
                 // start condition
-                if (detect_error_masked) begin
-                    // error in first data word
+                if (control_masked) begin
+                    // control or error characters in first data word
                     m_axis_tdata_next = 64'd0;
                     m_axis_tkeep_next = 8'h01;
                     m_axis_tvalid_next = 1'b1;
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlValueId@@detect_error_masked to control_masked


CommitId: 0fc986041e9a936aaa3c21c0d54c2a669316995b
Fix example design LED logic
--- a/example/ATLYS/fpga/rtl/fpga_core.v
+++ b/example/ATLYS/fpga/rtl/fpga_core.v
@@ -304,9 +304,14 @@ always @(posedge clk) begin
     if (rst) begin
         led_reg <= 0;
     end else begin
-        valid_last <= tx_udp_payload_tvalid;
-        if (tx_udp_payload_tvalid & ~valid_last) begin
-            led_reg <= tx_udp_payload_tdata;
+        if (tx_udp_payload_tvalid) begin
+            if (~valid_last) begin
+                led_reg <= tx_udp_payload_tdata;
+                valid_last <= 1'b1;
+            end
+            if (tx_udp_payload_tlast) begin
+                valid_last <= 1'b0;
+            end
         end
     end
 end
ParseResult:
UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

INS HdlStmIf@@ to body

UPD HdlStmAssign@@ to 
    MOV HdlValueId@@tx_udp_payload_tvalid to 
    HdlValueId: tx_udp_payload_tvalid
    DEL HdlValueId@@valid_last from 

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueId: tx_udp_payload_tvalid
                HdlValueId: valid_last
            HdlStmIf
                HdlOp: AND
                    list: ops
                        HdlValueId: tx_udp_payload_tvalid
                        HdlOp: NEG
                            list: ops
                                HdlValueId: valid_last
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueId: tx_udp_payload_tdata
                            HdlValueId: led_reg
                list: elifs

UPD HdlStmIf@@ to 
    INS list@@elifs to 

INS HdlStmIf@@ to body
HdlStmIf
    HdlValueId: tx_udp_payload_tlast
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: valid_last
    list: elifs

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND to AND
        MOV HdlOp@@NEG to ops
        HdlOp: NEG
            list: ops
                HdlValueId: valid_last
        DEL HdlValueId@@tx_udp_payload_tvalid from ops
        DEL list@@ops from AND
    DEL HdlOp@@AND from 

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 1
    HdlValueId: valid_last

DEL HdlStmAssign@@ from body


CommitId: 23b9490fac0bc12fba050bad9d26f85789b1fbea
Fix switch bug
--- a/rtl/axis_switch.v
+++ b/rtl/axis_switch.v
@@ -171,7 +171,7 @@ generate
     for (m = 0; m < S_COUNT; m = m + 1) begin : s_ifaces
 
         // decoding
-        reg [CL_S_COUNT-1:0] select_reg = 0, select_next;
+        reg [CL_M_COUNT-1:0] select_reg = 0, select_next;
         reg drop_reg = 1'b0, drop_next;
         reg select_valid_reg = 1'b0, select_valid_next;
 
ParseResult:
UPD HdlIdDef@@select_reg to select_reg
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlOp@@SUB to SUB
                UPD HdlValueId@@CL_S_COUNT to CL_M_COUNT

UPD HdlIdDef@@select_next to select_next
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlOp@@SUB to SUB
                UPD HdlValueId@@CL_S_COUNT to CL_M_COUNT


CommitId: 0691c9d61b102cdbb3ed73a449786ba096d86a08
Fix output pipeline issue
--- a/rtl/axis_fifo.v
+++ b/rtl/axis_fifo.v
@@ -127,7 +127,7 @@ always @* begin
 
     mem_read_data_valid_next = mem_read_data_valid_reg;
 
-    if (output_axis_tready | ~output_axis_tvalid) begin
+    if (store_output | ~mem_read_data_valid_reg) begin
         // output data not valid OR currently being transferred
         if (~empty) begin
             // not empty, perform read
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@OR to OR
        UPD HdlValueId@@output_axis_tready to store_output
        UPD HdlOp@@NEG to NEG
            UPD HdlValueId@@output_axis_tvalid to mem_read_data_valid_reg


CommitId: 51b5335318c83e2662a0edb768b05ac7cbcd6603
Remove z from default states for FSM inference
--- a/rtl/udp_ip_rx_64.v
+++ b/rtl/udp_ip_rx_64.v
@@ -256,7 +256,7 @@ function [7:0] count2keep;
 endfunction
 
 always @* begin
-    state_next = 2'bz;
+    state_next = STATE_IDLE;
 
     input_ip_hdr_ready_next = 0;
     input_ip_payload_tready_next = 0;
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueId@@STATE_IDLE to ops

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            DEL HdlValueInt@@z from ops


CommitId: 585ccefa1534cba00ee915f54baf491a0b49df82
Add TX underflow error signal
--- a/rtl/eth_mac_1g_rgmii.v
+++ b/rtl/eth_mac_1g_rgmii.v
@@ -86,6 +86,7 @@ module eth_mac_1g_rgmii #
     /*
      * Status
      */
+    output wire        tx_error_underflow,
     output wire        rx_error_bad_frame,
     output wire        rx_error_bad_fcs,
     output wire [1:0]  speed,

ParseResult:
INS HdlIdDef@@tx_error_underflow to ports
HdlIdDef: tx_error_underflow
    HdlDirection: OUT


CommitId: 2794c315e840562a1facdb87b4bb34740928cfc5
Fix synthesizer complaints
--- a/rtl/axis_xgmii_tx_64.v
+++ b/rtl/axis_xgmii_tx_64.v
@@ -479,10 +479,10 @@ always @* begin
                     // need to send more idles - swap lanes
                     swap_lanes = 1'b1;
                     if (PTP_TS_WIDTH == 96) begin
-                        m_axis_ptp_ts_next[45:0] <= ptp_ts[45:0] + (PTP_PERIOD_NS * 2**16 + PTP_PERIOD_FNS) * 1.5;
+                        m_axis_ptp_ts_next[45:0] <= ptp_ts[45:0] + (((PTP_PERIOD_NS * 2**16 + PTP_PERIOD_FNS) * 3) >> 1);
                         m_axis_ptp_ts_next[95:48] <= ptp_ts[95:48];
                     end else begin
-                        m_axis_ptp_ts_next = ptp_ts + (PTP_PERIOD_NS * 2**16 + PTP_PERIOD_FNS) * 1.5;
+                        m_axis_ptp_ts_next = ptp_ts + (((PTP_PERIOD_NS * 2**16 + PTP_PERIOD_FNS) * 3) >> 1);
                     end
                     m_axis_ptp_ts_tag_next = s_axis_tuser >> 1;
                     m_axis_ptp_ts_valid_int_next = 1'b1;
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        INS HdlOp@@ASSIGN to body
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueId@@m_axis_ptp_ts_next to ops
            UPD HdlOp@@ADD to ADD
                UPD HdlOp@@SRL to SRL
                    INS HdlValueInt@@1 to ops
                    UPD HdlOp@@MUL to MUL
                        INS HdlValueInt@@3 to ops

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD list@@body to ops
        MOV list@@body to SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: m_axis_ptp_ts_next
                    HdlOp: ADD
                        list: ops
                            HdlValueId: ptp_ts
                            HdlOp: MUL
                                list: ops
                                    HdlOp: ADD
                                        list: ops
                                            HdlOp: MUL
                                                list: ops
                                                    HdlValueId: PTP_PERIOD_NS
                                                    HdlOp: POW
                                                        list: ops
                                                            HdlValueInt: 2
                                                            HdlValueInt: 16
                                            HdlValueId: PTP_PERIOD_FNS
                                    float
        UPD HdlOp@@ASSIGN to ADD
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@m_axis_ptp_ts_next to ptp_ts
            UPD HdlOp@@ADD to SRL
            UPD HdlOp@@ADD to ADD
                DEL HdlValueId@@ptp_ts from ops
                UPD HdlOp@@MUL to MUL
                    DEL float@@ from ops

UPD HdlStmAssign@@ to 
    UPD HdlOp@@ADD to ADD
        INS HdlOp@@SRL to ops
        UPD HdlOp@@SRL to SRL
            INS list@@ops to SRL
            INS HdlValueInt@@1 to ops
            UPD HdlOp@@MUL to MUL
                INS HdlValueInt@@3 to ops

UPD HdlStmAssign@@ to 
    UPD HdlOp@@ADD to ADD
        MOV HdlOp@@MUL to ops
        HdlOp: MUL
            list: ops
                HdlOp: ADD
                    list: ops
                        HdlOp: MUL
                            list: ops
                                HdlValueId: PTP_PERIOD_NS
                                HdlOp: POW
                                    list: ops
                                        HdlValueInt: 2
                                        HdlValueInt: 16
                        HdlValueId: PTP_PERIOD_FNS
                float
        UPD HdlOp@@MUL to MUL
            DEL float@@ from ops


CommitId: 2abb41385468e91f52f5ea5916390660ce03c009
Fix signal name
--- a/example/KC705/fpga_gmii/rtl/fpga.v
+++ b/example/KC705/fpga_gmii/rtl/fpga.v
@@ -80,7 +80,7 @@ wire clk_200mhz_bufg;
 wire clk_200mhz_mmcm_out;
 
 // Internal 125 MHz clock
-wire clk_200mhz_int;
+wire clk_int;
 wire rst_int;   
 
 wire mmcm_rst = reset;
ParseResult:
UPD HdlIdDef@@clk_200mhz_int to clk_int


CommitId: bfc97ac311c0ffb9e757b319645e507925d85c5e
Fix error detect in 1G MAC
--- a/rtl/eth_mac_1g_rx.v
+++ b/rtl/eth_mac_1g_rx.v
@@ -143,7 +143,7 @@ always @* begin
             output_axis_tdata_next = gmii_rxd_d4;
             output_axis_tvalid_next = 1;
 
-            if (gmii_rx_dv & gmii_rx_er) begin
+            if (gmii_rx_dv_d4 & gmii_rx_er_d4) begin
                 // error
                 output_axis_tlast_next = 1;
                 output_axis_tuser_next = 1;

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@AND to AND
        UPD HdlValueId@@gmii_rx_dv to gmii_rx_dv_d4
        UPD HdlValueId@@gmii_rx_er to gmii_rx_er_d4


CommitId: bfc97ac311c0ffb9e757b319645e507925d85c5e
Fix error detect in 1G MAC
--- a/rtl/eth_mac_1g_rx.v
+++ b/rtl/eth_mac_1g_rx.v
@@ -152,7 +152,11 @@ always @* begin
             end else if (~gmii_rx_dv) begin
                 // end of packet
                 output_axis_tlast_next = 1;
-                if ({gmii_rxd_d0, gmii_rxd_d1, gmii_rxd_d2, gmii_rxd_d3} == ~crc_next) begin
+                if (gmii_rx_er_d0 | gmii_rx_er_d1 | gmii_rx_er_d2 | gmii_rx_er_d3) begin
+                    // error received in FCS bytes
+                    output_axis_tuser_next = 1;
+                    error_bad_frame_next = 1;
+                end else if ({gmii_rxd_d0, gmii_rxd_d1, gmii_rxd_d2, gmii_rxd_d3} == ~crc_next) begin
                     // FCS good
                     output_axis_tuser_next = 0;
                 end else begin
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@AND to AND
        UPD HdlValueId@@gmii_rx_dv to gmii_rx_dv_d4
        UPD HdlValueId@@gmii_rx_er to gmii_rx_er_d4

UPD HdlStmIf@@ to 
    INS HdlOp@@OR to 
    HdlOp: OR
        list: ops
            HdlOp: OR
                list: ops
                    HdlOp: OR
                        list: ops
                            HdlValueId: gmii_rx_er_d0
                            HdlValueId: gmii_rx_er_d1
                    HdlValueId: gmii_rx_er_d2
            HdlValueId: gmii_rx_er_d3
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: output_axis_tuser_next
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: error_bad_frame_next
                    HdlValueInt: 1
    INS list@@elifs to 
    INS tuple@@ to elifs

UPD HdlStmIf@@ to 
    MOV HdlOp@@EQ to 
    HdlOp: EQ
        list: ops
            HdlOp: CONCAT
                list: ops
                    HdlOp: CONCAT
                        list: ops
                            HdlOp: CONCAT
                                list: ops
                                    HdlValueId: gmii_rxd_d0
                                    HdlValueId: gmii_rxd_d1
                            HdlValueId: gmii_rxd_d2
                    HdlValueId: gmii_rxd_d3
            HdlOp: NEG
                list: ops
                    HdlValueId: crc_next
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: output_axis_tuser_next
                    HdlValueInt: 0
    DEL list@@elifs from 


CommitId: 85d11645eb5af7f9dcba37417b121315ca18e4d7
Rename frame_error to error_header_early_termination
--- a/rtl/eth_axis_rx.v
+++ b/rtl/eth_axis_rx.v
@@ -61,7 +61,7 @@ module eth_axis_rx
      * Status signals
      */
     output wire        busy,
-    output wire        frame_error
+    output wire        error_header_early_termination
 );
 
 /*

ParseResult:
UPD HdlIdDef@@frame_error to error_header_early_termination


CommitId: 85d11645eb5af7f9dcba37417b121315ca18e4d7
Rename frame_error to error_header_early_termination
--- a/rtl/eth_axis_rx.v
+++ b/rtl/eth_axis_rx.v
@@ -123,7 +123,7 @@ reg output_eth_payload_tlast_reg = 0;
 reg output_eth_payload_tuser_reg = 0;
 
 reg busy_reg = 0, busy_next;
-reg frame_error_reg = 0, frame_error_next;
+reg error_header_early_termination_reg = 0, error_header_early_termination_next;
 
 reg [7:0] temp_eth_payload_tdata_reg = 0;
 reg temp_eth_payload_tlast_reg = 0;

ParseResult:
UPD HdlIdDef@@frame_error_reg to error_header_early_termination_reg

UPD HdlIdDef@@frame_error_next to error_header_early_termination_next


CommitId: 85d11645eb5af7f9dcba37417b121315ca18e4d7
Rename frame_error to error_header_early_termination
--- a/rtl/eth_axis_rx.v
+++ b/rtl/eth_axis_rx.v
@@ -141,7 +141,7 @@ assign output_eth_payload_tlast = output_eth_payload_tlast_reg;
 assign output_eth_payload_tuser = output_eth_payload_tuser_reg;
 
 assign busy = busy_reg;
-assign frame_error = frame_error_reg;
+assign error_header_early_termination = error_header_early_termination_reg;
 
 always @* begin
     state_next = 2'bz;

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: error_header_early_termination_reg
    HdlValueId: error_header_early_termination

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@frame_error_next to error_header_early_termination_next

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: frame_error_reg
    HdlValueId: frame_error


CommitId: 85d11645eb5af7f9dcba37417b121315ca18e4d7
Rename frame_error to error_header_early_termination
--- a/rtl/eth_axis_rx.v
+++ b/rtl/eth_axis_rx.v
@@ -169,7 +169,7 @@ always @* begin
 
     output_eth_hdr_valid_next = output_eth_hdr_valid_reg & ~output_eth_hdr_ready;
 
-    frame_error_next = 0;
+    error_header_early_termination_next = 0;
 
     case (state_reg)
         STATE_IDLE: begin

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@frame_error_next to error_header_early_termination_next


CommitId: 85d11645eb5af7f9dcba37417b121315ca18e4d7
Rename frame_error to error_header_early_termination
--- a/rtl/eth_axis_rx.v
+++ b/rtl/eth_axis_rx.v
@@ -212,7 +212,7 @@ always @* begin
                 endcase
                 if (input_axis_tlast) begin
                     state_next = STATE_IDLE;
-                    frame_error_next = 1;
+                    error_header_early_termination_next = 1;
                 end
             end else begin
                 state_next = STATE_READ_HEADER;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@frame_error_next to error_header_early_termination_next

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@frame_error_next to error_header_early_termination_next


CommitId: 85d11645eb5af7f9dcba37417b121315ca18e4d7
Rename frame_error to error_header_early_termination
--- a/rtl/eth_axis_rx.v
+++ b/rtl/eth_axis_rx.v
@@ -296,7 +296,7 @@ always @(posedge clk or posedge rst) begin
         temp_eth_payload_tlast_reg <= 0;
         temp_eth_payload_tuser_reg <= 0;
         busy_reg <= 0;
-        frame_error_reg <= 0;
+        error_header_early_termination_reg <= 0;
     end else begin
         state_reg <= state_next;
 

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlValueId@@frame_error_reg to error_header_early_termination_reg


CommitId: 85d11645eb5af7f9dcba37417b121315ca18e4d7
Rename frame_error to error_header_early_termination
--- a/rtl/eth_axis_rx.v
+++ b/rtl/eth_axis_rx.v
@@ -304,7 +304,7 @@ always @(posedge clk or posedge rst) begin
 
         output_eth_hdr_valid_reg <= output_eth_hdr_valid_next;
 
-        frame_error_reg <= frame_error_next;
+        error_header_early_termination_reg <= error_header_early_termination_next;
 
         busy_reg <= state_next != STATE_IDLE;
 
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlValueId@@frame_error_next to error_header_early_termination_next
    UPD HdlValueId@@frame_error_reg to error_header_early_termination_reg


CommitId: 51b5335318c83e2662a0edb768b05ac7cbcd6603
Remove z from default states for FSM inference
--- a/rtl/ip_eth_tx_64.v
+++ b/rtl/ip_eth_tx_64.v
@@ -245,7 +245,7 @@ always @* begin
 end
 
 always @* begin
-    state_next = 2'bz;
+    state_next = STATE_IDLE;
 
     input_ip_hdr_ready_next = 0;
     input_ip_payload_tready_next = 0;
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: state_next
                HdlValueId: STATE_IDLE

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: state_next
                HdlValueInt: z


CommitId: 839ea23ac4166fd790fbb61a21bf1fcfcdb806ec
Fix arb mux header backpressure
--- a/rtl/eth_arb_mux.v
+++ b/rtl/eth_arb_mux.v
@@ -89,7 +89,7 @@ parameter CL_S_COUNT = $clog2(S_COUNT);
 
 reg frame_reg = 1'b0, frame_next;
 
-reg s_eth_hdr_ready_mask_reg = 1'b0, s_eth_hdr_ready_mask_next;
+reg [S_COUNT-1:0] s_eth_hdr_ready_reg = {S_COUNT{1'b0}}, s_eth_hdr_ready_next;
 
 reg m_eth_hdr_valid_reg = 1'b0, m_eth_hdr_valid_next;
 reg [47:0] m_eth_dest_mac_reg = 48'd0, m_eth_dest_mac_next;

ParseResult:
INS HdlIdDef@@s_eth_hdr_ready_reg to objs
HdlIdDef: s_eth_hdr_ready_reg
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: S_COUNT
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlOp: REPL_CONCAT
        list: ops
            HdlValueId: S_COUNT
            HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@s_eth_hdr_ready_next to objs
HdlIdDef: s_eth_hdr_ready_next
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: S_COUNT
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@s_eth_hdr_ready_mask_reg from objs
HdlIdDef: s_eth_hdr_ready_mask_reg
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@s_eth_hdr_ready_mask_next from objs
HdlIdDef: s_eth_hdr_ready_mask_next
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL


CommitId: 839ea23ac4166fd790fbb61a21bf1fcfcdb806ec
Fix arb mux header backpressure
--- a/rtl/eth_arb_mux.v
+++ b/rtl/eth_arb_mux.v
@@ -113,7 +113,7 @@ reg  [DEST_WIDTH-1:0] m_eth_payload_axis_tdest_int;
 reg  [USER_WIDTH-1:0] m_eth_payload_axis_tuser_int;
 wire                  m_eth_payload_axis_tready_int_early;
 
-assign s_eth_hdr_ready = (!s_eth_hdr_ready_mask_reg && grant_valid) << grant_encoded;
+assign s_eth_hdr_ready = s_eth_hdr_ready_reg;
 
 assign s_eth_payload_axis_tready = (m_eth_payload_axis_tready_int_reg && grant_valid) << grant_encoded;
 

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: s_eth_hdr_ready_reg
    HdlValueId: s_eth_hdr_ready

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: SLL
        list: ops
            HdlOp: AND_LOG
                list: ops
                    HdlOp: NEG_LOG
                        list: ops
                            HdlValueId: s_eth_hdr_ready_mask_reg
                    HdlValueId: grant_valid
            HdlValueId: grant_encoded
    HdlValueId: s_eth_hdr_ready


CommitId: 839ea23ac4166fd790fbb61a21bf1fcfcdb806ec
Fix arb mux header backpressure
--- a/rtl/eth_arb_mux.v
+++ b/rtl/eth_arb_mux.v
@@ -155,7 +155,7 @@ assign acknowledge = grant & s_eth_payload_axis_tvalid & s_eth_payload_axis_trea
 always @* begin
     frame_next = frame_reg;
 
-    s_eth_hdr_ready_mask_next = s_eth_hdr_ready_mask_reg;
+    s_eth_hdr_ready_next = {S_COUNT{1'b0}};
 
     m_eth_hdr_valid_next = m_eth_hdr_valid_reg && !m_eth_hdr_ready;
     m_eth_dest_mac_next = m_eth_dest_mac_reg;

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@s_eth_hdr_ready_mask_next to s_eth_hdr_ready_next
            UPD HdlValueId@@s_eth_hdr_ready_mask_reg to S_COUNT
            MOV HdlValueId@@s_eth_hdr_ready_mask_reg to ops
            HdlValueId: s_eth_hdr_ready_mask_reg

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@REPL_CONCAT to ops
            UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                INS list@@ops to REPL_CONCAT
                INS HdlValueInt@@0 to ops


CommitId: 839ea23ac4166fd790fbb61a21bf1fcfcdb806ec
Fix arb mux header backpressure
--- a/rtl/eth_arb_mux.v
+++ b/rtl/eth_arb_mux.v
@@ -166,15 +166,14 @@ always @* begin
         // end of frame detection
         if (s_eth_payload_axis_tlast[grant_encoded]) begin
             frame_next = 1'b0;
-            s_eth_hdr_ready_mask_next = 1'b0;
         end
     end
 
-    if (!frame_reg && grant_valid) begin
+    if (!frame_reg && grant_valid && (m_eth_hdr_ready || !m_eth_hdr_valid)) begin
         // start of frame
         frame_next = 1'b1;
 
-        s_eth_hdr_ready_mask_next = 1'b1;
+        s_eth_hdr_ready_next = grant;
 
         m_eth_hdr_valid_next = 1'b1;
         m_eth_dest_mac_next = s_eth_dest_mac[grant_encoded*48 +: 48];

ParseResult:
UPD HdlStmIf@@ to 
    INS HdlOp@@AND_LOG to 
    UPD HdlOp@@AND_LOG to AND_LOG
        INS list@@ops to AND_LOG
        INS HdlOp@@OR_LOG to ops
        HdlOp: OR_LOG
            list: ops
                HdlValueId: m_eth_hdr_ready
                HdlOp: NEG_LOG
                    list: ops
                        HdlValueId: m_eth_hdr_valid
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueId@@grant to ops

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@s_eth_hdr_ready_mask_next to s_eth_hdr_ready_next
            UPD HdlValueId@@s_eth_hdr_ready_mask_reg to S_COUNT
            MOV HdlValueId@@s_eth_hdr_ready_mask_reg to ops
            HdlValueId: s_eth_hdr_ready_mask_reg

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@REPL_CONCAT to ops
            UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                INS list@@ops to REPL_CONCAT
                INS HdlValueInt@@0 to ops

UPD HdlStmIf@@ to 
    MOV HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlOp: NEG_LOG
                list: ops
                    HdlValueId: frame_reg
            HdlValueId: grant_valid
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@s_eth_hdr_ready_mask_next to s_eth_hdr_ready_next
            DEL HdlValueInt@@1 from ops

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: s_eth_hdr_ready_mask_next
                HdlValueInt: 0


CommitId: 839ea23ac4166fd790fbb61a21bf1fcfcdb806ec
Fix arb mux header backpressure
--- a/rtl/eth_arb_mux.v
+++ b/rtl/eth_arb_mux.v
@@ -193,19 +192,20 @@ always @* begin
 end
 
 always @(posedge clk) begin
-    if (rst) begin
-        frame_reg <= 1'b0;
-        s_eth_hdr_ready_mask_reg <= 1'b0;
-        m_eth_hdr_valid_reg <= 1'b0;
-    end else begin
-        frame_reg <= frame_next;
-        s_eth_hdr_ready_mask_reg <= s_eth_hdr_ready_mask_next;
-        m_eth_hdr_valid_reg <= m_eth_hdr_valid_next;
-    end
+    frame_reg <= frame_next;
+
+    s_eth_hdr_ready_reg <= s_eth_hdr_ready_next;
 
+    m_eth_hdr_valid_reg <= m_eth_hdr_valid_next;
     m_eth_dest_mac_reg <= m_eth_dest_mac_next;
     m_eth_src_mac_reg <= m_eth_src_mac_next;
     m_eth_type_reg <= m_eth_type_next;
+
+    if (rst) begin
+        frame_reg <= 1'b0;
+        s_eth_hdr_ready_reg <= {S_COUNT{1'b0}};
+        m_eth_hdr_valid_reg <= 1'b0;
+    end
 end
 
 // output datapath logic
ParseResult:
MOV HdlStmIf@@ to body
HdlStmIf
    HdlValueId: rst
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: frame_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: s_eth_hdr_ready_mask_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: m_eth_hdr_valid_reg
    list: elifs
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueId: frame_next
                HdlValueId: frame_reg
            HdlStmAssign
                HdlValueId: s_eth_hdr_ready_mask_next
                HdlValueId: s_eth_hdr_ready_mask_reg
            HdlStmAssign
                HdlValueId: m_eth_hdr_valid_next
                HdlValueId: m_eth_hdr_valid_reg

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: frame_next
    HdlValueId: frame_reg

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: s_eth_hdr_ready_mask_next
    HdlValueId: s_eth_hdr_ready_mask_reg

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: m_eth_hdr_valid_next
    HdlValueId: m_eth_hdr_valid_reg

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@s_eth_hdr_ready_mask_next to s_eth_hdr_ready_next
    UPD HdlValueId@@s_eth_hdr_ready_mask_reg to s_eth_hdr_ready_reg

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@s_eth_hdr_ready_mask_next to s_eth_hdr_ready_next
            UPD HdlValueId@@s_eth_hdr_ready_mask_reg to S_COUNT
            MOV HdlValueId@@s_eth_hdr_ready_mask_reg to ops
            HdlValueId: s_eth_hdr_ready_mask_reg

UPD HdlStmAssign@@ to 
    INS HdlOp@@REPL_CONCAT to 
    UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
        INS list@@ops to REPL_CONCAT
        INS HdlValueId@@S_COUNT to ops

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@s_eth_hdr_ready_mask_reg to s_eth_hdr_ready_reg
    MOV HdlValueInt@@0 to 
    HdlValueInt: 0

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 


CommitId: 0691c9d61b102cdbb3ed73a449786ba096d86a08
Fix output pipeline issue
--- a/rtl/axis_frame_fifo_64.v
+++ b/rtl/axis_frame_fifo_64.v
@@ -192,7 +192,7 @@ always @* begin
 
     mem_read_data_valid_next = mem_read_data_valid_reg;
 
-    if (output_axis_tready | ~output_axis_tvalid) begin
+    if (store_output | ~mem_read_data_valid_reg) begin
         // output data not valid OR currently being transferred
         if (~empty) begin
             // not empty, perform read
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@OR to OR
        UPD HdlValueId@@output_axis_tready to store_output
        UPD HdlOp@@NEG to NEG
            UPD HdlValueId@@output_axis_tvalid to mem_read_data_valid_reg


CommitId: 585ccefa1534cba00ee915f54baf491a0b49df82
Add TX underflow error signal
--- a/rtl/eth_mac_1g_rgmii_fifo.v
+++ b/rtl/eth_mac_1g_rgmii_fifo.v
@@ -93,6 +93,7 @@ module eth_mac_1g_rgmii_fifo #
     /*
      * Status
      */
+    output wire        tx_error_underflow,
     output wire        tx_fifo_overflow,
     output wire        tx_fifo_bad_frame,
     output wire        tx_fifo_good_frame,

ParseResult:
INS HdlIdDef@@tx_error_underflow to ports
HdlIdDef: tx_error_underflow
    HdlDirection: OUT


CommitId: 0691c9d61b102cdbb3ed73a449786ba096d86a08
Fix output pipeline issue
--- a/rtl/axis_async_fifo.v
+++ b/rtl/axis_async_fifo.v
@@ -198,7 +198,7 @@ always @* begin
 
     mem_read_data_valid_next = mem_read_data_valid_reg;
 
-    if (output_axis_tready | ~output_axis_tvalid) begin
+    if (store_output | ~mem_read_data_valid_reg) begin
         // output data not valid OR currently being transferred
         if (~empty) begin
             // not empty, perform read
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@OR to OR
        UPD HdlValueId@@output_axis_tready to store_output
        UPD HdlOp@@NEG to NEG
            UPD HdlValueId@@output_axis_tvalid to mem_read_data_valid_reg


CommitId: 385c9cc90ade29878d45e6634e2c70ce85d6d6d5
Fix Vivado block RAM inference
--- a/rtl/axis_fifo_64.v
+++ b/rtl/axis_fifo_64.v
@@ -64,12 +64,10 @@ reg [ADDR_WIDTH:0] wr_ptr_reg = {ADDR_WIDTH+1{1'b0}}, wr_ptr_next;
 reg [ADDR_WIDTH:0] rd_ptr_reg = {ADDR_WIDTH+1{1'b0}}, rd_ptr_next;
 
 reg [DATA_WIDTH+KEEP_WIDTH+2-1:0] mem[(2**ADDR_WIDTH)-1:0];
+reg [DATA_WIDTH+KEEP_WIDTH+2-1:0] mem_read_data_reg = {DATA_WIDTH+2{1'b0}};
+wire [DATA_WIDTH+KEEP_WIDTH+2-1:0] mem_write_data;
 
-reg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};
-reg [KEEP_WIDTH-1:0] output_axis_tkeep_reg = {KEEP_WIDTH{1'b0}};
 reg output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;
-reg output_axis_tlast_reg = 1'b0;
-reg output_axis_tuser_reg = 1'b0;
 
 // full when first MSB different but rest same
 wire full = ((wr_ptr_reg[ADDR_WIDTH] != rd_ptr_reg[ADDR_WIDTH]) &&

ParseResult:
UPD HdlIdDef@@output_axis_tdata_reg to mem_read_data_reg

UPD HdlIdDef@@output_axis_tkeep_reg to mem_write_data

UPD HdlIdDef@@mem_read_data_reg to mem_read_data_reg
    UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
        INS HdlOp@@ADD to ops
        UPD HdlOp@@ADD to ADD
            INS list@@ops to ADD
            INS HdlValueInt@@2 to ops
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlOp@@SUB to SUB
                INS HdlOp@@ADD to ops
                UPD HdlOp@@ADD to ADD
                    INS list@@ops to ADD
                    INS HdlOp@@ADD to ops
                    INS HdlValueInt@@2 to ops
                    UPD HdlOp@@ADD to ADD
                        INS list@@ops to ADD
                        INS HdlValueId@@KEEP_WIDTH to ops

UPD HdlIdDef@@output_axis_tkeep_reg to output_axis_tkeep_reg
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlValueId@@reg to wire
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlOp@@SUB to SUB
                MOV HdlValueId@@KEEP_WIDTH to ops
                HdlValueId: KEEP_WIDTH
    DEL HdlOp@@REPL_CONCAT from output_axis_tkeep_reg
    HdlOp: REPL_CONCAT
        list: ops
            HdlValueId: KEEP_WIDTH
            HdlValueInt: 0

UPD HdlIdDef@@output_axis_tdata_reg to output_axis_tdata_reg
    UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
        MOV HdlValueId@@DATA_WIDTH to ops
        HdlValueId: DATA_WIDTH
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlOp@@SUB to SUB
                MOV HdlValueId@@DATA_WIDTH to ops
                HdlValueId: DATA_WIDTH

UPD HdlIdDef@@mem_write_data to mem_write_data
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlOp@@SUB to SUB
                INS HdlOp@@ADD to ops
                UPD HdlOp@@ADD to ADD
                    INS list@@ops to ADD
                    INS HdlOp@@ADD to ops
                    INS HdlValueInt@@2 to ops
                    UPD HdlOp@@ADD to ADD
                        INS list@@ops to ADD
                        INS HdlValueId@@DATA_WIDTH to ops

DEL HdlIdDef@@output_axis_tlast_reg from objs
HdlIdDef: output_axis_tlast_reg
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@output_axis_tuser_reg from objs
HdlIdDef: output_axis_tuser_reg
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 385c9cc90ade29878d45e6634e2c70ce85d6d6d5
Fix Vivado block RAM inference
--- a/rtl/axis_fifo_64.v
+++ b/rtl/axis_fifo_64.v
@@ -83,11 +81,10 @@ reg read;
 
 assign input_axis_tready = ~full;
 
-assign output_axis_tdata = output_axis_tdata_reg;
-assign output_axis_tkeep = output_axis_tkeep_reg;
 assign output_axis_tvalid = output_axis_tvalid_reg;
-assign output_axis_tlast = output_axis_tlast_reg;
-assign output_axis_tuser = output_axis_tuser_reg;
+
+assign mem_write_data = {input_axis_tlast, input_axis_tuser, input_axis_tkeep, input_axis_tdata};
+assign {output_axis_tlast, output_axis_tuser, output_axis_tkeep, output_axis_tdata} = mem_read_data_reg;
 
 // FIFO write logic
 always @* begin

ParseResult:
INS HdlStmAssign@@ to objs

INS HdlStmAssign@@ to objs

UPD HdlStmAssign@@ to 
    INS HdlValueId@@mem_write_data to 

UPD HdlStmAssign@@ to 
    INS HdlValueId@@mem_read_data_reg to 
    INS HdlOp@@CONCAT to 
    UPD HdlOp@@CONCAT to CONCAT
        INS list@@ops to CONCAT
        INS HdlOp@@CONCAT to ops
        UPD HdlOp@@CONCAT to CONCAT
            INS list@@ops to CONCAT
            INS HdlOp@@CONCAT to ops
            UPD HdlOp@@CONCAT to CONCAT
                INS list@@ops to CONCAT

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@output_axis_tuser to output_axis_tdata
    MOV HdlValueId@@output_axis_tuser to 
    HdlValueId: output_axis_tuser
    UPD HdlValueId@@output_axis_tuser_reg to output_axis_tkeep
    MOV HdlValueId@@output_axis_tuser_reg to 
    HdlValueId: output_axis_tuser_reg

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@output_axis_tlast_reg to output_axis_tlast
    MOV HdlValueId@@output_axis_tlast_reg to 
    HdlValueId: output_axis_tlast_reg
    UPD HdlValueId@@output_axis_tlast to output_axis_tuser
    MOV HdlValueId@@output_axis_tlast to 
    HdlValueId: output_axis_tlast

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: output_axis_tdata_reg
    HdlValueId: output_axis_tdata

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: output_axis_tkeep_reg
    HdlValueId: output_axis_tkeep

DEL HdlStmAssign@@ from objs

DEL HdlStmAssign@@ from objs


CommitId: 385c9cc90ade29878d45e6634e2c70ce85d6d6d5
Fix Vivado block RAM inference
--- a/rtl/axis_fifo_64.v
+++ b/rtl/axis_fifo_64.v
@@ -113,7 +110,7 @@ always @(posedge clk) begin
     end
 
     if (write) begin
-        mem[wr_ptr_reg[ADDR_WIDTH-1:0]] <= {input_axis_tlast, input_axis_tuser, input_axis_tkeep, input_axis_tdata};
+        mem[wr_ptr_reg[ADDR_WIDTH-1:0]] <= mem_write_data;
     end
 end
 

ParseResult:
UPD HdlStmAssign@@ to 
    MOV HdlOp@@CONCAT to 
    HdlOp: CONCAT
        list: ops
            HdlOp: CONCAT
                list: ops
                    HdlOp: CONCAT
                        list: ops
                            HdlValueId: input_axis_tlast
                            HdlValueId: input_axis_tuser
                    HdlValueId: input_axis_tkeep
            HdlValueId: input_axis_tdata

UPD HdlStmAssign@@ to 
    INS HdlValueId@@mem_write_data to 


CommitId: 385c9cc90ade29878d45e6634e2c70ce85d6d6d5
Fix Vivado block RAM inference
--- a/rtl/axis_fifo_64.v
+++ b/rtl/axis_fifo_64.v
@@ -149,7 +146,7 @@ always @(posedge clk) begin
     end
 
     if (read) begin
-        {output_axis_tlast_reg, output_axis_tuser_reg, output_axis_tkeep_reg, output_axis_tdata_reg} <= mem[rd_ptr_reg[ADDR_WIDTH-1:0]];
+        mem_read_data_reg <= mem[rd_ptr_reg[ADDR_WIDTH-1:0]];
     end
 end
 
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@output_axis_tdata_reg to mem_read_data_reg
        MOV HdlValueId@@output_axis_tdata_reg to ops
        HdlValueId: output_axis_tdata_reg
        DEL HdlOp@@CONCAT from ops
        HdlOp: CONCAT
            list: ops
                HdlOp: CONCAT
                    list: ops
                        HdlValueId: output_axis_tlast_reg
                        HdlValueId: output_axis_tuser_reg
                HdlValueId: output_axis_tkeep_reg
        DEL list@@ops from CONCAT
    DEL HdlOp@@CONCAT from 


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/arp_64.v
+++ b/rtl/arp_64.v
@@ -426,6 +412,14 @@ always @(posedge clk) begin
         arp_response_broadcast_reg <= arp_response_broadcast_next;
         drop_incoming_frame_reg <= drop_incoming_frame_next;
     end
+
+    outgoing_eth_dest_mac_reg <= outgoing_eth_dest_mac_next;
+    outgoing_arp_oper_reg <= outgoing_arp_oper_next;
+    outgoing_arp_tha_reg <= outgoing_arp_tha_next;
+    outgoing_arp_tpa_reg <= outgoing_arp_tpa_next;
+    cache_write_request_mac_reg <= cache_write_request_mac_next;
+    cache_write_request_ip_reg <= cache_write_request_ip_next;
+    arp_request_ip_reg <= arp_request_ip_next;
 end
 
 endmodule
ParseResult:
UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueId: outgoing_frame_valid_next
                HdlValueId: outgoing_frame_valid_reg
            HdlStmAssign
                HdlValueId: outgoing_eth_dest_mac_next
                HdlValueId: outgoing_eth_dest_mac_reg
            HdlStmAssign
                HdlValueId: outgoing_arp_oper_next
                HdlValueId: outgoing_arp_oper_reg
            HdlStmAssign
                HdlValueId: outgoing_arp_tha_next
                HdlValueId: outgoing_arp_tha_reg
            HdlStmAssign
                HdlValueId: outgoing_arp_tpa_next
                HdlValueId: outgoing_arp_tpa_reg
            HdlStmAssign
                HdlValueId: cache_write_request_valid_next
                HdlValueId: cache_write_request_valid_reg
            HdlStmAssign
                HdlValueId: cache_write_request_mac_next
                HdlValueId: cache_write_request_mac_reg
            HdlStmAssign
                HdlValueId: cache_write_request_ip_next
                HdlValueId: cache_write_request_ip_reg
            HdlStmAssign
                HdlValueId: arp_request_valid_next
                HdlValueId: arp_request_valid_reg
            HdlStmAssign
                HdlValueId: arp_request_ip_next
                HdlValueId: arp_request_ip_reg
            HdlStmAssign
                HdlValueId: arp_request_operation_next
                HdlValueId: arp_request_operation_reg
            HdlStmAssign
                HdlValueId: arp_request_retry_cnt_next
                HdlValueId: arp_request_retry_cnt_reg
            HdlStmAssign
                HdlValueId: arp_request_timer_next
                HdlValueId: arp_request_timer_reg
            HdlStmAssign
                HdlValueId: arp_response_error_next
                HdlValueId: arp_response_error_reg
            HdlStmAssign
                HdlValueId: arp_response_broadcast_next
                HdlValueId: arp_response_broadcast_reg
            HdlStmAssign
                HdlValueId: drop_incoming_frame_next
                HdlValueId: drop_incoming_frame_reg

MOV HdlStmIf@@ to body
HdlStmIf
    HdlValueId: rst
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: outgoing_frame_valid_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: outgoing_eth_dest_mac_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: outgoing_arp_oper_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: outgoing_arp_tha_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: outgoing_arp_tpa_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: cache_write_request_valid_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: cache_write_request_mac_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: cache_write_request_ip_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: arp_request_valid_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: arp_request_ip_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: arp_request_operation_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: arp_request_retry_cnt_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: arp_request_timer_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: arp_response_error_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: arp_response_broadcast_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: drop_incoming_frame_reg
    list: elifs
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueId: outgoing_frame_valid_next
                HdlValueId: outgoing_frame_valid_reg
            HdlStmAssign
                HdlValueId: outgoing_eth_dest_mac_next
                HdlValueId: outgoing_eth_dest_mac_reg
            HdlStmAssign
                HdlValueId: outgoing_arp_oper_next
                HdlValueId: outgoing_arp_oper_reg
            HdlStmAssign
                HdlValueId: outgoing_arp_tha_next
                HdlValueId: outgoing_arp_tha_reg
            HdlStmAssign
                HdlValueId: outgoing_arp_tpa_next
                HdlValueId: outgoing_arp_tpa_reg
            HdlStmAssign
                HdlValueId: cache_write_request_valid_next
                HdlValueId: cache_write_request_valid_reg
            HdlStmAssign
                HdlValueId: cache_write_request_mac_next
                HdlValueId: cache_write_request_mac_reg
            HdlStmAssign
                HdlValueId: cache_write_request_ip_next
                HdlValueId: cache_write_request_ip_reg
            HdlStmAssign
                HdlValueId: arp_request_valid_next
                HdlValueId: arp_request_valid_reg
            HdlStmAssign
                HdlValueId: arp_request_ip_next
                HdlValueId: arp_request_ip_reg
            HdlStmAssign
                HdlValueId: arp_request_operation_next
                HdlValueId: arp_request_operation_reg
            HdlStmAssign
                HdlValueId: arp_request_retry_cnt_next
                HdlValueId: arp_request_retry_cnt_reg
            HdlStmAssign
                HdlValueId: arp_request_timer_next
                HdlValueId: arp_request_timer_reg
            HdlStmAssign
                HdlValueId: arp_response_error_next
                HdlValueId: arp_response_error_reg
            HdlStmAssign
                HdlValueId: arp_response_broadcast_next
                HdlValueId: arp_response_broadcast_reg
            HdlStmAssign
                HdlValueId: drop_incoming_frame_next
                HdlValueId: drop_incoming_frame_reg

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: arp_response_broadcast_next
    HdlValueId: arp_response_broadcast_reg

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: drop_incoming_frame_next
    HdlValueId: drop_incoming_frame_reg

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 


CommitId: 85d11645eb5af7f9dcba37417b121315ca18e4d7
Rename frame_error to error_header_early_termination
--- a/rtl/arp_eth_rx.v
+++ b/rtl/arp_eth_rx.v
@@ -70,7 +70,7 @@ module arp_eth_rx
      * Status signals
      */
     output wire        busy,
-    output wire        frame_error
+    output wire        error_header_early_termination
 );
 
 /*

ParseResult:
UPD HdlIdDef@@frame_error to error_header_early_termination


CommitId: 85d11645eb5af7f9dcba37417b121315ca18e4d7
Rename frame_error to error_header_early_termination
--- a/rtl/arp_eth_rx.v
+++ b/rtl/arp_eth_rx.v
@@ -155,7 +155,7 @@ reg [47:0] output_arp_tha_reg = 0;
 reg [31:0] output_arp_tpa_reg = 0;
 
 reg busy_reg = 0;
-reg frame_error_reg = 0, frame_error_next;
+reg error_header_early_termination_reg = 0, error_header_early_termination_next;
 
 assign input_eth_hdr_ready = input_eth_hdr_ready_reg;
 assign input_eth_payload_tready = input_eth_payload_tready_reg;

ParseResult:
UPD HdlIdDef@@frame_error_reg to error_header_early_termination_reg

UPD HdlIdDef@@frame_error_next to error_header_early_termination_next


CommitId: 85d11645eb5af7f9dcba37417b121315ca18e4d7
Rename frame_error to error_header_early_termination
--- a/rtl/arp_eth_rx.v
+++ b/rtl/arp_eth_rx.v
@@ -175,7 +175,7 @@ assign output_arp_tha = output_arp_tha_reg;
 assign output_arp_tpa = output_arp_tpa_reg;
 
 assign busy = busy_reg;
-assign frame_error = frame_error_reg;
+assign error_header_early_termination = error_header_early_termination_reg;
 
 always @* begin
     state_next = 2'bz;

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: error_header_early_termination_reg
    HdlValueId: error_header_early_termination

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@frame_error_next to error_header_early_termination_next

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: frame_error_reg
    HdlValueId: frame_error


CommitId: 85d11645eb5af7f9dcba37417b121315ca18e4d7
Rename frame_error to error_header_early_termination
--- a/rtl/arp_eth_rx.v
+++ b/rtl/arp_eth_rx.v
@@ -214,7 +214,7 @@ always @* begin
 
     output_frame_valid_next = output_frame_valid_reg & ~output_frame_ready;
 
-    frame_error_next = 0;
+    error_header_early_termination_next = 0;
 
     case (state_reg)
         STATE_IDLE: begin

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@frame_error_next to error_header_early_termination_next


CommitId: 85d11645eb5af7f9dcba37417b121315ca18e4d7
Rename frame_error to error_header_early_termination
--- a/rtl/arp_eth_rx.v
+++ b/rtl/arp_eth_rx.v
@@ -272,7 +272,7 @@ always @* begin
                 if (input_eth_payload_tlast) begin
                     state_next = STATE_IDLE;
                     if (frame_ptr_reg != 8'h1B) begin
-                        frame_error_next = 1;
+                        error_header_early_termination_next = 1;
                     end
                 end
             end else begin

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@frame_error_next to error_header_early_termination_next

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@frame_error_next to error_header_early_termination_next


CommitId: 85d11645eb5af7f9dcba37417b121315ca18e4d7
Rename frame_error to error_header_early_termination
--- a/rtl/arp_eth_rx.v
+++ b/rtl/arp_eth_rx.v
@@ -306,7 +306,7 @@ always @(posedge clk or posedge rst) begin
         output_eth_src_mac_reg <= 0;
         output_eth_type_reg <= 0;
         busy_reg <= 0;
-        frame_error_reg <= 0;
+        error_header_early_termination_reg <= 0;
     end else begin
         state_reg <= state_next;
 

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlValueId@@frame_error_reg to error_header_early_termination_reg


CommitId: 85d11645eb5af7f9dcba37417b121315ca18e4d7
Rename frame_error to error_header_early_termination
--- a/rtl/arp_eth_rx.v
+++ b/rtl/arp_eth_rx.v
@@ -314,7 +314,7 @@ always @(posedge clk or posedge rst) begin
 
         output_frame_valid_reg <= output_frame_valid_next;
 
-        frame_error_reg <= frame_error_next;
+        error_header_early_termination_reg <= error_header_early_termination_next;
 
         busy_reg <= state_next != STATE_IDLE;
 
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlValueId@@frame_error_next to error_header_early_termination_next
    UPD HdlValueId@@frame_error_reg to error_header_early_termination_reg


CommitId: 0352d550843c18c0435af6690e83715740054d8c
Add default case
--- a/rtl/eth_mac_10g_rx.v
+++ b/rtl/eth_mac_10g_rx.v
@@ -285,6 +285,9 @@ always @* begin
     8'b10000000: begin
         detect_error_masked = detect_error[6:0];
     end
+    default: begin
+        detect_error_masked = detect_error;
+    end
     endcase
 end
 
ParseResult:
UPD HdlStmCase@@detect_term to detect_term
    INS HdlStmBlock@@SEQ to detect_term
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: detect_error_masked
                    HdlValueId: detect_error


CommitId: 51b5335318c83e2662a0edb768b05ac7cbcd6603
Remove z from default states for FSM inference
--- a/rtl/arp_eth_rx.v
+++ b/rtl/arp_eth_rx.v
@@ -181,7 +181,7 @@ assign error_header_early_termination = error_header_early_termination_reg;
 assign error_invalid_header = error_invalid_header_reg;
 
 always @* begin
-    state_next = 2'bz;
+    state_next = STATE_IDLE;
 
     input_eth_hdr_ready_next = 0;
     input_eth_payload_tready_next = 0;
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueId@@STATE_IDLE to ops

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            DEL HdlValueInt@@z from ops


CommitId: 585ccefa1534cba00ee915f54baf491a0b49df82
Add TX underflow error signal
--- a/rtl/eth_mac_1g_gmii_fifo.v
+++ b/rtl/eth_mac_1g_gmii_fifo.v
@@ -93,6 +93,7 @@ module eth_mac_1g_gmii_fifo #
     /*
      * Status
      */
+    output wire        tx_error_underflow,
     output wire        tx_fifo_overflow,
     output wire        tx_fifo_bad_frame,
     output wire        tx_fifo_good_frame,

ParseResult:
INS HdlIdDef@@tx_error_underflow to ports
HdlIdDef: tx_error_underflow
    HdlDirection: OUT


CommitId: 9cca78bc7c082b1bff9dd4168fac4841dd47b03b
Fix last cycle detect logic
--- a/rtl/axis_adapter.v
+++ b/rtl/axis_adapter.v
@@ -103,6 +103,8 @@ reg [2:0] state_reg = STATE_IDLE, state_next;
 
 reg [7:0] cycle_count_reg = 0, cycle_count_next;
 
+reg last_cycle;
+
 reg [DATA_WIDTH-1:0] temp_tdata_reg = 0, temp_tdata_next;
 reg [KEEP_WIDTH-1:0] temp_tkeep_reg = 0, temp_tkeep_next;
 reg                  temp_tlast_reg = 0, temp_tlast_next;

ParseResult:
INS HdlIdDef@@last_cycle to objs
HdlIdDef: last_cycle
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL


CommitId: 9cca78bc7c082b1bff9dd4168fac4841dd47b03b
Fix last cycle detect logic
--- a/rtl/axis_adapter.v
+++ b/rtl/axis_adapter.v
@@ -161,7 +163,7 @@ always @* begin
                 // accept new data
                 input_axis_tready_next = 1;
 
-                if (input_axis_tvalid) begin
+                if (input_axis_tready & input_axis_tvalid) begin
                     // word transfer in - store it in data register
                     
                     // pass complete input word, zero-extended to temp register

ParseResult:
UPD HdlStmIf@@ to 
    INS HdlOp@@AND to 
    UPD HdlOp@@AND to AND
        INS list@@ops to AND
        INS HdlValueId@@input_axis_tready to ops

UPD HdlStmIf@@ to 
    MOV HdlValueId@@input_axis_tvalid to 
    HdlValueId: input_axis_tvalid


CommitId: 9cca78bc7c082b1bff9dd4168fac4841dd47b03b
Fix last cycle detect logic
--- a/rtl/axis_adapter.v
+++ b/rtl/axis_adapter.v
@@ -191,10 +193,24 @@ always @* begin
                 // accept new data
                 input_axis_tready_next = 1;
 
-                if (input_axis_tvalid) begin
+                if (input_axis_tready & input_axis_tvalid) begin
                     // word transfer in - store it in data register
                     cycle_count_next = 0;
 
+                    // is this the last cycle?
+                    if (CYCLE_COUNT == 1) begin
+                        // last cycle by counter value
+                        last_cycle = 1;
+                    end else if (input_axis_tkeep[CYCLE_KEEP_WIDTH-1:0] != {CYCLE_KEEP_WIDTH{1'b1}}) begin
+                        // last cycle by tkeep fall in current cycle
+                        last_cycle = 1;
+                    end else if (input_axis_tkeep[(CYCLE_KEEP_WIDTH*2)-1:CYCLE_KEEP_WIDTH] == {CYCLE_KEEP_WIDTH{1'b0}}) begin
+                        // last cycle by tkeep fall at end of current cycle
+                        last_cycle = 1;
+                    end else begin
+                        last_cycle = 0;
+                    end
+
                     // pass complete input word, zero-extended to temp register
                     temp_tdata_next = input_axis_tdata;
                     temp_tkeep_next = input_axis_tkeep;

ParseResult:
UPD HdlStmIf@@ to 
    INS HdlOp@@AND to 
    UPD HdlOp@@AND to AND
        INS list@@ops to AND
        INS HdlValueId@@input_axis_tready to ops
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: output_axis_tdata_int
                HdlOp: INDEX
                    list: ops
                        HdlValueId: input_axis_tdata
                        HdlOp: DOWNTO
                            list: ops
                                HdlOp: SUB
                                    list: ops
                                        HdlValueId: CYCLE_DATA_WIDTH
                                        HdlValueInt: 1
                                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: output_axis_tlast_int
                HdlOp: AND
                    list: ops
                        HdlValueId: input_axis_tlast
                        HdlValueId: last_cycle
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: output_axis_tuser_int
                HdlOp: AND
                    list: ops
                        HdlValueId: input_axis_tuser
                        HdlValueId: last_cycle
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ops to ASSIGN

UPD HdlStmIf@@ to 
    MOV HdlValueId@@input_axis_tvalid to 
    HdlValueId: input_axis_tvalid
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@AND to AND
                UPD HdlOp@@OR to OR
                    MOV HdlOp@@EQ to ops
                    HdlOp: EQ
                        list: ops
                            HdlValueId: CYCLE_COUNT
                            HdlValueInt: 1
                    UPD HdlOp@@NE to NE
                        MOV HdlOp@@INDEX to ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: input_axis_tkeep
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlOp: SUB
                                            list: ops
                                                HdlValueId: CYCLE_KEEP_WIDTH
                                                HdlValueInt: 1
                                        HdlValueInt: 0
                        DEL HdlOp@@REPL_CONCAT from ops
                        HdlOp: REPL_CONCAT
                            list: ops
                                HdlValueId: CYCLE_KEEP_WIDTH
                                HdlValueInt: 1
                        DEL list@@ops from NE
                    DEL HdlOp@@NE from ops
                    DEL list@@ops from OR
                DEL HdlValueId@@input_axis_tuser from ops
                DEL HdlOp@@OR from ops
                DEL list@@ops from AND
            UPD HdlValueId@@output_axis_tuser_int to output_axis_tkeep_int
            MOV HdlValueId@@output_axis_tuser_int to ops
            HdlValueId: output_axis_tuser_int
            DEL HdlOp@@AND from ops
            DEL list@@ops from ASSIGN
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@AND to AND
                UPD HdlOp@@OR to OR
                    MOV HdlOp@@NE to ops
                    HdlOp: NE
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_axis_tkeep
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlOp: SUB
                                                list: ops
                                                    HdlValueId: CYCLE_KEEP_WIDTH
                                                    HdlValueInt: 1
                                            HdlValueInt: 0
                            HdlOp: REPL_CONCAT
                                list: ops
                                    HdlValueId: CYCLE_KEEP_WIDTH
                                    HdlValueInt: 1
                    DEL HdlOp@@EQ from ops
                    HdlOp: EQ
                        list: ops
                            HdlValueId: CYCLE_COUNT
                            HdlValueInt: 1
                    DEL list@@ops from OR
                DEL HdlValueId@@input_axis_tlast from ops
                DEL HdlOp@@OR from ops
                DEL list@@ops from AND
            DEL HdlValueId@@output_axis_tlast_int from ops
            DEL HdlOp@@AND from ops
            DEL list@@ops from ASSIGN
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: input_axis_tready_next
                HdlValueInt: 0
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: state_next
                HdlValueId: STATE_TRANSFER_OUT
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: output_axis_tdata_int
                HdlValueId: input_axis_tdata
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@output_axis_tdata_int to last_cycle
            DEL HdlValueId@@input_axis_tdata from ops
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: output_axis_tkeep_int
                HdlValueId: input_axis_tkeep
        DEL HdlOp@@ASSIGN from body
        DEL HdlOp@@ASSIGN from body

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: last_cycle
                    HdlValueInt: 1
    INS list@@elifs to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: last_cycle
                    HdlValueInt: 0
    INS tuple@@ to elifs
    INS tuple@@ to elifs
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: last_cycle
                    HdlValueInt: 1
    INS HdlOp@@EQ to 
    HdlOp: EQ
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: input_axis_tkeep
                    HdlOp: DOWNTO
                        list: ops
                            HdlOp: SUB
                                list: ops
                                    HdlOp: MUL
                                        list: ops
                                            HdlValueId: CYCLE_KEEP_WIDTH
                                            HdlValueInt: 2
                                    HdlValueInt: 1
                            HdlValueId: CYCLE_KEEP_WIDTH
            HdlOp: REPL_CONCAT
                list: ops
                    HdlValueId: CYCLE_KEEP_WIDTH
                    HdlValueInt: 0
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops


CommitId: 9cca78bc7c082b1bff9dd4168fac4841dd47b03b
Fix last cycle detect logic
--- a/rtl/axis_adapter.v
+++ b/rtl/axis_adapter.v
@@ -202,20 +218,24 @@ always @* begin
                     temp_tuser_next = input_axis_tuser;
 
                     // short-circuit and get first word out the door
-                    output_axis_tdata_int = input_axis_tdata;
-                    output_axis_tkeep_int = input_axis_tkeep;
+                    output_axis_tdata_int = input_axis_tdata[CYCLE_DATA_WIDTH-1:0];
+                    output_axis_tkeep_int = input_axis_tkeep[CYCLE_KEEP_WIDTH-1:0];
                     output_axis_tvalid_int = 1;
-                    output_axis_tlast_int = input_axis_tlast & ((CYCLE_COUNT == 1) | (input_axis_tkeep[CYCLE_KEEP_WIDTH-1:0] != {CYCLE_KEEP_WIDTH{1'b1}}));
-                    output_axis_tuser_int = input_axis_tuser & ((CYCLE_COUNT == 1) | (input_axis_tkeep[CYCLE_KEEP_WIDTH-1:0] != {CYCLE_KEEP_WIDTH{1'b1}}));
+                    output_axis_tlast_int = input_axis_tlast & last_cycle;
+                    output_axis_tuser_int = input_axis_tuser & last_cycle;
 
                     if (output_axis_tready_int) begin
                         // if output register is ready for first word, then move on to the next one
                         cycle_count_next = 1;
                     end
 
-                    // continue outputting words
-                    input_axis_tready_next = 0;
-                    state_next = STATE_TRANSFER_OUT;
+                    if (!last_cycle || !output_axis_tready_int) begin
+                        // continue outputting words
+                        input_axis_tready_next = 0;
+                        state_next = STATE_TRANSFER_OUT;
+                    end else begin
+                        state_next = STATE_IDLE;
+                    end
                 end else begin
                     state_next = STATE_IDLE;
                 end

ParseResult:
UPD HdlStmIf@@ to 
    INS HdlOp@@AND to 
    UPD HdlOp@@AND to AND
        INS list@@ops to AND
        INS HdlValueId@@input_axis_tready to ops
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: output_axis_tdata_int
                HdlOp: INDEX
                    list: ops
                        HdlValueId: input_axis_tdata
                        HdlOp: DOWNTO
                            list: ops
                                HdlOp: SUB
                                    list: ops
                                        HdlValueId: CYCLE_DATA_WIDTH
                                        HdlValueInt: 1
                                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: output_axis_tlast_int
                HdlOp: AND
                    list: ops
                        HdlValueId: input_axis_tlast
                        HdlValueId: last_cycle
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: output_axis_tuser_int
                HdlOp: AND
                    list: ops
                        HdlValueId: input_axis_tuser
                        HdlValueId: last_cycle
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ops to ASSIGN

UPD HdlStmIf@@ to 
    MOV HdlValueId@@input_axis_tvalid to 
    HdlValueId: input_axis_tvalid
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@AND to AND
                UPD HdlOp@@OR to OR
                    MOV HdlOp@@EQ to ops
                    HdlOp: EQ
                        list: ops
                            HdlValueId: CYCLE_COUNT
                            HdlValueInt: 1
                    UPD HdlOp@@NE to NE
                        MOV HdlOp@@INDEX to ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: input_axis_tkeep
                                HdlOp: DOWNTO
                                    list: ops
                                        HdlOp: SUB
                                            list: ops
                                                HdlValueId: CYCLE_KEEP_WIDTH
                                                HdlValueInt: 1
                                        HdlValueInt: 0
                        DEL HdlOp@@REPL_CONCAT from ops
                        HdlOp: REPL_CONCAT
                            list: ops
                                HdlValueId: CYCLE_KEEP_WIDTH
                                HdlValueInt: 1
                        DEL list@@ops from NE
                    DEL HdlOp@@NE from ops
                    DEL list@@ops from OR
                DEL HdlValueId@@input_axis_tuser from ops
                DEL HdlOp@@OR from ops
                DEL list@@ops from AND
            UPD HdlValueId@@output_axis_tuser_int to output_axis_tkeep_int
            MOV HdlValueId@@output_axis_tuser_int to ops
            HdlValueId: output_axis_tuser_int
            DEL HdlOp@@AND from ops
            DEL list@@ops from ASSIGN
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@AND to AND
                UPD HdlOp@@OR to OR
                    MOV HdlOp@@NE to ops
                    HdlOp: NE
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: input_axis_tkeep
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlOp: SUB
                                                list: ops
                                                    HdlValueId: CYCLE_KEEP_WIDTH
                                                    HdlValueInt: 1
                                            HdlValueInt: 0
                            HdlOp: REPL_CONCAT
                                list: ops
                                    HdlValueId: CYCLE_KEEP_WIDTH
                                    HdlValueInt: 1
                    DEL HdlOp@@EQ from ops
                    HdlOp: EQ
                        list: ops
                            HdlValueId: CYCLE_COUNT
                            HdlValueInt: 1
                    DEL list@@ops from OR
                DEL HdlValueId@@input_axis_tlast from ops
                DEL HdlOp@@OR from ops
                DEL list@@ops from AND
            DEL HdlValueId@@output_axis_tlast_int from ops
            DEL HdlOp@@AND from ops
            DEL list@@ops from ASSIGN
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: input_axis_tready_next
                HdlValueInt: 0
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: state_next
                HdlValueId: STATE_TRANSFER_OUT
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: output_axis_tdata_int
                HdlValueId: input_axis_tdata
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueId@@output_axis_tdata_int to last_cycle
            DEL HdlValueId@@input_axis_tdata from ops
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: output_axis_tkeep_int
                HdlValueId: input_axis_tkeep
        DEL HdlOp@@ASSIGN from body
        DEL HdlOp@@ASSIGN from body

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: last_cycle
                    HdlValueInt: 1
    INS list@@elifs to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: last_cycle
                    HdlValueInt: 0
    INS tuple@@ to elifs
    INS tuple@@ to elifs
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: last_cycle
                    HdlValueInt: 1
    INS HdlOp@@EQ to 
    HdlOp: EQ
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: input_axis_tkeep
                    HdlOp: DOWNTO
                        list: ops
                            HdlOp: SUB
                                list: ops
                                    HdlOp: MUL
                                        list: ops
                                            HdlValueId: CYCLE_KEEP_WIDTH
                                            HdlValueInt: 2
                                    HdlValueInt: 1
                            HdlValueId: CYCLE_KEEP_WIDTH
            HdlOp: REPL_CONCAT
                list: ops
                    HdlValueId: CYCLE_KEEP_WIDTH
                    HdlValueInt: 0
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueInt@@1 to ops


CommitId: 9cca78bc7c082b1bff9dd4168fac4841dd47b03b
Fix last cycle detect logic
--- a/rtl/axis_adapter.v
+++ b/rtl/axis_adapter.v
@@ -228,7 +248,7 @@ always @* begin
             // accept new data
             input_axis_tready_next = 1;
 
-            if (input_axis_tvalid) begin
+            if (input_axis_tready & input_axis_tvalid) begin
                 // word transfer in - store in data register
                 
                 temp_tdata_next[cycle_count_reg*CYCLE_DATA_WIDTH +: CYCLE_DATA_WIDTH] = input_axis_tdata;

ParseResult:
UPD HdlStmIf@@ to 
    MOV HdlValueId@@input_axis_tvalid to 
    HdlValueId: input_axis_tvalid

UPD HdlStmIf@@ to 
    INS HdlOp@@AND to 
    UPD HdlOp@@AND to AND
        INS list@@ops to AND
        INS HdlValueId@@input_axis_tready to ops
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: output_axis_tdata_int
                HdlOp: INDEX
                    list: ops
                        HdlValueId: input_axis_tdata
                        HdlOp: DOWNTO
                            list: ops
                                HdlOp: SUB
                                    list: ops
                                        HdlValueId: CYCLE_DATA_WIDTH
                                        HdlValueInt: 1
                                HdlValueInt: 0
        INS HdlOp@@ASSIGN to body
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: output_axis_tlast_int
                HdlOp: AND
                    list: ops
                        HdlValueId: input_axis_tlast
                        HdlValueId: last_cycle
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: output_axis_tuser_int
                HdlOp: AND
                    list: ops
                        HdlValueId: input_axis_tuser
                        HdlValueId: last_cycle
        UPD HdlOp@@ASSIGN to ASSIGN
            INS list@@ops to ASSIGN


CommitId: 9cca78bc7c082b1bff9dd4168fac4841dd47b03b
Fix last cycle detect logic
--- a/rtl/axis_adapter.v
+++ b/rtl/axis_adapter.v
@@ -305,19 +325,33 @@ always @* begin
                 // do not accept new data
                 input_axis_tready_next = 0;
 
+                // is this the last cycle?
+                if (cycle_count_reg == CYCLE_COUNT-1) begin
+                    // last cycle by counter value
+                    last_cycle = 1;
+                end else if (temp_tkeep_reg[cycle_count_reg*CYCLE_KEEP_WIDTH +: CYCLE_KEEP_WIDTH] != {CYCLE_KEEP_WIDTH{1'b1}}) begin
+                    // last cycle by tkeep fall in current cycle
+                    last_cycle = 1;
+                end else if (temp_tkeep_reg[(cycle_count_reg+1)*CYCLE_KEEP_WIDTH +: CYCLE_KEEP_WIDTH] == {CYCLE_KEEP_WIDTH{1'b0}}) begin
+                    // last cycle by tkeep fall at end of current cycle
+                    last_cycle = 1;
+                end else begin
+                    last_cycle = 0;
+                end
+
                 // output current part of stored word (output narrower)
                 output_axis_tdata_int = temp_tdata_reg[cycle_count_reg*CYCLE_DATA_WIDTH +: CYCLE_DATA_WIDTH];
                 output_axis_tkeep_int = temp_tkeep_reg[cycle_count_reg*CYCLE_KEEP_WIDTH +: CYCLE_KEEP_WIDTH];
                 output_axis_tvalid_int = 1;
-                output_axis_tlast_int = temp_tlast_reg & ((cycle_count_reg == CYCLE_COUNT-1) | (temp_tkeep_reg[cycle_count_reg*CYCLE_KEEP_WIDTH +: CYCLE_KEEP_WIDTH] != {CYCLE_KEEP_WIDTH{1'b1}}));
-                output_axis_tuser_int = temp_tuser_reg & ((cycle_count_reg == CYCLE_COUNT-1) | (temp_tkeep_reg[cycle_count_reg*CYCLE_KEEP_WIDTH +: CYCLE_KEEP_WIDTH] != {CYCLE_KEEP_WIDTH{1'b1}}));
+                output_axis_tlast_int = temp_tlast_reg & last_cycle;
+                output_axis_tuser_int = temp_tuser_reg & last_cycle;
 
                 if (output_axis_tready_int) begin
                     // word transfer out
 
                     cycle_count_next = cycle_count_reg + 1;
 
-                    if ((cycle_count_reg == CYCLE_COUNT-1) | (temp_tkeep_reg[cycle_count_reg*CYCLE_KEEP_WIDTH +: CYCLE_KEEP_WIDTH] != {CYCLE_KEEP_WIDTH{1'b1}})) begin
+                    if (last_cycle) begin
                         // terminated by counter or tlast signal
                         
                         input_axis_tready_next = 1;
ParseResult:
INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: output_axis_tlast_int
                HdlOp: AND
                    list: ops
                        HdlValueId: temp_tlast_reg
                        HdlValueId: last_cycle
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: output_axis_tuser_int
                HdlOp: AND
                    list: ops
                        HdlValueId: temp_tuser_reg
                        HdlValueId: last_cycle

UPD HdlStmIf@@ to 
    UPD HdlOp@@OR to OR
        MOV HdlOp@@EQ to ops
        HdlOp: EQ
            list: ops
                HdlValueId: cycle_count_reg
                HdlOp: SUB
                    list: ops
                        HdlValueId: CYCLE_COUNT
                        HdlValueInt: 1
        MOV HdlOp@@NE to ops
        HdlOp: NE
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: temp_tkeep_reg
                        HdlOp: PART_SELECT_POST
                            list: ops
                                HdlOp: MUL
                                    list: ops
                                        HdlValueId: cycle_count_reg
                                        HdlValueId: CYCLE_KEEP_WIDTH
                                HdlValueId: CYCLE_KEEP_WIDTH
                HdlOp: REPL_CONCAT
                    list: ops
                        HdlValueId: CYCLE_KEEP_WIDTH
                        HdlValueInt: 1
        DEL list@@ops from OR
    DEL HdlOp@@OR from 

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: last_cycle
                    HdlValueInt: 1
    INS list@@elifs to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: last_cycle
                    HdlValueInt: 0
    INS tuple@@ to elifs
    INS tuple@@ to elifs
    INS HdlStmBlock@@SEQ to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: last_cycle
                    HdlValueInt: 1
    UPD HdlOp@@EQ to EQ
        UPD HdlOp@@INDEX to INDEX
            UPD HdlOp@@PART_SELECT_POST to PART_SELECT_POST
                UPD HdlOp@@MUL to MUL
                    INS HdlOp@@ADD to ops
                    UPD HdlOp@@ADD to ADD
                        INS list@@ops to ADD
                        INS HdlValueInt@@1 to ops

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlOp@@AND to AND
                UPD HdlOp@@OR to OR
                    UPD HdlOp@@NE to EQ
                    MOV HdlOp@@NE to ops
                    HdlOp: NE
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: temp_tkeep_reg
                                    HdlOp: PART_SELECT_POST
                                        list: ops
                                            HdlOp: MUL
                                                list: ops
                                                    HdlValueId: cycle_count_reg
                                                    HdlValueId: CYCLE_KEEP_WIDTH
                                            HdlValueId: CYCLE_KEEP_WIDTH
                            HdlOp: REPL_CONCAT
                                list: ops
                                    HdlValueId: CYCLE_KEEP_WIDTH
                                    HdlValueInt: 1
                    UPD HdlOp@@EQ to EQ
                        UPD list@@ops to body
                        MOV list@@ops to EQ
                        list: ops
                            HdlValueId: cycle_count_reg
                            HdlOp: SUB
                                list: ops
                                    HdlValueId: CYCLE_COUNT
                                    HdlValueInt: 1
                        UPD HdlOp@@SUB to ASSIGN
                        UPD HdlOp@@SUB to SUB
                            UPD HdlValueId@@CYCLE_COUNT to last_cycle
                        DEL HdlValueId@@cycle_count_reg from ops
                    UPD HdlOp@@NE to NE
                        UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                            UPD HdlValueInt@@1 to 0
                        UPD HdlOp@@INDEX to INDEX
                            UPD HdlOp@@PART_SELECT_POST to PART_SELECT_POST
                                UPD HdlOp@@MUL to MUL
                                    MOV HdlValueId@@cycle_count_reg to ops
                                    HdlValueId: cycle_count_reg
                    DEL HdlOp@@EQ from ops
                    DEL list@@ops from OR
                DEL HdlValueId@@temp_tlast_reg from ops
                DEL HdlOp@@OR from ops
                DEL list@@ops from AND
            DEL HdlValueId@@output_axis_tlast_int from ops
            DEL HdlOp@@AND from ops
            DEL list@@ops from ASSIGN
        DEL HdlOp@@ASSIGN from body
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: output_axis_tuser_int
                HdlOp: AND
                    list: ops
                        HdlValueId: temp_tuser_reg
                        HdlOp: OR
                            list: ops
                                HdlOp: EQ
                                    list: ops
                                        HdlValueId: cycle_count_reg
                                        HdlOp: SUB
                                            list: ops
                                                HdlValueId: CYCLE_COUNT
                                                HdlValueInt: 1
                                HdlOp: NE
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: temp_tkeep_reg
                                                HdlOp: PART_SELECT_POST
                                                    list: ops
                                                        HdlOp: MUL
                                                            list: ops
                                                                HdlValueId: cycle_count_reg
                                                                HdlValueId: CYCLE_KEEP_WIDTH
                                                        HdlValueId: CYCLE_KEEP_WIDTH
                                        HdlOp: REPL_CONCAT
                                            list: ops
                                                HdlValueId: CYCLE_KEEP_WIDTH
                                                HdlValueInt: 1


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/eth_mux_64_4.v
+++ b/rtl/eth_mux_64_4.v
@@ -107,29 +107,29 @@ module eth_mux_64_4
     input  wire [1:0]  select
 );
 
-reg [1:0] select_reg = 0, select_next;
-reg frame_reg = 0, frame_next;
+reg [1:0] select_reg = 2'd0, select_next;
+reg frame_reg = 1'b0, frame_next;
 
-reg input_0_eth_hdr_ready_reg = 0, input_0_eth_hdr_ready_next;
-reg input_1_eth_hdr_ready_reg = 0, input_1_eth_hdr_ready_next;
-reg input_2_eth_hdr_ready_reg = 0, input_2_eth_hdr_ready_next;
-reg input_3_eth_hdr_ready_reg = 0, input_3_eth_hdr_ready_next;
+reg input_0_eth_hdr_ready_reg = 1'b0, input_0_eth_hdr_ready_next;
+reg input_1_eth_hdr_ready_reg = 1'b0, input_1_eth_hdr_ready_next;
+reg input_2_eth_hdr_ready_reg = 1'b0, input_2_eth_hdr_ready_next;
+reg input_3_eth_hdr_ready_reg = 1'b0, input_3_eth_hdr_ready_next;
 
-reg input_0_eth_payload_tready_reg = 0, input_0_eth_payload_tready_next;
-reg input_1_eth_payload_tready_reg = 0, input_1_eth_payload_tready_next;
-reg input_2_eth_payload_tready_reg = 0, input_2_eth_payload_tready_next;
-reg input_3_eth_payload_tready_reg = 0, input_3_eth_payload_tready_next;
+reg input_0_eth_payload_tready_reg = 1'b0, input_0_eth_payload_tready_next;
+reg input_1_eth_payload_tready_reg = 1'b0, input_1_eth_payload_tready_next;
+reg input_2_eth_payload_tready_reg = 1'b0, input_2_eth_payload_tready_next;
+reg input_3_eth_payload_tready_reg = 1'b0, input_3_eth_payload_tready_next;
 
-reg output_eth_hdr_valid_reg = 0, output_eth_hdr_valid_next;
-reg [47:0] output_eth_dest_mac_reg = 0, output_eth_dest_mac_next;
-reg [47:0] output_eth_src_mac_reg = 0, output_eth_src_mac_next;
-reg [15:0] output_eth_type_reg = 0, output_eth_type_next;
+reg output_eth_hdr_valid_reg = 1'b0, output_eth_hdr_valid_next;
+reg [47:0] output_eth_dest_mac_reg = 48'd0, output_eth_dest_mac_next;
+reg [47:0] output_eth_src_mac_reg = 48'd0, output_eth_src_mac_next;
+reg [15:0] output_eth_type_reg = 16'd0, output_eth_type_next;
 
 // internal datapath
 reg [63:0] output_eth_payload_tdata_int;
 reg [7:0]  output_eth_payload_tkeep_int;
 reg        output_eth_payload_tvalid_int;
-reg        output_eth_payload_tready_int = 0;
+reg        output_eth_payload_tready_int_reg = 1'b0;
 reg        output_eth_payload_tlast_int;
 reg        output_eth_payload_tuser_int;
 wire       output_eth_payload_tready_int_early;

ParseResult:
UPD HdlIdDef@@output_eth_payload_tready_int to output_eth_payload_tready_int_reg


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/eth_mux_64_4.v
+++ b/rtl/eth_mux_64_4.v
@@ -180,6 +180,12 @@ always @* begin
             selected_input_eth_src_mac = input_3_eth_src_mac;
             selected_input_eth_type = input_3_eth_type;
         end
+        default: begin
+            selected_input_eth_hdr_valid = 1'b0;
+            selected_input_eth_dest_mac = 48'd0;
+            selected_input_eth_src_mac = 48'd0;
+            selected_input_eth_type = 16'd0;
+        end
     endcase
 end
 

ParseResult:
UPD HdlStmCase@@select to select
    INS HdlStmBlock@@SEQ to select
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_eth_hdr_valid
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_eth_dest_mac
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_eth_src_mac
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_eth_type
                    HdlValueInt: 0


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/eth_mux_64_4.v
+++ b/rtl/eth_mux_64_4.v
@@ -224,6 +230,14 @@ always @* begin
             current_input_tlast = input_3_eth_payload_tlast;
             current_input_tuser = input_3_eth_payload_tuser;
         end
+        default: begin
+            current_input_tdata = 64'd0;
+            current_input_tkeep = 8'd0;
+            current_input_tvalid = 1'b0;
+            current_input_tready = 1'b0;
+            current_input_tlast = 1'b0;
+            current_input_tuser = 1'b0;
+        end
     endcase
 end
 

ParseResult:
UPD HdlStmCase@@select_reg to select_reg
    INS HdlStmBlock@@SEQ to select_reg
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tdata
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tkeep
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tvalid
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tready
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tlast
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tuser
                    HdlValueInt: 0


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/eth_mux_64_4.v
+++ b/rtl/eth_mux_64_4.v
@@ -236,10 +250,10 @@ always @* begin
     input_2_eth_hdr_ready_next = input_2_eth_hdr_ready_reg & ~input_2_eth_hdr_valid;
     input_3_eth_hdr_ready_next = input_3_eth_hdr_ready_reg & ~input_3_eth_hdr_valid;
 
-    input_0_eth_payload_tready_next = 0;
-    input_1_eth_payload_tready_next = 0;
-    input_2_eth_payload_tready_next = 0;
-    input_3_eth_payload_tready_next = 0;
+    input_0_eth_payload_tready_next = 1'b0;
+    input_1_eth_payload_tready_next = 1'b0;
+    input_2_eth_payload_tready_next = 1'b0;
+    input_3_eth_payload_tready_next = 1'b0;
 
     output_eth_hdr_valid_next = output_eth_hdr_valid_reg & ~output_eth_hdr_ready;
     output_eth_dest_mac_next = output_eth_dest_mac_reg;

ParseResult:
UPD HdlStmCase@@select_reg to select_reg
    INS HdlStmBlock@@SEQ to select_reg
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tdata
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tkeep
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tvalid
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tready
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tlast
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tuser
                    HdlValueInt: 0


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/eth_mux_64_4.v
+++ b/rtl/eth_mux_64_4.v
@@ -287,20 +301,17 @@ end
 
 always @(posedge clk) begin
     if (rst) begin
-        select_reg <= 0;
-        frame_reg <= 0;
-        input_0_eth_hdr_ready_reg <= 0;
-        input_1_eth_hdr_ready_reg <= 0;
-        input_2_eth_hdr_ready_reg <= 0;
-        input_3_eth_hdr_ready_reg <= 0;
-        input_0_eth_payload_tready_reg <= 0;
-        input_1_eth_payload_tready_reg <= 0;
-        input_2_eth_payload_tready_reg <= 0;
-        input_3_eth_payload_tready_reg <= 0;
-        output_eth_hdr_valid_reg <= 0;
-        output_eth_dest_mac_reg <= 0;
-        output_eth_src_mac_reg <= 0;
-        output_eth_type_reg <= 0;
+        select_reg <= 2'd0;
+        frame_reg <= 1'b0;
+        input_0_eth_hdr_ready_reg <= 1'b0;
+        input_1_eth_hdr_ready_reg <= 1'b0;
+        input_2_eth_hdr_ready_reg <= 1'b0;
+        input_3_eth_hdr_ready_reg <= 1'b0;
+        input_0_eth_payload_tready_reg <= 1'b0;
+        input_1_eth_payload_tready_reg <= 1'b0;
+        input_2_eth_payload_tready_reg <= 1'b0;
+        input_3_eth_payload_tready_reg <= 1'b0;
+        output_eth_hdr_valid_reg <= 1'b0;
     end else begin
         select_reg <= select_next;
         frame_reg <= frame_next;

ParseResult:
DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: output_eth_dest_mac_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: output_eth_src_mac_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: output_eth_type_reg


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/eth_mux_64_4.v
+++ b/rtl/eth_mux_64_4.v
@@ -313,24 +324,30 @@ always @(posedge clk) begin
         input_2_eth_payload_tready_reg <= input_2_eth_payload_tready_next;
         input_3_eth_payload_tready_reg <= input_3_eth_payload_tready_next;
         output_eth_hdr_valid_reg <= output_eth_hdr_valid_next;
-        output_eth_dest_mac_reg <= output_eth_dest_mac_next;
-        output_eth_src_mac_reg <= output_eth_src_mac_next;
-        output_eth_type_reg <= output_eth_type_next;
     end
+
+    output_eth_dest_mac_reg <= output_eth_dest_mac_next;
+    output_eth_src_mac_reg <= output_eth_src_mac_next;
+    output_eth_type_reg <= output_eth_type_next;
 end
 
 // output datapath logic
-reg [63:0] output_eth_payload_tdata_reg = 0;
-reg [7:0]  output_eth_payload_tkeep_reg = 0;
-reg        output_eth_payload_tvalid_reg = 0;
-reg        output_eth_payload_tlast_reg = 0;
-reg        output_eth_payload_tuser_reg = 0;
-
-reg [63:0] temp_eth_payload_tdata_reg = 0;
-reg [7:0]  temp_eth_payload_tkeep_reg = 0;
-reg        temp_eth_payload_tvalid_reg = 0;
-reg        temp_eth_payload_tlast_reg = 0;
-reg        temp_eth_payload_tuser_reg = 0;
+reg [63:0] output_eth_payload_tdata_reg = 64'd0;
+reg [7:0]  output_eth_payload_tkeep_reg = 8'd0;
+reg        output_eth_payload_tvalid_reg = 1'b0, output_eth_payload_tvalid_next;
+reg        output_eth_payload_tlast_reg = 1'b0;
+reg        output_eth_payload_tuser_reg = 1'b0;
+
+reg [63:0] temp_eth_payload_tdata_reg = 64'd0;
+reg [7:0]  temp_eth_payload_tkeep_reg = 8'd0;
+reg        temp_eth_payload_tvalid_reg = 1'b0, temp_eth_payload_tvalid_next;
+reg        temp_eth_payload_tlast_reg = 1'b0;
+reg        temp_eth_payload_tuser_reg = 1'b0;
+
+// datapath control
+reg store_eth_payload_int_to_output;
+reg store_eth_payload_int_to_temp;
+reg store_eth_payload_temp_to_output;
 
 assign output_eth_payload_tdata = output_eth_payload_tdata_reg;
 assign output_eth_payload_tkeep = output_eth_payload_tkeep_reg;

ParseResult:
INS HdlIdDef@@output_eth_payload_tvalid_next to objs
HdlIdDef: output_eth_payload_tvalid_next
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL

INS HdlIdDef@@temp_eth_payload_tvalid_next to objs
HdlIdDef: temp_eth_payload_tvalid_next
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL

INS HdlIdDef@@store_eth_payload_int_to_output to objs
HdlIdDef: store_eth_payload_int_to_output
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL

INS HdlIdDef@@store_eth_payload_int_to_temp to objs
HdlIdDef: store_eth_payload_int_to_temp
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL

INS HdlIdDef@@store_eth_payload_temp_to_output to objs
HdlIdDef: store_eth_payload_temp_to_output
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: output_eth_dest_mac_next
    HdlValueId: output_eth_dest_mac_reg

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: output_eth_src_mac_next
    HdlValueId: output_eth_src_mac_reg

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: output_eth_type_next
    HdlValueId: output_eth_type_reg


CommitId: 7a9fdb5fc34ca0fa33a20e338c8f0a84cd4f8f96
Add default case statements to avoid inferring latches
--- a/rtl/axis_mux_4.v
+++ b/rtl/axis_mux_4.v
@@ -109,6 +109,7 @@ always @* begin
         2'd1: selected_input_tvalid = input_1_axis_tvalid;
         2'd2: selected_input_tvalid = input_2_axis_tvalid;
         2'd3: selected_input_tvalid = input_3_axis_tvalid;
+        default: selected_input_tvalid = 1'b0;
     endcase
 end
 

ParseResult:
UPD HdlStmCase@@select to select
    INS HdlOp@@ASSIGN to select
    HdlOp: ASSIGN
        list: ops
            HdlValueId: selected_input_tvalid
            HdlValueInt: 0


CommitId: 7a9fdb5fc34ca0fa33a20e338c8f0a84cd4f8f96
Add default case statements to avoid inferring latches
--- a/rtl/axis_mux_4.v
+++ b/rtl/axis_mux_4.v
@@ -148,6 +149,13 @@ always @* begin
             current_input_tlast = input_3_axis_tlast;
             current_input_tuser = input_3_axis_tuser;
         end
+        default: begin
+            current_input_tdata = {DATA_WIDTH{1'b0}};
+            current_input_tvalid = 1'b0;
+            current_input_tready = 1'b0;
+            current_input_tlast = 1'b0;
+            current_input_tuser = 1'b0;
+        end
     endcase
 end
 
ParseResult:
UPD HdlStmCase@@select_reg to select_reg
    INS HdlStmBlock@@SEQ to select_reg
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tdata
                    HdlOp: REPL_CONCAT
                        list: ops
                            HdlValueId: DATA_WIDTH
                            HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tvalid
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tready
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tlast
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tuser
                    HdlValueInt: 0


CommitId: 51b5335318c83e2662a0edb768b05ac7cbcd6603
Remove z from default states for FSM inference
--- a/rtl/udp_ip_tx.v
+++ b/rtl/udp_ip_tx.v
@@ -213,7 +213,7 @@ assign busy = busy_reg;
 assign error_payload_early_termination = error_payload_early_termination_reg;
 
 always @* begin
-    state_next = 2'bz;
+    state_next = STATE_IDLE;
 
     input_udp_hdr_ready_next = 0;
     input_udp_payload_tready_next = 0;
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueId@@STATE_IDLE to ops

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            DEL HdlValueInt@@z from ops


CommitId: 51b5335318c83e2662a0edb768b05ac7cbcd6603
Remove z from default states for FSM inference
--- a/rtl/ip_eth_rx_64.v
+++ b/rtl/ip_eth_rx_64.v
@@ -276,7 +276,7 @@ always @* begin
 end
 
 always @* begin
-    state_next = 2'bz;
+    state_next = STATE_IDLE;
 
     flush_save = 0;
     transfer_in_save = 0;
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueId@@STATE_IDLE to ops

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            DEL HdlValueInt@@z from ops


CommitId: 966e47a8268e7f7d41a641817909b8275339bbb8
Fix RAM and register widths
--- a/rtl/axis_frame_fifo.v
+++ b/rtl/axis_frame_fifo.v
@@ -63,16 +63,16 @@ reg [ADDR_WIDTH:0] rd_ptr = {ADDR_WIDTH+1{1'b0}};
 
 reg drop_frame = 1'b0;
 
-reg [DATA_WIDTH+2-1:0] data_out_reg = {1'b0, {DATA_WIDTH{1'b0}}};
+reg [DATA_WIDTH+1-1:0] data_out_reg = {1'b0, {DATA_WIDTH{1'b0}}};
 
 //(* RAM_STYLE="BLOCK" *)
-reg [DATA_WIDTH+2-1:0] mem[(2**ADDR_WIDTH)-1:0];
+reg [DATA_WIDTH+1-1:0] mem[(2**ADDR_WIDTH)-1:0];
 
 reg output_read = 1'b0;
 
 reg output_axis_tvalid_reg = 1'b0;
 
-wire [DATA_WIDTH+2-1:0] data_in = {input_axis_tlast, input_axis_tdata};
+wire [DATA_WIDTH+1-1:0] data_in = {input_axis_tlast, input_axis_tdata};
 
 // full when first MSB different but rest same
 wire full = ((wr_ptr[ADDR_WIDTH] != rd_ptr[ADDR_WIDTH]) &&
ParseResult:
UPD HdlIdDef@@data_out_reg to data_out_reg
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlOp@@SUB to SUB
                UPD HdlOp@@ADD to ADD
                    UPD HdlValueInt@@2 to 1

UPD HdlIdDef@@data_in to data_in
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlOp@@SUB to SUB
                UPD HdlOp@@ADD to ADD
                    UPD HdlValueInt@@2 to 1

UPD HdlIdDef@@mem to mem
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
            UPD HdlOp@@DOWNTO to DOWNTO
                UPD HdlOp@@SUB to SUB
                    UPD HdlOp@@ADD to ADD
                        UPD HdlValueInt@@2 to 1


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/eth_axis_tx.v
+++ b/rtl/eth_axis_tx.v
@@ -88,24 +88,24 @@ reg [1:0] state_reg = STATE_IDLE, state_next;
 // datapath control signals
 reg store_eth_hdr;
 
-reg [7:0] frame_ptr_reg = 0, frame_ptr_next;
+reg [7:0] frame_ptr_reg = 8'd0, frame_ptr_next;
 
-reg [47:0] eth_dest_mac_reg = 0;
-reg [47:0] eth_src_mac_reg = 0;
-reg [15:0] eth_type_reg = 0;
+reg [47:0] eth_dest_mac_reg = 48'd0;
+reg [47:0] eth_src_mac_reg = 48'd0;
+reg [15:0] eth_type_reg = 16'd0;
 
-reg input_eth_hdr_ready_reg = 0, input_eth_hdr_ready_next;
-reg input_eth_payload_tready_reg = 0, input_eth_payload_tready_next;
+reg input_eth_hdr_ready_reg = 1'b0, input_eth_hdr_ready_next;
+reg input_eth_payload_tready_reg = 1'b0, input_eth_payload_tready_next;
 
-reg busy_reg = 0;
+reg busy_reg = 1'b0;
 
 // internal datapath
-reg [7:0]  output_axis_tdata_int;
-reg        output_axis_tvalid_int;
-reg        output_axis_tready_int = 0;
-reg        output_axis_tlast_int;
-reg        output_axis_tuser_int;
-wire       output_axis_tready_int_early;
+reg [7:0] output_axis_tdata_int;
+reg       output_axis_tvalid_int;
+reg       output_axis_tready_int_reg = 1'b0;
+reg       output_axis_tlast_int;
+reg       output_axis_tuser_int;
+wire      output_axis_tready_int_early;
 
 assign input_eth_hdr_ready = input_eth_hdr_ready_reg;
 assign input_eth_payload_tready = input_eth_payload_tready_reg;

ParseResult:
UPD HdlIdDef@@output_axis_tready_int to output_axis_tready_int_reg


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/eth_axis_tx.v
+++ b/rtl/eth_axis_tx.v
@@ -115,31 +115,31 @@ assign busy = busy_reg;
 always @* begin
     state_next = STATE_IDLE;
 
-    input_eth_hdr_ready_next = 0;
-    input_eth_payload_tready_next = 0;
+    input_eth_hdr_ready_next = 1'b0;
+    input_eth_payload_tready_next = 1'b0;
 
-    store_eth_hdr = 0;
+    store_eth_hdr = 1'b0;
 
     frame_ptr_next = frame_ptr_reg;
 
-    output_axis_tdata_int = 0;
-    output_axis_tvalid_int = 0;
-    output_axis_tlast_int = 0;
-    output_axis_tuser_int = 0;
+    output_axis_tdata_int = 8'd0;
+    output_axis_tvalid_int = 1'b0;
+    output_axis_tlast_int = 1'b0;
+    output_axis_tuser_int = 1'b0;
 
     case (state_reg)
         STATE_IDLE: begin
             // idle state - wait for data
-            frame_ptr_next = 0;
-            input_eth_hdr_ready_next = 1;
+            frame_ptr_next = 8'd0;
+            input_eth_hdr_ready_next = 1'b1;
 
             if (input_eth_hdr_ready & input_eth_hdr_valid) begin
-                store_eth_hdr = 1;
-                input_eth_hdr_ready_next = 0;
-                if (output_axis_tready_int) begin
-                    output_axis_tvalid_int = 1;
+                store_eth_hdr = 1'b1;
+                input_eth_hdr_ready_next = 1'b0;
+                if (output_axis_tready_int_reg) begin
+                    output_axis_tvalid_int = 1'b1;
                     output_axis_tdata_int = input_eth_dest_mac[47:40];
-                    frame_ptr_next = 1;
+                    frame_ptr_next = 1'b1;
                 end
                 state_next = STATE_WRITE_HEADER;
             end else begin

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlValueId@@output_axis_tready_int to output_axis_tready_int_reg


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/eth_axis_tx.v
+++ b/rtl/eth_axis_tx.v
@@ -148,9 +148,9 @@ always @* begin
         end
         STATE_WRITE_HEADER: begin
             // write header
-            if (output_axis_tready_int) begin
+            if (output_axis_tready_int_reg) begin
                 frame_ptr_next = frame_ptr_reg+1;
-                output_axis_tvalid_int = 1;
+                output_axis_tvalid_int = 1'b1;
                 state_next = STATE_WRITE_HEADER;
                 case (frame_ptr_reg)
                     8'h00: output_axis_tdata_int = eth_dest_mac_reg[47:40];

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlValueId@@output_axis_tready_int to output_axis_tready_int_reg


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/eth_axis_tx.v
+++ b/rtl/eth_axis_tx.v
@@ -204,13 +204,10 @@ end
 always @(posedge clk) begin
     if (rst) begin
         state_reg <= STATE_IDLE;
-        frame_ptr_reg <= 0;
-        input_eth_hdr_ready_reg <= 0;
-        input_eth_payload_tready_reg <= 0;
-        eth_dest_mac_reg <= 0;
-        eth_src_mac_reg <= 0;
-        eth_type_reg <= 0;
-        busy_reg <= 0;
+        frame_ptr_reg <= 8'd0;
+        input_eth_hdr_ready_reg <= 1'b0;
+        input_eth_payload_tready_reg <= 1'b0;
+        busy_reg <= 1'b0;
     end else begin
         state_reg <= state_next;
 

ParseResult:
UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueId: state_next
                HdlValueId: state_reg
            HdlStmAssign
                HdlValueId: frame_ptr_next
                HdlValueId: frame_ptr_reg
            HdlStmAssign
                HdlValueId: input_eth_hdr_ready_next
                HdlValueId: input_eth_hdr_ready_reg
            HdlStmAssign
                HdlValueId: input_eth_payload_tready_next
                HdlValueId: input_eth_payload_tready_reg
            HdlStmAssign
                HdlOp: NE
                    list: ops
                        HdlValueId: state_next
                        HdlValueId: STATE_IDLE
                HdlValueId: busy_reg
            HdlStmIf
                HdlValueId: store_eth_hdr
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueId: input_eth_dest_mac
                            HdlValueId: eth_dest_mac_reg
                        HdlStmAssign
                            HdlValueId: input_eth_src_mac
                            HdlValueId: eth_src_mac_reg
                        HdlStmAssign
                            HdlValueId: input_eth_type
                            HdlValueId: eth_type_reg
                list: elifs

MOV HdlStmIf@@ to body
HdlStmIf
    HdlValueId: rst
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueId: STATE_IDLE
                HdlValueId: state_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: frame_ptr_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: input_eth_hdr_ready_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: input_eth_payload_tready_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: eth_dest_mac_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: eth_src_mac_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: eth_type_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: busy_reg
    list: elifs
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueId: state_next
                HdlValueId: state_reg
            HdlStmAssign
                HdlValueId: frame_ptr_next
                HdlValueId: frame_ptr_reg
            HdlStmAssign
                HdlValueId: input_eth_hdr_ready_next
                HdlValueId: input_eth_hdr_ready_reg
            HdlStmAssign
                HdlValueId: input_eth_payload_tready_next
                HdlValueId: input_eth_payload_tready_reg
            HdlStmAssign
                HdlOp: NE
                    list: ops
                        HdlValueId: state_next
                        HdlValueId: STATE_IDLE
                HdlValueId: busy_reg
            HdlStmIf
                HdlValueId: store_eth_hdr
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueId: input_eth_dest_mac
                            HdlValueId: eth_dest_mac_reg
                        HdlStmAssign
                            HdlValueId: input_eth_src_mac
                            HdlValueId: eth_src_mac_reg
                        HdlStmAssign
                            HdlValueId: input_eth_type
                            HdlValueId: eth_type_reg
                list: elifs

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: state_next
    HdlValueId: state_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: eth_dest_mac_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: eth_src_mac_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: eth_type_reg

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 


CommitId: 7a9fdb5fc34ca0fa33a20e338c8f0a84cd4f8f96
Add default case statements to avoid inferring latches
--- a/rtl/axis_demux_64_4.v
+++ b/rtl/axis_demux_64_4.v
@@ -123,6 +123,10 @@ always @* begin
             current_output_tvalid = output_3_axis_tvalid;
             current_output_tready = output_3_axis_tready;
         end
+        default: begin
+            current_output_tvalid = 1'b0;
+            current_output_tready = 1'b0;
+        end
     endcase
 end
 
ParseResult:
UPD HdlStmCase@@select_reg to select_reg
    INS HdlStmBlock@@SEQ to select_reg
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_output_tvalid
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_output_tready
                    HdlValueInt: 0


CommitId: 51b5335318c83e2662a0edb768b05ac7cbcd6603
Remove z from default states for FSM inference
--- a/rtl/arp_eth_tx_64.v
+++ b/rtl/arp_eth_tx_64.v
@@ -141,7 +141,7 @@ assign output_eth_type = output_eth_type_reg;
 assign busy = busy_reg;
 
 always @* begin
-    state_next = 2'bz;
+    state_next = STATE_IDLE;
 
     input_frame_ready_next = 0;
 
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueId@@STATE_IDLE to ops

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            DEL HdlValueInt@@z from ops


CommitId: 81673727a4307916b1e547d27c6883f6ff9a2d8e
Fix broadcast address check
--- a/rtl/arp.v
+++ b/rtl/arp.v
@@ -382,18 +382,26 @@ always @* begin
                 end
             end
         end else if (arp_request_valid && arp_request_ready) begin
-            if (~(arp_request_ip | subnet_mask) == 0) begin
-                // broadcast address
-                // (all bits in request IP set where subnet mask is clear)
+            if (arp_request_ip == 32'hffffffff) begin
+                // broadcast address; use broadcast MAC address
                 arp_response_valid_next = 1'b1;
                 arp_response_error_next = 1'b0;
                 arp_response_mac_next = 48'hffffffffffff;
             end else if (((arp_request_ip ^ gateway_ip) & subnet_mask) == 0) begin
-                // within subnet, look up IP directly
+                // within subnet
                 // (no bits differ between request IP and gateway IP where subnet mask is set)
-                cache_query_request_valid_next = 1'b1;
-                cache_query_request_ip_next = arp_request_ip;
-                arp_request_ip_next = arp_request_ip;
+                if (~(arp_request_ip | subnet_mask) == 0) begin
+                    // broadcast address; use broadcast MAC address
+                    // (all bits in request IP set where subnet mask is clear)
+                    arp_response_valid_next = 1'b1;
+                    arp_response_error_next = 1'b0;
+                    arp_response_mac_next = 48'hffffffffffff;
+                end else begin
+                    // unicast address; look up IP directly
+                    cache_query_request_valid_next = 1'b1;
+                    cache_query_request_ip_next = arp_request_ip;
+                    arp_request_ip_next = arp_request_ip;
+                end
             end else begin
                 // outside of subnet, so look up gateway address
                 cache_query_request_valid_next = 1'b1;
ParseResult:
UPD HdlStmIf@@ to 
    INS HdlOp@@EQ to 
    HdlOp: EQ
        list: ops
            HdlValueId: arp_request_ip
            HdlValueInt: ffffffff
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    MOV HdlOp@@EQ to 
    HdlOp: EQ
        list: ops
            HdlOp: NEG
                list: ops
                    HdlOp: OR
                        list: ops
                            HdlValueId: arp_request_ip
                            HdlValueId: subnet_mask
            HdlValueInt: 0
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: cache_query_request_valid_next
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: cache_query_request_ip_next
                    HdlValueId: arp_request_ip
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: arp_request_ip_next
                    HdlValueId: arp_request_ip

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: arp_response_valid_next
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: arp_response_error_next
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: arp_response_mac_next
                    HdlValueInt: ffffffffffff
    INS list@@elifs to 


CommitId: 385c9cc90ade29878d45e6634e2c70ce85d6d6d5
Fix Vivado block RAM inference
--- a/rtl/axis_frame_fifo.v
+++ b/rtl/axis_frame_fifo.v
@@ -69,10 +69,10 @@ reg [ADDR_WIDTH:0] wr_ptr_cur_reg = {ADDR_WIDTH+1{1'b0}}, wr_ptr_cur_next;
 reg [ADDR_WIDTH:0] rd_ptr_reg = {ADDR_WIDTH+1{1'b0}}, rd_ptr_next;
 
 reg [DATA_WIDTH+1-1:0] mem[(2**ADDR_WIDTH)-1:0];
+reg [DATA_WIDTH+1-1:0] mem_read_data_reg = {DATA_WIDTH+2{1'b0}};
+wire [DATA_WIDTH+1-1:0] mem_write_data;
 
-reg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};
 reg output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;
-reg output_axis_tlast_reg = 1'b0;
 
 // full when first MSB different but rest same
 wire full = ((wr_ptr_reg[ADDR_WIDTH] != rd_ptr_reg[ADDR_WIDTH]) &&

ParseResult:
UPD HdlIdDef@@output_axis_tdata_reg to mem_read_data_reg

INS HdlIdDef@@mem_write_data to objs
HdlIdDef: mem_write_data
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: wire
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlOp: ADD
                                list: ops
                                    HdlValueId: DATA_WIDTH
                                    HdlValueInt: 1
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

UPD HdlIdDef@@mem_read_data_reg to mem_read_data_reg
    INS HdlOp@@PARAMETRIZATION to mem_read_data_reg
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        INS list@@ops to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            INS HdlValueInt@@0 to ops
    UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
        INS HdlOp@@ADD to ops
        UPD HdlOp@@ADD to ADD
            INS list@@ops to ADD
            INS HdlValueInt@@2 to ops

UPD HdlIdDef@@output_axis_tdata_reg to output_axis_tdata_reg
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        MOV HdlValueId@@reg to ops
        HdlValueId: reg
        UPD HdlOp@@DOWNTO to SUB
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlOp@@SUB to ADD
            UPD HdlValueInt@@0 to 1
    UPD HdlOp@@PARAMETRIZATION to DOWNTO
    MOV HdlOp@@PARAMETRIZATION to output_axis_tdata_reg
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: DATA_WIDTH
                            HdlValueInt: 1
                    HdlValueInt: 0
    UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
        MOV HdlValueId@@DATA_WIDTH to ops
        HdlValueId: DATA_WIDTH

DEL HdlIdDef@@output_axis_tlast_reg from objs
HdlIdDef: output_axis_tlast_reg
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 385c9cc90ade29878d45e6634e2c70ce85d6d6d5
Fix Vivado block RAM inference
--- a/rtl/axis_frame_fifo.v
+++ b/rtl/axis_frame_fifo.v
@@ -94,9 +94,10 @@ reg good_frame_reg = 1'b0, good_frame_next;
 
 assign input_axis_tready = (~full | DROP_WHEN_FULL);
 
-assign output_axis_tdata = output_axis_tdata_reg;
 assign output_axis_tvalid = output_axis_tvalid_reg;
-assign output_axis_tlast = output_axis_tlast_reg;
+
+assign mem_write_data = {input_axis_tlast, input_axis_tdata};
+assign {output_axis_tlast, output_axis_tdata} = mem_read_data_reg;
 
 assign overflow = overflow_reg;
 assign bad_frame = bad_frame_reg;

ParseResult:
INS HdlStmAssign@@ to objs

UPD HdlStmAssign@@ to 
    INS HdlValueId@@mem_write_data to 

UPD HdlStmAssign@@ to 
    INS HdlValueId@@mem_read_data_reg to 
    INS HdlOp@@CONCAT to 
    UPD HdlOp@@CONCAT to CONCAT
        INS list@@ops to CONCAT

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@output_axis_tlast_reg to output_axis_tlast
    MOV HdlValueId@@output_axis_tlast_reg to 
    HdlValueId: output_axis_tlast_reg
    UPD HdlValueId@@output_axis_tlast to output_axis_tdata
    MOV HdlValueId@@output_axis_tlast to 
    HdlValueId: output_axis_tlast

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: output_axis_tdata_reg
    HdlValueId: output_axis_tdata


CommitId: 385c9cc90ade29878d45e6634e2c70ce85d6d6d5
Fix Vivado block RAM inference
--- a/rtl/axis_frame_fifo.v
+++ b/rtl/axis_frame_fifo.v
@@ -168,7 +169,7 @@ always @(posedge clk) begin
     end
 
     if (write) begin
-        mem[wr_ptr_cur_reg[ADDR_WIDTH-1:0]] <= {input_axis_tlast, input_axis_tdata};
+        mem[wr_ptr_cur_reg[ADDR_WIDTH-1:0]] <= mem_write_data;
     end
 end
 

ParseResult:
UPD HdlStmAssign@@ to 
    MOV HdlOp@@CONCAT to 
    HdlOp: CONCAT
        list: ops
            HdlValueId: input_axis_tlast
            HdlValueId: input_axis_tdata

UPD HdlStmAssign@@ to 
    INS HdlValueId@@mem_write_data to 


CommitId: 385c9cc90ade29878d45e6634e2c70ce85d6d6d5
Fix Vivado block RAM inference
--- a/rtl/axis_frame_fifo.v
+++ b/rtl/axis_frame_fifo.v
@@ -204,7 +205,7 @@ always @(posedge clk) begin
     end
 
     if (read) begin
-        {output_axis_tlast_reg, output_axis_tdata_reg} <= mem[rd_ptr_reg[ADDR_WIDTH-1:0]];
+        mem_read_data_reg <= mem[rd_ptr_reg[ADDR_WIDTH-1:0]];
     end
 end
 
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@output_axis_tdata_reg to mem_read_data_reg
        MOV HdlValueId@@output_axis_tdata_reg to ops
        HdlValueId: output_axis_tdata_reg
        DEL HdlValueId@@output_axis_tlast_reg from ops
        DEL list@@ops from CONCAT
    DEL HdlOp@@CONCAT from 


CommitId: 56a3b8fe9240155438922bfb6fb5d05b509c844d
Fix indexed part select error in degenerate case when M_COUNT = 1
--- a/rtl/axis_switch.v
+++ b/rtl/axis_switch.v
@@ -182,17 +182,24 @@ generate
             drop_next = drop_reg && !(int_s_axis_tvalid[m] && int_s_axis_tready[m] && int_s_axis_tlast[m]);
             select_valid_next = select_valid_reg && !(int_s_axis_tvalid[m] && int_s_axis_tready[m] && int_s_axis_tlast[m]);
 
-            if (int_s_axis_tvalid[m] && !select_valid_reg) begin
-                select_next = 1'b0;
+            if (int_s_axis_tvalid[m] && !select_valid_reg && !drop_reg) begin
+                select_next = 0;
                 select_valid_next = 1'b0;
                 drop_next = 1'b1;
                 for (k = 0; k < M_COUNT; k = k + 1) begin
                     if (M_BASE == 0) begin
-                        // M_BASE is zero, route with $clog2(M_COUNT) MSBs of tdest as port index
-                        if (int_s_axis_tdest[m*DEST_WIDTH+(DEST_WIDTH-CL_M_COUNT) +: CL_M_COUNT] == k && (M_CONNECT & (1 << (m+k*S_COUNT)))) begin
-                            select_next = k;
+                        if (M_COUNT == 1) begin
+                            // M_BASE is zero with only one output port, ignore tdest
+                            select_next = 0;
                             select_valid_next = 1'b1;
                             drop_next = 1'b0;
+                        end else begin
+                            // M_BASE is zero, route with $clog2(M_COUNT) MSBs of tdest as port index
+                            if (int_s_axis_tdest[m*DEST_WIDTH+(DEST_WIDTH-CL_M_COUNT) +: CL_M_COUNT] == k && (M_CONNECT & (1 << (m+k*S_COUNT)))) begin
+                                select_next = k;
+                                select_valid_next = 1'b1;
+                                drop_next = 1'b0;
+                            end
                         end
                     end else if (M_TOP == 0) begin
                         // M_TOP is zero, assume equal to M_BASE
ParseResult:
UPD HdlStmIf@@ to 
    INS HdlOp@@AND_LOG to 
    UPD HdlOp@@AND_LOG to AND_LOG
        INS list@@ops to AND_LOG
        INS HdlOp@@NEG_LOG to ops
        HdlOp: NEG_LOG
            list: ops
                HdlValueId: drop_reg

UPD HdlStmIf@@ to 
    MOV HdlOp@@AND_LOG to 
    HdlOp: AND_LOG
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: int_s_axis_tvalid
                    HdlValueId: m
            HdlOp: NEG_LOG
                list: ops
                    HdlValueId: select_valid_reg

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    INS HdlOp@@EQ to 
    HdlOp: EQ
        list: ops
            HdlValueId: M_COUNT
            HdlValueInt: 1
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: select_next
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: select_valid_next
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: drop_next
                    HdlValueInt: 0
    INS list@@elifs to 

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: AND_LOG
                    list: ops
                        HdlOp: EQ
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: int_s_axis_tdest
                                        HdlOp: PART_SELECT_POST
                                            list: ops
                                                HdlOp: ADD
                                                    list: ops
                                                        HdlOp: MUL
                                                            list: ops
                                                                HdlValueId: m
                                                                HdlValueId: DEST_WIDTH
                                                        HdlOp: SUB
                                                            list: ops
                                                                HdlValueId: DEST_WIDTH
                                                                HdlValueId: CL_M_COUNT
                                                HdlValueId: CL_M_COUNT
                                HdlValueId: k
                        HdlOp: AND
                            list: ops
                                HdlValueId: M_CONNECT
                                HdlOp: SLL
                                    list: ops
                                        HdlValueInt: 1
                                        HdlOp: ADD
                                            list: ops
                                                HdlValueId: m
                                                HdlOp: MUL
                                                    list: ops
                                                        HdlValueId: k
                                                        HdlValueId: S_COUNT
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: select_next
                                HdlValueId: k
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: select_valid_next
                                HdlValueInt: 1
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: drop_next
                                HdlValueInt: 0
                list: elifs


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/eth_mac_10g_rx.v
+++ b/rtl/eth_mac_10g_rx.v
@@ -231,39 +231,39 @@ end
 always @* begin
     state_next = STATE_IDLE;
 
-    reset_crc = 0;
-    update_crc = 0;
+    reset_crc = 1'b0;
+    update_crc = 1'b0;
 
     last_cycle_tkeep_next = last_cycle_tkeep_reg;
 
-    output_axis_tdata_next = 0;
-    output_axis_tkeep_next = 0;
-    output_axis_tvalid_next = 0;
-    output_axis_tlast_next = 0;
-    output_axis_tuser_next = 0;
+    output_axis_tdata_next = 64'd0;
+    output_axis_tkeep_next = 8'd0;
+    output_axis_tvalid_next = 1'b0;
+    output_axis_tlast_next = 1'b0;
+    output_axis_tuser_next = 1'b0;
 
-    error_bad_frame_next = 0;
-    error_bad_fcs_next = 0;
+    error_bad_frame_next = 1'b0;
+    error_bad_fcs_next = 1'b0;
 
     case (state_reg)
         STATE_IDLE: begin
             // idle state - wait for packet
-            reset_crc = 1;
+            reset_crc = 1'b1;
 
             if (xgmii_rxc_d1[0] && xgmii_rxd_d1[7:0] == 8'hfb) begin
                 // start condition
                 if (detect_error_masked) begin
                     // error in first data word
-                    output_axis_tdata_next = 0;
-                    output_axis_tkeep_next = 1;
-                    output_axis_tvalid_next = 1;
-                    output_axis_tlast_next = 1;
-                    output_axis_tuser_next = 1;
-                    error_bad_frame_next = 1;
+                    output_axis_tdata_next = 64'd0;
+                    output_axis_tkeep_next = 8'h01;
+                    output_axis_tvalid_next = 1'b1;
+                    output_axis_tlast_next = 1'b1;
+                    output_axis_tuser_next = 1'b1;
+                    error_bad_frame_next = 1'b1;
                     state_next = STATE_IDLE;
                 end else begin
-                    reset_crc = 0;
-                    update_crc = 1;
+                    reset_crc = 1'b0;
+                    update_crc = 1'b1;
                     state_next = STATE_PAYLOAD;
                 end
             end else begin

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueInt@@1 to 01


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/eth_mac_10g_rx.v
+++ b/rtl/eth_mac_10g_rx.v
@@ -348,22 +348,14 @@ always @(posedge clk) begin
     if (rst) begin
         state_reg <= STATE_IDLE;
 
-        output_axis_tdata_reg <= 0;
-        output_axis_tkeep_reg <= 0;
-        output_axis_tvalid_reg <= 0;
-        output_axis_tlast_reg <= 0;
-        output_axis_tuser_reg <= 0;
+        output_axis_tvalid_reg <= 1'b0;
 
-        last_cycle_tkeep_reg <= 0;
-
-        error_bad_frame_reg <= 0;
-        error_bad_fcs_reg <= 0;
+        error_bad_frame_reg <= 1'b0;
+        error_bad_fcs_reg <= 1'b0;
 
         crc_state <= 32'hFFFFFFFF;
         crc_state3 <= 32'hFFFFFFFF;
-        crc_valid7_save <= 0;
-
-        detect_term_save <= 0;
+        crc_valid7_save <= 1'b0;
 
         xgmii_rxd_d0 <= 64'h0707070707070707;
         xgmii_rxd_d1 <= 64'h0707070707070707;

ParseResult:
UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueId: state_next
                HdlValueId: state_reg
            HdlStmAssign
                HdlValueId: output_axis_tdata_next
                HdlValueId: output_axis_tdata_reg
            HdlStmAssign
                HdlValueId: output_axis_tkeep_next
                HdlValueId: output_axis_tkeep_reg
            HdlStmAssign
                HdlValueId: output_axis_tvalid_next
                HdlValueId: output_axis_tvalid_reg
            HdlStmAssign
                HdlValueId: output_axis_tlast_next
                HdlValueId: output_axis_tlast_reg
            HdlStmAssign
                HdlValueId: output_axis_tuser_next
                HdlValueId: output_axis_tuser_reg
            HdlStmAssign
                HdlValueId: last_cycle_tkeep_next
                HdlValueId: last_cycle_tkeep_reg
            HdlStmAssign
                HdlValueId: error_bad_frame_next
                HdlValueId: error_bad_frame_reg
            HdlStmAssign
                HdlValueId: error_bad_fcs_next
                HdlValueId: error_bad_fcs_reg
            HdlStmIf
                HdlOp: AND_LOG
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: xgmii_rxc
                                HdlValueInt: 0
                        HdlOp: EQ
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: xgmii_rxd
                                        HdlOp: DOWNTO
                                            list: ops
                                                HdlValueInt: 7
                                                HdlValueInt: 0
                                HdlValueInt: fb
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: lanes_swapped
                        HdlStmAssign
                            HdlValueId: xgmii_rxd
                            HdlValueId: xgmii_rxd_d0
                        HdlStmAssign
                            HdlValueId: xgmii_rxc
                            HdlValueId: xgmii_rxc_d0
                list: elifs
                    tuple
                        HdlOp: AND_LOG
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: xgmii_rxc
                                        HdlValueInt: 4
                                HdlOp: EQ
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: xgmii_rxd
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 39
                                                        HdlValueInt: 32
                                        HdlValueInt: fb
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueInt: 1
                                    HdlValueId: lanes_swapped
                                HdlStmAssign
                                    HdlValueInt: 0707070707070707
                                    HdlValueId: xgmii_rxd_d0
                                HdlStmAssign
                                    HdlValueInt: 11111111
                                    HdlValueId: xgmii_rxc_d0
                    tuple
                        HdlValueId: lanes_swapped
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlOp: CONCAT
                                        list: ops
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: xgmii_rxd
                                                    HdlOp: DOWNTO
                                                        list: ops
                                                            HdlValueInt: 31
                                                            HdlValueInt: 0
                                            HdlValueId: swap_rxd
                                    HdlValueId: xgmii_rxd_d0
                                HdlStmAssign
                                    HdlOp: CONCAT
                                        list: ops
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: xgmii_rxc
                                                    HdlOp: DOWNTO
                                                        list: ops
                                                            HdlValueInt: 3
                                                            HdlValueInt: 0
                                            HdlValueId: swap_rxc
                                    HdlValueId: xgmii_rxc_d0
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueId: xgmii_rxd
                            HdlValueId: xgmii_rxd_d0
                        HdlStmAssign
                            HdlValueId: xgmii_rxc
                            HdlValueId: xgmii_rxc_d0
            HdlStmAssign
                HdlOp: INDEX
                    list: ops
                        HdlValueId: xgmii_rxd
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 63
                                HdlValueInt: 32
                HdlValueId: swap_rxd
            HdlStmAssign
                HdlOp: INDEX
                    list: ops
                        HdlValueId: xgmii_rxc
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 7
                                HdlValueInt: 4
                HdlValueId: swap_rxc
            HdlStmAssign
                HdlValueId: xgmii_rxd_d0
                HdlValueId: xgmii_rxd_d1
            HdlStmAssign
                HdlValueId: xgmii_rxc_d0
                HdlValueId: xgmii_rxc_d1
            HdlStmAssign
                HdlValueId: detect_term
                HdlValueId: detect_term_save
            HdlStmIf
                HdlValueId: reset_crc
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: ffffffff
                            HdlValueId: crc_state
                        HdlStmAssign
                            HdlValueInt: ffffffff
                            HdlValueId: crc_state3
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: crc_valid7_save
                list: elifs
                    tuple
                        HdlValueId: update_crc
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueId: crc_next7
                                    HdlValueId: crc_state
                                HdlStmAssign
                                    HdlValueId: crc_next3
                                    HdlValueId: crc_state3
                                HdlStmAssign
                                    HdlValueId: crc_valid7
                                    HdlValueId: crc_valid7_save

MOV HdlStmIf@@ to body
HdlStmIf
    HdlValueId: rst
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueId: STATE_IDLE
                HdlValueId: state_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: output_axis_tdata_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: output_axis_tkeep_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: output_axis_tvalid_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: output_axis_tlast_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: output_axis_tuser_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: last_cycle_tkeep_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: error_bad_frame_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: error_bad_fcs_reg
            HdlStmAssign
                HdlValueInt: ffffffff
                HdlValueId: crc_state
            HdlStmAssign
                HdlValueInt: ffffffff
                HdlValueId: crc_state3
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: crc_valid7_save
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: detect_term_save
            HdlStmAssign
                HdlValueInt: 0707070707070707
                HdlValueId: xgmii_rxd_d0
            HdlStmAssign
                HdlValueInt: 0707070707070707
                HdlValueId: xgmii_rxd_d1
            HdlStmAssign
                HdlValueInt: 11111111
                HdlValueId: xgmii_rxc_d0
            HdlStmAssign
                HdlValueInt: 11111111
                HdlValueId: xgmii_rxc_d1
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: lanes_swapped
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: swap_rxd
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: swap_rxc
    list: elifs
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueId: state_next
                HdlValueId: state_reg
            HdlStmAssign
                HdlValueId: output_axis_tdata_next
                HdlValueId: output_axis_tdata_reg
            HdlStmAssign
                HdlValueId: output_axis_tkeep_next
                HdlValueId: output_axis_tkeep_reg
            HdlStmAssign
                HdlValueId: output_axis_tvalid_next
                HdlValueId: output_axis_tvalid_reg
            HdlStmAssign
                HdlValueId: output_axis_tlast_next
                HdlValueId: output_axis_tlast_reg
            HdlStmAssign
                HdlValueId: output_axis_tuser_next
                HdlValueId: output_axis_tuser_reg
            HdlStmAssign
                HdlValueId: last_cycle_tkeep_next
                HdlValueId: last_cycle_tkeep_reg
            HdlStmAssign
                HdlValueId: error_bad_frame_next
                HdlValueId: error_bad_frame_reg
            HdlStmAssign
                HdlValueId: error_bad_fcs_next
                HdlValueId: error_bad_fcs_reg
            HdlStmIf
                HdlOp: AND_LOG
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: xgmii_rxc
                                HdlValueInt: 0
                        HdlOp: EQ
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: xgmii_rxd
                                        HdlOp: DOWNTO
                                            list: ops
                                                HdlValueInt: 7
                                                HdlValueInt: 0
                                HdlValueInt: fb
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: lanes_swapped
                        HdlStmAssign
                            HdlValueId: xgmii_rxd
                            HdlValueId: xgmii_rxd_d0
                        HdlStmAssign
                            HdlValueId: xgmii_rxc
                            HdlValueId: xgmii_rxc_d0
                list: elifs
                    tuple
                        HdlOp: AND_LOG
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: xgmii_rxc
                                        HdlValueInt: 4
                                HdlOp: EQ
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: xgmii_rxd
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 39
                                                        HdlValueInt: 32
                                        HdlValueInt: fb
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueInt: 1
                                    HdlValueId: lanes_swapped
                                HdlStmAssign
                                    HdlValueInt: 0707070707070707
                                    HdlValueId: xgmii_rxd_d0
                                HdlStmAssign
                                    HdlValueInt: 11111111
                                    HdlValueId: xgmii_rxc_d0
                    tuple
                        HdlValueId: lanes_swapped
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlOp: CONCAT
                                        list: ops
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: xgmii_rxd
                                                    HdlOp: DOWNTO
                                                        list: ops
                                                            HdlValueInt: 31
                                                            HdlValueInt: 0
                                            HdlValueId: swap_rxd
                                    HdlValueId: xgmii_rxd_d0
                                HdlStmAssign
                                    HdlOp: CONCAT
                                        list: ops
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: xgmii_rxc
                                                    HdlOp: DOWNTO
                                                        list: ops
                                                            HdlValueInt: 3
                                                            HdlValueInt: 0
                                            HdlValueId: swap_rxc
                                    HdlValueId: xgmii_rxc_d0
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueId: xgmii_rxd
                            HdlValueId: xgmii_rxd_d0
                        HdlStmAssign
                            HdlValueId: xgmii_rxc
                            HdlValueId: xgmii_rxc_d0
            HdlStmAssign
                HdlOp: INDEX
                    list: ops
                        HdlValueId: xgmii_rxd
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 63
                                HdlValueInt: 32
                HdlValueId: swap_rxd
            HdlStmAssign
                HdlOp: INDEX
                    list: ops
                        HdlValueId: xgmii_rxc
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 7
                                HdlValueInt: 4
                HdlValueId: swap_rxc
            HdlStmAssign
                HdlValueId: xgmii_rxd_d0
                HdlValueId: xgmii_rxd_d1
            HdlStmAssign
                HdlValueId: xgmii_rxc_d0
                HdlValueId: xgmii_rxc_d1
            HdlStmAssign
                HdlValueId: detect_term
                HdlValueId: detect_term_save
            HdlStmIf
                HdlValueId: reset_crc
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: ffffffff
                            HdlValueId: crc_state
                        HdlStmAssign
                            HdlValueInt: ffffffff
                            HdlValueId: crc_state3
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: crc_valid7_save
                list: elifs
                    tuple
                        HdlValueId: update_crc
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueId: crc_next7
                                    HdlValueId: crc_state
                                HdlStmAssign
                                    HdlValueId: crc_next3
                                    HdlValueId: crc_state3
                                HdlStmAssign
                                    HdlValueId: crc_valid7
                                    HdlValueId: crc_valid7_save

UPD HdlStmProcess@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlValueId: rst
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueId: STATE_IDLE
                            HdlValueId: state_reg
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: output_axis_tdata_reg
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: output_axis_tkeep_reg
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: output_axis_tvalid_reg
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: output_axis_tlast_reg
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: output_axis_tuser_reg
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: last_cycle_tkeep_reg
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: error_bad_frame_reg
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: error_bad_fcs_reg
                        HdlStmAssign
                            HdlValueInt: ffffffff
                            HdlValueId: crc_state
                        HdlStmAssign
                            HdlValueInt: ffffffff
                            HdlValueId: crc_state3
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: crc_valid7_save
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: detect_term_save
                        HdlStmAssign
                            HdlValueInt: 0707070707070707
                            HdlValueId: xgmii_rxd_d0
                        HdlStmAssign
                            HdlValueInt: 0707070707070707
                            HdlValueId: xgmii_rxd_d1
                        HdlStmAssign
                            HdlValueInt: 11111111
                            HdlValueId: xgmii_rxc_d0
                        HdlStmAssign
                            HdlValueInt: 11111111
                            HdlValueId: xgmii_rxc_d1
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: lanes_swapped
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: swap_rxd
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: swap_rxc
                list: elifs
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueId: state_next
                            HdlValueId: state_reg
                        HdlStmAssign
                            HdlValueId: output_axis_tdata_next
                            HdlValueId: output_axis_tdata_reg
                        HdlStmAssign
                            HdlValueId: output_axis_tkeep_next
                            HdlValueId: output_axis_tkeep_reg
                        HdlStmAssign
                            HdlValueId: output_axis_tvalid_next
                            HdlValueId: output_axis_tvalid_reg
                        HdlStmAssign
                            HdlValueId: output_axis_tlast_next
                            HdlValueId: output_axis_tlast_reg
                        HdlStmAssign
                            HdlValueId: output_axis_tuser_next
                            HdlValueId: output_axis_tuser_reg
                        HdlStmAssign
                            HdlValueId: last_cycle_tkeep_next
                            HdlValueId: last_cycle_tkeep_reg
                        HdlStmAssign
                            HdlValueId: error_bad_frame_next
                            HdlValueId: error_bad_frame_reg
                        HdlStmAssign
                            HdlValueId: error_bad_fcs_next
                            HdlValueId: error_bad_fcs_reg
                        HdlStmIf
                            HdlOp: AND_LOG
                                list: ops
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: xgmii_rxc
                                            HdlValueInt: 0
                                    HdlOp: EQ
                                        list: ops
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: xgmii_rxd
                                                    HdlOp: DOWNTO
                                                        list: ops
                                                            HdlValueInt: 7
                                                            HdlValueInt: 0
                                            HdlValueInt: fb
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmAssign
                                        HdlValueInt: 0
                                        HdlValueId: lanes_swapped
                                    HdlStmAssign
                                        HdlValueId: xgmii_rxd
                                        HdlValueId: xgmii_rxd_d0
                                    HdlStmAssign
                                        HdlValueId: xgmii_rxc
                                        HdlValueId: xgmii_rxc_d0
                            list: elifs
                                tuple
                                    HdlOp: AND_LOG
                                        list: ops
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: xgmii_rxc
                                                    HdlValueInt: 4
                                            HdlOp: EQ
                                                list: ops
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlValueId: xgmii_rxd
                                                            HdlOp: DOWNTO
                                                                list: ops
                                                                    HdlValueInt: 39
                                                                    HdlValueInt: 32
                                                    HdlValueInt: fb
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueInt: 1
                                                HdlValueId: lanes_swapped
                                            HdlStmAssign
                                                HdlValueInt: 0707070707070707
                                                HdlValueId: xgmii_rxd_d0
                                            HdlStmAssign
                                                HdlValueInt: 11111111
                                                HdlValueId: xgmii_rxc_d0
                                tuple
                                    HdlValueId: lanes_swapped
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: xgmii_rxd
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 0
                                                        HdlValueId: swap_rxd
                                                HdlValueId: xgmii_rxd_d0
                                            HdlStmAssign
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: xgmii_rxc
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 3
                                                                        HdlValueInt: 0
                                                        HdlValueId: swap_rxc
                                                HdlValueId: xgmii_rxc_d0
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmAssign
                                        HdlValueId: xgmii_rxd
                                        HdlValueId: xgmii_rxd_d0
                                    HdlStmAssign
                                        HdlValueId: xgmii_rxc
                                        HdlValueId: xgmii_rxc_d0
                        HdlStmAssign
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: xgmii_rxd
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 63
                                            HdlValueInt: 32
                            HdlValueId: swap_rxd
                        HdlStmAssign
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: xgmii_rxc
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 7
                                            HdlValueInt: 4
                            HdlValueId: swap_rxc
                        HdlStmAssign
                            HdlValueId: xgmii_rxd_d0
                            HdlValueId: xgmii_rxd_d1
                        HdlStmAssign
                            HdlValueId: xgmii_rxc_d0
                            HdlValueId: xgmii_rxc_d1
                        HdlStmAssign
                            HdlValueId: detect_term
                            HdlValueId: detect_term_save
                        HdlStmIf
                            HdlValueId: reset_crc
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmAssign
                                        HdlValueInt: ffffffff
                                        HdlValueId: crc_state
                                    HdlStmAssign
                                        HdlValueInt: ffffffff
                                        HdlValueId: crc_state3
                                    HdlStmAssign
                                        HdlValueInt: 0
                                        HdlValueId: crc_valid7_save
                            list: elifs
                                tuple
                                    HdlValueId: update_crc
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueId: crc_next7
                                                HdlValueId: crc_state
                                            HdlStmAssign
                                                HdlValueId: crc_next3
                                                HdlValueId: crc_state3
                                            HdlStmAssign
                                                HdlValueId: crc_valid7
                                                HdlValueId: crc_valid7_save

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: output_axis_tdata_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: output_axis_tkeep_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: output_axis_tlast_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: output_axis_tuser_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: last_cycle_tkeep_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: detect_term_save


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/eth_mac_10g_rx.v
+++ b/rtl/eth_mac_10g_rx.v
@@ -371,29 +363,21 @@ always @(posedge clk) begin
         xgmii_rxc_d0 <= 8'b11111111;
         xgmii_rxc_d1 <= 8'b11111111;
 
-        lanes_swapped <= 0;
-        swap_rxd <= 0;
-        swap_rxc <= 0;
+        lanes_swapped <= 1'b0;
     end else begin
         state_reg <= state_next;
 
-        output_axis_tdata_reg <= output_axis_tdata_next;
-        output_axis_tkeep_reg <= output_axis_tkeep_next;
         output_axis_tvalid_reg <= output_axis_tvalid_next;
-        output_axis_tlast_reg <= output_axis_tlast_next;
-        output_axis_tuser_reg <= output_axis_tuser_next;
-
-        last_cycle_tkeep_reg <= last_cycle_tkeep_next;
 
         error_bad_frame_reg <= error_bad_frame_next;
         error_bad_fcs_reg <= error_bad_fcs_next;
 
         if (xgmii_rxc[0] && xgmii_rxd[7:0] == 8'hfb) begin
-            lanes_swapped <= 0;
+            lanes_swapped <= 1'b0;
             xgmii_rxd_d0 <= xgmii_rxd;
             xgmii_rxc_d0 <= xgmii_rxc;
         end else if (xgmii_rxc[4] && xgmii_rxd[39:32] == 8'hfb) begin
-            lanes_swapped <= 1;
+            lanes_swapped <= 1'b1;
             xgmii_rxd_d0 <= 64'h0707070707070707;
             xgmii_rxc_d0 <= 8'b11111111;
         end else if (lanes_swapped) begin

ParseResult:
UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueId: state_next
                HdlValueId: state_reg
            HdlStmAssign
                HdlValueId: output_axis_tdata_next
                HdlValueId: output_axis_tdata_reg
            HdlStmAssign
                HdlValueId: output_axis_tkeep_next
                HdlValueId: output_axis_tkeep_reg
            HdlStmAssign
                HdlValueId: output_axis_tvalid_next
                HdlValueId: output_axis_tvalid_reg
            HdlStmAssign
                HdlValueId: output_axis_tlast_next
                HdlValueId: output_axis_tlast_reg
            HdlStmAssign
                HdlValueId: output_axis_tuser_next
                HdlValueId: output_axis_tuser_reg
            HdlStmAssign
                HdlValueId: last_cycle_tkeep_next
                HdlValueId: last_cycle_tkeep_reg
            HdlStmAssign
                HdlValueId: error_bad_frame_next
                HdlValueId: error_bad_frame_reg
            HdlStmAssign
                HdlValueId: error_bad_fcs_next
                HdlValueId: error_bad_fcs_reg
            HdlStmIf
                HdlOp: AND_LOG
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: xgmii_rxc
                                HdlValueInt: 0
                        HdlOp: EQ
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: xgmii_rxd
                                        HdlOp: DOWNTO
                                            list: ops
                                                HdlValueInt: 7
                                                HdlValueInt: 0
                                HdlValueInt: fb
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: lanes_swapped
                        HdlStmAssign
                            HdlValueId: xgmii_rxd
                            HdlValueId: xgmii_rxd_d0
                        HdlStmAssign
                            HdlValueId: xgmii_rxc
                            HdlValueId: xgmii_rxc_d0
                list: elifs
                    tuple
                        HdlOp: AND_LOG
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: xgmii_rxc
                                        HdlValueInt: 4
                                HdlOp: EQ
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: xgmii_rxd
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 39
                                                        HdlValueInt: 32
                                        HdlValueInt: fb
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueInt: 1
                                    HdlValueId: lanes_swapped
                                HdlStmAssign
                                    HdlValueInt: 0707070707070707
                                    HdlValueId: xgmii_rxd_d0
                                HdlStmAssign
                                    HdlValueInt: 11111111
                                    HdlValueId: xgmii_rxc_d0
                    tuple
                        HdlValueId: lanes_swapped
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlOp: CONCAT
                                        list: ops
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: xgmii_rxd
                                                    HdlOp: DOWNTO
                                                        list: ops
                                                            HdlValueInt: 31
                                                            HdlValueInt: 0
                                            HdlValueId: swap_rxd
                                    HdlValueId: xgmii_rxd_d0
                                HdlStmAssign
                                    HdlOp: CONCAT
                                        list: ops
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: xgmii_rxc
                                                    HdlOp: DOWNTO
                                                        list: ops
                                                            HdlValueInt: 3
                                                            HdlValueInt: 0
                                            HdlValueId: swap_rxc
                                    HdlValueId: xgmii_rxc_d0
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueId: xgmii_rxd
                            HdlValueId: xgmii_rxd_d0
                        HdlStmAssign
                            HdlValueId: xgmii_rxc
                            HdlValueId: xgmii_rxc_d0
            HdlStmAssign
                HdlOp: INDEX
                    list: ops
                        HdlValueId: xgmii_rxd
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 63
                                HdlValueInt: 32
                HdlValueId: swap_rxd
            HdlStmAssign
                HdlOp: INDEX
                    list: ops
                        HdlValueId: xgmii_rxc
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 7
                                HdlValueInt: 4
                HdlValueId: swap_rxc
            HdlStmAssign
                HdlValueId: xgmii_rxd_d0
                HdlValueId: xgmii_rxd_d1
            HdlStmAssign
                HdlValueId: xgmii_rxc_d0
                HdlValueId: xgmii_rxc_d1
            HdlStmAssign
                HdlValueId: detect_term
                HdlValueId: detect_term_save
            HdlStmIf
                HdlValueId: reset_crc
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: ffffffff
                            HdlValueId: crc_state
                        HdlStmAssign
                            HdlValueInt: ffffffff
                            HdlValueId: crc_state3
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: crc_valid7_save
                list: elifs
                    tuple
                        HdlValueId: update_crc
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueId: crc_next7
                                    HdlValueId: crc_state
                                HdlStmAssign
                                    HdlValueId: crc_next3
                                    HdlValueId: crc_state3
                                HdlStmAssign
                                    HdlValueId: crc_valid7
                                    HdlValueId: crc_valid7_save

MOV HdlStmIf@@ to body
HdlStmIf
    HdlValueId: rst
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueId: STATE_IDLE
                HdlValueId: state_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: output_axis_tdata_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: output_axis_tkeep_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: output_axis_tvalid_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: output_axis_tlast_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: output_axis_tuser_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: last_cycle_tkeep_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: error_bad_frame_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: error_bad_fcs_reg
            HdlStmAssign
                HdlValueInt: ffffffff
                HdlValueId: crc_state
            HdlStmAssign
                HdlValueInt: ffffffff
                HdlValueId: crc_state3
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: crc_valid7_save
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: detect_term_save
            HdlStmAssign
                HdlValueInt: 0707070707070707
                HdlValueId: xgmii_rxd_d0
            HdlStmAssign
                HdlValueInt: 0707070707070707
                HdlValueId: xgmii_rxd_d1
            HdlStmAssign
                HdlValueInt: 11111111
                HdlValueId: xgmii_rxc_d0
            HdlStmAssign
                HdlValueInt: 11111111
                HdlValueId: xgmii_rxc_d1
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: lanes_swapped
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: swap_rxd
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: swap_rxc
    list: elifs
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueId: state_next
                HdlValueId: state_reg
            HdlStmAssign
                HdlValueId: output_axis_tdata_next
                HdlValueId: output_axis_tdata_reg
            HdlStmAssign
                HdlValueId: output_axis_tkeep_next
                HdlValueId: output_axis_tkeep_reg
            HdlStmAssign
                HdlValueId: output_axis_tvalid_next
                HdlValueId: output_axis_tvalid_reg
            HdlStmAssign
                HdlValueId: output_axis_tlast_next
                HdlValueId: output_axis_tlast_reg
            HdlStmAssign
                HdlValueId: output_axis_tuser_next
                HdlValueId: output_axis_tuser_reg
            HdlStmAssign
                HdlValueId: last_cycle_tkeep_next
                HdlValueId: last_cycle_tkeep_reg
            HdlStmAssign
                HdlValueId: error_bad_frame_next
                HdlValueId: error_bad_frame_reg
            HdlStmAssign
                HdlValueId: error_bad_fcs_next
                HdlValueId: error_bad_fcs_reg
            HdlStmIf
                HdlOp: AND_LOG
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: xgmii_rxc
                                HdlValueInt: 0
                        HdlOp: EQ
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: xgmii_rxd
                                        HdlOp: DOWNTO
                                            list: ops
                                                HdlValueInt: 7
                                                HdlValueInt: 0
                                HdlValueInt: fb
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: lanes_swapped
                        HdlStmAssign
                            HdlValueId: xgmii_rxd
                            HdlValueId: xgmii_rxd_d0
                        HdlStmAssign
                            HdlValueId: xgmii_rxc
                            HdlValueId: xgmii_rxc_d0
                list: elifs
                    tuple
                        HdlOp: AND_LOG
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: xgmii_rxc
                                        HdlValueInt: 4
                                HdlOp: EQ
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: xgmii_rxd
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 39
                                                        HdlValueInt: 32
                                        HdlValueInt: fb
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueInt: 1
                                    HdlValueId: lanes_swapped
                                HdlStmAssign
                                    HdlValueInt: 0707070707070707
                                    HdlValueId: xgmii_rxd_d0
                                HdlStmAssign
                                    HdlValueInt: 11111111
                                    HdlValueId: xgmii_rxc_d0
                    tuple
                        HdlValueId: lanes_swapped
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlOp: CONCAT
                                        list: ops
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: xgmii_rxd
                                                    HdlOp: DOWNTO
                                                        list: ops
                                                            HdlValueInt: 31
                                                            HdlValueInt: 0
                                            HdlValueId: swap_rxd
                                    HdlValueId: xgmii_rxd_d0
                                HdlStmAssign
                                    HdlOp: CONCAT
                                        list: ops
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: xgmii_rxc
                                                    HdlOp: DOWNTO
                                                        list: ops
                                                            HdlValueInt: 3
                                                            HdlValueInt: 0
                                            HdlValueId: swap_rxc
                                    HdlValueId: xgmii_rxc_d0
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueId: xgmii_rxd
                            HdlValueId: xgmii_rxd_d0
                        HdlStmAssign
                            HdlValueId: xgmii_rxc
                            HdlValueId: xgmii_rxc_d0
            HdlStmAssign
                HdlOp: INDEX
                    list: ops
                        HdlValueId: xgmii_rxd
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 63
                                HdlValueInt: 32
                HdlValueId: swap_rxd
            HdlStmAssign
                HdlOp: INDEX
                    list: ops
                        HdlValueId: xgmii_rxc
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 7
                                HdlValueInt: 4
                HdlValueId: swap_rxc
            HdlStmAssign
                HdlValueId: xgmii_rxd_d0
                HdlValueId: xgmii_rxd_d1
            HdlStmAssign
                HdlValueId: xgmii_rxc_d0
                HdlValueId: xgmii_rxc_d1
            HdlStmAssign
                HdlValueId: detect_term
                HdlValueId: detect_term_save
            HdlStmIf
                HdlValueId: reset_crc
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: ffffffff
                            HdlValueId: crc_state
                        HdlStmAssign
                            HdlValueInt: ffffffff
                            HdlValueId: crc_state3
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: crc_valid7_save
                list: elifs
                    tuple
                        HdlValueId: update_crc
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueId: crc_next7
                                    HdlValueId: crc_state
                                HdlStmAssign
                                    HdlValueId: crc_next3
                                    HdlValueId: crc_state3
                                HdlStmAssign
                                    HdlValueId: crc_valid7
                                    HdlValueId: crc_valid7_save

UPD HdlStmProcess@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlValueId: rst
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueId: STATE_IDLE
                            HdlValueId: state_reg
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: output_axis_tdata_reg
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: output_axis_tkeep_reg
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: output_axis_tvalid_reg
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: output_axis_tlast_reg
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: output_axis_tuser_reg
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: last_cycle_tkeep_reg
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: error_bad_frame_reg
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: error_bad_fcs_reg
                        HdlStmAssign
                            HdlValueInt: ffffffff
                            HdlValueId: crc_state
                        HdlStmAssign
                            HdlValueInt: ffffffff
                            HdlValueId: crc_state3
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: crc_valid7_save
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: detect_term_save
                        HdlStmAssign
                            HdlValueInt: 0707070707070707
                            HdlValueId: xgmii_rxd_d0
                        HdlStmAssign
                            HdlValueInt: 0707070707070707
                            HdlValueId: xgmii_rxd_d1
                        HdlStmAssign
                            HdlValueInt: 11111111
                            HdlValueId: xgmii_rxc_d0
                        HdlStmAssign
                            HdlValueInt: 11111111
                            HdlValueId: xgmii_rxc_d1
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: lanes_swapped
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: swap_rxd
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: swap_rxc
                list: elifs
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueId: state_next
                            HdlValueId: state_reg
                        HdlStmAssign
                            HdlValueId: output_axis_tdata_next
                            HdlValueId: output_axis_tdata_reg
                        HdlStmAssign
                            HdlValueId: output_axis_tkeep_next
                            HdlValueId: output_axis_tkeep_reg
                        HdlStmAssign
                            HdlValueId: output_axis_tvalid_next
                            HdlValueId: output_axis_tvalid_reg
                        HdlStmAssign
                            HdlValueId: output_axis_tlast_next
                            HdlValueId: output_axis_tlast_reg
                        HdlStmAssign
                            HdlValueId: output_axis_tuser_next
                            HdlValueId: output_axis_tuser_reg
                        HdlStmAssign
                            HdlValueId: last_cycle_tkeep_next
                            HdlValueId: last_cycle_tkeep_reg
                        HdlStmAssign
                            HdlValueId: error_bad_frame_next
                            HdlValueId: error_bad_frame_reg
                        HdlStmAssign
                            HdlValueId: error_bad_fcs_next
                            HdlValueId: error_bad_fcs_reg
                        HdlStmIf
                            HdlOp: AND_LOG
                                list: ops
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: xgmii_rxc
                                            HdlValueInt: 0
                                    HdlOp: EQ
                                        list: ops
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: xgmii_rxd
                                                    HdlOp: DOWNTO
                                                        list: ops
                                                            HdlValueInt: 7
                                                            HdlValueInt: 0
                                            HdlValueInt: fb
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmAssign
                                        HdlValueInt: 0
                                        HdlValueId: lanes_swapped
                                    HdlStmAssign
                                        HdlValueId: xgmii_rxd
                                        HdlValueId: xgmii_rxd_d0
                                    HdlStmAssign
                                        HdlValueId: xgmii_rxc
                                        HdlValueId: xgmii_rxc_d0
                            list: elifs
                                tuple
                                    HdlOp: AND_LOG
                                        list: ops
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: xgmii_rxc
                                                    HdlValueInt: 4
                                            HdlOp: EQ
                                                list: ops
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlValueId: xgmii_rxd
                                                            HdlOp: DOWNTO
                                                                list: ops
                                                                    HdlValueInt: 39
                                                                    HdlValueInt: 32
                                                    HdlValueInt: fb
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueInt: 1
                                                HdlValueId: lanes_swapped
                                            HdlStmAssign
                                                HdlValueInt: 0707070707070707
                                                HdlValueId: xgmii_rxd_d0
                                            HdlStmAssign
                                                HdlValueInt: 11111111
                                                HdlValueId: xgmii_rxc_d0
                                tuple
                                    HdlValueId: lanes_swapped
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: xgmii_rxd
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 0
                                                        HdlValueId: swap_rxd
                                                HdlValueId: xgmii_rxd_d0
                                            HdlStmAssign
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: xgmii_rxc
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 3
                                                                        HdlValueInt: 0
                                                        HdlValueId: swap_rxc
                                                HdlValueId: xgmii_rxc_d0
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmAssign
                                        HdlValueId: xgmii_rxd
                                        HdlValueId: xgmii_rxd_d0
                                    HdlStmAssign
                                        HdlValueId: xgmii_rxc
                                        HdlValueId: xgmii_rxc_d0
                        HdlStmAssign
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: xgmii_rxd
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 63
                                            HdlValueInt: 32
                            HdlValueId: swap_rxd
                        HdlStmAssign
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: xgmii_rxc
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 7
                                            HdlValueInt: 4
                            HdlValueId: swap_rxc
                        HdlStmAssign
                            HdlValueId: xgmii_rxd_d0
                            HdlValueId: xgmii_rxd_d1
                        HdlStmAssign
                            HdlValueId: xgmii_rxc_d0
                            HdlValueId: xgmii_rxc_d1
                        HdlStmAssign
                            HdlValueId: detect_term
                            HdlValueId: detect_term_save
                        HdlStmIf
                            HdlValueId: reset_crc
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmAssign
                                        HdlValueInt: ffffffff
                                        HdlValueId: crc_state
                                    HdlStmAssign
                                        HdlValueInt: ffffffff
                                        HdlValueId: crc_state3
                                    HdlStmAssign
                                        HdlValueInt: 0
                                        HdlValueId: crc_valid7_save
                            list: elifs
                                tuple
                                    HdlValueId: update_crc
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueId: crc_next7
                                                HdlValueId: crc_state
                                            HdlStmAssign
                                                HdlValueId: crc_next3
                                                HdlValueId: crc_state3
                                            HdlStmAssign
                                                HdlValueId: crc_valid7
                                                HdlValueId: crc_valid7_save

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: state_next
    HdlValueId: state_reg

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: output_axis_tvalid_next
    HdlValueId: output_axis_tvalid_reg

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: error_bad_frame_next
    HdlValueId: error_bad_frame_reg

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: error_bad_fcs_next
    HdlValueId: error_bad_fcs_reg

MOV HdlStmIf@@ to body
HdlStmIf
    HdlOp: AND_LOG
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: xgmii_rxc
                    HdlValueInt: 0
            HdlOp: EQ
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: xgmii_rxd
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 7
                                    HdlValueInt: 0
                    HdlValueInt: fb
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: lanes_swapped
            HdlStmAssign
                HdlValueId: xgmii_rxd
                HdlValueId: xgmii_rxd_d0
            HdlStmAssign
                HdlValueId: xgmii_rxc
                HdlValueId: xgmii_rxc_d0
    list: elifs
        tuple
            HdlOp: AND_LOG
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: xgmii_rxc
                            HdlValueInt: 4
                    HdlOp: EQ
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: xgmii_rxd
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 39
                                            HdlValueInt: 32
                            HdlValueInt: fb
            HdlStmBlock: SEQ
                list: body
                    HdlStmAssign
                        HdlValueInt: 1
                        HdlValueId: lanes_swapped
                    HdlStmAssign
                        HdlValueInt: 0707070707070707
                        HdlValueId: xgmii_rxd_d0
                    HdlStmAssign
                        HdlValueInt: 11111111
                        HdlValueId: xgmii_rxc_d0
        tuple
            HdlValueId: lanes_swapped
            HdlStmBlock: SEQ
                list: body
                    HdlStmAssign
                        HdlOp: CONCAT
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: xgmii_rxd
                                        HdlOp: DOWNTO
                                            list: ops
                                                HdlValueInt: 31
                                                HdlValueInt: 0
                                HdlValueId: swap_rxd
                        HdlValueId: xgmii_rxd_d0
                    HdlStmAssign
                        HdlOp: CONCAT
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: xgmii_rxc
                                        HdlOp: DOWNTO
                                            list: ops
                                                HdlValueInt: 3
                                                HdlValueInt: 0
                                HdlValueId: swap_rxc
                        HdlValueId: xgmii_rxc_d0
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueId: xgmii_rxd
                HdlValueId: xgmii_rxd_d0
            HdlStmAssign
                HdlValueId: xgmii_rxc
                HdlValueId: xgmii_rxc_d0

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: swap_rxd

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: swap_rxc


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/eth_mac_10g_rx.v
+++ b/rtl/eth_mac_10g_rx.v
@@ -404,25 +388,32 @@ always @(posedge clk) begin
             xgmii_rxc_d0 <= xgmii_rxc;
         end
 
-        swap_rxd <= xgmii_rxd[63:32];
-        swap_rxc <= xgmii_rxc[7:4];
-
         xgmii_rxd_d1 <= xgmii_rxd_d0;
         xgmii_rxc_d1 <= xgmii_rxc_d0;
 
-        detect_term_save <= detect_term;
-
         // datapath
         if (reset_crc) begin
             crc_state <= 32'hFFFFFFFF;
             crc_state3 <= 32'hFFFFFFFF;
-            crc_valid7_save <= 0;
+            crc_valid7_save <= 1'b0;
         end else if (update_crc) begin
             crc_state <= crc_next7;
             crc_state3 <= crc_next3;
             crc_valid7_save <= crc_valid7;
         end
     end
+
+    output_axis_tdata_reg <= output_axis_tdata_next;
+    output_axis_tkeep_reg <= output_axis_tkeep_next;
+    output_axis_tlast_reg <= output_axis_tlast_next;
+    output_axis_tuser_reg <= output_axis_tuser_next;
+
+    last_cycle_tkeep_reg <= last_cycle_tkeep_next;
+
+    detect_term_save <= detect_term;
+
+    swap_rxd <= xgmii_rxd[63:32];
+    swap_rxc <= xgmii_rxc[7:4];
 end
 
 endmodule
ParseResult:
UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueId: state_next
                HdlValueId: state_reg
            HdlStmAssign
                HdlValueId: output_axis_tdata_next
                HdlValueId: output_axis_tdata_reg
            HdlStmAssign
                HdlValueId: output_axis_tkeep_next
                HdlValueId: output_axis_tkeep_reg
            HdlStmAssign
                HdlValueId: output_axis_tvalid_next
                HdlValueId: output_axis_tvalid_reg
            HdlStmAssign
                HdlValueId: output_axis_tlast_next
                HdlValueId: output_axis_tlast_reg
            HdlStmAssign
                HdlValueId: output_axis_tuser_next
                HdlValueId: output_axis_tuser_reg
            HdlStmAssign
                HdlValueId: last_cycle_tkeep_next
                HdlValueId: last_cycle_tkeep_reg
            HdlStmAssign
                HdlValueId: error_bad_frame_next
                HdlValueId: error_bad_frame_reg
            HdlStmAssign
                HdlValueId: error_bad_fcs_next
                HdlValueId: error_bad_fcs_reg
            HdlStmIf
                HdlOp: AND_LOG
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: xgmii_rxc
                                HdlValueInt: 0
                        HdlOp: EQ
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: xgmii_rxd
                                        HdlOp: DOWNTO
                                            list: ops
                                                HdlValueInt: 7
                                                HdlValueInt: 0
                                HdlValueInt: fb
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: lanes_swapped
                        HdlStmAssign
                            HdlValueId: xgmii_rxd
                            HdlValueId: xgmii_rxd_d0
                        HdlStmAssign
                            HdlValueId: xgmii_rxc
                            HdlValueId: xgmii_rxc_d0
                list: elifs
                    tuple
                        HdlOp: AND_LOG
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: xgmii_rxc
                                        HdlValueInt: 4
                                HdlOp: EQ
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: xgmii_rxd
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 39
                                                        HdlValueInt: 32
                                        HdlValueInt: fb
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueInt: 1
                                    HdlValueId: lanes_swapped
                                HdlStmAssign
                                    HdlValueInt: 0707070707070707
                                    HdlValueId: xgmii_rxd_d0
                                HdlStmAssign
                                    HdlValueInt: 11111111
                                    HdlValueId: xgmii_rxc_d0
                    tuple
                        HdlValueId: lanes_swapped
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlOp: CONCAT
                                        list: ops
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: xgmii_rxd
                                                    HdlOp: DOWNTO
                                                        list: ops
                                                            HdlValueInt: 31
                                                            HdlValueInt: 0
                                            HdlValueId: swap_rxd
                                    HdlValueId: xgmii_rxd_d0
                                HdlStmAssign
                                    HdlOp: CONCAT
                                        list: ops
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: xgmii_rxc
                                                    HdlOp: DOWNTO
                                                        list: ops
                                                            HdlValueInt: 3
                                                            HdlValueInt: 0
                                            HdlValueId: swap_rxc
                                    HdlValueId: xgmii_rxc_d0
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueId: xgmii_rxd
                            HdlValueId: xgmii_rxd_d0
                        HdlStmAssign
                            HdlValueId: xgmii_rxc
                            HdlValueId: xgmii_rxc_d0
            HdlStmAssign
                HdlOp: INDEX
                    list: ops
                        HdlValueId: xgmii_rxd
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 63
                                HdlValueInt: 32
                HdlValueId: swap_rxd
            HdlStmAssign
                HdlOp: INDEX
                    list: ops
                        HdlValueId: xgmii_rxc
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 7
                                HdlValueInt: 4
                HdlValueId: swap_rxc
            HdlStmAssign
                HdlValueId: xgmii_rxd_d0
                HdlValueId: xgmii_rxd_d1
            HdlStmAssign
                HdlValueId: xgmii_rxc_d0
                HdlValueId: xgmii_rxc_d1
            HdlStmAssign
                HdlValueId: detect_term
                HdlValueId: detect_term_save
            HdlStmIf
                HdlValueId: reset_crc
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: ffffffff
                            HdlValueId: crc_state
                        HdlStmAssign
                            HdlValueInt: ffffffff
                            HdlValueId: crc_state3
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: crc_valid7_save
                list: elifs
                    tuple
                        HdlValueId: update_crc
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueId: crc_next7
                                    HdlValueId: crc_state
                                HdlStmAssign
                                    HdlValueId: crc_next3
                                    HdlValueId: crc_state3
                                HdlStmAssign
                                    HdlValueId: crc_valid7
                                    HdlValueId: crc_valid7_save

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: detect_term
    HdlValueId: detect_term_save

MOV HdlStmIf@@ to body
HdlStmIf
    HdlValueId: rst
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueId: STATE_IDLE
                HdlValueId: state_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: output_axis_tdata_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: output_axis_tkeep_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: output_axis_tvalid_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: output_axis_tlast_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: output_axis_tuser_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: last_cycle_tkeep_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: error_bad_frame_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: error_bad_fcs_reg
            HdlStmAssign
                HdlValueInt: ffffffff
                HdlValueId: crc_state
            HdlStmAssign
                HdlValueInt: ffffffff
                HdlValueId: crc_state3
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: crc_valid7_save
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: detect_term_save
            HdlStmAssign
                HdlValueInt: 0707070707070707
                HdlValueId: xgmii_rxd_d0
            HdlStmAssign
                HdlValueInt: 0707070707070707
                HdlValueId: xgmii_rxd_d1
            HdlStmAssign
                HdlValueInt: 11111111
                HdlValueId: xgmii_rxc_d0
            HdlStmAssign
                HdlValueInt: 11111111
                HdlValueId: xgmii_rxc_d1
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: lanes_swapped
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: swap_rxd
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: swap_rxc
    list: elifs
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueId: state_next
                HdlValueId: state_reg
            HdlStmAssign
                HdlValueId: output_axis_tdata_next
                HdlValueId: output_axis_tdata_reg
            HdlStmAssign
                HdlValueId: output_axis_tkeep_next
                HdlValueId: output_axis_tkeep_reg
            HdlStmAssign
                HdlValueId: output_axis_tvalid_next
                HdlValueId: output_axis_tvalid_reg
            HdlStmAssign
                HdlValueId: output_axis_tlast_next
                HdlValueId: output_axis_tlast_reg
            HdlStmAssign
                HdlValueId: output_axis_tuser_next
                HdlValueId: output_axis_tuser_reg
            HdlStmAssign
                HdlValueId: last_cycle_tkeep_next
                HdlValueId: last_cycle_tkeep_reg
            HdlStmAssign
                HdlValueId: error_bad_frame_next
                HdlValueId: error_bad_frame_reg
            HdlStmAssign
                HdlValueId: error_bad_fcs_next
                HdlValueId: error_bad_fcs_reg
            HdlStmIf
                HdlOp: AND_LOG
                    list: ops
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: xgmii_rxc
                                HdlValueInt: 0
                        HdlOp: EQ
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: xgmii_rxd
                                        HdlOp: DOWNTO
                                            list: ops
                                                HdlValueInt: 7
                                                HdlValueInt: 0
                                HdlValueInt: fb
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: lanes_swapped
                        HdlStmAssign
                            HdlValueId: xgmii_rxd
                            HdlValueId: xgmii_rxd_d0
                        HdlStmAssign
                            HdlValueId: xgmii_rxc
                            HdlValueId: xgmii_rxc_d0
                list: elifs
                    tuple
                        HdlOp: AND_LOG
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: xgmii_rxc
                                        HdlValueInt: 4
                                HdlOp: EQ
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: xgmii_rxd
                                                HdlOp: DOWNTO
                                                    list: ops
                                                        HdlValueInt: 39
                                                        HdlValueInt: 32
                                        HdlValueInt: fb
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueInt: 1
                                    HdlValueId: lanes_swapped
                                HdlStmAssign
                                    HdlValueInt: 0707070707070707
                                    HdlValueId: xgmii_rxd_d0
                                HdlStmAssign
                                    HdlValueInt: 11111111
                                    HdlValueId: xgmii_rxc_d0
                    tuple
                        HdlValueId: lanes_swapped
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlOp: CONCAT
                                        list: ops
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: xgmii_rxd
                                                    HdlOp: DOWNTO
                                                        list: ops
                                                            HdlValueInt: 31
                                                            HdlValueInt: 0
                                            HdlValueId: swap_rxd
                                    HdlValueId: xgmii_rxd_d0
                                HdlStmAssign
                                    HdlOp: CONCAT
                                        list: ops
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: xgmii_rxc
                                                    HdlOp: DOWNTO
                                                        list: ops
                                                            HdlValueInt: 3
                                                            HdlValueInt: 0
                                            HdlValueId: swap_rxc
                                    HdlValueId: xgmii_rxc_d0
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueId: xgmii_rxd
                            HdlValueId: xgmii_rxd_d0
                        HdlStmAssign
                            HdlValueId: xgmii_rxc
                            HdlValueId: xgmii_rxc_d0
            HdlStmAssign
                HdlOp: INDEX
                    list: ops
                        HdlValueId: xgmii_rxd
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 63
                                HdlValueInt: 32
                HdlValueId: swap_rxd
            HdlStmAssign
                HdlOp: INDEX
                    list: ops
                        HdlValueId: xgmii_rxc
                        HdlOp: DOWNTO
                            list: ops
                                HdlValueInt: 7
                                HdlValueInt: 4
                HdlValueId: swap_rxc
            HdlStmAssign
                HdlValueId: xgmii_rxd_d0
                HdlValueId: xgmii_rxd_d1
            HdlStmAssign
                HdlValueId: xgmii_rxc_d0
                HdlValueId: xgmii_rxc_d1
            HdlStmAssign
                HdlValueId: detect_term
                HdlValueId: detect_term_save
            HdlStmIf
                HdlValueId: reset_crc
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: ffffffff
                            HdlValueId: crc_state
                        HdlStmAssign
                            HdlValueInt: ffffffff
                            HdlValueId: crc_state3
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: crc_valid7_save
                list: elifs
                    tuple
                        HdlValueId: update_crc
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueId: crc_next7
                                    HdlValueId: crc_state
                                HdlStmAssign
                                    HdlValueId: crc_next3
                                    HdlValueId: crc_state3
                                HdlStmAssign
                                    HdlValueId: crc_valid7
                                    HdlValueId: crc_valid7_save

UPD HdlStmProcess@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlValueId: rst
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueId: STATE_IDLE
                            HdlValueId: state_reg
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: output_axis_tdata_reg
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: output_axis_tkeep_reg
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: output_axis_tvalid_reg
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: output_axis_tlast_reg
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: output_axis_tuser_reg
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: last_cycle_tkeep_reg
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: error_bad_frame_reg
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: error_bad_fcs_reg
                        HdlStmAssign
                            HdlValueInt: ffffffff
                            HdlValueId: crc_state
                        HdlStmAssign
                            HdlValueInt: ffffffff
                            HdlValueId: crc_state3
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: crc_valid7_save
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: detect_term_save
                        HdlStmAssign
                            HdlValueInt: 0707070707070707
                            HdlValueId: xgmii_rxd_d0
                        HdlStmAssign
                            HdlValueInt: 0707070707070707
                            HdlValueId: xgmii_rxd_d1
                        HdlStmAssign
                            HdlValueInt: 11111111
                            HdlValueId: xgmii_rxc_d0
                        HdlStmAssign
                            HdlValueInt: 11111111
                            HdlValueId: xgmii_rxc_d1
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: lanes_swapped
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: swap_rxd
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: swap_rxc
                list: elifs
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueId: state_next
                            HdlValueId: state_reg
                        HdlStmAssign
                            HdlValueId: output_axis_tdata_next
                            HdlValueId: output_axis_tdata_reg
                        HdlStmAssign
                            HdlValueId: output_axis_tkeep_next
                            HdlValueId: output_axis_tkeep_reg
                        HdlStmAssign
                            HdlValueId: output_axis_tvalid_next
                            HdlValueId: output_axis_tvalid_reg
                        HdlStmAssign
                            HdlValueId: output_axis_tlast_next
                            HdlValueId: output_axis_tlast_reg
                        HdlStmAssign
                            HdlValueId: output_axis_tuser_next
                            HdlValueId: output_axis_tuser_reg
                        HdlStmAssign
                            HdlValueId: last_cycle_tkeep_next
                            HdlValueId: last_cycle_tkeep_reg
                        HdlStmAssign
                            HdlValueId: error_bad_frame_next
                            HdlValueId: error_bad_frame_reg
                        HdlStmAssign
                            HdlValueId: error_bad_fcs_next
                            HdlValueId: error_bad_fcs_reg
                        HdlStmIf
                            HdlOp: AND_LOG
                                list: ops
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: xgmii_rxc
                                            HdlValueInt: 0
                                    HdlOp: EQ
                                        list: ops
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: xgmii_rxd
                                                    HdlOp: DOWNTO
                                                        list: ops
                                                            HdlValueInt: 7
                                                            HdlValueInt: 0
                                            HdlValueInt: fb
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmAssign
                                        HdlValueInt: 0
                                        HdlValueId: lanes_swapped
                                    HdlStmAssign
                                        HdlValueId: xgmii_rxd
                                        HdlValueId: xgmii_rxd_d0
                                    HdlStmAssign
                                        HdlValueId: xgmii_rxc
                                        HdlValueId: xgmii_rxc_d0
                            list: elifs
                                tuple
                                    HdlOp: AND_LOG
                                        list: ops
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: xgmii_rxc
                                                    HdlValueInt: 4
                                            HdlOp: EQ
                                                list: ops
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlValueId: xgmii_rxd
                                                            HdlOp: DOWNTO
                                                                list: ops
                                                                    HdlValueInt: 39
                                                                    HdlValueInt: 32
                                                    HdlValueInt: fb
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueInt: 1
                                                HdlValueId: lanes_swapped
                                            HdlStmAssign
                                                HdlValueInt: 0707070707070707
                                                HdlValueId: xgmii_rxd_d0
                                            HdlStmAssign
                                                HdlValueInt: 11111111
                                                HdlValueId: xgmii_rxc_d0
                                tuple
                                    HdlValueId: lanes_swapped
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: xgmii_rxd
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 31
                                                                        HdlValueInt: 0
                                                        HdlValueId: swap_rxd
                                                HdlValueId: xgmii_rxd_d0
                                            HdlStmAssign
                                                HdlOp: CONCAT
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: xgmii_rxc
                                                                HdlOp: DOWNTO
                                                                    list: ops
                                                                        HdlValueInt: 3
                                                                        HdlValueInt: 0
                                                        HdlValueId: swap_rxc
                                                HdlValueId: xgmii_rxc_d0
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmAssign
                                        HdlValueId: xgmii_rxd
                                        HdlValueId: xgmii_rxd_d0
                                    HdlStmAssign
                                        HdlValueId: xgmii_rxc
                                        HdlValueId: xgmii_rxc_d0
                        HdlStmAssign
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: xgmii_rxd
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 63
                                            HdlValueInt: 32
                            HdlValueId: swap_rxd
                        HdlStmAssign
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: xgmii_rxc
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 7
                                            HdlValueInt: 4
                            HdlValueId: swap_rxc
                        HdlStmAssign
                            HdlValueId: xgmii_rxd_d0
                            HdlValueId: xgmii_rxd_d1
                        HdlStmAssign
                            HdlValueId: xgmii_rxc_d0
                            HdlValueId: xgmii_rxc_d1
                        HdlStmAssign
                            HdlValueId: detect_term
                            HdlValueId: detect_term_save
                        HdlStmIf
                            HdlValueId: reset_crc
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmAssign
                                        HdlValueInt: ffffffff
                                        HdlValueId: crc_state
                                    HdlStmAssign
                                        HdlValueInt: ffffffff
                                        HdlValueId: crc_state3
                                    HdlStmAssign
                                        HdlValueInt: 0
                                        HdlValueId: crc_valid7_save
                            list: elifs
                                tuple
                                    HdlValueId: update_crc
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueId: crc_next7
                                                HdlValueId: crc_state
                                            HdlStmAssign
                                                HdlValueId: crc_next3
                                                HdlValueId: crc_state3
                                            HdlStmAssign
                                                HdlValueId: crc_valid7
                                                HdlValueId: crc_valid7_save

MOV HdlStmIf@@ to body
HdlStmIf
    HdlOp: AND_LOG
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: xgmii_rxc
                    HdlValueInt: 0
            HdlOp: EQ
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: xgmii_rxd
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 7
                                    HdlValueInt: 0
                    HdlValueInt: fb
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: lanes_swapped
            HdlStmAssign
                HdlValueId: xgmii_rxd
                HdlValueId: xgmii_rxd_d0
            HdlStmAssign
                HdlValueId: xgmii_rxc
                HdlValueId: xgmii_rxc_d0
    list: elifs
        tuple
            HdlOp: AND_LOG
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: xgmii_rxc
                            HdlValueInt: 4
                    HdlOp: EQ
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: xgmii_rxd
                                    HdlOp: DOWNTO
                                        list: ops
                                            HdlValueInt: 39
                                            HdlValueInt: 32
                            HdlValueInt: fb
            HdlStmBlock: SEQ
                list: body
                    HdlStmAssign
                        HdlValueInt: 1
                        HdlValueId: lanes_swapped
                    HdlStmAssign
                        HdlValueInt: 0707070707070707
                        HdlValueId: xgmii_rxd_d0
                    HdlStmAssign
                        HdlValueInt: 11111111
                        HdlValueId: xgmii_rxc_d0
        tuple
            HdlValueId: lanes_swapped
            HdlStmBlock: SEQ
                list: body
                    HdlStmAssign
                        HdlOp: CONCAT
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: xgmii_rxd
                                        HdlOp: DOWNTO
                                            list: ops
                                                HdlValueInt: 31
                                                HdlValueInt: 0
                                HdlValueId: swap_rxd
                        HdlValueId: xgmii_rxd_d0
                    HdlStmAssign
                        HdlOp: CONCAT
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: xgmii_rxc
                                        HdlOp: DOWNTO
                                            list: ops
                                                HdlValueInt: 3
                                                HdlValueInt: 0
                                HdlValueId: swap_rxc
                        HdlValueId: xgmii_rxc_d0
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueId: xgmii_rxd
                HdlValueId: xgmii_rxd_d0
            HdlStmAssign
                HdlValueId: xgmii_rxc
                HdlValueId: xgmii_rxc_d0

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: xgmii_rxd_d0
    HdlValueId: xgmii_rxd_d1

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: xgmii_rxc_d0
    HdlValueId: xgmii_rxc_d1

MOV HdlStmIf@@ to body
HdlStmIf
    HdlValueId: reset_crc
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: ffffffff
                HdlValueId: crc_state
            HdlStmAssign
                HdlValueInt: ffffffff
                HdlValueId: crc_state3
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: crc_valid7_save
    list: elifs
        tuple
            HdlValueId: update_crc
            HdlStmBlock: SEQ
                list: body
                    HdlStmAssign
                        HdlValueId: crc_next7
                        HdlValueId: crc_state
                    HdlStmAssign
                        HdlValueId: crc_next3
                        HdlValueId: crc_state3
                    HdlStmAssign
                        HdlValueId: crc_valid7
                        HdlValueId: crc_valid7_save


CommitId: 385c9cc90ade29878d45e6634e2c70ce85d6d6d5
Fix Vivado block RAM inference
--- a/rtl/axis_frame_fifo_64.v
+++ b/rtl/axis_frame_fifo_64.v
@@ -72,11 +72,10 @@ reg [ADDR_WIDTH:0] wr_ptr_cur_reg = {ADDR_WIDTH+1{1'b0}}, wr_ptr_cur_next;
 reg [ADDR_WIDTH:0] rd_ptr_reg = {ADDR_WIDTH+1{1'b0}}, rd_ptr_next;
 
 reg [DATA_WIDTH+KEEP_WIDTH+1-1:0] mem[(2**ADDR_WIDTH)-1:0];
+reg [DATA_WIDTH+KEEP_WIDTH+1-1:0] mem_read_data_reg = {DATA_WIDTH+2{1'b0}};
+wire [DATA_WIDTH+KEEP_WIDTH+1-1:0] mem_write_data;
 
-reg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};
-reg [KEEP_WIDTH-1:0] output_axis_tkeep_reg = {KEEP_WIDTH{1'b0}};
 reg output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;
-reg output_axis_tlast_reg = 1'b0;
 
 // full when first MSB different but rest same
 wire full = ((wr_ptr_reg[ADDR_WIDTH] != rd_ptr_reg[ADDR_WIDTH]) &&

ParseResult:
UPD HdlIdDef@@output_axis_tdata_reg to mem_read_data_reg

UPD HdlIdDef@@output_axis_tkeep_reg to mem_write_data

UPD HdlIdDef@@mem_read_data_reg to mem_read_data_reg
    UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
        INS HdlOp@@ADD to ops
        UPD HdlOp@@ADD to ADD
            INS list@@ops to ADD
            INS HdlValueInt@@2 to ops
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlOp@@SUB to SUB
                INS list@@ops to SUB
                INS HdlOp@@ADD to ops
                INS HdlValueInt@@1 to ops
                UPD HdlOp@@ADD to ADD
                    INS HdlOp@@ADD to ops
                    UPD HdlOp@@ADD to ADD
                        INS list@@ops to ADD
                        INS HdlValueId@@KEEP_WIDTH to ops

UPD HdlIdDef@@output_axis_tkeep_reg to output_axis_tkeep_reg
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlValueId@@reg to wire
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlOp@@SUB to SUB
                MOV list@@ops to SUB
                list: ops
                    HdlValueId: KEEP_WIDTH
                    HdlValueInt: 1
                MOV HdlValueId@@KEEP_WIDTH to ops
                HdlValueId: KEEP_WIDTH
    DEL HdlOp@@REPL_CONCAT from output_axis_tkeep_reg
    HdlOp: REPL_CONCAT
        list: ops
            HdlValueId: KEEP_WIDTH
            HdlValueInt: 0

UPD HdlIdDef@@output_axis_tdata_reg to output_axis_tdata_reg
    UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
        MOV HdlValueId@@DATA_WIDTH to ops
        HdlValueId: DATA_WIDTH
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlOp@@SUB to SUB
                MOV list@@ops to SUB
                list: ops
                    HdlValueId: DATA_WIDTH
                    HdlValueInt: 1
                MOV HdlValueId@@DATA_WIDTH to ops
                HdlValueId: DATA_WIDTH

UPD HdlIdDef@@mem_write_data to mem_write_data
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlOp@@SUB to SUB
                INS list@@ops to SUB
                INS HdlOp@@ADD to ops
                INS HdlValueInt@@1 to ops
                UPD HdlOp@@ADD to ADD
                    INS HdlOp@@ADD to ops
                    UPD HdlOp@@ADD to ADD
                        INS list@@ops to ADD
                        INS HdlValueId@@DATA_WIDTH to ops

DEL HdlIdDef@@output_axis_tlast_reg from objs
HdlIdDef: output_axis_tlast_reg
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 385c9cc90ade29878d45e6634e2c70ce85d6d6d5
Fix Vivado block RAM inference
--- a/rtl/axis_frame_fifo_64.v
+++ b/rtl/axis_frame_fifo_64.v
@@ -98,10 +97,10 @@ reg good_frame_reg = 1'b0, good_frame_next;
 
 assign input_axis_tready = (~full | DROP_WHEN_FULL);
 
-assign output_axis_tdata = output_axis_tdata_reg;
-assign output_axis_tkeep = output_axis_tkeep_reg;
 assign output_axis_tvalid = output_axis_tvalid_reg;
-assign output_axis_tlast = output_axis_tlast_reg;
+
+assign mem_write_data = {input_axis_tlast, input_axis_tkeep, input_axis_tdata};
+assign {output_axis_tlast, output_axis_tkeep, output_axis_tdata} = mem_read_data_reg;
 
 assign overflow = overflow_reg;
 assign bad_frame = bad_frame_reg;

ParseResult:
MOV HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: output_axis_tkeep_reg
    HdlValueId: output_axis_tkeep

INS HdlStmAssign@@ to objs

UPD HdlStmAssign@@ to 
    INS HdlValueId@@mem_write_data to 

UPD HdlStmAssign@@ to 
    INS HdlValueId@@mem_read_data_reg to 
    INS HdlOp@@CONCAT to 
    UPD HdlOp@@CONCAT to CONCAT
        INS list@@ops to CONCAT
        INS HdlOp@@CONCAT to ops
        UPD HdlOp@@CONCAT to CONCAT
            INS list@@ops to CONCAT
            INS HdlValueId@@output_axis_tlast to ops

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@output_axis_tlast to output_axis_tdata
    MOV HdlValueId@@output_axis_tlast to 
    HdlValueId: output_axis_tlast
    UPD HdlValueId@@output_axis_tlast_reg to output_axis_tkeep
    MOV HdlValueId@@output_axis_tlast_reg to 
    HdlValueId: output_axis_tlast_reg

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: output_axis_tdata_reg
    HdlValueId: output_axis_tdata

UPD HdlStmAssign@@ to 
    DEL HdlValueId@@output_axis_tkeep_reg from 
    DEL HdlValueId@@output_axis_tkeep from 

DEL HdlStmAssign@@ from objs


CommitId: 385c9cc90ade29878d45e6634e2c70ce85d6d6d5
Fix Vivado block RAM inference
--- a/rtl/axis_frame_fifo_64.v
+++ b/rtl/axis_frame_fifo_64.v
@@ -173,7 +172,7 @@ always @(posedge clk) begin
     end
 
     if (write) begin
-        mem[wr_ptr_cur_reg[ADDR_WIDTH-1:0]] <= {input_axis_tlast, input_axis_tkeep, input_axis_tdata};
+        mem[wr_ptr_cur_reg[ADDR_WIDTH-1:0]] <= mem_write_data;
     end
 end
 

ParseResult:
UPD HdlStmAssign@@ to 
    MOV HdlOp@@CONCAT to 
    HdlOp: CONCAT
        list: ops
            HdlOp: CONCAT
                list: ops
                    HdlValueId: input_axis_tlast
                    HdlValueId: input_axis_tkeep
            HdlValueId: input_axis_tdata

UPD HdlStmAssign@@ to 
    INS HdlValueId@@mem_write_data to 


CommitId: 385c9cc90ade29878d45e6634e2c70ce85d6d6d5
Fix Vivado block RAM inference
--- a/rtl/axis_frame_fifo_64.v
+++ b/rtl/axis_frame_fifo_64.v
@@ -208,7 +207,7 @@ always @(posedge clk) begin
     end
 
     if (read) begin
-        {output_axis_tlast_reg, output_axis_tkeep_reg, output_axis_tdata_reg} <= mem[rd_ptr_reg[ADDR_WIDTH-1:0]];
+        mem_read_data_reg <= mem[rd_ptr_reg[ADDR_WIDTH-1:0]];
     end
 end
 
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@output_axis_tdata_reg to mem_read_data_reg
        MOV HdlValueId@@output_axis_tdata_reg to ops
        HdlValueId: output_axis_tdata_reg
        DEL HdlOp@@CONCAT from ops
        HdlOp: CONCAT
            list: ops
                HdlValueId: output_axis_tlast_reg
                HdlValueId: output_axis_tkeep_reg
        DEL list@@ops from CONCAT
    DEL HdlOp@@CONCAT from 


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/udp_mux_64_4.v
+++ b/rtl/udp_mux_64_4.v
@@ -428,6 +451,14 @@ always @* begin
             current_input_tlast = input_3_udp_payload_tlast;
             current_input_tuser = input_3_udp_payload_tuser;
         end
+        default: begin
+            current_input_tdata = 64'd0;
+            current_input_tkeep = 8'd0;
+            current_input_tvalid = 1'b0;
+            current_input_tready = 1'b0;
+            current_input_tlast = 1'b0;
+            current_input_tuser = 1'b0;
+        end
     endcase
 end
 

ParseResult:
UPD HdlStmCase@@select_reg to select_reg
    INS HdlStmBlock@@SEQ to select_reg
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tdata
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tkeep
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tvalid
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tready
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tlast
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tuser
                    HdlValueInt: 0


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/udp_mux_64_4.v
+++ b/rtl/udp_mux_64_4.v
@@ -440,10 +471,10 @@ always @* begin
     input_2_udp_hdr_ready_next = input_2_udp_hdr_ready_reg & ~input_2_udp_hdr_valid;
     input_3_udp_hdr_ready_next = input_3_udp_hdr_ready_reg & ~input_3_udp_hdr_valid;
 
-    input_0_udp_payload_tready_next = 0;
-    input_1_udp_payload_tready_next = 0;
-    input_2_udp_payload_tready_next = 0;
-    input_3_udp_payload_tready_next = 0;
+    input_0_udp_payload_tready_next = 1'b0;
+    input_1_udp_payload_tready_next = 1'b0;
+    input_2_udp_payload_tready_next = 1'b0;
+    input_3_udp_payload_tready_next = 1'b0;
 
     output_udp_hdr_valid_next = output_udp_hdr_valid_reg & ~output_udp_hdr_ready;
     output_eth_dest_mac_next = output_eth_dest_mac_reg;

ParseResult:
UPD HdlStmCase@@select_reg to select_reg
    INS HdlStmBlock@@SEQ to select_reg
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tdata
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tkeep
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tvalid
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tready
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tlast
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tuser
                    HdlValueInt: 0


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_eth_fcs_insert.v
+++ b/rtl/axis_eth_fcs_insert.v
@@ -74,22 +74,22 @@ reg [1:0] state_reg = STATE_IDLE, state_next;
 reg reset_crc;
 reg update_crc;
 
-reg [7:0] frame_ptr_reg = 0, frame_ptr_next;
+reg [15:0] frame_ptr_reg = 16'd0, frame_ptr_next;
 
-reg busy_reg = 0;
+reg busy_reg = 1'b0;
 
-reg input_axis_tready_reg = 0, input_axis_tready_next;
+reg input_axis_tready_reg = 1'b0, input_axis_tready_next;
 
 reg [31:0] crc_state = 32'hFFFFFFFF;
 wire [31:0] crc_next;
 
 // internal datapath
-reg [7:0]  output_axis_tdata_int;
-reg        output_axis_tvalid_int;
-reg        output_axis_tready_int = 0;
-reg        output_axis_tlast_int;
-reg        output_axis_tuser_int;
-wire       output_axis_tready_int_early;
+reg [7:0] output_axis_tdata_int;
+reg       output_axis_tvalid_int;
+reg       output_axis_tready_int_reg = 1'b0;
+reg       output_axis_tlast_int;
+reg       output_axis_tuser_int;
+wire      output_axis_tready_int_early;
 
 assign input_axis_tready = input_axis_tready_reg;
 

ParseResult:
UPD HdlIdDef@@output_axis_tready_int to output_axis_tready_int_reg

UPD HdlIdDef@@frame_ptr_reg to frame_ptr_reg
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlValueInt@@7 to 15

UPD HdlIdDef@@frame_ptr_next to frame_ptr_next
    UPD HdlOp@@PARAMETRIZATION to PARAMETRIZATION
        UPD HdlOp@@DOWNTO to DOWNTO
            UPD HdlValueInt@@7 to 15


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_eth_fcs_insert.v
+++ b/rtl/axis_eth_fcs_insert.v
@@ -193,20 +193,20 @@ always @* begin
         end
         STATE_PAD: begin
             // insert padding
-            input_axis_tready_next = 0;
+            input_axis_tready_next = 1'b0;
 
-            output_axis_tdata_int = 0;
-            output_axis_tvalid_int = 1;
-            output_axis_tlast_int = 0;
-            output_axis_tuser_int = 0;
+            output_axis_tdata_int = 8'd0;
+            output_axis_tvalid_int = 1'b1;
+            output_axis_tlast_int = 1'b0;
+            output_axis_tuser_int = 1'b0;
 
-            if (output_axis_tready_int) begin
-                frame_ptr_next = frame_ptr_reg + 1;
-                update_crc = 1;
+            if (output_axis_tready_int_reg) begin
+                frame_ptr_next = frame_ptr_reg + 16'd1;
+                update_crc = 1'b1;
                 if (frame_ptr_reg < MIN_FRAME_LENGTH-5) begin
                     state_next = STATE_PAD;
                 end else begin
-                    frame_ptr_next = 0;
+                    frame_ptr_next = 16'd0;
                     state_next = STATE_FCS;
                 end
             end else begin

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlValueId@@output_axis_tready_int to output_axis_tready_int_reg


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_eth_fcs_insert.v
+++ b/rtl/axis_eth_fcs_insert.v
@@ -223,19 +223,19 @@ always @* begin
                 2'd2: output_axis_tdata_int = ~crc_state[23:16];
                 2'd3: output_axis_tdata_int = ~crc_state[31:24];
             endcase
-            output_axis_tvalid_int = 1;
-            output_axis_tlast_int = 0;
-            output_axis_tuser_int = 0;
+            output_axis_tvalid_int = 1'b1;
+            output_axis_tlast_int = 1'b0;
+            output_axis_tuser_int = 1'b0;
 
-            if (output_axis_tready_int) begin
-                frame_ptr_next = frame_ptr_reg + 1;
+            if (output_axis_tready_int_reg) begin
+                frame_ptr_next = frame_ptr_reg + 16'd1;
 
-                if (frame_ptr_reg < 3) begin
+                if (frame_ptr_reg < 16'd3) begin
                     state_next = STATE_FCS;
                 end else begin
-                    reset_crc = 1;
-                    frame_ptr_next = 0;
-                    output_axis_tlast_int = 1;
+                    reset_crc = 1'b1;
+                    frame_ptr_next = 16'd0;
+                    output_axis_tlast_int = 1'b1;
                     input_axis_tready_next = output_axis_tready_int_early;
                     state_next = STATE_IDLE;
                 end

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlValueId@@output_axis_tready_int to output_axis_tready_int_reg


CommitId: fb4abb6b39fe1536162dfdc41d3cf64beb8fa834
Fix widths
--- a/rtl/ip_eth_tx_64.v
+++ b/rtl/ip_eth_tx_64.v
@@ -550,13 +550,13 @@ always @(posedge clk) begin
 end
 
 // output datapath logic
-reg [64:0] m_eth_payload_axis_tdata_reg = 64'd0;
+reg [63:0] m_eth_payload_axis_tdata_reg = 64'd0;
 reg [7:0]  m_eth_payload_axis_tkeep_reg = 8'd0;
 reg        m_eth_payload_axis_tvalid_reg = 1'b0, m_eth_payload_axis_tvalid_next;
 reg        m_eth_payload_axis_tlast_reg = 1'b0;
 reg        m_eth_payload_axis_tuser_reg = 1'b0;
 
-reg [64:0] temp_m_eth_payload_axis_tdata_reg = 64'd0;
+reg [63:0] temp_m_eth_payload_axis_tdata_reg = 64'd0;
 reg [7:0]  temp_m_eth_payload_axis_tkeep_reg = 8'd0;
 reg        temp_m_eth_payload_axis_tvalid_reg = 1'b0, temp_m_eth_payload_axis_tvalid_next;
 reg        temp_m_eth_payload_axis_tlast_reg = 1'b0;
ParseResult:
INS HdlIdDef@@m_eth_payload_axis_tdata_reg to objs
HdlIdDef: m_eth_payload_axis_tdata_reg
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 63
                    HdlValueInt: 0
    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@temp_m_eth_payload_axis_tdata_reg to objs
HdlIdDef: temp_m_eth_payload_axis_tdata_reg
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 63
                    HdlValueInt: 0
    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@m_eth_payload_axis_tdata_reg from objs
HdlIdDef: m_eth_payload_axis_tdata_reg
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 64
                    HdlValueInt: 0
    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@temp_m_eth_payload_axis_tdata_reg from objs
HdlIdDef: temp_m_eth_payload_axis_tdata_reg
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 64
                    HdlValueInt: 0
    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/eth_mux_2.v
+++ b/rtl/eth_mux_2.v
@@ -80,24 +80,24 @@ module eth_mux_2
     input  wire [0:0]  select
 );
 
-reg [0:0] select_reg = 0, select_next;
-reg frame_reg = 0, frame_next;
+reg [0:0] select_reg = 1'd0, select_next;
+reg frame_reg = 1'b0, frame_next;
 
-reg input_0_eth_hdr_ready_reg = 0, input_0_eth_hdr_ready_next;
-reg input_1_eth_hdr_ready_reg = 0, input_1_eth_hdr_ready_next;
+reg input_0_eth_hdr_ready_reg = 1'b0, input_0_eth_hdr_ready_next;
+reg input_1_eth_hdr_ready_reg = 1'b0, input_1_eth_hdr_ready_next;
 
-reg input_0_eth_payload_tready_reg = 0, input_0_eth_payload_tready_next;
-reg input_1_eth_payload_tready_reg = 0, input_1_eth_payload_tready_next;
+reg input_0_eth_payload_tready_reg = 1'b0, input_0_eth_payload_tready_next;
+reg input_1_eth_payload_tready_reg = 1'b0, input_1_eth_payload_tready_next;
 
-reg output_eth_hdr_valid_reg = 0, output_eth_hdr_valid_next;
-reg [47:0] output_eth_dest_mac_reg = 0, output_eth_dest_mac_next;
-reg [47:0] output_eth_src_mac_reg = 0, output_eth_src_mac_next;
-reg [15:0] output_eth_type_reg = 0, output_eth_type_next;
+reg output_eth_hdr_valid_reg = 1'b0, output_eth_hdr_valid_next;
+reg [47:0] output_eth_dest_mac_reg = 48'd0, output_eth_dest_mac_next;
+reg [47:0] output_eth_src_mac_reg = 48'd0, output_eth_src_mac_next;
+reg [15:0] output_eth_type_reg = 16'd0, output_eth_type_next;
 
 // internal datapath
 reg [7:0] output_eth_payload_tdata_int;
 reg       output_eth_payload_tvalid_int;
-reg       output_eth_payload_tready_int = 0;
+reg       output_eth_payload_tready_int_reg = 1'b0;
 reg       output_eth_payload_tlast_int;
 reg       output_eth_payload_tuser_int;
 wire      output_eth_payload_tready_int_early;

ParseResult:
UPD HdlIdDef@@output_eth_payload_tready_int to output_eth_payload_tready_int_reg


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/eth_mux_2.v
+++ b/rtl/eth_mux_2.v
@@ -132,6 +132,12 @@ always @* begin
             selected_input_eth_src_mac = input_1_eth_src_mac;
             selected_input_eth_type = input_1_eth_type;
         end
+        default: begin
+            selected_input_eth_hdr_valid = 1'b0;
+            selected_input_eth_dest_mac = 48'd0;
+            selected_input_eth_src_mac = 48'd0;
+            selected_input_eth_type = 16'd0;
+        end
     endcase
 end
 

ParseResult:
UPD HdlStmCase@@select to select
    INS HdlStmBlock@@SEQ to select
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_eth_hdr_valid
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_eth_dest_mac
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_eth_src_mac
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_eth_type
                    HdlValueInt: 0


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/eth_mux_2.v
+++ b/rtl/eth_mux_2.v
@@ -157,6 +163,13 @@ always @* begin
             current_input_tlast = input_1_eth_payload_tlast;
             current_input_tuser = input_1_eth_payload_tuser;
         end
+        default: begin
+            current_input_tdata = 8'd0;
+            current_input_tvalid = 1'b0;
+            current_input_tready = 1'b0;
+            current_input_tlast = 1'b0;
+            current_input_tuser = 1'b0;
+        end
     endcase
 end
 

ParseResult:
UPD HdlStmCase@@select_reg to select_reg
    INS HdlStmBlock@@SEQ to select_reg
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tdata
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tvalid
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tready
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tlast
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tuser
                    HdlValueInt: 0


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/eth_mux_2.v
+++ b/rtl/eth_mux_2.v
@@ -167,8 +180,8 @@ always @* begin
     input_0_eth_hdr_ready_next = input_0_eth_hdr_ready_reg & ~input_0_eth_hdr_valid;
     input_1_eth_hdr_ready_next = input_1_eth_hdr_ready_reg & ~input_1_eth_hdr_valid;
 
-    input_0_eth_payload_tready_next = 0;
-    input_1_eth_payload_tready_next = 0;
+    input_0_eth_payload_tready_next = 1'b0;
+    input_1_eth_payload_tready_next = 1'b0;
 
     output_eth_hdr_valid_next = output_eth_hdr_valid_reg & ~output_eth_hdr_ready;
     output_eth_dest_mac_next = output_eth_dest_mac_reg;

ParseResult:
UPD HdlStmCase@@select_reg to select_reg
    INS HdlStmBlock@@SEQ to select_reg
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tdata
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tvalid
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tready
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tlast
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tuser
                    HdlValueInt: 0


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/eth_mux_2.v
+++ b/rtl/eth_mux_2.v
@@ -211,16 +224,13 @@ end
 
 always @(posedge clk) begin
     if (rst) begin
-        select_reg <= 0;
-        frame_reg <= 0;
-        input_0_eth_hdr_ready_reg <= 0;
-        input_1_eth_hdr_ready_reg <= 0;
-        input_0_eth_payload_tready_reg <= 0;
-        input_1_eth_payload_tready_reg <= 0;
-        output_eth_hdr_valid_reg <= 0;
-        output_eth_dest_mac_reg <= 0;
-        output_eth_src_mac_reg <= 0;
-        output_eth_type_reg <= 0;
+        select_reg <= 1'd0;
+        frame_reg <= 1'b0;
+        input_0_eth_hdr_ready_reg <= 1'b0;
+        input_1_eth_hdr_ready_reg <= 1'b0;
+        input_0_eth_payload_tready_reg <= 1'b0;
+        input_1_eth_payload_tready_reg <= 1'b0;
+        output_eth_hdr_valid_reg <= 1'b0;
     end else begin
         select_reg <= select_next;
         frame_reg <= frame_next;

ParseResult:
DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: output_eth_dest_mac_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: output_eth_src_mac_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: output_eth_type_reg


CommitId: 385c9cc90ade29878d45e6634e2c70ce85d6d6d5
Fix Vivado block RAM inference
--- a/rtl/axis_async_frame_fifo_64.v
+++ b/rtl/axis_async_frame_fifo_64.v
@@ -93,11 +93,10 @@ reg output_rst_sync2_reg = 1'b1;
 reg output_rst_sync3_reg = 1'b1;
 
 reg [DATA_WIDTH+KEEP_WIDTH+1-1:0] mem[(2**ADDR_WIDTH)-1:0];
+reg [DATA_WIDTH+KEEP_WIDTH+1-1:0] mem_read_data_reg = {DATA_WIDTH+2{1'b0}};
+wire [DATA_WIDTH+KEEP_WIDTH+1-1:0] mem_write_data;
 
-reg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};
-reg [KEEP_WIDTH-1:0] output_axis_tkeep_reg = {KEEP_WIDTH{1'b0}};
 reg output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;
-reg output_axis_tlast_reg = 1'b0;
 
 // full when first TWO MSBs do NOT match, but rest matches
 // (gray code equivalent of first MSB different but rest same)

ParseResult:
INS HdlIdDef@@mem_read_data_reg to objs
HdlIdDef: mem_read_data_reg
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlOp: ADD
                                list: ops
                                    HdlOp: ADD
                                        list: ops
                                            HdlValueId: DATA_WIDTH
                                            HdlValueId: KEEP_WIDTH
                                    HdlValueInt: 1
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlOp: REPL_CONCAT
        list: ops
            HdlOp: ADD
                list: ops
                    HdlValueId: DATA_WIDTH
                    HdlValueInt: 2
            HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@mem_write_data to objs
HdlIdDef: mem_write_data
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: wire
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlOp: ADD
                                list: ops
                                    HdlOp: ADD
                                        list: ops
                                            HdlValueId: DATA_WIDTH
                                            HdlValueId: KEEP_WIDTH
                                    HdlValueInt: 1
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@output_axis_tdata_reg from objs
HdlIdDef: output_axis_tdata_reg
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: DATA_WIDTH
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlOp: REPL_CONCAT
        list: ops
            HdlValueId: DATA_WIDTH
            HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@output_axis_tkeep_reg from objs
HdlIdDef: output_axis_tkeep_reg
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: KEEP_WIDTH
                            HdlValueInt: 1
                    HdlValueInt: 0
    HdlOp: REPL_CONCAT
        list: ops
            HdlValueId: KEEP_WIDTH
            HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@output_axis_tlast_reg from objs
HdlIdDef: output_axis_tlast_reg
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 385c9cc90ade29878d45e6634e2c70ce85d6d6d5
Fix Vivado block RAM inference
--- a/rtl/axis_async_frame_fifo_64.v
+++ b/rtl/axis_async_frame_fifo_64.v
@@ -134,10 +133,10 @@ reg good_frame_sync4_reg = 1'b0;
 
 assign input_axis_tready = (~full | DROP_WHEN_FULL) & ~input_rst_sync3_reg;
 
-assign output_axis_tdata = output_axis_tdata_reg;
-assign output_axis_tkeep = output_axis_tkeep_reg;
 assign output_axis_tvalid = output_axis_tvalid_reg;
-assign output_axis_tlast = output_axis_tlast_reg;
+
+assign mem_write_data = {input_axis_tlast, input_axis_tkeep, input_axis_tdata};
+assign {output_axis_tlast, output_axis_tkeep, output_axis_tdata} = mem_read_data_reg;
 
 assign input_status_overflow = overflow_reg;
 assign input_status_bad_frame = bad_frame_reg;

ParseResult:
INS HdlStmAssign@@ to objs

INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: mem_read_data_reg
    HdlOp: CONCAT
        list: ops
            HdlOp: CONCAT
                list: ops
                    HdlValueId: output_axis_tlast
                    HdlValueId: output_axis_tkeep
            HdlValueId: output_axis_tdata

UPD HdlStmAssign@@ to 
    INS HdlValueId@@mem_write_data to 

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: output_axis_tdata_reg
    HdlValueId: output_axis_tdata

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: output_axis_tkeep_reg
    HdlValueId: output_axis_tkeep

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueId: output_axis_tlast_reg
    HdlValueId: output_axis_tlast


CommitId: 385c9cc90ade29878d45e6634e2c70ce85d6d6d5
Fix Vivado block RAM inference
--- a/rtl/axis_async_frame_fifo_64.v
+++ b/rtl/axis_async_frame_fifo_64.v
@@ -242,7 +241,7 @@ always @(posedge input_clk) begin
     end
 
     if (write) begin
-        mem[wr_ptr_cur_reg[ADDR_WIDTH-1:0]] <= {input_axis_tlast, input_axis_tkeep, input_axis_tdata};
+        mem[wr_ptr_cur_reg[ADDR_WIDTH-1:0]] <= mem_write_data;
     end
 end
 

ParseResult:
UPD HdlStmAssign@@ to 
    MOV HdlOp@@CONCAT to 
    HdlOp: CONCAT
        list: ops
            HdlOp: CONCAT
                list: ops
                    HdlValueId: input_axis_tlast
                    HdlValueId: input_axis_tkeep
            HdlValueId: input_axis_tdata

UPD HdlStmAssign@@ to 
    INS HdlValueId@@mem_write_data to 


CommitId: 385c9cc90ade29878d45e6634e2c70ce85d6d6d5
Fix Vivado block RAM inference
--- a/rtl/axis_async_frame_fifo_64.v
+++ b/rtl/axis_async_frame_fifo_64.v
@@ -336,7 +335,7 @@ always @(posedge output_clk) begin
     end
 
     if (read) begin
-        {output_axis_tlast_reg, output_axis_tkeep_reg, output_axis_tdata_reg} <= mem[rd_ptr_reg[ADDR_WIDTH-1:0]];
+        mem_read_data_reg <= mem[rd_ptr_reg[ADDR_WIDTH-1:0]];
     end
 end
 
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@output_axis_tdata_reg to mem_read_data_reg
        MOV HdlValueId@@output_axis_tdata_reg to ops
        HdlValueId: output_axis_tdata_reg
        DEL HdlOp@@CONCAT from ops
        HdlOp: CONCAT
            list: ops
                HdlValueId: output_axis_tlast_reg
                HdlValueId: output_axis_tkeep_reg
        DEL list@@ops from CONCAT
    DEL HdlOp@@CONCAT from 


CommitId: 592ae7e6a2321b5ce0580a7a51058bb7017d53f6
Change default switch addressing to use MSBs of tdest
--- a/rtl/axis_switch.v
+++ b/rtl/axis_switch.v
@@ -188,8 +188,8 @@ generate
                 drop_next = 1'b1;
                 for (k = 0; k < M_COUNT; k = k + 1) begin
                     if (M_BASE == 0) begin
-                        // M_BASE is zero, route with tdest as port index
-                        if (int_s_axis_tdest[m*DEST_WIDTH +: DEST_WIDTH] == k && (M_CONNECT & (1 << (m+k*S_COUNT)))) begin
+                        // M_BASE is zero, route with $clog2(M_COUNT) MSBs of tdest as port index
+                        if (int_s_axis_tdest[m*DEST_WIDTH+(DEST_WIDTH-CL_M_COUNT) +: CL_M_COUNT] == k && (M_CONNECT & (1 << (m+k*S_COUNT)))) begin
                             select_next = k;
                             select_valid_next = 1'b1;
                             drop_next = 1'b0;
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        INS HdlOp@@EQ to ops
        UPD HdlOp@@EQ to EQ
            INS list@@ops to EQ
            UPD HdlOp@@INDEX to INDEX
                UPD HdlOp@@PART_SELECT_POST to PART_SELECT_POST
                    INS HdlValueId@@CL_M_COUNT to ops
                    UPD HdlOp@@ADD to ADD
                        INS HdlOp@@SUB to ops
                        UPD HdlOp@@SUB to SUB
                            INS list@@ops to SUB
                            INS HdlValueId@@CL_M_COUNT to ops

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@EQ to INDEX
        MOV HdlOp@@EQ to ops
        HdlOp: EQ
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: int_s_axis_tdest
                        HdlOp: PART_SELECT_POST
                            list: ops
                                HdlOp: MUL
                                    list: ops
                                        HdlValueId: m
                                        HdlValueId: DEST_WIDTH
                                HdlValueId: DEST_WIDTH
                HdlValueId: k
        UPD HdlOp@@EQ to EQ
            MOV HdlValueId@@k to ops
            HdlValueId: k
            UPD HdlOp@@INDEX to INDEX
                MOV HdlValueId@@int_s_axis_tdest to ops
                HdlValueId: int_s_axis_tdest
                UPD HdlOp@@PART_SELECT_POST to ADD
                UPD HdlOp@@PART_SELECT_POST to PART_SELECT_POST
                    MOV HdlValueId@@DEST_WIDTH to ops
                    HdlValueId: DEST_WIDTH
            UPD HdlOp@@INDEX to PART_SELECT_POST


CommitId: 585ccefa1534cba00ee915f54baf491a0b49df82
Add TX underflow error signal
--- a/rtl/eth_mac_phy_10g_fifo.v
+++ b/rtl/eth_mac_phy_10g_fifo.v
@@ -91,6 +91,7 @@ module eth_mac_phy_10g_fifo #
     /*
      * Status
      */
+    output wire                  tx_error_underflow,
     output wire                  tx_fifo_overflow,
     output wire                  tx_fifo_bad_frame,
     output wire                  tx_fifo_good_frame,

ParseResult:
INS HdlIdDef@@tx_error_underflow to ports
HdlIdDef: tx_error_underflow
    HdlDirection: OUT


CommitId: 0d22a35bd855a7f08b34a3f1c24ebb143289d91d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_mux_64_4.v
+++ b/rtl/axis_mux_64_4.v
@@ -86,19 +86,19 @@ module axis_mux_64_4 #
     input  wire [1:0]             select
 );
 
-reg [1:0] select_reg = 0, select_next;
-reg frame_reg = 0, frame_next;
+reg [1:0] select_reg = 2'd0, select_next;
+reg frame_reg = 1'b0, frame_next;
 
-reg input_0_axis_tready_reg = 0, input_0_axis_tready_next;
-reg input_1_axis_tready_reg = 0, input_1_axis_tready_next;
-reg input_2_axis_tready_reg = 0, input_2_axis_tready_next;
-reg input_3_axis_tready_reg = 0, input_3_axis_tready_next;
+reg input_0_axis_tready_reg = 1'b0, input_0_axis_tready_next;
+reg input_1_axis_tready_reg = 1'b0, input_1_axis_tready_next;
+reg input_2_axis_tready_reg = 1'b0, input_2_axis_tready_next;
+reg input_3_axis_tready_reg = 1'b0, input_3_axis_tready_next;
 
 // internal datapath
 reg [DATA_WIDTH-1:0] output_axis_tdata_int;
 reg [KEEP_WIDTH-1:0] output_axis_tkeep_int;
 reg                  output_axis_tvalid_int;
-reg                  output_axis_tready_int = 0;
+reg                  output_axis_tready_int_reg = 1'b0;
 reg                  output_axis_tlast_int;
 reg                  output_axis_tuser_int;
 wire                 output_axis_tready_int_early;

ParseResult:
UPD HdlIdDef@@output_axis_tready_int to output_axis_tready_int_reg


CommitId: 0d22a35bd855a7f08b34a3f1c24ebb143289d91d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_mux_64_4.v
+++ b/rtl/axis_mux_64_4.v
@@ -218,17 +218,22 @@ always @(posedge clk) begin
 end
 
 // output datapath logic
-reg [DATA_WIDTH-1:0] output_axis_tdata_reg = 0;
-reg [KEEP_WIDTH-1:0] output_axis_tkeep_reg = 0;
-reg                  output_axis_tvalid_reg = 0;
-reg                  output_axis_tlast_reg = 0;
-reg                  output_axis_tuser_reg = 0;
-
-reg [DATA_WIDTH-1:0] temp_axis_tdata_reg = 0;
-reg [KEEP_WIDTH-1:0] temp_axis_tkeep_reg = 0;
-reg                  temp_axis_tvalid_reg = 0;
-reg                  temp_axis_tlast_reg = 0;
-reg                  temp_axis_tuser_reg = 0;
+reg [DATA_WIDTH-1:0] output_axis_tdata_reg = {DATA_WIDTH{1'b0}};
+reg [KEEP_WIDTH-1:0] output_axis_tkeep_reg = {KEEP_WIDTH{1'b0}};
+reg                  output_axis_tvalid_reg = 1'b0, output_axis_tvalid_next;
+reg                  output_axis_tlast_reg = 1'b0;
+reg                  output_axis_tuser_reg = 1'b0;
+
+reg [DATA_WIDTH-1:0] temp_axis_tdata_reg = {DATA_WIDTH{1'b0}};
+reg [KEEP_WIDTH-1:0] temp_axis_tkeep_reg = {KEEP_WIDTH{1'b0}};
+reg                  temp_axis_tvalid_reg = 1'b0, temp_axis_tvalid_next;
+reg                  temp_axis_tlast_reg = 1'b0;
+reg                  temp_axis_tuser_reg = 1'b0;
+
+// datapath control
+reg store_axis_int_to_output;
+reg store_axis_int_to_temp;
+reg store_axis_temp_to_output;
 
 assign output_axis_tdata = output_axis_tdata_reg;
 assign output_axis_tkeep = output_axis_tkeep_reg;

ParseResult:
INS HdlIdDef@@output_axis_tvalid_next to objs
HdlIdDef: output_axis_tvalid_next
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL

INS HdlIdDef@@temp_axis_tvalid_next to objs
HdlIdDef: temp_axis_tvalid_next
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL

INS HdlIdDef@@store_axis_int_to_output to objs
HdlIdDef: store_axis_int_to_output
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL

INS HdlIdDef@@store_axis_int_to_temp to objs
HdlIdDef: store_axis_int_to_temp
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL

INS HdlIdDef@@store_axis_temp_to_output to objs
HdlIdDef: store_axis_temp_to_output
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL

UPD HdlIdDef@@output_axis_tdata_reg to output_axis_tdata_reg
    INS HdlOp@@REPL_CONCAT to output_axis_tdata_reg
    UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
        INS list@@ops to REPL_CONCAT
        INS HdlValueId@@DATA_WIDTH to ops

UPD HdlIdDef@@output_axis_tkeep_reg to output_axis_tkeep_reg
    INS HdlOp@@REPL_CONCAT to output_axis_tkeep_reg
    UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
        INS list@@ops to REPL_CONCAT
        INS HdlValueId@@KEEP_WIDTH to ops

UPD HdlIdDef@@temp_axis_tdata_reg to temp_axis_tdata_reg
    INS HdlOp@@REPL_CONCAT to temp_axis_tdata_reg
    UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
        INS list@@ops to REPL_CONCAT
        INS HdlValueId@@DATA_WIDTH to ops

UPD HdlIdDef@@temp_axis_tkeep_reg to temp_axis_tkeep_reg
    INS HdlOp@@REPL_CONCAT to temp_axis_tkeep_reg
    UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
        INS list@@ops to REPL_CONCAT
        INS HdlValueId@@KEEP_WIDTH to ops

UPD HdlIdDef@@output_axis_tdata_reg to output_axis_tdata_reg
    MOV HdlValueInt@@0 to output_axis_tdata_reg
    HdlValueInt: 0

UPD HdlIdDef@@output_axis_tkeep_reg to output_axis_tkeep_reg
    MOV HdlValueInt@@0 to output_axis_tkeep_reg
    HdlValueInt: 0

UPD HdlIdDef@@temp_axis_tdata_reg to temp_axis_tdata_reg
    MOV HdlValueInt@@0 to temp_axis_tdata_reg
    HdlValueInt: 0

UPD HdlIdDef@@temp_axis_tkeep_reg to temp_axis_tkeep_reg
    MOV HdlValueInt@@0 to temp_axis_tkeep_reg
    HdlValueInt: 0


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/ip_mux_4.v
+++ b/rtl/ip_mux_4.v
@@ -330,6 +330,25 @@ always @* begin
             selected_input_ip_source_ip = input_3_ip_source_ip;
             selected_input_ip_dest_ip = input_3_ip_dest_ip;
         end
+        default: begin
+            selected_input_ip_hdr_valid = 1'b0;
+            selected_input_eth_dest_mac = 48'd0;
+            selected_input_eth_src_mac = 48'd0;
+            selected_input_eth_type = 16'd0;
+            selected_input_ip_version = 4'd0;
+            selected_input_ip_ihl = 4'd0;
+            selected_input_ip_dscp = 6'd0;
+            selected_input_ip_ecn = 2'd0;
+            selected_input_ip_length = 16'd0;
+            selected_input_ip_identification = 16'd0;
+            selected_input_ip_flags = 3'd0;
+            selected_input_ip_fragment_offset = 13'd0;
+            selected_input_ip_ttl = 8'd0;
+            selected_input_ip_protocol = 8'd0;
+            selected_input_ip_header_checksum = 16'd0;
+            selected_input_ip_source_ip = 32'd0;
+            selected_input_ip_dest_ip = 32'd0;
+        end
     endcase
 end
 

ParseResult:
UPD HdlStmCase@@select to select
    INS HdlStmBlock@@SEQ to select
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_hdr_valid
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_eth_dest_mac
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_eth_src_mac
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_eth_type
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_version
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_ihl
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_dscp
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_ecn
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_length
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_identification
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_flags
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_fragment_offset
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_ttl
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_protocol
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_header_checksum
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_source_ip
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_dest_ip
                    HdlValueInt: 0


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/ip_mux_4.v
+++ b/rtl/ip_mux_4.v
@@ -369,6 +388,13 @@ always @* begin
             current_input_tlast = input_3_ip_payload_tlast;
             current_input_tuser = input_3_ip_payload_tuser;
         end
+        default: begin
+            current_input_tdata = 8'd0;
+            current_input_tvalid = 1'b0;
+            current_input_tready = 1'b0;
+            current_input_tlast = 1'b0;
+            current_input_tuser = 1'b0;
+        end
     endcase
 end
 

ParseResult:
UPD HdlStmCase@@select_reg to select_reg
    INS HdlStmBlock@@SEQ to select_reg
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tdata
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tvalid
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tready
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tlast
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tuser
                    HdlValueInt: 0


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/ip_mux_4.v
+++ b/rtl/ip_mux_4.v
@@ -381,10 +407,10 @@ always @* begin
     input_2_ip_hdr_ready_next = input_2_ip_hdr_ready_reg & ~input_2_ip_hdr_valid;
     input_3_ip_hdr_ready_next = input_3_ip_hdr_ready_reg & ~input_3_ip_hdr_valid;
 
-    input_0_ip_payload_tready_next = 0;
-    input_1_ip_payload_tready_next = 0;
-    input_2_ip_payload_tready_next = 0;
-    input_3_ip_payload_tready_next = 0;
+    input_0_ip_payload_tready_next = 1'b0;
+    input_1_ip_payload_tready_next = 1'b0;
+    input_2_ip_payload_tready_next = 1'b0;
+    input_3_ip_payload_tready_next = 1'b0;
 
     output_ip_hdr_valid_next = output_ip_hdr_valid_reg & ~output_ip_hdr_ready;
     output_eth_dest_mac_next = output_eth_dest_mac_reg;

ParseResult:
UPD HdlStmCase@@select_reg to select_reg
    INS HdlStmBlock@@SEQ to select_reg
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tdata
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tvalid
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tready
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tlast
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tuser
                    HdlValueInt: 0


CommitId: 0691c9d61b102cdbb3ed73a449786ba096d86a08
Fix output pipeline issue
--- a/rtl/axis_fifo_64.v
+++ b/rtl/axis_fifo_64.v
@@ -130,7 +130,7 @@ always @* begin
 
     mem_read_data_valid_next = mem_read_data_valid_reg;
 
-    if (output_axis_tready | ~output_axis_tvalid) begin
+    if (store_output | ~mem_read_data_valid_reg) begin
         // output data not valid OR currently being transferred
         if (~empty) begin
             // not empty, perform read
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@OR to OR
        UPD HdlValueId@@output_axis_tready to store_output
        UPD HdlOp@@NEG to NEG
            UPD HdlValueId@@output_axis_tvalid to mem_read_data_valid_reg


CommitId: 585ccefa1534cba00ee915f54baf491a0b49df82
Add TX underflow error signal
--- a/rtl/axis_gmii_tx.v
+++ b/rtl/axis_gmii_tx.v
@@ -68,7 +68,8 @@ module axis_gmii_tx #
     /*
      * Status
      */
-    output wire        start_packet
+    output wire        start_packet,
+    output wire        error_underflow
 );
 
 localparam [7:0]

ParseResult:
INS HdlIdDef@@error_underflow to ports
HdlIdDef: error_underflow
    HdlDirection: OUT


CommitId: 585ccefa1534cba00ee915f54baf491a0b49df82
Add TX underflow error signal
--- a/rtl/axis_gmii_tx.v
+++ b/rtl/axis_gmii_tx.v
@@ -105,6 +106,7 @@ reg gmii_tx_er_reg = 1'b0, gmii_tx_er_next;
 reg s_axis_tready_reg = 1'b0, s_axis_tready_next;
 
 reg start_packet_reg = 1'b0, start_packet_next;
+reg error_underflow_reg = 1'b0, error_underflow_next;
 
 reg [31:0] crc_state = 32'hFFFFFFFF;
 wire [31:0] crc_next;

ParseResult:
INS HdlIdDef@@error_underflow_reg to objs
HdlIdDef: error_underflow_reg
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@error_underflow_next to objs
HdlIdDef: error_underflow_next
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL


CommitId: 585ccefa1534cba00ee915f54baf491a0b49df82
Add TX underflow error signal
--- a/rtl/axis_gmii_tx.v
+++ b/rtl/axis_gmii_tx.v
@@ -116,6 +118,7 @@ assign gmii_tx_en = gmii_tx_en_reg;
 assign gmii_tx_er = gmii_tx_er_reg;
 
 assign start_packet = start_packet_reg;
+assign error_underflow = error_underflow_reg;
 
 lfsr #(
     .LFSR_WIDTH(32),

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: error_underflow_reg
    HdlValueId: error_underflow


CommitId: 585ccefa1534cba00ee915f54baf491a0b49df82
Add TX underflow error signal
--- a/rtl/axis_gmii_tx.v
+++ b/rtl/axis_gmii_tx.v
@@ -153,6 +156,7 @@ always @* begin
     gmii_tx_er_next = 1'b0;
 
     start_packet_next = 1'b0;
+    error_underflow_next = 1'b0;
 
     if (!clk_enable) begin
         // clock disabled - hold state and outputs

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: error_underflow_next
                HdlValueInt: 0


CommitId: 585ccefa1534cba00ee915f54baf491a0b49df82
Add TX underflow error signal
--- a/rtl/axis_gmii_tx.v
+++ b/rtl/axis_gmii_tx.v
@@ -243,6 +247,7 @@ always @* begin
                     // tvalid deassert, fail frame
                     gmii_tx_er_next = 1'b1;
                     frame_ptr_next = 16'd0;
+                    error_underflow_next = 1'b1;
                     state_next = STATE_WAIT_END;
                 end
             end

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: error_underflow_next
                HdlValueInt: 0

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: error_underflow_next
                HdlValueInt: 1


CommitId: 585ccefa1534cba00ee915f54baf491a0b49df82
Add TX underflow error signal
--- a/rtl/axis_gmii_tx.v
+++ b/rtl/axis_gmii_tx.v
@@ -364,6 +369,7 @@ always @(posedge clk) begin
         gmii_tx_er_reg <= 1'b0;
 
         start_packet_reg <= 1'b0;
+        error_underflow_reg <= 1'b0;
 
         crc_state <= 32'hFFFFFFFF;
     end else begin

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: error_underflow_next
                HdlValueInt: 0

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: error_underflow_reg


CommitId: 585ccefa1534cba00ee915f54baf491a0b49df82
Add TX underflow error signal
--- a/rtl/axis_gmii_tx.v
+++ b/rtl/axis_gmii_tx.v
@@ -377,6 +383,7 @@ always @(posedge clk) begin
         gmii_tx_er_reg <= gmii_tx_er_next;
 
         start_packet_reg <= start_packet_next;
+        error_underflow_reg <= error_underflow_next;
 
         // datapath
         if (reset_crc) begin
ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: error_underflow_next
    HdlValueId: error_underflow_reg


CommitId: 51b5335318c83e2662a0edb768b05ac7cbcd6603
Remove z from default states for FSM inference
--- a/rtl/udp_ip_rx.v
+++ b/rtl/udp_ip_rx.v
@@ -229,7 +229,7 @@ assign error_header_early_termination = error_header_early_termination_reg;
 assign error_payload_early_termination = error_payload_early_termination_reg;
 
 always @* begin
-    state_next = 2'bz;
+    state_next = STATE_IDLE;
 
     input_ip_hdr_ready_next = 0;
     input_ip_payload_tready_next = 0;
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueId@@STATE_IDLE to ops

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            DEL HdlValueInt@@z from ops


CommitId: 77211926f2dd114cdc8d1963e557db832f0df6bf
Fix classifier logic
--- a/rtl/udp_complete.v
+++ b/rtl/udp_complete.v
@@ -344,7 +344,8 @@ assign output_ip_payload_tvalid = input_select_ip_reg & ip_rx_ip_payload_tvalid;
 assign output_ip_payload_tlast = ip_rx_ip_payload_tlast;
 assign output_ip_payload_tuser = ip_rx_ip_payload_tuser;
 
-assign ip_rx_ip_hdr_ready = udp_rx_ip_hdr_ready & output_ip_hdr_ready;
+assign ip_rx_ip_hdr_ready = (input_select_udp & udp_rx_ip_hdr_ready) |
+                            (input_select_ip & output_ip_hdr_ready);
 
 assign ip_rx_ip_payload_tready = (input_select_udp_reg & udp_rx_ip_payload_tready) |
                                  (input_select_ip_reg & output_ip_payload_tready);
ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: OR
        list: ops
            HdlOp: AND
                list: ops
                    HdlValueId: input_select_udp
                    HdlValueId: udp_rx_ip_hdr_ready
            HdlOp: AND
                list: ops
                    HdlValueId: input_select_ip
                    HdlValueId: output_ip_hdr_ready
    HdlValueId: ip_rx_ip_hdr_ready

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: AND
        list: ops
            HdlValueId: udp_rx_ip_hdr_ready
            HdlValueId: output_ip_hdr_ready
    HdlValueId: ip_rx_ip_hdr_ready


CommitId: 5f454d6c050d53d421cd430db18ba6b4b2cb8c54
Update axis_switch to support default routing configurations
--- a/rtl/axis_switch.v
+++ b/rtl/axis_switch.v
@@ -56,12 +56,12 @@ module axis_switch #
     // Concatenate M_COUNT DEST_WIDTH sized constants
     // Port selected if M_BASE <= tdest <= M_TOP
     // set to zero for default routing with tdest as port index
-    parameter M_BASE = {2'd3, 2'd2, 2'd1, 2'd0},
+    parameter M_BASE = 0,
     // Output interface routing top tdest selection
     // Concatenate M_COUNT DEST_WIDTH sized constants
     // Port selected if M_BASE <= tdest <= M_TOP
     // set to zero to inherit from M_BASE
-    parameter M_TOP = {2'd3, 2'd2, 2'd1, 2'd0},
+    parameter M_TOP = 0,
     // Interface connection control
     // M_COUNT concatenated fields of S_COUNT bits
     parameter M_CONNECT = {M_COUNT{{S_COUNT{1'b1}}}},

ParseResult:
UPD HdlIdDef@@M_BASE to M_BASE
    UPD HdlOp@@CONCAT to CONCAT
        MOV HdlValueInt@@0 to ops
        HdlValueInt: 0
        DEL HdlOp@@CONCAT from ops
        HdlOp: CONCAT
            list: ops
                HdlOp: CONCAT
                    list: ops
                        HdlValueInt: 3
                        HdlValueInt: 2
                HdlValueInt: 1
        DEL list@@ops from CONCAT
    DEL HdlOp@@CONCAT from M_BASE

UPD HdlIdDef@@M_TOP to M_TOP
    UPD HdlOp@@CONCAT to CONCAT
        MOV HdlValueInt@@0 to ops
        HdlValueInt: 0
        DEL HdlOp@@CONCAT from ops
        HdlOp: CONCAT
            list: ops
                HdlOp: CONCAT
                    list: ops
                        HdlValueInt: 3
                        HdlValueInt: 2
                HdlValueInt: 1
        DEL list@@ops from CONCAT
    DEL HdlOp@@CONCAT from M_TOP


CommitId: 5f454d6c050d53d421cd430db18ba6b4b2cb8c54
Update axis_switch to support default routing configurations
--- a/rtl/axis_switch.v
+++ b/rtl/axis_switch.v
@@ -178,10 +187,26 @@ generate
                 select_valid_next = 1'b0;
                 drop_next = 1'b1;
                 for (k = 0; k < M_COUNT; k = k + 1) begin
-                    if (int_s_axis_tdest[m*DEST_WIDTH +: DEST_WIDTH] >= M_BASE[k*DEST_WIDTH +: DEST_WIDTH] && int_s_axis_tdest[m*DEST_WIDTH +: DEST_WIDTH] <= M_TOP[k*DEST_WIDTH +: DEST_WIDTH] && (M_CONNECT & (1 << (m+k*S_COUNT)))) begin
-                        select_next = k;
-                        select_valid_next = 1'b1;
-                        drop_next = 1'b0;
+                    if (M_BASE == 0) begin
+                        // M_BASE is zero, route with tdest as port index
+                        if (int_s_axis_tdest[m*DEST_WIDTH +: DEST_WIDTH] == k && (M_CONNECT & (1 << (m+k*S_COUNT)))) begin
+                            select_next = k;
+                            select_valid_next = 1'b1;
+                            drop_next = 1'b0;
+                        end
+                    end else if (M_TOP == 0) begin
+                        // M_TOP is zero, assume equal to M_BASE
+                        if (int_s_axis_tdest[m*DEST_WIDTH +: DEST_WIDTH] == M_BASE[k*DEST_WIDTH +: DEST_WIDTH] && (M_CONNECT & (1 << (m+k*S_COUNT)))) begin
+                            select_next = k;
+                            select_valid_next = 1'b1;
+                            drop_next = 1'b0;
+                        end
+                    end else begin
+                        if (int_s_axis_tdest[m*DEST_WIDTH +: DEST_WIDTH] >= M_BASE[k*DEST_WIDTH +: DEST_WIDTH] && int_s_axis_tdest[m*DEST_WIDTH +: DEST_WIDTH] <= M_TOP[k*DEST_WIDTH +: DEST_WIDTH] && (M_CONNECT & (1 << (m+k*S_COUNT)))) begin
+                            select_next = k;
+                            select_valid_next = 1'b1;
+                            drop_next = 1'b0;
+                        end
                     end
                 end
             end
ParseResult:
UPD HdlStmFor@@ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    INS HdlOp@@EQ to 
    HdlOp: EQ
        list: ops
            HdlValueId: M_BASE
            HdlValueInt: 0
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: AND_LOG
                    list: ops
                        HdlOp: EQ
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: int_s_axis_tdest
                                        HdlOp: PART_SELECT_POST
                                            list: ops
                                                HdlOp: MUL
                                                    list: ops
                                                        HdlValueId: m
                                                        HdlValueId: DEST_WIDTH
                                                HdlValueId: DEST_WIDTH
                                HdlValueId: k
                        HdlOp: AND
                            list: ops
                                HdlValueId: M_CONNECT
                                HdlOp: SLL
                                    list: ops
                                        HdlValueInt: 1
                                        HdlOp: ADD
                                            list: ops
                                                HdlValueId: m
                                                HdlOp: MUL
                                                    list: ops
                                                        HdlValueId: k
                                                        HdlValueId: S_COUNT
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: select_next
                                HdlValueId: k
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: select_valid_next
                                HdlValueInt: 1
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: drop_next
                                HdlValueInt: 0
                list: elifs
    INS list@@elifs to 
    list: elifs
        tuple
            HdlOp: EQ
                list: ops
                    HdlValueId: M_TOP
                    HdlValueInt: 0
            HdlStmBlock: SEQ
                list: body
                    HdlStmIf
                        HdlOp: AND_LOG
                            list: ops
                                HdlOp: EQ
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: int_s_axis_tdest
                                                HdlOp: PART_SELECT_POST
                                                    list: ops
                                                        HdlOp: MUL
                                                            list: ops
                                                                HdlValueId: m
                                                                HdlValueId: DEST_WIDTH
                                                        HdlValueId: DEST_WIDTH
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: M_BASE
                                                HdlOp: PART_SELECT_POST
                                                    list: ops
                                                        HdlOp: MUL
                                                            list: ops
                                                                HdlValueId: k
                                                                HdlValueId: DEST_WIDTH
                                                        HdlValueId: DEST_WIDTH
                                HdlOp: AND
                                    list: ops
                                        HdlValueId: M_CONNECT
                                        HdlOp: SLL
                                            list: ops
                                                HdlValueInt: 1
                                                HdlOp: ADD
                                                    list: ops
                                                        HdlValueId: m
                                                        HdlOp: MUL
                                                            list: ops
                                                                HdlValueId: k
                                                                HdlValueId: S_COUNT
                        HdlStmBlock: SEQ
                            list: body
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: select_next
                                        HdlValueId: k
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: select_valid_next
                                        HdlValueInt: 1
                                HdlOp: ASSIGN
                                    list: ops
                                        HdlValueId: drop_next
                                        HdlValueInt: 0
                        list: elifs

UPD HdlStmFor@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlOp: AND_LOG
                    list: ops
                        HdlOp: AND_LOG
                            list: ops
                                HdlOp: GE
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: int_s_axis_tdest
                                                HdlOp: PART_SELECT_POST
                                                    list: ops
                                                        HdlOp: MUL
                                                            list: ops
                                                                HdlValueId: m
                                                                HdlValueId: DEST_WIDTH
                                                        HdlValueId: DEST_WIDTH
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: M_BASE
                                                HdlOp: PART_SELECT_POST
                                                    list: ops
                                                        HdlOp: MUL
                                                            list: ops
                                                                HdlValueId: k
                                                                HdlValueId: DEST_WIDTH
                                                        HdlValueId: DEST_WIDTH
                                HdlOp: LE
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: int_s_axis_tdest
                                                HdlOp: PART_SELECT_POST
                                                    list: ops
                                                        HdlOp: MUL
                                                            list: ops
                                                                HdlValueId: m
                                                                HdlValueId: DEST_WIDTH
                                                        HdlValueId: DEST_WIDTH
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: M_TOP
                                                HdlOp: PART_SELECT_POST
                                                    list: ops
                                                        HdlOp: MUL
                                                            list: ops
                                                                HdlValueId: k
                                                                HdlValueId: DEST_WIDTH
                                                        HdlValueId: DEST_WIDTH
                        HdlOp: AND
                            list: ops
                                HdlValueId: M_CONNECT
                                HdlOp: SLL
                                    list: ops
                                        HdlValueInt: 1
                                        HdlOp: ADD
                                            list: ops
                                                HdlValueId: m
                                                HdlOp: MUL
                                                    list: ops
                                                        HdlValueId: k
                                                        HdlValueId: S_COUNT
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: select_next
                                HdlValueId: k
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: select_valid_next
                                HdlValueInt: 1
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: drop_next
                                HdlValueInt: 0
                list: elifs


CommitId: 0691c9d61b102cdbb3ed73a449786ba096d86a08
Fix output pipeline issue
--- a/rtl/axis_async_frame_fifo.v
+++ b/rtl/axis_async_frame_fifo.v
@@ -314,7 +314,7 @@ always @* begin
 
     mem_read_data_valid_next = mem_read_data_valid_reg;
 
-    if (output_axis_tready | ~output_axis_tvalid) begin
+    if (store_output | ~mem_read_data_valid_reg) begin
         // output data not valid OR currently being transferred
         if (~empty) begin
             // not empty, perform read
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@OR to OR
        UPD HdlValueId@@output_axis_tready to store_output
        UPD HdlOp@@NEG to NEG
            UPD HdlValueId@@output_axis_tvalid to mem_read_data_valid_reg


CommitId: 6b85aed564a7a3667e630d2c6eac84ea9f54f3d7
Any control characters in packet considered an error
--- a/rtl/axis_xgmii_rx_32.v
+++ b/rtl/axis_xgmii_rx_32.v
@@ -270,8 +270,8 @@ always @* begin
 
             if (xgmii_rxc_d2[0] && xgmii_rxd_d2[7:0] == XGMII_START) begin
                 // start condition
-                if (detect_error_masked) begin
-                    // error in first data word
+                if (control_masked) begin
+                    // control or error characters in first data word
                     m_axis_tdata_next = 32'd0;
                     m_axis_tkeep_next = 4'h1;
                     m_axis_tvalid_next = 1'b1;
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlValueId@@detect_error_masked to control_masked


CommitId: 0b2066abe3d8983a120cb8afe598c2710f2e5be6
Fix corner case with back-to-back single-cycle transfers
--- a/rtl/axis_frame_len.v
+++ b/rtl/axis_frame_len.v
@@ -62,7 +62,6 @@ module axis_frame_len #
 
 reg [LEN_WIDTH-1:0] frame_len_reg = 0, frame_len_next;
 reg frame_len_valid_reg = 1'b0, frame_len_valid_next;
-reg frame_reg = 1'b0, frame_next;
 
 assign frame_len = frame_len_reg;
 assign frame_len_valid = frame_len_valid_reg;

ParseResult:
DEL HdlIdDef@@frame_reg from objs
HdlIdDef: frame_reg
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@frame_next from objs
HdlIdDef: frame_next
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL


CommitId: 0b2066abe3d8983a120cb8afe598c2710f2e5be6
Fix corner case with back-to-back single-cycle transfers
--- a/rtl/axis_frame_len.v
+++ b/rtl/axis_frame_len.v
@@ -72,7 +71,10 @@ integer offset, i, bit_cnt;
 always @* begin
     frame_len_next = frame_len_reg;
     frame_len_valid_next = 1'b0;
-    frame_next = frame_reg;
+
+    if (frame_len_valid_reg) begin
+        frame_len_next = 0;
+    end
 
     if (monitor_axis_tready && monitor_axis_tvalid) begin
         // valid transfer cycle

ParseResult:
INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    INS HdlValueId@@frame_len_valid_reg to 
    INS list@@elifs to 

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: frame_next
                HdlValueId: frame_reg


CommitId: 0b2066abe3d8983a120cb8afe598c2710f2e5be6
Fix corner case with back-to-back single-cycle transfers
--- a/rtl/axis_frame_len.v
+++ b/rtl/axis_frame_len.v
@@ -80,11 +82,6 @@ always @* begin
         if (monitor_axis_tlast) begin
             // end of frame
             frame_len_valid_next = 1'b1;
-            frame_next = 1'b0;
-        end else if (!frame_reg) begin
-            // first word after end of frame
-            frame_len_next = 0;
-            frame_next = 1'b1;
         end
 
         // increment frame length by number of words transferred

ParseResult:
UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: frame_len_next
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: frame_next
                    HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: frame_next
                HdlValueInt: 1
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: frame_next
                HdlValueInt: 0
    DEL HdlOp@@NEG_LOG from 
    HdlOp: NEG_LOG
        list: ops
            HdlValueId: frame_reg
    DEL tuple@@ from elifs

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: frame_next
                HdlValueId: frame_reg


CommitId: 0b2066abe3d8983a120cb8afe598c2710f2e5be6
Fix corner case with back-to-back single-cycle transfers
--- a/rtl/axis_frame_len.v
+++ b/rtl/axis_frame_len.v
@@ -101,14 +98,12 @@ always @* begin
 end
 
 always @(posedge clk) begin
+    frame_len_reg <= frame_len_next;
+    frame_len_valid_reg <= frame_len_valid_next;
+
     if (rst) begin
         frame_len_reg <= 0;
         frame_len_valid_reg <= 0;
-        frame_reg <= 1'b0;
-    end else begin
-        frame_len_reg <= frame_len_next;
-        frame_len_valid_reg <= frame_len_valid_next;
-        frame_reg <= frame_next;
     end
 end
 
ParseResult:
MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: frame_len_next
    HdlValueId: frame_len_reg

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: frame_len_valid_next
    HdlValueId: frame_len_valid_reg

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@ASSIGN from body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: frame_next
                HdlValueId: frame_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: frame_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueId: frame_next
    HdlValueId: frame_reg

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 


CommitId: 76c805e4167c1065db0a7cdec711b30c1e11da91
Fix more indexing bugs
--- a/rtl/axis_switch.v
+++ b/rtl/axis_switch.v
@@ -225,7 +225,7 @@ generate
 
         // forwarding
         assign int_axis_tvalid[m*M_COUNT +: M_COUNT] = (int_s_axis_tvalid[m] && select_valid_reg && !drop_reg) << select_reg;
-        assign int_s_axis_tready[m] = int_axis_tready[select_reg*M_COUNT+m] || drop_reg;
+        assign int_s_axis_tready[m] = int_axis_tready[select_reg*S_COUNT+m] || drop_reg;
 
         // S side register
         axis_register #(

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@OR_LOG to OR_LOG
        UPD HdlOp@@INDEX to INDEX
            UPD HdlOp@@ADD to ADD
                UPD HdlOp@@MUL to MUL
                    UPD HdlValueId@@M_COUNT to S_COUNT


CommitId: 76c805e4167c1065db0a7cdec711b30c1e11da91
Fix more indexing bugs
--- a/rtl/axis_switch.v
+++ b/rtl/axis_switch.v
@@ -293,7 +293,7 @@ generate
         // mux
         wire [DATA_WIDTH-1:0] s_axis_tdata_mux   = int_s_axis_tdata[grant_encoded*DATA_WIDTH +: DATA_WIDTH];
         wire [KEEP_WIDTH-1:0] s_axis_tkeep_mux   = int_s_axis_tkeep[grant_encoded*KEEP_WIDTH +: KEEP_WIDTH];
-        wire                  s_axis_tvalid_mux  = int_axis_tvalid[grant_encoded*S_COUNT+n] && grant_valid;
+        wire                  s_axis_tvalid_mux  = int_axis_tvalid[grant_encoded*M_COUNT+n] && grant_valid;
         wire                  s_axis_tready_mux;
         wire                  s_axis_tlast_mux   = int_s_axis_tlast[grant_encoded];
         wire [ID_WIDTH-1:0]   s_axis_tid_mux     = int_s_axis_tid[grant_encoded*ID_WIDTH +: ID_WIDTH];
ParseResult:
UPD HdlIdDef@@s_axis_tvalid_mux to s_axis_tvalid_mux
    UPD HdlOp@@AND_LOG to AND_LOG
        UPD HdlOp@@INDEX to INDEX
            UPD HdlOp@@ADD to ADD
                UPD HdlOp@@MUL to MUL
                    UPD HdlValueId@@S_COUNT to M_COUNT


CommitId: 51b5335318c83e2662a0edb768b05ac7cbcd6603
Remove z from default states for FSM inference
--- a/rtl/eth_axis_rx.v
+++ b/rtl/eth_axis_rx.v
@@ -133,7 +133,7 @@ assign busy = busy_reg;
 assign error_header_early_termination = error_header_early_termination_reg;
 
 always @* begin
-    state_next = 2'bz;
+    state_next = STATE_IDLE;
 
     input_axis_tready_next = 0;
 
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueId@@STATE_IDLE to ops

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            DEL HdlValueInt@@z from ops


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/ip_mux_2.v
+++ b/rtl/ip_mux_2.v
@@ -236,6 +236,25 @@ always @* begin
             selected_input_ip_source_ip = input_1_ip_source_ip;
             selected_input_ip_dest_ip = input_1_ip_dest_ip;
         end
+        default: begin
+            selected_input_ip_hdr_valid = 1'b0;
+            selected_input_eth_dest_mac = 48'd0;
+            selected_input_eth_src_mac = 48'd0;
+            selected_input_eth_type = 16'd0;
+            selected_input_ip_version = 4'd0;
+            selected_input_ip_ihl = 4'd0;
+            selected_input_ip_dscp = 6'd0;
+            selected_input_ip_ecn = 2'd0;
+            selected_input_ip_length = 16'd0;
+            selected_input_ip_identification = 16'd0;
+            selected_input_ip_flags = 3'd0;
+            selected_input_ip_fragment_offset = 13'd0;
+            selected_input_ip_ttl = 8'd0;
+            selected_input_ip_protocol = 8'd0;
+            selected_input_ip_header_checksum = 16'd0;
+            selected_input_ip_source_ip = 32'd0;
+            selected_input_ip_dest_ip = 32'd0;
+        end
     endcase
 end
 

ParseResult:
UPD HdlStmCase@@select to select
    INS HdlStmBlock@@SEQ to select
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_hdr_valid
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_eth_dest_mac
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_eth_src_mac
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_eth_type
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_version
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_ihl
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_dscp
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_ecn
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_length
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_identification
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_flags
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_fragment_offset
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_ttl
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_protocol
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_header_checksum
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_source_ip
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_dest_ip
                    HdlValueInt: 0


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/ip_mux_2.v
+++ b/rtl/ip_mux_2.v
@@ -261,6 +280,13 @@ always @* begin
             current_input_tlast = input_1_ip_payload_tlast;
             current_input_tuser = input_1_ip_payload_tuser;
         end
+        default: begin
+            current_input_tdata = 8'd0;
+            current_input_tvalid = 1'b0;
+            current_input_tready = 1'b0;
+            current_input_tlast = 1'b0;
+            current_input_tuser = 1'b0;
+        end
     endcase
 end
 

ParseResult:
UPD HdlStmCase@@select to select
    INS HdlStmBlock@@SEQ to select
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_hdr_valid
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_eth_dest_mac
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_eth_src_mac
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_eth_type
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_version
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_ihl
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_dscp
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_ecn
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_length
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_identification
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_flags
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_fragment_offset
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_ttl
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_protocol
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_header_checksum
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_source_ip
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: selected_input_ip_dest_ip
                    HdlValueInt: 0


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/ip_mux_2.v
+++ b/rtl/ip_mux_2.v
@@ -271,8 +297,8 @@ always @* begin
     input_0_ip_hdr_ready_next = input_0_ip_hdr_ready_reg & ~input_0_ip_hdr_valid;
     input_1_ip_hdr_ready_next = input_1_ip_hdr_ready_reg & ~input_1_ip_hdr_valid;
 
-    input_0_ip_payload_tready_next = 0;
-    input_1_ip_payload_tready_next = 0;
+    input_0_ip_payload_tready_next = 1'b0;
+    input_1_ip_payload_tready_next = 1'b0;
 
     output_ip_hdr_valid_next = output_ip_hdr_valid_reg & ~output_ip_hdr_ready;
     output_eth_dest_mac_next = output_eth_dest_mac_reg;

ParseResult:
UPD HdlStmCase@@select_reg to select_reg
    INS HdlStmBlock@@SEQ to select_reg
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tdata
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tvalid
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tready
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tlast
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tuser
                    HdlValueInt: 0


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/udp_mux_4.v
+++ b/rtl/udp_mux_4.v
@@ -417,6 +440,13 @@ always @* begin
             current_input_tlast = input_3_udp_payload_tlast;
             current_input_tuser = input_3_udp_payload_tuser;
         end
+        default: begin
+            current_input_tdata = 8'd0;
+            current_input_tvalid = 1'b0;
+            current_input_tready = 1'b0;
+            current_input_tlast = 1'b0;
+            current_input_tuser = 1'b0;
+        end
     endcase
 end
 

ParseResult:
UPD HdlStmCase@@select_reg to select_reg
    INS HdlStmBlock@@SEQ to select_reg
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tdata
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tvalid
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tready
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tlast
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tuser
                    HdlValueInt: 0


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/udp_mux_4.v
+++ b/rtl/udp_mux_4.v
@@ -429,10 +459,10 @@ always @* begin
     input_2_udp_hdr_ready_next = input_2_udp_hdr_ready_reg & ~input_2_udp_hdr_valid;
     input_3_udp_hdr_ready_next = input_3_udp_hdr_ready_reg & ~input_3_udp_hdr_valid;
 
-    input_0_udp_payload_tready_next = 0;
-    input_1_udp_payload_tready_next = 0;
-    input_2_udp_payload_tready_next = 0;
-    input_3_udp_payload_tready_next = 0;
+    input_0_udp_payload_tready_next = 1'b0;
+    input_1_udp_payload_tready_next = 1'b0;
+    input_2_udp_payload_tready_next = 1'b0;
+    input_3_udp_payload_tready_next = 1'b0;
 
     output_udp_hdr_valid_next = output_udp_hdr_valid_reg & ~output_udp_hdr_ready;
     output_eth_dest_mac_next = output_eth_dest_mac_reg;

ParseResult:
UPD HdlStmCase@@select_reg to select_reg
    INS HdlStmBlock@@SEQ to select_reg
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tdata
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tvalid
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tready
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tlast
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tuser
                    HdlValueInt: 0


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/arp_eth_tx.v
+++ b/rtl/arp_eth_tx.v
@@ -141,33 +141,33 @@ assign busy = busy_reg;
 always @* begin
     state_next = STATE_IDLE;
 
-    input_frame_ready_next = 0;
+    input_frame_ready_next = 1'b0;
 
-    store_frame = 0;
+    store_frame = 1'b0;
 
     frame_ptr_next = frame_ptr_reg;
 
     output_eth_hdr_valid_next = output_eth_hdr_valid_reg & ~output_eth_hdr_ready;
 
-    output_eth_payload_tdata_int = 0;
-    output_eth_payload_tvalid_int = 0;
-    output_eth_payload_tlast_int = 0;
-    output_eth_payload_tuser_int = 0;
+    output_eth_payload_tdata_int = 8'd0;
+    output_eth_payload_tvalid_int = 1'b0;
+    output_eth_payload_tlast_int = 1'b0;
+    output_eth_payload_tuser_int = 1'b0;
 
     case (state_reg)
         STATE_IDLE: begin
             // idle state - wait for data
-            frame_ptr_next = 0;
+            frame_ptr_next = 8'd0;
             input_frame_ready_next = ~output_eth_hdr_valid_reg;
 
             if (input_frame_ready & input_frame_valid) begin
-                store_frame = 1;
-                input_frame_ready_next = 0;
-                output_eth_hdr_valid_next = 1;
-                if (output_eth_payload_tready_int) begin
-                    output_eth_payload_tvalid_int = 1;
+                store_frame = 1'b1;
+                input_frame_ready_next = 1'b0;
+                output_eth_hdr_valid_next = 1'b1;
+                if (output_eth_payload_tready_int_reg) begin
+                    output_eth_payload_tvalid_int = 1'b1;
                     output_eth_payload_tdata_int = input_arp_htype[15: 8];
-                    frame_ptr_next = 1;
+                    frame_ptr_next = 8'd1;
                 end
                 state_next = STATE_WRITE_HEADER;
             end else begin

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlValueId@@output_eth_payload_tready_int to output_eth_payload_tready_int_reg


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/arp_eth_tx.v
+++ b/rtl/arp_eth_tx.v
@@ -176,17 +176,17 @@ always @* begin
         end
         STATE_WRITE_HEADER: begin
             // read header state
-            if (output_eth_payload_tready_int) begin
+            if (output_eth_payload_tready_int_reg) begin
                 // word transfer out
-                frame_ptr_next = frame_ptr_reg+1;
-                output_eth_payload_tvalid_int = 1;
+                frame_ptr_next = frame_ptr_reg + 8'd1;
+                output_eth_payload_tvalid_int = 1'b1;
                 state_next = STATE_WRITE_HEADER;
                 case (frame_ptr_reg)
                     8'h01: output_eth_payload_tdata_int = arp_htype_reg[ 7: 0];
                     8'h02: output_eth_payload_tdata_int = arp_ptype_reg[15: 8];
                     8'h03: output_eth_payload_tdata_int = arp_ptype_reg[ 7: 0];
-                    8'h04: output_eth_payload_tdata_int = 6; // hlen
-                    8'h05: output_eth_payload_tdata_int = 4; // plen
+                    8'h04: output_eth_payload_tdata_int = 8'd6; // hlen
+                    8'h05: output_eth_payload_tdata_int = 8'd4; // plen
                     8'h06: output_eth_payload_tdata_int = arp_oper_reg[15: 8];
                     8'h07: output_eth_payload_tdata_int = arp_oper_reg[ 7: 0];
                     8'h08: output_eth_payload_tdata_int = arp_sha_reg[47:40];

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlValueId@@output_eth_payload_tready_int to output_eth_payload_tready_int_reg


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/arp_eth_tx.v
+++ b/rtl/arp_eth_tx.v
@@ -210,7 +210,7 @@ always @* begin
                     8'h1A: output_eth_payload_tdata_int = arp_tpa_reg[15: 8];
                     8'h1B: begin
                         output_eth_payload_tdata_int = arp_tpa_reg[ 7: 0];
-                        output_eth_payload_tlast_int = 1;
+                        output_eth_payload_tlast_int = 1'b1;
                         input_frame_ready_next = ~output_eth_hdr_valid_reg;
                         state_next = STATE_IDLE;
                     end

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlValueId@@output_eth_payload_tready_int to output_eth_payload_tready_int_reg


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/arp_eth_tx.v
+++ b/rtl/arp_eth_tx.v
@@ -225,19 +225,10 @@ end
 always @(posedge clk) begin
     if (rst) begin
         state_reg <= STATE_IDLE;
-        frame_ptr_reg <= 0;
-        input_frame_ready_reg <= 0;
-        output_eth_dest_mac_reg <= 0;
-        output_eth_src_mac_reg <= 0;
-        output_eth_type_reg <= 0;
-        arp_htype_reg <= 0;
-        arp_ptype_reg <= 0;
-        arp_oper_reg <= 0;
-        arp_sha_reg <= 0;
-        arp_spa_reg <= 0;
-        arp_tha_reg <= 0;
-        arp_tpa_reg <= 0;
-        busy_reg <= 0;
+        frame_ptr_reg <= 8'd0;
+        input_frame_ready_reg <= 1'b0;
+        output_eth_hdr_valid_reg <= 1'b0;
+        busy_reg <= 1'b0;
     end else begin
         state_reg <= state_next;
 

ParseResult:
UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueId: state_next
                HdlValueId: state_reg
            HdlStmAssign
                HdlValueId: frame_ptr_next
                HdlValueId: frame_ptr_reg
            HdlStmAssign
                HdlValueId: input_frame_ready_next
                HdlValueId: input_frame_ready_reg
            HdlStmAssign
                HdlValueId: output_eth_hdr_valid_next
                HdlValueId: output_eth_hdr_valid_reg
            HdlStmAssign
                HdlOp: NE
                    list: ops
                        HdlValueId: state_next
                        HdlValueId: STATE_IDLE
                HdlValueId: busy_reg
            HdlStmIf
                HdlValueId: store_frame
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueId: input_eth_dest_mac
                            HdlValueId: output_eth_dest_mac_reg
                        HdlStmAssign
                            HdlValueId: input_eth_src_mac
                            HdlValueId: output_eth_src_mac_reg
                        HdlStmAssign
                            HdlValueId: input_eth_type
                            HdlValueId: output_eth_type_reg
                        HdlStmAssign
                            HdlValueId: input_arp_htype
                            HdlValueId: arp_htype_reg
                        HdlStmAssign
                            HdlValueId: input_arp_ptype
                            HdlValueId: arp_ptype_reg
                        HdlStmAssign
                            HdlValueId: input_arp_oper
                            HdlValueId: arp_oper_reg
                        HdlStmAssign
                            HdlValueId: input_arp_sha
                            HdlValueId: arp_sha_reg
                        HdlStmAssign
                            HdlValueId: input_arp_spa
                            HdlValueId: arp_spa_reg
                        HdlStmAssign
                            HdlValueId: input_arp_tha
                            HdlValueId: arp_tha_reg
                        HdlStmAssign
                            HdlValueId: input_arp_tpa
                            HdlValueId: arp_tpa_reg
                list: elifs
    MOV HdlValueId@@rst to 
    HdlValueId: rst
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueId: STATE_IDLE
                HdlValueId: state_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: frame_ptr_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: input_frame_ready_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: output_eth_dest_mac_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: output_eth_src_mac_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: output_eth_type_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: arp_htype_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: arp_ptype_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: arp_oper_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: arp_sha_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: arp_spa_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: arp_tha_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: arp_tpa_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: busy_reg
    MOV list@@elifs to 
    list: elifs

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: state_next
    HdlValueId: state_reg

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@output_eth_type_reg to output_eth_hdr_valid_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: output_eth_dest_mac_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: output_eth_src_mac_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: arp_htype_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: arp_ptype_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: arp_oper_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: arp_sha_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: arp_spa_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: arp_tha_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: arp_tpa_reg

DEL HdlStmIf@@ from body

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/eth_axis_rx.v
+++ b/rtl/eth_axis_rx.v
@@ -102,22 +102,22 @@ reg store_eth_src_mac_5;
 reg store_eth_type_0;
 reg store_eth_type_1;
 
-reg [7:0] frame_ptr_reg = 0, frame_ptr_next;
+reg [7:0] frame_ptr_reg = 8'd0, frame_ptr_next;
 
-reg input_axis_tready_reg = 0, input_axis_tready_next;
+reg input_axis_tready_reg = 1'b0, input_axis_tready_next;
 
-reg output_eth_hdr_valid_reg = 0, output_eth_hdr_valid_next;
-reg [47:0] output_eth_dest_mac_reg = 0;
-reg [47:0] output_eth_src_mac_reg = 0;
-reg [15:0] output_eth_type_reg = 0;
+reg output_eth_hdr_valid_reg = 1'b0, output_eth_hdr_valid_next;
+reg [47:0] output_eth_dest_mac_reg = 48'd0;
+reg [47:0] output_eth_src_mac_reg = 48'd0;
+reg [15:0] output_eth_type_reg = 16'd0;
 
-reg busy_reg = 0;
-reg error_header_early_termination_reg = 0, error_header_early_termination_next;
+reg busy_reg = 1'b0;
+reg error_header_early_termination_reg = 1'b0, error_header_early_termination_next;
 
 // internal datapath
 reg [7:0] output_eth_payload_tdata_int;
 reg       output_eth_payload_tvalid_int;
-reg       output_eth_payload_tready_int = 0;
+reg       output_eth_payload_tready_int_reg = 1'b0;
 reg       output_eth_payload_tlast_int;
 reg       output_eth_payload_tuser_int;
 wire      output_eth_payload_tready_int_early;

ParseResult:
UPD HdlIdDef@@output_eth_payload_tready_int to output_eth_payload_tready_int_reg


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/eth_axis_rx.v
+++ b/rtl/eth_axis_rx.v
@@ -250,14 +250,11 @@ end
 always @(posedge clk) begin
     if (rst) begin
         state_reg <= STATE_IDLE;
-        frame_ptr_reg <= 0;
-        input_axis_tready_reg <= 0;
-        output_eth_hdr_valid_reg <= 0;
-        output_eth_dest_mac_reg <= 0;
-        output_eth_src_mac_reg <= 0;
-        output_eth_type_reg <= 0;
-        busy_reg <= 0;
-        error_header_early_termination_reg <= 0;
+        frame_ptr_reg <= 8'd0;
+        input_axis_tready_reg <= 1'b0;
+        output_eth_hdr_valid_reg <= 1'b0;
+        busy_reg <= 1'b0;
+        error_header_early_termination_reg <= 1'b0;
     end else begin
         state_reg <= state_next;
 

ParseResult:
UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueId: state_next
                HdlValueId: state_reg
            HdlStmAssign
                HdlValueId: frame_ptr_next
                HdlValueId: frame_ptr_reg
            HdlStmAssign
                HdlValueId: input_axis_tready_next
                HdlValueId: input_axis_tready_reg
            HdlStmAssign
                HdlValueId: output_eth_hdr_valid_next
                HdlValueId: output_eth_hdr_valid_reg
            HdlStmAssign
                HdlValueId: error_header_early_termination_next
                HdlValueId: error_header_early_termination_reg
            HdlStmAssign
                HdlOp: NE
                    list: ops
                        HdlValueId: state_next
                        HdlValueId: STATE_IDLE
                HdlValueId: busy_reg
            HdlStmIf
                HdlValueId: store_eth_dest_mac_0
                HdlStmAssign: if_true
                    HdlValueId: input_axis_tdata
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: output_eth_dest_mac_reg
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 7
                                    HdlValueInt: 0
                list: elifs
            HdlStmIf
                HdlValueId: store_eth_dest_mac_1
                HdlStmAssign: if_true
                    HdlValueId: input_axis_tdata
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: output_eth_dest_mac_reg
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 15
                                    HdlValueInt: 8
                list: elifs
            HdlStmIf
                HdlValueId: store_eth_dest_mac_2
                HdlStmAssign: if_true
                    HdlValueId: input_axis_tdata
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: output_eth_dest_mac_reg
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 23
                                    HdlValueInt: 16
                list: elifs
            HdlStmIf
                HdlValueId: store_eth_dest_mac_3
                HdlStmAssign: if_true
                    HdlValueId: input_axis_tdata
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: output_eth_dest_mac_reg
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 31
                                    HdlValueInt: 24
                list: elifs
            HdlStmIf
                HdlValueId: store_eth_dest_mac_4
                HdlStmAssign: if_true
                    HdlValueId: input_axis_tdata
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: output_eth_dest_mac_reg
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 39
                                    HdlValueInt: 32
                list: elifs
            HdlStmIf
                HdlValueId: store_eth_dest_mac_5
                HdlStmAssign: if_true
                    HdlValueId: input_axis_tdata
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: output_eth_dest_mac_reg
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 47
                                    HdlValueInt: 40
                list: elifs
            HdlStmIf
                HdlValueId: store_eth_src_mac_0
                HdlStmAssign: if_true
                    HdlValueId: input_axis_tdata
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: output_eth_src_mac_reg
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 7
                                    HdlValueInt: 0
                list: elifs
            HdlStmIf
                HdlValueId: store_eth_src_mac_1
                HdlStmAssign: if_true
                    HdlValueId: input_axis_tdata
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: output_eth_src_mac_reg
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 15
                                    HdlValueInt: 8
                list: elifs
            HdlStmIf
                HdlValueId: store_eth_src_mac_2
                HdlStmAssign: if_true
                    HdlValueId: input_axis_tdata
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: output_eth_src_mac_reg
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 23
                                    HdlValueInt: 16
                list: elifs
            HdlStmIf
                HdlValueId: store_eth_src_mac_3
                HdlStmAssign: if_true
                    HdlValueId: input_axis_tdata
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: output_eth_src_mac_reg
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 31
                                    HdlValueInt: 24
                list: elifs
            HdlStmIf
                HdlValueId: store_eth_src_mac_4
                HdlStmAssign: if_true
                    HdlValueId: input_axis_tdata
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: output_eth_src_mac_reg
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 39
                                    HdlValueInt: 32
                list: elifs
            HdlStmIf
                HdlValueId: store_eth_src_mac_5
                HdlStmAssign: if_true
                    HdlValueId: input_axis_tdata
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: output_eth_src_mac_reg
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 47
                                    HdlValueInt: 40
                list: elifs
            HdlStmIf
                HdlValueId: store_eth_type_0
                HdlStmAssign: if_true
                    HdlValueId: input_axis_tdata
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: output_eth_type_reg
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 7
                                    HdlValueInt: 0
                list: elifs
            HdlStmIf
                HdlValueId: store_eth_type_1
                HdlStmAssign: if_true
                    HdlValueId: input_axis_tdata
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: output_eth_type_reg
                            HdlOp: DOWNTO
                                list: ops
                                    HdlValueInt: 15
                                    HdlValueInt: 8
                list: elifs
    MOV HdlValueId@@rst to 
    HdlValueId: rst
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueId: STATE_IDLE
                HdlValueId: state_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: frame_ptr_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: input_axis_tready_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: output_eth_hdr_valid_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: output_eth_dest_mac_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: output_eth_src_mac_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: output_eth_type_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: busy_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: error_header_early_termination_reg
    MOV list@@elifs to 
    list: elifs

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: state_next
    HdlValueId: state_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: output_eth_dest_mac_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: output_eth_src_mac_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: output_eth_type_reg

DEL HdlStmIf@@ from body

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/eth_axis_tx_64.v
+++ b/rtl/eth_axis_tx_64.v
@@ -122,7 +122,7 @@ reg shift_eth_payload_extra_cycle;
 reg [63:0] output_axis_tdata_int;
 reg [7:0]  output_axis_tkeep_int;
 reg        output_axis_tvalid_int;
-reg        output_axis_tready_int = 0;
+reg        output_axis_tready_int_reg = 1'b0;
 reg        output_axis_tlast_int;
 reg        output_axis_tuser_int;
 wire       output_axis_tready_int_early;

ParseResult:
UPD HdlIdDef@@output_axis_tready_int to output_axis_tready_int_reg


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/eth_axis_tx_64.v
+++ b/rtl/eth_axis_tx_64.v
@@ -157,35 +157,35 @@ end
 always @* begin
     state_next = STATE_IDLE;
 
-    input_eth_hdr_ready_next = 0;
-    input_eth_payload_tready_next = 0;
+    input_eth_hdr_ready_next = 1'b0;
+    input_eth_payload_tready_next = 1'b0;
 
-    store_eth_hdr = 0;
+    store_eth_hdr = 1'b0;
 
-    flush_save = 0;
-    transfer_in_save = 0;
+    flush_save = 1'b0;
+    transfer_in_save = 1'b0;
 
     frame_ptr_next = frame_ptr_reg;
 
-    output_axis_tdata_int = 0;
-    output_axis_tkeep_int = 0;
-    output_axis_tvalid_int = 0;
-    output_axis_tlast_int = 0;
-    output_axis_tuser_int = 0;
+    output_axis_tdata_int = 64'd0;
+    output_axis_tkeep_int = 8'd0;
+    output_axis_tvalid_int = 1'b0;
+    output_axis_tlast_int = 1'b0;
+    output_axis_tuser_int = 1'b0;
 
     case (state_reg)
         STATE_IDLE: begin
             // idle state - wait for data
-            frame_ptr_next = 0;
-            flush_save = 1;
-            input_eth_hdr_ready_next = 1;
+            frame_ptr_next = 8'd0;
+            flush_save = 1'b1;
+            input_eth_hdr_ready_next = 1'b1;
 
             if (input_eth_hdr_ready & input_eth_hdr_valid) begin
-                store_eth_hdr = 1;
-                input_eth_hdr_ready_next = 0;
+                store_eth_hdr = 1'b1;
+                input_eth_hdr_ready_next = 1'b0;
                 state_next = STATE_WRITE_HEADER;
-                if (output_axis_tready_int) begin
-                    output_axis_tvalid_int = 1;
+                if (output_axis_tready_int_reg) begin
+                    output_axis_tvalid_int = 1'b1;
                     output_axis_tdata_int[ 7: 0] = input_eth_dest_mac[47:40];
                     output_axis_tdata_int[15: 8] = input_eth_dest_mac[39:32];
                     output_axis_tdata_int[23:16] = input_eth_dest_mac[31:24];

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlValueId@@output_axis_tready_int to output_axis_tready_int_reg


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/eth_axis_tx_64.v
+++ b/rtl/eth_axis_tx_64.v
@@ -195,7 +195,7 @@ always @* begin
                     output_axis_tdata_int[55:48] = input_eth_src_mac[47:40];
                     output_axis_tdata_int[63:56] = input_eth_src_mac[39:32];
                     output_axis_tkeep_int = 8'hff;
-                    frame_ptr_next = 8;
+                    frame_ptr_next = 8'd8;
                     input_eth_payload_tready_next = output_axis_tready_int_early;
                     state_next = STATE_WRITE_HEADER_LAST;
                 end

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlValueId@@output_axis_tready_int to output_axis_tready_int_reg


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/eth_axis_tx_64.v
+++ b/rtl/eth_axis_tx_64.v
@@ -205,9 +205,9 @@ always @* begin
         end
         STATE_WRITE_HEADER: begin
             // write header
-            if (output_axis_tready_int) begin
-                frame_ptr_next = frame_ptr_reg + 8;
-                output_axis_tvalid_int = 1;
+            if (output_axis_tready_int_reg) begin
+                frame_ptr_next = frame_ptr_reg + 8'd8;
+                output_axis_tvalid_int = 1'b1;
                 state_next = STATE_WRITE_HEADER;
                 case (frame_ptr_reg)
                     5'd00: begin

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlValueId@@output_axis_tready_int to output_axis_tready_int_reg


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/eth_axis_tx_64.v
+++ b/rtl/eth_axis_tx_64.v
@@ -271,13 +271,13 @@ always @* begin
             output_axis_tlast_int = shift_eth_payload_tlast;
             output_axis_tuser_int = shift_eth_payload_tuser;
 
-            if (output_axis_tready_int & shift_eth_payload_tvalid) begin
+            if (output_axis_tready_int_reg & shift_eth_payload_tvalid) begin
                 // word transfer through
-                transfer_in_save = 1;
+                transfer_in_save = 1'b1;
                 if (shift_eth_payload_tlast) begin
-                    input_eth_payload_tready_next = 0;
-                    flush_save = 1;
-                    input_eth_hdr_ready_next = 1;
+                    input_eth_payload_tready_next = 1'b0;
+                    flush_save = 1'b1;
+                    input_eth_hdr_ready_next = 1'b1;
                     state_next = STATE_IDLE;
                 end else begin
                     state_next = STATE_WRITE_PAYLOAD;

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@AND to AND
        UPD HdlValueId@@output_axis_tready_int to output_axis_tready_int_reg


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/eth_axis_tx_64.v
+++ b/rtl/eth_axis_tx_64.v
@@ -292,17 +292,11 @@ end
 always @(posedge clk) begin
     if (rst) begin
         state_reg <= STATE_IDLE;
-        frame_ptr_reg <= 0;
-        input_eth_hdr_ready_reg <= 0;
-        input_eth_payload_tready_reg <= 0;
-        eth_dest_mac_reg <= 0;
-        eth_src_mac_reg <= 0;
-        eth_type_reg <= 0;
-        save_eth_payload_tdata_reg <= 0;
-        save_eth_payload_tkeep_reg <= 0;
-        save_eth_payload_tlast_reg <= 0;
-        save_eth_payload_tuser_reg <= 0;
-        busy_reg <= 0;
+        frame_ptr_reg <= 8'd0;
+        input_eth_hdr_ready_reg <= 1'b0;
+        input_eth_payload_tready_reg <= 1'b0;
+        save_eth_payload_tlast_reg <= 1'b0;
+        busy_reg <= 1'b0;
     end else begin
         state_reg <= state_next;
 

ParseResult:
DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: eth_dest_mac_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: eth_src_mac_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: eth_type_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: save_eth_payload_tdata_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: save_eth_payload_tkeep_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: save_eth_payload_tuser_reg


CommitId: 6c234260b2484d7c8a64a0608f3a457ffefdb4fc
Fix assignment type
--- a/rtl/axis_pipeline_fifo.v
+++ b/rtl/axis_pipeline_fifo.v
@@ -158,8 +158,8 @@ if (LENGTH > 0) begin
 
         if (rst) begin
             for (i = 0; i < LENGTH; i = i + 1) begin
-                axis_tvalid_reg[i] = 1'b0;
-                axis_tready_reg[i] = 1'b0;
+                axis_tvalid_reg[i] <= 1'b0;
+                axis_tready_reg[i] <= 1'b0;
             end
         end
     end
ParseResult:
UPD HdlStmIf@@ to 
    INS list@@elifs to 

INS HdlStmAssign@@ to body

INS HdlStmAssign@@ to body

UPD HdlStmAssign@@ to 
    INS HdlValueInt@@0 to 

UPD HdlStmFor@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlOp@@INDEX to ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: axis_tvalid_reg
                    HdlValueId: i
            MOV HdlValueInt@@0 to ops
            HdlValueInt: 0
            DEL list@@ops from ASSIGN
        UPD HdlOp@@ASSIGN to ASSIGN
            MOV HdlOp@@INDEX to ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: axis_tready_reg
                    HdlValueId: i
            DEL HdlValueInt@@0 from ops
            DEL list@@ops from ASSIGN
        DEL HdlOp@@ASSIGN from body
        DEL HdlOp@@ASSIGN from body

UPD HdlStmIf@@ to 
    DEL list@@elifs from 


CommitId: 3a180bd24fc97389601a103229c9264f342a100b
Improve error signal handling
--- a/rtl/eth_mac_1g_rx.v
+++ b/rtl/eth_mac_1g_rx.v
@@ -58,7 +58,8 @@ module eth_mac_1g_rx
 
 localparam [2:0]
     STATE_IDLE = 3'd0,
-    STATE_PAYLOAD = 3'd1;
+    STATE_PAYLOAD = 3'd1,
+    STATE_WAIT_LAST = 3'd2;
 
 reg [2:0] state_reg = STATE_IDLE, state_next;
 

ParseResult:
INS HdlIdDef@@STATE_WAIT_LAST to objs
HdlIdDef: STATE_WAIT_LAST
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: wire
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 2
                    HdlValueInt: 0
    HdlValueInt: 2
    HdlDirection: INTERNAL


CommitId: 3a180bd24fc97389601a103229c9264f342a100b
Improve error signal handling
--- a/rtl/eth_mac_1g_rx.v
+++ b/rtl/eth_mac_1g_rx.v
@@ -142,13 +143,13 @@ always @* begin
             output_axis_tdata_next = gmii_rxd_d4;
             output_axis_tvalid_next = 1;
 
-            if (gmii_rx_er) begin
+            if (gmii_rx_dv & gmii_rx_er) begin
                 // error
                 output_axis_tlast_next = 1;
                 output_axis_tuser_next = 1;
                 error_bad_frame_next = 1;
-                state_next = STATE_IDLE;
-            end if (~gmii_rx_dv) begin
+                state_next = STATE_WAIT_LAST;
+            end else if (~gmii_rx_dv) begin
                 // end of packet
                 output_axis_tlast_next = 1;
                 if ({gmii_rxd_d0, gmii_rxd_d1, gmii_rxd_d2, gmii_rxd_d3} == ~crc_next) begin

ParseResult:
UPD HdlStmCase@@state_reg to state_reg
    INS tuple@@ to cases
    INS HdlValueId@@STATE_WAIT_LAST to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    INS HdlOp@@AND to 
    INS list@@elifs to 
    UPD HdlOp@@AND to AND
        INS list@@ops to AND
        INS HdlValueId@@gmii_rx_dv to ops
    INS tuple@@ to elifs
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: state_next
                HdlValueId: STATE_WAIT_LAST

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: output_axis_tlast_next
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: output_axis_tuser_next
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: error_bad_frame_next
                    HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: state_next
                    HdlValueId: STATE_IDLE
    MOV HdlValueId@@gmii_rx_er to 
    HdlValueId: gmii_rx_er
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: state_next
                HdlValueId: STATE_IDLE
    DEL list@@elifs from 

UPD HdlStmIf@@ to 
    MOV HdlOp@@NEG to 
    HdlOp: NEG
        list: ops
            HdlValueId: gmii_rx_dv
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: output_axis_tlast_next
                    HdlValueInt: 1
            HdlStmIf
                HdlOp: EQ
                    list: ops
                        HdlOp: CONCAT
                            list: ops
                                HdlOp: CONCAT
                                    list: ops
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlValueId: gmii_rxd_d0
                                                HdlValueId: gmii_rxd_d1
                                        HdlValueId: gmii_rxd_d2
                                HdlValueId: gmii_rxd_d3
                        HdlOp: NEG
                            list: ops
                                HdlValueId: crc_next
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: output_axis_tuser_next
                                HdlValueInt: 0
                list: elifs
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: output_axis_tuser_next
                                HdlValueInt: 1
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: error_bad_frame_next
                                HdlValueInt: 1
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: error_bad_fcs_next
                                HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: state_next
                    HdlValueId: STATE_IDLE
    DEL list@@elifs from 

DEL HdlStmIf@@ from body


CommitId: 3a180bd24fc97389601a103229c9264f342a100b
Improve error signal handling
--- a/rtl/eth_mac_1g_rx.v
+++ b/rtl/eth_mac_1g_rx.v
@@ -165,6 +166,15 @@ always @* begin
                 state_next = STATE_PAYLOAD;
             end
         end
+        STATE_WAIT_LAST: begin
+            // wait for end of packet
+
+            if (~gmii_rx_dv) begin
+                state_next = STATE_IDLE;
+            end else begin
+                state_next = STATE_WAIT_LAST;
+            end
+        end
     endcase
 end
 
ParseResult:
UPD HdlStmCase@@state_reg to state_reg
    INS tuple@@ to cases
    INS HdlValueId@@STATE_WAIT_LAST to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    INS HdlOp@@AND to 
    INS list@@elifs to 
    UPD HdlOp@@AND to AND
        INS list@@ops to AND
        INS HdlValueId@@gmii_rx_dv to ops
    INS tuple@@ to elifs
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: state_next
                HdlValueId: STATE_WAIT_LAST

UPD HdlStmIf@@ to 
    MOV HdlOp@@NEG to 
    HdlOp: NEG
        list: ops
            HdlValueId: gmii_rx_dv
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: output_axis_tlast_next
                    HdlValueInt: 1
            HdlStmIf
                HdlOp: EQ
                    list: ops
                        HdlOp: CONCAT
                            list: ops
                                HdlOp: CONCAT
                                    list: ops
                                        HdlOp: CONCAT
                                            list: ops
                                                HdlValueId: gmii_rxd_d0
                                                HdlValueId: gmii_rxd_d1
                                        HdlValueId: gmii_rxd_d2
                                HdlValueId: gmii_rxd_d3
                        HdlOp: NEG
                            list: ops
                                HdlValueId: crc_next
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: output_axis_tuser_next
                                HdlValueInt: 0
                list: elifs
                HdlStmBlock: SEQ
                    list: body
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: output_axis_tuser_next
                                HdlValueInt: 1
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: error_bad_frame_next
                                HdlValueInt: 1
                        HdlOp: ASSIGN
                            list: ops
                                HdlValueId: error_bad_fcs_next
                                HdlValueInt: 1
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: state_next
                    HdlValueId: STATE_IDLE
    DEL list@@elifs from 


CommitId: 77211926f2dd114cdc8d1963e557db832f0df6bf
Fix classifier logic
--- a/rtl/ip_complete.v
+++ b/rtl/ip_complete.v
@@ -240,7 +240,9 @@ assign arp_rx_eth_payload_tvalid = input_select_arp_reg & input_eth_payload_tval
 assign arp_rx_eth_payload_tlast = input_eth_payload_tlast;
 assign arp_rx_eth_payload_tuser = input_eth_payload_tuser;
 
-assign input_eth_hdr_ready = arp_rx_eth_hdr_ready & ip_rx_eth_hdr_ready;
+assign input_eth_hdr_ready = (input_select_ip & ip_rx_eth_hdr_ready) |
+                             (input_select_arp & arp_rx_eth_hdr_ready) |
+                             (input_select_none);
 
 assign input_eth_payload_tready = (input_select_ip_reg & ip_rx_eth_payload_tready) |
                                   (input_select_arp_reg & arp_rx_eth_payload_tready) |
ParseResult:
UPD HdlStmAssign@@ to 
    INS HdlOp@@OR to 
    UPD HdlOp@@OR to OR
        INS list@@ops to OR
        INS HdlOp@@OR to ops
        INS HdlValueId@@input_select_none to ops
        UPD HdlOp@@OR to OR
            INS list@@ops to OR
            INS HdlOp@@AND to ops
            HdlOp: AND
                list: ops
                    HdlValueId: input_select_arp
                    HdlValueId: arp_rx_eth_hdr_ready

UPD HdlStmAssign@@ to 
    MOV HdlOp@@AND to 
    HdlOp: AND
        list: ops
            HdlValueId: arp_rx_eth_hdr_ready
            HdlValueId: ip_rx_eth_hdr_ready
    UPD HdlOp@@AND to AND
        UPD HdlValueId@@arp_rx_eth_hdr_ready to input_select_ip


CommitId: 7a9fdb5fc34ca0fa33a20e338c8f0a84cd4f8f96
Add default case statements to avoid inferring latches
--- a/rtl/axis_mux_64_4.v
+++ b/rtl/axis_mux_64_4.v
@@ -116,6 +116,7 @@ always @* begin
         2'd1: selected_input_tvalid = input_1_axis_tvalid;
         2'd2: selected_input_tvalid = input_2_axis_tvalid;
         2'd3: selected_input_tvalid = input_3_axis_tvalid;
+        default: selected_input_tvalid = 1'b0;
     endcase
 end
 

ParseResult:
UPD HdlStmCase@@select to select
    INS HdlOp@@ASSIGN to select
    HdlOp: ASSIGN
        list: ops
            HdlValueId: selected_input_tvalid
            HdlValueInt: 0


CommitId: 7a9fdb5fc34ca0fa33a20e338c8f0a84cd4f8f96
Add default case statements to avoid inferring latches
--- a/rtl/axis_mux_64_4.v
+++ b/rtl/axis_mux_64_4.v
@@ -160,6 +161,14 @@ always @* begin
             current_input_tlast = input_3_axis_tlast;
             current_input_tuser = input_3_axis_tuser;
         end
+        default: begin
+            current_input_tdata = {DATA_WIDTH{1'b0}};
+            current_input_tkeep = {KEEP_WIDTH{1'b0}};
+            current_input_tvalid = 1'b0;
+            current_input_tready = 1'b0;
+            current_input_tlast = 1'b0;
+            current_input_tuser = 1'b0;
+        end
     endcase
 end
 
ParseResult:
UPD HdlStmCase@@select_reg to select_reg
    INS HdlStmBlock@@SEQ to select_reg
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tdata
                    HdlOp: REPL_CONCAT
                        list: ops
                            HdlValueId: DATA_WIDTH
                            HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tkeep
                    HdlOp: REPL_CONCAT
                        list: ops
                            HdlValueId: KEEP_WIDTH
                            HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tvalid
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tready
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tlast
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_input_tuser
                    HdlValueInt: 0


CommitId: 51b5335318c83e2662a0edb768b05ac7cbcd6603
Remove z from default states for FSM inference
--- a/rtl/arp_eth_tx.v
+++ b/rtl/arp_eth_tx.v
@@ -139,7 +139,7 @@ assign output_eth_type = output_eth_type_reg;
 assign busy = busy_reg;
 
 always @* begin
-    state_next = 2'bz;
+    state_next = STATE_IDLE;
 
     input_frame_ready_next = 0;
 
ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlValueId@@STATE_IDLE to ops

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            DEL HdlValueInt@@z from ops


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_eth_fcs_check_64.v
+++ b/rtl/axis_eth_fcs_check_64.v
@@ -101,13 +101,11 @@ wire crc_valid1 = crc_next1 == ~32'h2144df1c;
 wire crc_valid2 = crc_next2 == ~32'h2144df1c;
 wire crc_valid3 = crc_next3 == ~32'h2144df1c;
 
-reg [31:0] crc_check = 0;
-
 // internal datapath
 reg [63:0] output_axis_tdata_int;
 reg [7:0]  output_axis_tkeep_int;
 reg        output_axis_tvalid_int;
-reg        output_axis_tready_int = 0;
+reg        output_axis_tready_int_reg = 1'b0;
 reg        output_axis_tlast_int;
 reg        output_axis_tuser_int;
 wire       output_axis_tready_int_early;

ParseResult:
UPD HdlIdDef@@output_axis_tready_int to output_axis_tready_int_reg

DEL HdlIdDef@@crc_check from objs
HdlIdDef: crc_check
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 31
                    HdlValueInt: 0
    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_eth_fcs_check_64.v
+++ b/rtl/axis_eth_fcs_check_64.v
@@ -282,13 +280,13 @@ always @* begin
                 (input_axis_tkeep_d0[7:4] == 4'b1111 & crc_valid3)) begin
                 // CRC valid
             end else begin
-                output_axis_tuser_int = 1;
-                error_bad_fcs_next = 1;
+                output_axis_tuser_int = 1'b1;
+                error_bad_fcs_next = 1'b1;
             end
 
-            if (output_axis_tready_int) begin
-                shift_reset = 1;
-                reset_crc = 1;
+            if (output_axis_tready_int_reg) begin
+                shift_reset = 1'b1;
+                reset_crc = 1'b1;
                 input_axis_tready_next = output_axis_tready_int_early;
                 state_next = STATE_IDLE;
             end else begin

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlValueId@@output_axis_tready_int to output_axis_tready_int_reg


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/axis_eth_fcs_check_64.v
+++ b/rtl/axis_eth_fcs_check_64.v
@@ -302,22 +300,18 @@ always @(posedge clk) begin
     if (rst) begin
         state_reg <= STATE_IDLE;
 
-        last_cycle_tkeep_reg <= 0;
-        last_cycle_tuser_reg <= 0;
-        
-        input_axis_tready_reg <= 0;
+        input_axis_tready_reg <= 1'b0;
+
+        busy_reg <= 1'b0;
+        error_bad_fcs_reg <= 1'b0;
 
-        busy_reg <= 0;
-        error_bad_fcs_reg <= 0;
+        input_axis_tvalid_d0 <= 1'b0;
 
         crc_state <= 32'hFFFFFFFF;
         crc_state3 <= 32'hFFFFFFFF;
     end else begin
         state_reg <= state_next;
 
-        last_cycle_tkeep_reg <= last_cycle_tkeep_next;
-        last_cycle_tuser_reg <= last_cycle_tuser_next;
-
         input_axis_tready_reg <= input_axis_tready_next;
 
         busy_reg <= state_next != STATE_IDLE;

ParseResult:
UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueId: state_next
                HdlValueId: state_reg
            HdlStmAssign
                HdlValueId: last_cycle_tkeep_next
                HdlValueId: last_cycle_tkeep_reg
            HdlStmAssign
                HdlValueId: last_cycle_tuser_next
                HdlValueId: last_cycle_tuser_reg
            HdlStmAssign
                HdlValueId: input_axis_tready_next
                HdlValueId: input_axis_tready_reg
            HdlStmAssign
                HdlOp: NE
                    list: ops
                        HdlValueId: state_next
                        HdlValueId: STATE_IDLE
                HdlValueId: busy_reg
            HdlStmAssign
                HdlValueId: error_bad_fcs_next
                HdlValueId: error_bad_fcs_reg
            HdlStmIf
                HdlValueId: reset_crc
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: ffffffff
                            HdlValueId: crc_state
                        HdlStmAssign
                            HdlValueInt: ffffffff
                            HdlValueId: crc_state3
                list: elifs
                    tuple
                        HdlValueId: update_crc
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueId: crc_next7
                                    HdlValueId: crc_state
                                HdlStmAssign
                                    HdlValueId: crc_next3
                                    HdlValueId: crc_state3
            HdlStmIf
                HdlValueId: shift_reset
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: input_axis_tvalid_d0
                list: elifs
                    tuple
                        HdlValueId: shift_in
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueId: input_axis_tdata
                                    HdlValueId: input_axis_tdata_d0
                                HdlStmAssign
                                    HdlValueId: input_axis_tkeep
                                    HdlValueId: input_axis_tkeep_d0
                                HdlStmAssign
                                    HdlValueId: input_axis_tvalid
                                    HdlValueId: input_axis_tvalid_d0
                                HdlStmAssign
                                    HdlValueId: input_axis_tuser
                                    HdlValueId: input_axis_tuser_d0

MOV HdlStmIf@@ to body
HdlStmIf
    HdlValueId: rst
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueId: STATE_IDLE
                HdlValueId: state_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: last_cycle_tkeep_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: last_cycle_tuser_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: input_axis_tready_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: busy_reg
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: error_bad_fcs_reg
            HdlStmAssign
                HdlValueInt: ffffffff
                HdlValueId: crc_state
            HdlStmAssign
                HdlValueInt: ffffffff
                HdlValueId: crc_state3
    list: elifs
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueId: state_next
                HdlValueId: state_reg
            HdlStmAssign
                HdlValueId: last_cycle_tkeep_next
                HdlValueId: last_cycle_tkeep_reg
            HdlStmAssign
                HdlValueId: last_cycle_tuser_next
                HdlValueId: last_cycle_tuser_reg
            HdlStmAssign
                HdlValueId: input_axis_tready_next
                HdlValueId: input_axis_tready_reg
            HdlStmAssign
                HdlOp: NE
                    list: ops
                        HdlValueId: state_next
                        HdlValueId: STATE_IDLE
                HdlValueId: busy_reg
            HdlStmAssign
                HdlValueId: error_bad_fcs_next
                HdlValueId: error_bad_fcs_reg
            HdlStmIf
                HdlValueId: reset_crc
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: ffffffff
                            HdlValueId: crc_state
                        HdlStmAssign
                            HdlValueInt: ffffffff
                            HdlValueId: crc_state3
                list: elifs
                    tuple
                        HdlValueId: update_crc
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueId: crc_next7
                                    HdlValueId: crc_state
                                HdlStmAssign
                                    HdlValueId: crc_next3
                                    HdlValueId: crc_state3
            HdlStmIf
                HdlValueId: shift_reset
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: input_axis_tvalid_d0
                list: elifs
                    tuple
                        HdlValueId: shift_in
                        HdlStmBlock: SEQ
                            list: body
                                HdlStmAssign
                                    HdlValueId: input_axis_tdata
                                    HdlValueId: input_axis_tdata_d0
                                HdlStmAssign
                                    HdlValueId: input_axis_tkeep
                                    HdlValueId: input_axis_tkeep_d0
                                HdlStmAssign
                                    HdlValueId: input_axis_tvalid
                                    HdlValueId: input_axis_tvalid_d0
                                HdlStmAssign
                                    HdlValueId: input_axis_tuser
                                    HdlValueId: input_axis_tuser_d0

UPD HdlStmProcess@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmIf
                HdlValueId: rst
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueId: STATE_IDLE
                            HdlValueId: state_reg
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: last_cycle_tkeep_reg
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: last_cycle_tuser_reg
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: input_axis_tready_reg
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: busy_reg
                        HdlStmAssign
                            HdlValueInt: 0
                            HdlValueId: error_bad_fcs_reg
                        HdlStmAssign
                            HdlValueInt: ffffffff
                            HdlValueId: crc_state
                        HdlStmAssign
                            HdlValueInt: ffffffff
                            HdlValueId: crc_state3
                list: elifs
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlValueId: state_next
                            HdlValueId: state_reg
                        HdlStmAssign
                            HdlValueId: last_cycle_tkeep_next
                            HdlValueId: last_cycle_tkeep_reg
                        HdlStmAssign
                            HdlValueId: last_cycle_tuser_next
                            HdlValueId: last_cycle_tuser_reg
                        HdlStmAssign
                            HdlValueId: input_axis_tready_next
                            HdlValueId: input_axis_tready_reg
                        HdlStmAssign
                            HdlOp: NE
                                list: ops
                                    HdlValueId: state_next
                                    HdlValueId: STATE_IDLE
                            HdlValueId: busy_reg
                        HdlStmAssign
                            HdlValueId: error_bad_fcs_next
                            HdlValueId: error_bad_fcs_reg
                        HdlStmIf
                            HdlValueId: reset_crc
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmAssign
                                        HdlValueInt: ffffffff
                                        HdlValueId: crc_state
                                    HdlStmAssign
                                        HdlValueInt: ffffffff
                                        HdlValueId: crc_state3
                            list: elifs
                                tuple
                                    HdlValueId: update_crc
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueId: crc_next7
                                                HdlValueId: crc_state
                                            HdlStmAssign
                                                HdlValueId: crc_next3
                                                HdlValueId: crc_state3
                        HdlStmIf
                            HdlValueId: shift_reset
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmAssign
                                        HdlValueInt: 0
                                        HdlValueId: input_axis_tvalid_d0
                            list: elifs
                                tuple
                                    HdlValueId: shift_in
                                    HdlStmBlock: SEQ
                                        list: body
                                            HdlStmAssign
                                                HdlValueId: input_axis_tdata
                                                HdlValueId: input_axis_tdata_d0
                                            HdlStmAssign
                                                HdlValueId: input_axis_tkeep
                                                HdlValueId: input_axis_tkeep_d0
                                            HdlStmAssign
                                                HdlValueId: input_axis_tvalid
                                                HdlValueId: input_axis_tvalid_d0
                                            HdlStmAssign
                                                HdlValueId: input_axis_tuser
                                                HdlValueId: input_axis_tuser_d0

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: input_axis_tvalid_d0

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: state_next
    HdlValueId: state_reg

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: input_axis_tready_next
    HdlValueId: input_axis_tready_reg

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlOp: NE
        list: ops
            HdlValueId: state_next
            HdlValueId: STATE_IDLE
    HdlValueId: busy_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: last_cycle_tkeep_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: last_cycle_tuser_reg


CommitId: 8982b4f4e1b11d3eedf0f95dbfbf07c5eb0a4f41
Fix modsell pin
--- a/example/VCU118/fpga_10g/rtl/fpga.v
+++ b/example/VCU118/fpga_10g/rtl/fpga.v
@@ -80,7 +80,7 @@ module fpga (
     // input  wire       qsfp1_mgt_refclk_1_n,
     // output wire       qsfp1_recclk_p,
     // output wire       qsfp1_recclk_n,
-    output wire       qsfp1_modesell,
+    output wire       qsfp1_modsell,
     output wire       qsfp1_resetl,
     input  wire       qsfp1_modprsl,
     input  wire       qsfp1_intl,

ParseResult:
UPD HdlIdDef@@qsfp1_modesell to qsfp1_modsell


CommitId: 8982b4f4e1b11d3eedf0f95dbfbf07c5eb0a4f41
Fix modsell pin
--- a/example/VCU118/fpga_10g/rtl/fpga.v
+++ b/example/VCU118/fpga_10g/rtl/fpga.v
@@ -108,7 +108,7 @@ module fpga (
     // input  wire       qsfp2_mgt_refclk_1_n,
     // output wire       qsfp2_recclk_p,
     // output wire       qsfp2_recclk_n,
-    output wire       qsfp2_modesell,
+    output wire       qsfp2_modsell,
     output wire       qsfp2_resetl,
     input  wire       qsfp2_modprsl,
     input  wire       qsfp2_intl,

ParseResult:
UPD HdlIdDef@@qsfp2_modesell to qsfp2_modsell


CommitId: 8982b4f4e1b11d3eedf0f95dbfbf07c5eb0a4f41
Fix modsell pin
--- a/example/VCU118/fpga_10g/rtl/fpga.v
+++ b/example/VCU118/fpga_10g/rtl/fpga.v
@@ -294,7 +294,7 @@ assign i2c_sda_i = i2c_sda;
 assign i2c_sda = i2c_sda_t ? 1'bz : i2c_sda_o;
 
 // XGMII 10G PHY
-assign qsfp1_modesell = 1'b1;
+assign qsfp1_modsell = 1'b0;
 assign qsfp1_resetl = 1'b1;
 assign qsfp1_lpmode = 1'b0;
 

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: qsfp1_modsell

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueInt: 1
    HdlValueId: qsfp1_modesell


CommitId: 8982b4f4e1b11d3eedf0f95dbfbf07c5eb0a4f41
Fix modsell pin
--- a/example/VCU118/fpga_10g/rtl/fpga.v
+++ b/example/VCU118/fpga_10g/rtl/fpga.v
@@ -331,7 +331,7 @@ wire        qsfp1_rx_rst_4_int;
 wire [63:0] qsfp1_rxd_4_int;
 wire [7:0]  qsfp1_rxc_4_int;
 
-assign qsfp2_modesell = 1'b1;
+assign qsfp2_modsell = 1'b0;
 assign qsfp2_resetl = 1'b1;
 assign qsfp2_lpmode = 1'b0;
 
ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: qsfp2_modsell

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlValueInt: 1
    HdlValueId: qsfp2_modesell


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/udp_demux_4.v
+++ b/rtl/udp_demux_4.v
@@ -348,6 +348,12 @@ always @* begin
             current_output_tvalid = output_3_udp_payload_tvalid;
             current_output_tready = output_3_udp_payload_tready;
         end
+        default: begin
+            current_output_udp_hdr_valid = 1'b0;
+            current_output_udp_hdr_ready = 1'b0;
+            current_output_tvalid = 1'b0;
+            current_output_tready = 1'b0;
+        end
     endcase
 end
 

ParseResult:
UPD HdlStmCase@@select_reg to select_reg
    INS HdlStmBlock@@SEQ to select_reg
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_output_udp_hdr_valid
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_output_udp_hdr_ready
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_output_tvalid
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_output_tready
                    HdlValueInt: 0


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/udp_demux_4.v
+++ b/rtl/udp_demux_4.v
@@ -356,7 +362,7 @@ always @* begin
     frame_next = frame_reg;
 
     input_udp_hdr_ready_next = input_udp_hdr_ready_reg & ~input_udp_hdr_valid;
-    input_udp_payload_tready_next = 0;
+    input_udp_payload_tready_next = 1'b0;
     output_0_udp_hdr_valid_next = output_0_udp_hdr_valid_reg & ~output_0_udp_hdr_ready;
     output_1_udp_hdr_valid_next = output_1_udp_hdr_valid_reg & ~output_1_udp_hdr_ready;
     output_2_udp_hdr_valid_next = output_2_udp_hdr_valid_reg & ~output_2_udp_hdr_ready;

ParseResult:
UPD HdlStmCase@@select_reg to select_reg
    INS HdlStmBlock@@SEQ to select_reg
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_output_udp_hdr_valid
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_output_udp_hdr_ready
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_output_tvalid
                    HdlValueInt: 0
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: current_output_tready
                    HdlValueInt: 0


CommitId: 585ccefa1534cba00ee915f54baf491a0b49df82
Add TX underflow error signal
--- a/rtl/eth_mac_phy_10g.v
+++ b/rtl/eth_mac_phy_10g.v
@@ -82,6 +82,7 @@ module eth_mac_phy_10g #
      */
     output wire                  tx_start_packet_0,
     output wire                  tx_start_packet_4,
+    output wire                  tx_error_underflow,
     output wire                  rx_start_packet_0,
     output wire                  rx_start_packet_4,
     output wire                  rx_error_bad_frame,

ParseResult:
INS HdlIdDef@@tx_error_underflow to ports
HdlIdDef: tx_error_underflow
    HdlDirection: OUT


CommitId: 585ccefa1534cba00ee915f54baf491a0b49df82
Add TX underflow error signal
--- a/rtl/axis_xgmii_tx_32.v
+++ b/rtl/axis_xgmii_tx_32.v
@@ -63,7 +63,8 @@ module axis_xgmii_tx_32 #
     /*
      * Status
      */
-    output wire        start_packet
+    output wire        start_packet,
+    output wire        error_underflow
 );
 
 localparam MIN_FL_NOCRC = MIN_FRAME_LENGTH-4;

ParseResult:
INS HdlIdDef@@error_underflow to ports
HdlIdDef: error_underflow
    HdlDirection: OUT


CommitId: 585ccefa1534cba00ee915f54baf491a0b49df82
Add TX underflow error signal
--- a/rtl/axis_xgmii_tx_32.v
+++ b/rtl/axis_xgmii_tx_32.v
@@ -129,6 +130,7 @@ reg [31:0] xgmii_txd_reg = {4{XGMII_IDLE}}, xgmii_txd_next;
 reg [3:0] xgmii_txc_reg = 4'b1111, xgmii_txc_next;
 
 reg start_packet_reg = 1'b0, start_packet_next;
+reg error_underflow_reg = 1'b0, error_underflow_next;
 
 assign s_axis_tready = s_axis_tready_reg;
 

ParseResult:
INS HdlIdDef@@error_underflow_reg to objs
HdlIdDef: error_underflow_reg
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlValueInt: 0
    HdlDirection: INTERNAL

INS HdlIdDef@@error_underflow_next to objs
HdlIdDef: error_underflow_next
    HdlOp: PARAMETRIZATION
        list: ops
            HdlValueId: reg
    HdlDirection: INTERNAL


CommitId: 585ccefa1534cba00ee915f54baf491a0b49df82
Add TX underflow error signal
--- a/rtl/axis_xgmii_tx_32.v
+++ b/rtl/axis_xgmii_tx_32.v
@@ -136,6 +138,7 @@ assign xgmii_txd = xgmii_txd_reg;
 assign xgmii_txc = xgmii_txc_reg;
 
 assign start_packet = start_packet_reg;
+assign error_underflow = error_underflow_reg;
 
 lfsr #(
     .LFSR_WIDTH(32),

ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlValueId: error_underflow_reg
    HdlValueId: error_underflow


CommitId: 585ccefa1534cba00ee915f54baf491a0b49df82
Add TX underflow error signal
--- a/rtl/axis_xgmii_tx_32.v
+++ b/rtl/axis_xgmii_tx_32.v
@@ -288,6 +291,7 @@ always @* begin
     xgmii_txc_next = 4'b1111;
 
     start_packet_next = 1'b0;
+    error_underflow_next = 1'b0;
 
     case (state_reg)
         STATE_IDLE: begin

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: error_underflow_next
                HdlValueInt: 0


CommitId: 585ccefa1534cba00ee915f54baf491a0b49df82
Add TX underflow error signal
--- a/rtl/axis_xgmii_tx_32.v
+++ b/rtl/axis_xgmii_tx_32.v
@@ -376,6 +380,7 @@ always @* begin
                 xgmii_txc_next = 4'b1111;
                 frame_ptr_next = 16'd0;
                 ifg_count_next = 8'd10;
+                error_underflow_next = 1'b1;
                 state_next = STATE_WAIT_END;
             end
         end

ParseResult:
UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: error_underflow_next
                HdlValueInt: 0

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@ASSIGN to body
        HdlOp: ASSIGN
            list: ops
                HdlValueId: error_underflow_next
                HdlValueInt: 1


CommitId: 585ccefa1534cba00ee915f54baf491a0b49df82
Add TX underflow error signal
--- a/rtl/axis_xgmii_tx_32.v
+++ b/rtl/axis_xgmii_tx_32.v
@@ -536,6 +541,7 @@ always @(posedge clk) begin
         xgmii_txc_reg <= 4'b1111;
 
         start_packet_reg <= 1'b0;
+        error_underflow_reg <= 1'b0;
 
         crc_state <= 32'hFFFFFFFF;
     end else begin

ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: error_underflow_reg


CommitId: 585ccefa1534cba00ee915f54baf491a0b49df82
Add TX underflow error signal
--- a/rtl/axis_xgmii_tx_32.v
+++ b/rtl/axis_xgmii_tx_32.v
@@ -552,6 +558,7 @@ always @(posedge clk) begin
         xgmii_txc_reg <= xgmii_txc_next;
 
         start_packet_reg <= start_packet_next;
+        error_underflow_reg <= error_underflow_next;
 
         // datapath
         if (reset_crc) begin
ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: error_underflow_next
    HdlValueId: error_underflow_reg


CommitId: 77211926f2dd114cdc8d1963e557db832f0df6bf
Fix classifier logic
--- a/rtl/ip_complete_64.v
+++ b/rtl/ip_complete_64.v
@@ -250,7 +250,9 @@ assign arp_rx_eth_payload_tvalid = input_select_arp_reg & input_eth_payload_tval
 assign arp_rx_eth_payload_tlast = input_eth_payload_tlast;
 assign arp_rx_eth_payload_tuser = input_eth_payload_tuser;
 
-assign input_eth_hdr_ready = arp_rx_eth_hdr_ready & ip_rx_eth_hdr_ready;
+assign input_eth_hdr_ready = (input_select_ip & ip_rx_eth_hdr_ready) |
+                             (input_select_arp & arp_rx_eth_hdr_ready) |
+                             (input_select_none);
 
 assign input_eth_payload_tready = (input_select_ip_reg & ip_rx_eth_payload_tready) |
                                   (input_select_arp_reg & arp_rx_eth_payload_tready) |
ParseResult:
INS HdlStmAssign@@ to objs
HdlStmAssign
    HdlOp: OR
        list: ops
            HdlOp: OR
                list: ops
                    HdlOp: AND
                        list: ops
                            HdlValueId: input_select_ip
                            HdlValueId: ip_rx_eth_hdr_ready
                    HdlOp: AND
                        list: ops
                            HdlValueId: input_select_arp
                            HdlValueId: arp_rx_eth_hdr_ready
            HdlValueId: input_select_none
    HdlValueId: input_eth_hdr_ready

DEL HdlStmAssign@@ from objs
HdlStmAssign
    HdlOp: AND
        list: ops
            HdlValueId: arp_rx_eth_hdr_ready
            HdlValueId: ip_rx_eth_hdr_ready
    HdlValueId: input_eth_hdr_ready


CommitId: 6238ed5755fc87671156cd2c417866ab71b62a9a
Report error for invalid encoding
--- a/rtl/axis_xgmii_tx_64.v
+++ b/rtl/axis_xgmii_tx_64.v
@@ -357,10 +357,10 @@ always @* begin
             extra_cycle = 1'b1;
         end
         default: begin
-            fcs_output_txd_0 = 64'd0;
-            fcs_output_txd_1 = 64'd0;
-            fcs_output_txc_0 = 8'd0;
-            fcs_output_txc_1 = 8'd0;
+            fcs_output_txd_0 = {8{XGMII_ERROR}};
+            fcs_output_txd_1 = {8{XGMII_ERROR}};
+            fcs_output_txc_0 = 8'b11111111;
+            fcs_output_txc_1 = 8'b11111111;
             ifg_offset = 8'd0;
             extra_cycle = 1'b1;
         end
ParseResult:
UPD HdlStmCase@@s_tkeep_reg to s_tkeep_reg
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@REPL_CONCAT to ops
            UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                INS list@@ops to REPL_CONCAT
                INS HdlValueId@@XGMII_ERROR to ops
        UPD HdlOp@@ASSIGN to ASSIGN
            INS HdlOp@@REPL_CONCAT to ops
            UPD HdlOp@@REPL_CONCAT to REPL_CONCAT
                INS list@@ops to REPL_CONCAT
                INS HdlValueId@@XGMII_ERROR to ops

UPD HdlStmCase@@s_tkeep_reg to s_tkeep_reg
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueInt@@0 to 11111111
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueInt@@0 to 11111111
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueInt@@0 to 8
            MOV HdlValueInt@@0 to ops
            HdlValueInt: 0
        UPD HdlOp@@ASSIGN to ASSIGN
            UPD HdlValueInt@@0 to 8
            MOV HdlValueInt@@0 to ops
            HdlValueInt: 0


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/eth_mac_1g_rx.v
+++ b/rtl/eth_mac_1g_rx.v
@@ -186,22 +186,22 @@ always @(posedge clk) begin
     if (rst) begin
         state_reg <= STATE_IDLE;
 
-        output_axis_tdata_reg <= 0;
-        output_axis_tvalid_reg <= 0;
-        output_axis_tlast_reg <= 0;
-        output_axis_tuser_reg <= 0;
+        output_axis_tvalid_reg <= 1'b0;
 
-        error_bad_frame_reg <= 0;
-        error_bad_fcs_reg <= 0;
+        error_bad_frame_reg <= 1'b0;
+        error_bad_fcs_reg <= 1'b0;
 
         crc_state <= 32'hFFFFFFFF;
+
+        gmii_rx_dv_d0 <= 1'b0;
+        gmii_rx_dv_d1 <= 1'b0;
+        gmii_rx_dv_d2 <= 1'b0;
+        gmii_rx_dv_d3 <= 1'b0;
+        gmii_rx_dv_d4 <= 1'b0;
     end else begin
         state_reg <= state_next;
 
-        output_axis_tdata_reg <= output_axis_tdata_next;
         output_axis_tvalid_reg <= output_axis_tvalid_next;
-        output_axis_tlast_reg <= output_axis_tlast_next;
-        output_axis_tuser_reg <= output_axis_tuser_next;
 
         error_bad_frame_reg <= error_bad_frame_next;
         error_bad_fcs_reg <= error_bad_fcs_next;

ParseResult:
MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: output_axis_tdata_next
    HdlValueId: output_axis_tdata_reg

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: output_axis_tlast_next
    HdlValueId: output_axis_tlast_reg

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: output_axis_tuser_next
    HdlValueId: output_axis_tuser_reg

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: output_axis_tuser_reg

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: gmii_rx_dv_d1

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: gmii_rx_dv_d2

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: gmii_rx_dv_d3

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: gmii_rx_dv_d4

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@output_axis_tuser_reg to gmii_rx_dv_d0

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: output_axis_tdata_reg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: output_axis_tlast_reg


CommitId: a98dfce09932572044adc6ae845a41643e2bcb2d
Update output registers, remove extraneous resets, fix constant widths
--- a/rtl/eth_mac_1g_rx.v
+++ b/rtl/eth_mac_1g_rx.v
@@ -221,12 +231,6 @@ always @(posedge clk) begin
     gmii_rxd_d3 <= gmii_rxd_d2;
     gmii_rxd_d4 <= gmii_rxd_d3;
 
-    gmii_rx_dv_d0 <= gmii_rx_dv;
-    gmii_rx_dv_d1 <= gmii_rx_dv_d0;
-    gmii_rx_dv_d2 <= gmii_rx_dv_d1;
-    gmii_rx_dv_d3 <= gmii_rx_dv_d2;
-    gmii_rx_dv_d4 <= gmii_rx_dv_d3;
-
     gmii_rx_er_d0 <= gmii_rx_er;
     gmii_rx_er_d1 <= gmii_rx_er_d0;
     gmii_rx_er_d2 <= gmii_rx_er_d1;
ParseResult:
MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: gmii_rx_dv
    HdlValueId: gmii_rx_dv_d0

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: gmii_rx_dv_d0
    HdlValueId: gmii_rx_dv_d1

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: gmii_rx_dv_d1
    HdlValueId: gmii_rx_dv_d2

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: gmii_rx_dv_d2
    HdlValueId: gmii_rx_dv_d3

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: gmii_rx_dv_d3
    HdlValueId: gmii_rx_dv_d4


CommitId: ac57a22050804f139cd75ef88995e35104c71f5d
Abort with early termination error on last assert on first header word
--- a/rtl/eth_axis_rx.v
+++ b/rtl/eth_axis_rx.v
@@ -180,6 +180,10 @@ always @* begin
                 frame_ptr_next = 1;
                 store_eth_dest_mac_5 = 1;
                 state_next = STATE_READ_HEADER;
+                if (input_axis_tlast) begin
+                    state_next = STATE_IDLE;
+                    error_header_early_termination_next = 1;
+                end
             end else begin
                 state_next = STATE_IDLE;
             end
ParseResult:
INS HdlStmIf@@ to body
HdlStmIf
    HdlValueId: input_axis_tlast
    HdlStmBlock: SEQ
        list: body
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: state_next
                    HdlValueId: STATE_IDLE
            HdlOp: ASSIGN
                list: ops
                    HdlValueId: error_header_early_termination_next
                    HdlValueInt: 1
    list: elifs


