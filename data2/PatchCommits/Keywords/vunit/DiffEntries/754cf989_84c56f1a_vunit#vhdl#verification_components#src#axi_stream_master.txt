754cf9896d948cc26aa6dd67b459291564fdc104
fix potential lockup with calling wait_until_idle on a (just) empty queue
diff --git a/vunit/vhdl/verification_components/src/axi_stream_master.vhd b/vunit/vhdl/verification_components/src/axi_stream_master.vhd
index dc2dd317..1f6e1400 100644
--- a/vunit/vhdl/verification_components/src/axi_stream_master.vhd
+++ b/vunit/vhdl/verification_components/src/axi_stream_master.vhd
@@ -45,6 +45,7 @@ begin
 
   main : process
     variable request_msg : msg_t;
+    variable dummy_msg   : msg_t;
     variable msg_type    : msg_type_t;
   begin
     receive(net, master.p_actor, request_msg);
@@ -55,6 +56,9 @@ begin
     elsif msg_type = wait_for_time_msg then
       push(message_queue, request_msg);
     elsif msg_type = wait_until_idle_msg then
+      dummy_msg := request_msg;
+      push(message_queue, dummy_msg);  -- Push a copy onto the queue, to always have a notify even if the queue happened
+                                       --  to be just empty at this moment
       wait on notify_bus_process_done until is_empty(message_queue);
       handle_wait_until_idle(net, msg_type, request_msg);
     else
@@ -89,7 +93,8 @@ begin
           handle_sync_message(net, msg_type, msg);
           -- Re-align with the clock when a wait for time message was handled, because this breaks edge alignment.
           wait until rising_edge(aclk);
-
+        elsif msg_type = wait_until_idle_msg then
+          -- Ignore this message, but expect it
         elsif msg_type = stream_push_msg or msg_type = push_axi_stream_msg then
           tvalid <= '1';
           tdata <= pop_std_ulogic_vector(msg);