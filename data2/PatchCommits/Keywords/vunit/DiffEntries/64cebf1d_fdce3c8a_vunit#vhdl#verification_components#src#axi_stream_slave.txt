64cebf1dd3ec13127c0042e45805659cc171e3a2
Fix non-blocking partial check
diff --git a/vunit/vhdl/verification_components/src/axi_stream_slave.vhd b/vunit/vhdl/verification_components/src/axi_stream_slave.vhd
index a57db400..223c30a6 100644
--- a/vunit/vhdl/verification_components/src/axi_stream_slave.vhd
+++ b/vunit/vhdl/verification_components/src/axi_stream_slave.vhd
@@ -69,6 +69,14 @@ begin
   end process;
 
   bus_process : process
+
+    procedure check_field(got, exp : std_logic_vector; msg : string) is
+    begin
+      if got'length /= 0 and exp'length /= 0 then
+        check_equal(got, exp, msg);
+      end if;
+    end procedure;
+
     variable reply_msg, msg : msg_t;
     variable msg_type : msg_type_t;
     variable report_msg : string_ptr_t;
@@ -117,27 +125,21 @@ begin
 
           reply_msg := new_axi_stream_transaction_msg(axi_stream_transaction);
           reply(net, msg, reply_msg);
+
         elsif msg_type = check_axi_stream_msg then
           tready <= '1';
           wait until (tvalid and tready) = '1' and rising_edge(aclk);
           tready <= '0';
 
           report_msg := new_string_ptr(pop_string(msg));
-          if tdata'length > 0 then
-            check_equal(tdata, pop_std_ulogic_vector(msg), "TDATA mismatch, " & to_string(report_msg));
-            check_equal(tkeep, pop_std_ulogic_vector(msg), "TKEEP mismatch, " & to_string(report_msg));
-            check_equal(tstrb, pop_std_ulogic_vector(msg), "TSTRB mismatch, " & to_string(report_msg));
-          end if;
+          check_field(tdata, pop_std_ulogic_vector(msg), "TDATA mismatch, " & to_string(report_msg));
+          check_field(tkeep, pop_std_ulogic_vector(msg), "TKEEP mismatch, " & to_string(report_msg));
+          check_field(tstrb, pop_std_ulogic_vector(msg), "TSTRB mismatch, " & to_string(report_msg));
           check_equal(tlast, pop_std_ulogic(msg), "TLAST mismatch, " & to_string(report_msg));
-          if tid'length > 0 then
-            check_equal(tid, pop_std_ulogic_vector(msg), "TID mismatch, " & to_string(report_msg));
-          end if;
-          if tdest'length > 0 then
-            check_equal(tdest, pop_std_ulogic_vector(msg), "TDEST mismatch, " & to_string(report_msg));
-          end if;
-          if tuser'length > 0 then
-            check_equal(tuser, pop_std_ulogic_vector(msg), "TUSER mismatch, " & to_string(report_msg));
-          end if;
+          check_field(tid, pop_std_ulogic_vector(msg), "TID mismatch, " & to_string(report_msg));
+          check_field(tdest, pop_std_ulogic_vector(msg), "TDEST mismatch, " & to_string(report_msg));
+          check_field(tuser, pop_std_ulogic_vector(msg), "TUSER mismatch, " & to_string(report_msg));
+
         else
           unexpected_msg_type(msg_type);
         end if;