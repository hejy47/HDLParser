754cf9896d948cc26aa6dd67b459291564fdc104
fix potential lockup with calling wait_until_idle on a (just) empty queue
diff --git a/vunit/vhdl/verification_components/src/axi_stream_slave.vhd b/vunit/vhdl/verification_components/src/axi_stream_slave.vhd
index 0ed16e48..bcd3cbfe 100644
--- a/vunit/vhdl/verification_components/src/axi_stream_slave.vhd
+++ b/vunit/vhdl/verification_components/src/axi_stream_slave.vhd
@@ -40,6 +40,7 @@ begin
 
   main : process
     variable request_msg : msg_t;
+    variable dummy_msg   : msg_t;
     variable msg_type    : msg_type_t;
   begin
     receive(net, slave.p_actor, request_msg);
@@ -50,6 +51,9 @@ begin
     elsif msg_type = wait_for_time_msg then
       push(message_queue, request_msg);
     elsif msg_type = wait_until_idle_msg then
+      dummy_msg := request_msg;
+      push(message_queue, dummy_msg);  -- Push a copy onto the queue, to always have a notify even if the queue happened
+                                       --  to be just empty at this moment
       wait on notify_bus_process_done until is_empty(message_queue);
       handle_wait_until_idle(net, msg_type, request_msg);
     else
@@ -79,6 +83,8 @@ begin
       if msg_type = wait_for_time_msg then
         handle_sync_message(net, msg_type, msg);
         wait until rising_edge(aclk);
+      elsif msg_type = wait_until_idle_msg then
+        -- Ignore this message, but expect it
       elsif msg_type = stream_pop_msg or msg_type = pop_axi_stream_msg then
         tready <= '1';
         wait until (tvalid and tready) = '1' and rising_edge(aclk);