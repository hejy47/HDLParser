0c18d9be3c9637d326ccb0a1f62b3e5b92575f28
:bug: [rtl/core/neorv32_wishbone.vhd] fixed bug in external memory interface
diff --git a/rtl/core/neorv32_wishbone.vhd b/rtl/core/neorv32_wishbone.vhd
index 22f6c1a..78961b0 100644
--- a/rtl/core/neorv32_wishbone.vhd
+++ b/rtl/core/neorv32_wishbone.vhd
@@ -193,8 +193,8 @@ begin
           ctrl.rd_req <= '0';
           ctrl.wr_req <= '0';
           -- buffer all outgoing signals --
-          ctrl.we   <= wren_i;
-          ctrl.adr  <= addr_i;
+          ctrl.we  <= wren_i or ctrl.wr_req;
+          ctrl.adr <= addr_i;
           if (xbus_big_endian_c = true) then -- endianness conversion
             ctrl.wdat <= data_i;
             ctrl.sel  <= ben_i;
@@ -206,7 +206,7 @@ begin
           ctrl.excl <= excl_i;
           ctrl.priv <= priv_i;
           -- valid new or buffered read/write request --
-          if ((xbus_access and (wren_i or ctrl.wr_req or rden_i or ctrl.rd_req)) = '1') then
+          if ((xbus_access and (wren_i or ctrl.wr_req or rden_i or ctrl.rd_req) and (not cancel_i)) = '1') then
             ctrl.state <= BUSY;
           end if;
 
@@ -237,6 +237,8 @@ begin
 
         when RESYNC => -- make sure transfer is done!
         -- ------------------------------------------------------------
+          ctrl.wr_req <= ctrl.wr_req or wren_i; -- buffer new request
+          ctrl.rd_req <= ctrl.rd_req or rden_i; -- buffer new request
           if (wb_ack_i = '0') then
             ctrl.state <= IDLE;
           end if;