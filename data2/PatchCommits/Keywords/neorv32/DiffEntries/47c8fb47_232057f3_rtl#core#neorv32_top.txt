47c8fb4721d89fcb35759b3cfb38fd4a388d3587
[rtl/core] integrated DBMEM into DM
diff --git a/rtl/core/neorv32_top.vhd b/rtl/core/neorv32_top.vhd
index b4b320e..625ad24 100644
--- a/rtl/core/neorv32_top.vhd
+++ b/rtl/core/neorv32_top.vhd
@@ -250,21 +250,8 @@ architecture neorv32_top_rtl of neorv32_top is
   signal cpu_i, i_cache, cpu_d, p_bus : bus_interface_t;
 
   -- debug core interface (DCI) --
-  type dci_t is record
-    ndmrstn       : std_ulogic;
-    halt_req      : std_ulogic;
-    halt_ack      : std_ulogic;
-    resume_req    : std_ulogic;
-    resume_ack    : std_ulogic;
-    execute_req   : std_ulogic;
-    execute_ack   : std_ulogic;
-    exception_ack : std_ulogic;
-    progbuf       : std_ulogic_vector(255 downto 0); -- program buffer, 4 entries in total
-    data_we       : std_ulogic;
-    rdata         : std_ulogic_vector(31 downto 0);
-    wdata         : std_ulogic_vector(31 downto 0);
-  end record;
-  signal dci : dci_t;
+  signal dci_ndmrstn  : std_ulogic;
+  signal dci_halt_req : std_ulogic;
 
   -- debug module interface (DMI) --
   type dmi_t is record
@@ -286,7 +273,7 @@ architecture neorv32_top_rtl of neorv32_top is
   signal io_rden : std_ulogic;
   signal io_wren : std_ulogic;
 
-  -- read-back busses -
+  -- read-back buses -
   signal imem_rdata     : std_ulogic_vector(data_width_c-1 downto 0);
   signal imem_ack       : std_ulogic;
   signal dmem_rdata     : std_ulogic_vector(data_width_c-1 downto 0);
@@ -323,14 +310,14 @@ architecture neorv32_top_rtl of neorv32_top is
   signal sysinfo_rdata  : std_ulogic_vector(data_width_c-1 downto 0);
   signal sysinfo_ack    : std_ulogic;
   signal bus_keeper_err : std_ulogic;
-  signal dbmem_rdata    : std_ulogic_vector(data_width_c-1 downto 0);
-  signal dbmem_ack      : std_ulogic;
+  signal dm_rdata       : std_ulogic_vector(data_width_c-1 downto 0);
+  signal dm_ack         : std_ulogic;
 
   -- IRQs --
-  signal mtime_irq    : std_ulogic;
+  signal mtime_irq     : std_ulogic;
   --
-  signal fast_irq     : std_ulogic_vector(15 downto 0);
-  signal fast_irq_ack : std_ulogic_vector(15 downto 0);
+  signal fast_irq      : std_ulogic_vector(15 downto 0);
+  signal fast_irq_ack  : std_ulogic_vector(15 downto 0);
   --
   signal gpio_irq      : std_ulogic;
   signal wdt_irq       : std_ulogic;
@@ -374,7 +361,7 @@ begin
   -- memory system - the i-cache is intended to accelerate instruction fetch via the external memory interface only --
   assert not ((ICACHE_EN = true) and (MEM_EXT_EN = false)) report "NEORV32 PROCESSOR CONFIG NOTE. Implementing i-cache without having the external memory interface implemented. The i-cache is intended to accelerate instruction fetch via the external memory interface." severity note;
   -- on-chip debugger --
-  assert not (ON_CHIP_DEBUGGER_EN = true) report "NEORV32 PROCESSOR CONFIG NOTE. Implementing on-chip debugger." severity note;
+  assert not (ON_CHIP_DEBUGGER_EN = true) report "NEORV32 PROCESSOR CONFIG NOTE. Implementing on-chip debugger (OCD)." severity note;
 
 
   -- Reset Generator ------------------------------------------------------------------------
@@ -405,7 +392,7 @@ begin
   soc_reset_generator: process(clk_i)
   begin
     if rising_edge(clk_i) then
-      sys_rstn <= ext_rstn and wdt_rstn and dci.ndmrstn; -- system reset: can also be triggered by watchdog and debug module
+      sys_rstn <= ext_rstn and wdt_rstn and dci_ndmrstn; -- system reset: can also be triggered by watchdog and debug module
     end if;
   end process soc_reset_generator;
 
@@ -459,7 +446,7 @@ begin
     -- General --
     HW_THREAD_ID                 => HW_THREAD_ID,        -- hardware thread id
     CPU_BOOT_ADDR                => cpu_boot_addr_c,     -- cpu boot address
-    CPU_DEBUG_ADDR               => dbmem_code_base_c,   -- cpu debug mode start address
+    CPU_DEBUG_ADDR               => dm_base_c,           -- cpu debug mode start address
     -- RISC-V CPU Extensions --
     CPU_EXTENSION_RISCV_A        => CPU_EXTENSION_RISCV_A,        -- implement atomic extension?
     CPU_EXTENSION_RISCV_B        => CPU_EXTENSION_RISCV_B,        -- implement bit manipulation extensions?
@@ -523,7 +510,7 @@ begin
     firq_i         => fast_irq,     -- fast interrupt trigger
     firq_ack_o     => fast_irq_ack, -- fast interrupt acknowledge mask
     -- debug mode (halt) request --
-    db_halt_req_i  => dci.halt_req
+    db_halt_req_i  => dci_halt_req
   );
 
   -- misc --
@@ -664,11 +651,11 @@ begin
 
   -- processor bus: CPU transfer data input --
   p_bus.rdata <= (imem_rdata or dmem_rdata or bootrom_rdata) or wishbone_rdata or (gpio_rdata or mtime_rdata or uart0_rdata or uart1_rdata or
-                 spi_rdata or twi_rdata or pwm_rdata or wdt_rdata or trng_rdata or cfs_rdata or nco_rdata or neoled_rdata or  sysinfo_rdata) or dbmem_rdata;
+                 spi_rdata or twi_rdata or pwm_rdata or wdt_rdata or trng_rdata or cfs_rdata or nco_rdata or neoled_rdata or  sysinfo_rdata) or dm_rdata;
 
   -- processor bus: CPU transfer ACK input --
   p_bus.ack <= (imem_ack or dmem_ack or bootrom_ack) or wishbone_ack or (gpio_ack or mtime_ack or uart0_ack or uart1_ack or
-               spi_ack or twi_ack or pwm_ack or wdt_ack or trng_ack or cfs_ack or nco_ack or neoled_ack or sysinfo_ack) or dbmem_ack;
+               spi_ack or twi_ack or pwm_ack or wdt_ack or trng_ack or cfs_ack or nco_ack or neoled_ack or sysinfo_ack) or dm_ack;
 
   -- processor bus: CPU transfer data bus error input --
   p_bus.err <= bus_keeper_err or wishbone_err;
@@ -1331,47 +1318,6 @@ begin
   -- On-Chip Debugger Complex
   -- **************************************************************************************************************************
 
-  -- On-Chip Debugger - Debug Memory (DBMEM) ------------------------------------------------
-  -- -------------------------------------------------------------------------------------------
-  neorv32_neorv32_debug_dbmem_true:
-  if (ON_CHIP_DEBUGGER_EN = true) generate
-    neorv32_debug_dbmem_inst: neorv32_debug_dbmem
-    port map (
-      -- global control --
-      clk_i               => clk_i,             -- global clock line
-      -- CPU bus access --
-      bus_addr_i          => p_bus.addr,        -- address
-      bus_rden_i          => p_bus.re,          -- read enable
-      bus_wren_i          => p_bus.we,          -- write enable
-      bus_data_i          => p_bus.wdata,       -- data in
-      bus_data_o          => dbmem_rdata,       -- data out
-      bus_ack_o           => dbmem_ack,         -- transfer acknowledge
-      -- Debug core interface --
-      dci_halt_ack_o      => dci.halt_ack,      -- CPU (re-)entered HALT state (single-shot)
-      dci_resume_req_i    => dci.resume_req,    -- DM wants the CPU to resume when set
-      dci_resume_ack_o    => dci.resume_ack,    -- CPU starts resuming when set (single-shot)
-      dci_execute_req_i   => dci.execute_req,   -- DM wants CPU to execute program buffer when set
-      dci_execute_ack_o   => dci.execute_ack,   -- CPU starts executing program buffer when set (single-shot)
-      dci_exception_ack_o => dci.exception_ack, -- CPU has detected an exception (single-shot)
-      dci_progbuf_i       => dci.progbuf,       -- program buffer
-      dci_data_we_i       => dci.data_we,       -- write abstract data
-      dci_data_i          => dci.wdata,         -- abstract write data
-      dci_data_o          => dci.rdata          -- abstract read data
-    );
-  end generate;
-
-  neorv32_debug_dbmem_false:
-  if (ON_CHIP_DEBUGGER_EN = false) generate
-    dbmem_rdata       <= (others => '0');
-    dbmem_ack         <= '0';
-    --
-    dci.halt_ack      <= '0';
-    dci.resume_ack    <= '0';
-    dci.execute_ack   <= '0';
-    dci.exception_ack <= '0';
-    dci.rdata         <= (others => '0');
-  end generate;
-
 
   -- On-Chip Debugger - Debug Module (DM) ---------------------------------------------------
   -- -------------------------------------------------------------------------------------------
@@ -1380,49 +1326,43 @@ begin
     neorv32_debug_dm_inst: neorv32_debug_dm
     port map (
       -- global control --
-      clk_i               => clk_i,             -- global clock line
-      rstn_i              => ext_rstn,          -- external reset, low-active
+      clk_i            => clk_i,          -- global clock line
+      rstn_i           => ext_rstn,       -- external reset, low-active
       -- debug module interface (DMI) --
-      dmi_rstn_i          => dmi.rstn,
-      dmi_req_valid_i     => dmi.req_valid,
-      dmi_req_ready_o     => dmi.req_ready,
-      dmi_req_addr_i      => dmi.req_addr,
-      dmi_req_op_i        => dmi.req_op,
-      dmi_req_data_i      => dmi.req_data,
-      dmi_resp_valid_o    => dmi.resp_valid,    -- response valid when set
-      dmi_resp_ready_i    => dmi.resp_ready,    -- ready to receive respond
-      dmi_resp_data_o     => dmi.resp_data,
-      dmi_resp_err_o      => dmi.resp_err,      -- 0=ok, 1=error
-      -- debug core control interface (DCI) --
-      dci_ndmrstn_o       => dci.ndmrstn,       -- soc reset
-      dci_halt_req_o      => dci.halt_req,      -- request hart to halt (enter debug mode)
-      dci_halt_ack_i      => dci.halt_ack,      -- CPU (re-)entered HALT state (single-shot)
-      dci_resume_req_o    => dci.resume_req,    -- DM wants the CPU to resume when set
-      dci_resume_ack_i    => dci.resume_ack,    -- CPU starts resuming when set (single-shot)
-      dci_execute_req_o   => dci.execute_req,   -- DM wants CPU to execute program buffer when set
-      dci_execute_ack_i   => dci.execute_ack,   -- CPU starts executing program buffer when set (single-shot)
-      dci_exception_ack_i => dci.exception_ack, -- CPU has detected an exception (single-shot)
-      dci_progbuf_o       => dci.progbuf,       -- program buffer
-      dci_data_we_o       => dci.data_we,       -- write abstract data
-      dci_data_o          => dci.wdata,         -- abstract write data
-      dci_data_i          => dci.rdata          -- abstract read data
+      dmi_rstn_i       => dmi.rstn,
+      dmi_req_valid_i  => dmi.req_valid,
+      dmi_req_ready_o  => dmi.req_ready,
+      dmi_req_addr_i   => dmi.req_addr,
+      dmi_req_op_i     => dmi.req_op,
+      dmi_req_data_i   => dmi.req_data,
+      dmi_resp_valid_o => dmi.resp_valid, -- response valid when set
+      dmi_resp_ready_i => dmi.resp_ready, -- ready to receive respond
+      dmi_resp_data_o  => dmi.resp_data,
+      dmi_resp_err_o   => dmi.resp_err,   -- 0=ok, 1=error
+      -- CPU bus access --
+      cpu_addr_i       => p_bus.addr,     -- address
+      cpu_rden_i       => p_bus.re,       -- read enable
+      cpu_wren_i       => p_bus.we,       -- write enable
+      cpu_data_i       => p_bus.wdata,    -- data in
+      cpu_data_o       => dm_rdata,       -- data out
+      cpu_ack_o        => dm_ack,         -- transfer acknowledge
+      -- CPU control --
+      cpu_ndmrstn_o    => dci_ndmrstn,    -- soc reset
+      cpu_halt_req_o   => dci_halt_req    -- request hart to halt (enter debug mode)
     );
   end generate;
 
   neorv32_debug_dm_false:
   if (ON_CHIP_DEBUGGER_EN = false) generate
-    dmi.req_ready   <= '0';
-    dmi.resp_valid  <= '0';
-    dmi.resp_data   <= (others => '0');
-    dmi.resp_err    <= '0';
+    dmi.req_ready  <= '0';
+    dmi.resp_valid <= '0';
+    dmi.resp_data  <= (others => '0');
+    dmi.resp_err   <= '0';
     --
-    dci.ndmrstn     <= '1';
-    dci.halt_req    <= '0';
-    dci.resume_req  <= '0';
-    dci.execute_req <= '0';
-    dci.progbuf     <= (others => '0');
-    dci.data_we     <= '0';
-    dci.wdata       <= (others => '0');
+    dci_ndmrstn    <= '0';
+    dci_halt_req   <= '0';
+    dm_rdata       <= (others => '0');
+    dm_ack         <= '0';
   end generate;
 
 