60bca42eb43a6abb7144ee9414feeeab41a0765b
[rtl/top_templates] added JTAG interface and configuration generic for new ON-CHIP DEBUGGER
diff --git a/rtl/top_templates/neorv32_top_stdlogic.vhd b/rtl/top_templates/neorv32_top_stdlogic.vhd
index 1b5277e..4a8c84a 100644
--- a/rtl/top_templates/neorv32_top_stdlogic.vhd
+++ b/rtl/top_templates/neorv32_top_stdlogic.vhd
@@ -46,6 +46,8 @@ entity neorv32_top_stdlogic is
     BOOTLOADER_EN                : boolean := true;   -- implement processor-internal bootloader?
     USER_CODE                    : std_logic_vector(31 downto 0) := x"00000000"; -- custom user code
     HW_THREAD_ID                 : natural := 0;      -- hardware thread id (32-bit)
+    -- On-Chip Debugger (OCD) --
+    ON_CHIP_DEBUGGER_EN          : boolean := false;  -- implement on-chip debugger
     -- RISC-V CPU Extensions --
     CPU_EXTENSION_RISCV_A        : boolean := false;  -- implement atomic extension?
     CPU_EXTENSION_RISCV_B        : boolean := false;  -- implement bit manipulation extensions?
@@ -103,6 +105,12 @@ entity neorv32_top_stdlogic is
     -- Global control --
     clk_i       : in  std_logic := '0'; -- global clock, rising edge
     rstn_i      : in  std_logic := '0'; -- global reset, low-active, async
+    -- JTAG on-chip debugger interface (available if ON_CHIP_DEBUGGER_EN = true) --
+    jtag_trst_i : in  std_logic := '0'; -- low-active TAP reset (optional)
+    jtag_tck_i  : in  std_logic := '0'; -- serial clock
+    jtag_tdi_i  : in  std_logic := '0'; -- serial data input
+    jtag_tdo_o  : out std_logic;        -- serial data output
+    jtag_tms_i  : in  std_logic := '0'; -- mode select
     -- Wishbone bus interface (available if MEM_EXT_EN = true) --
     wb_tag_o    : out std_logic_vector(02 downto 0); -- tag
     wb_adr_o    : out std_logic_vector(31 downto 0); -- address
@@ -169,6 +177,12 @@ architecture neorv32_top_stdlogic_rtl of neorv32_top_stdlogic is
   signal clk_i_int       : std_ulogic;
   signal rstn_i_int      : std_ulogic;
   --
+  signal jtag_trst_i_int :std_ulogic;
+  signal jtag_tck_i_int  :std_ulogic;
+  signal jtag_tdi_i_int  :std_ulogic;
+  signal jtag_tdo_o_int  :std_ulogic;
+  signal jtag_tms_i_int  :std_ulogic;
+  --
   signal wb_tag_o_int    : std_ulogic_vector(02 downto 0);
   signal wb_adr_o_int    : std_ulogic_vector(31 downto 0);
   signal wb_dat_i_int    : std_ulogic_vector(31 downto 0);
@@ -231,6 +245,8 @@ begin
     BOOTLOADER_EN                => BOOTLOADER_EN,      -- implement processor-internal bootloader?
     USER_CODE                    => USER_CODE_INT,      -- custom user code
     HW_THREAD_ID                 => HW_THREAD_ID,       -- hardware thread id (hartid) (32-bit)
+    -- On-Chip Debugger (OCD) --
+    ON_CHIP_DEBUGGER_EN          => ON_CHIP_DEBUGGER_EN,          -- implement on-chip debugger
     -- RISC-V CPU Extensions --
     CPU_EXTENSION_RISCV_A        => CPU_EXTENSION_RISCV_A,        -- implement atomic extension?
     CPU_EXTENSION_RISCV_B        => CPU_EXTENSION_RISCV_B,        -- implement bit manipulation extensions?
@@ -288,6 +304,12 @@ begin
     -- Global control --
     clk_i       => clk_i_int,       -- global clock, rising edge
     rstn_i      => rstn_i_int,      -- global reset, low-active, async
+    -- JTAG on-chip debugger interface (available if ON_CHIP_DEBUGGER_EN = true) --
+    jtag_trst_i => jtag_trst_i_int, -- low-active TAP reset (optional)
+    jtag_tck_i  => jtag_tck_i_int,  -- serial clock
+    jtag_tdi_i  => jtag_tdi_i_int,  -- serial data input
+    jtag_tdo_o  => jtag_tdo_o_int,  -- serial data output
+    jtag_tms_i  => jtag_tms_i_int,  -- mode select
     -- Wishbone bus interface (available if MEM_EXT_EN = true) --
     wb_tag_o    => wb_tag_o_int,    -- tag
     wb_adr_o    => wb_adr_o_int,    -- address
@@ -348,6 +370,12 @@ begin
   clk_i_int       <= std_ulogic(clk_i);
   rstn_i_int      <= std_ulogic(rstn_i);
 
+  jtag_trst_i_int <= std_ulogic(jtag_trst_i);
+  jtag_tck_i_int  <= std_ulogic(jtag_tck_i);
+  jtag_tdi_i_int  <= std_ulogic(jtag_tdi_i);
+  jtag_tdo_o      <= std_logic(jtag_tdo_o_int);
+  jtag_tms_i_int  <= std_ulogic(jtag_tms_i);
+
   wb_tag_o        <= std_logic_vector(wb_tag_o_int);
   wb_adr_o        <= std_logic_vector(wb_adr_o_int);
   wb_dat_i_int    <= std_ulogic_vector(wb_dat_i);