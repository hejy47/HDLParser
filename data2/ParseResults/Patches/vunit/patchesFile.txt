CommitId: 97dadd1ac03a4526b736623b97f34d086b95b4b6
Moved com codecs to datatypes. Removed support for debug codecs.
--- a/vunit/vhdl/com/src/com.vhd
+++ b/vunit/vhdl/com/src/com.vhd
@@ -9,7 +9,7 @@
 library ieee;
 use ieee.std_logic_1164.all;
 
-use work.com_codec_pkg.all;
+use work.codec_pkg.all;
 use work.com_support_pkg.all;
 use work.com_messenger_pkg.all;
 use work.com_common_pkg.all;
ParseResult:
INS HdlLibrary@@ieee to objs

DEL HdlLibrary@@ieee from objs


CommitId: a7f2bbe7b769679e7d6631c967feca7b96403d3c
add possibility to configure random stalls for axi_stream (#557)
--- a/vunit/vhdl/verification_components/src/axi_stream_pkg.vhd
+++ b/vunit/vhdl/verification_components/src/axi_stream_pkg.vhd
@@ -19,6 +19,18 @@ context work.data_types_context;
 
 package axi_stream_pkg is
 
+  type stall_config_t is record
+    stall_probability : real range 0.0 to 1.0;
+    min_stall_cycles  : natural;
+    max_stall_cycles  : natural;
+  end record;
+
+  constant null_stall_config : stall_config_t := (
+    stall_probability => 0.0,
+    min_stall_cycles  => 0,
+    max_stall_cycles  => 0
+    );
+
   type axi_stream_component_type_t is (null_component, default_component, custom_component);
 
   type axi_stream_protocol_checker_t is record

ParseResult:
INS HdlIdDef@@stall_config_t to objs
HdlIdDef: stall_config_t
    HdlClassDef: value
        HdlClassType: STRUCT
    HdlDirection: INTERNAL

INS HdlIdDef@@null_stall_config to objs
HdlIdDef: null_stall_config
    HdlValueId: stall_config_t
    list: value
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: stall_probability
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: min_stall_cycles
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: max_stall_cycles
    HdlDirection: INTERNAL


CommitId: a7f2bbe7b769679e7d6631c967feca7b96403d3c
add possibility to configure random stalls for axi_stream (#557)
--- a/vunit/vhdl/verification_components/src/axi_stream_pkg.vhd
+++ b/vunit/vhdl/verification_components/src/axi_stream_pkg.vhd
@@ -123,6 +137,7 @@ package axi_stream_pkg is
     id_length        : natural                       := 0;
     dest_length      : natural                       := 0;
     user_length      : natural                       := 0;
+    stall_config     : stall_config_t                := null_stall_config;
     logger           : logger_t                      := axi_stream_logger;
     actor            : actor_t                       := null_actor;
     monitor          : axi_stream_monitor_t          := null_axi_stream_monitor;

ParseResult:
INS HdlIdDef@@stall_config to params
HdlIdDef: stall_config
    HdlValueId: stall_config_t
    HdlValueId: null_stall_config
    HdlDirection: IN


CommitId: a7f2bbe7b769679e7d6631c967feca7b96403d3c
add possibility to configure random stalls for axi_stream (#557)
--- a/vunit/vhdl/verification_components/src/axi_stream_pkg.vhd
+++ b/vunit/vhdl/verification_components/src/axi_stream_pkg.vhd
@@ -134,6 +149,7 @@ package axi_stream_pkg is
     id_length        : natural                       := 0;
     dest_length      : natural                       := 0;
     user_length      : natural                       := 0;
+    stall_config     : stall_config_t                := null_stall_config;
     logger           : logger_t                      := axi_stream_logger;
     actor            : actor_t                       := null_actor;
     monitor          : axi_stream_monitor_t          := null_axi_stream_monitor;

ParseResult:
INS HdlIdDef@@stall_config to params
HdlIdDef: stall_config
    HdlValueId: stall_config_t
    HdlValueId: null_stall_config
    HdlDirection: IN


CommitId: a7f2bbe7b769679e7d6631c967feca7b96403d3c
add possibility to configure random stalls for axi_stream (#557)
--- a/vunit/vhdl/verification_components/src/axi_stream_pkg.vhd
+++ b/vunit/vhdl/verification_components/src/axi_stream_pkg.vhd
@@ -285,6 +301,12 @@ package axi_stream_pkg is
     variable msg             : inout msg_t;
     variable axi_transaction : out axi_stream_transaction_t);
 
+  function new_stall_config(
+    stall_probability : real range 0.0 to 1.0;
+    min_stall_cycles  : natural;
+    max_stall_cycles  : natural
+  ) return stall_config_t;
+
 end package;
 
 package body axi_stream_pkg is

ParseResult:
INS HdlFunctionDef@@new_stall_config to objs
HdlFunctionDef: new_stall_config
    HdlValueId: stall_config_t
    list: params
        HdlIdDef: stall_probability
            HdlOp: RANGE
                list: ops
                    HdlValueId: real
                    HdlOp: TO
                        list: ops
                            float
            HdlDirection: IN
        HdlIdDef: min_stall_cycles
            HdlValueId: natural
            HdlDirection: IN
        HdlIdDef: max_stall_cycles
            HdlValueId: natural
            HdlDirection: IN
    list: body


CommitId: a7f2bbe7b769679e7d6631c967feca7b96403d3c
add possibility to configure random stalls for axi_stream (#557)
--- a/vunit/vhdl/verification_components/src/axi_stream_pkg.vhd
+++ b/vunit/vhdl/verification_components/src/axi_stream_pkg.vhd
@@ -343,6 +365,7 @@ package body axi_stream_pkg is
     id_length        : natural                       := 0;
     dest_length      : natural                       := 0;
     user_length      : natural                       := 0;
+    stall_config     : stall_config_t                := null_stall_config;
     logger           : logger_t                      := axi_stream_logger;
     actor            : actor_t                       := null_actor;
     monitor          : axi_stream_monitor_t          := null_axi_stream_monitor;

ParseResult:
INS HdlIdDef@@stall_config to params
HdlIdDef: stall_config
    HdlValueId: stall_config_t
    HdlValueId: null_stall_config
    HdlDirection: IN


CommitId: a7f2bbe7b769679e7d6631c967feca7b96403d3c
add possibility to configure random stalls for axi_stream (#557)
--- a/vunit/vhdl/verification_components/src/axi_stream_pkg.vhd
+++ b/vunit/vhdl/verification_components/src/axi_stream_pkg.vhd
@@ -361,6 +384,7 @@ package body axi_stream_pkg is
       p_id_length        => id_length,
       p_dest_length      => dest_length,
       p_user_length      => user_length,
+      p_stall_config     => stall_config,
       p_logger           => logger,
       p_monitor          => p_monitor,
       p_protocol_checker => p_protocol_checker);

ParseResult:
UPD HdlStmReturn@@[{'__class__': 'HdlOp', 'fn': 'MAP_ASSOCIATION', 'ops': ['p_actor', 'p_actor']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_data_length', 'data_length']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_id_length', 'id_length']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_dest_length', 'dest_length']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_user_length', 'user_length']} , {'__class__': 'HdlOp', 'fn': 'MAP_ASSOCIATION', 'ops': ['p_logger', 'logger']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_monitor', 'p_monitor']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_protocol_checker', 'p_protocol_checker']} ] to [{'__class__': 'HdlOp', 'fn': 'MAP_ASSOCIATION', 'ops': ['p_actor', 'p_actor']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_data_length', 'data_length']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_id_length', 'id_length']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_dest_length', 'dest_length']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_user_length', 'user_length']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_stall_config', 'stall_config']} , {'__class__': 'HdlOp', 'fn': 'MAP_ASSOCIATION', 'ops': ['p_logger', 'logger']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_monitor', 'p_monitor']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_protocol_checker', 'p_protocol_checker']} ]


CommitId: a7f2bbe7b769679e7d6631c967feca7b96403d3c
add possibility to configure random stalls for axi_stream (#557)
--- a/vunit/vhdl/verification_components/src/axi_stream_pkg.vhd
+++ b/vunit/vhdl/verification_components/src/axi_stream_pkg.vhd
@@ -371,6 +395,7 @@ package body axi_stream_pkg is
       id_length        : natural                       := 0;
       dest_length      : natural                       := 0;
       user_length      : natural                       := 0;
+      stall_config     : stall_config_t                := null_stall_config;
       logger           : logger_t                      := axi_stream_logger;
       actor            : actor_t                       := null_actor;
       monitor          : axi_stream_monitor_t          := null_axi_stream_monitor;

ParseResult:
INS HdlIdDef@@stall_config to params
HdlIdDef: stall_config
    HdlValueId: stall_config_t
    HdlValueId: null_stall_config
    HdlDirection: IN

UPD HdlStmReturn@@[{'__class__': 'HdlOp', 'fn': 'MAP_ASSOCIATION', 'ops': ['p_actor', 'p_actor']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_data_length', 'data_length']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_id_length', 'id_length']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_dest_length', 'dest_length']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_user_length', 'user_length']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_stall_config', 'stall_config']} , {'__class__': 'HdlOp', 'fn': 'MAP_ASSOCIATION', 'ops': ['p_logger', 'logger']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_monitor', 'p_monitor']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_protocol_checker', 'p_protocol_checker']} ] to [{'__class__': 'HdlOp', 'fn': 'MAP_ASSOCIATION', 'ops': ['p_actor', 'p_actor']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_data_length', 'data_length']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_id_length', 'id_length']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_dest_length', 'dest_length']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_user_length', 'user_length']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_stall_config', 'stall_config']} , {'__class__': 'HdlOp', 'fn': 'MAP_ASSOCIATION', 'ops': ['p_logger', 'logger']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_monitor', 'p_monitor']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_protocol_checker', 'p_protocol_checker']} ]
    INS HdlOp@@MAP_ASSOCIATION to val
    HdlOp: MAP_ASSOCIATION
        list: ops
            HdlValueId: p_stall_config
            HdlValueId: stall_config


CommitId: a7f2bbe7b769679e7d6631c967feca7b96403d3c
add possibility to configure random stalls for axi_stream (#557)
--- a/vunit/vhdl/verification_components/src/axi_stream_pkg.vhd
+++ b/vunit/vhdl/verification_components/src/axi_stream_pkg.vhd
@@ -384,11 +409,12 @@ package body axi_stream_pkg is
     p_actor            := actor when actor /= null_actor else new_actor;
     p_protocol_checker := get_valid_protocol_checker(data_length, id_length, dest_length, user_length, logger, actor, protocol_checker, "slave");
 
-    return (p_actor      => new_actor,
+    return (p_actor      => p_actor,
       p_data_length      => data_length,
       p_id_length        => id_length,
       p_dest_length      => dest_length,
       p_user_length      => user_length,
+      p_stall_config     => stall_config,
       p_logger           => logger,
       p_monitor          => p_monitor,
       p_protocol_checker => p_protocol_checker);

ParseResult:
UPD HdlStmReturn@@[{'__class__': 'HdlOp', 'fn': 'MAP_ASSOCIATION', 'ops': ['p_actor', 'new_actor']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_data_length', 'data_length']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_id_length', 'id_length']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_dest_length', 'dest_length']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_user_length', 'user_length']} , {'__class__': 'HdlOp', 'fn': 'MAP_ASSOCIATION', 'ops': ['p_logger', 'logger']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_monitor', 'p_monitor']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_protocol_checker', 'p_protocol_checker']} ] to [{'__class__': 'HdlOp', 'fn': 'MAP_ASSOCIATION', 'ops': ['p_actor', 'p_actor']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_data_length', 'data_length']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_id_length', 'id_length']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_dest_length', 'dest_length']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_user_length', 'user_length']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_stall_config', 'stall_config']} , {'__class__': 'HdlOp', 'fn': 'MAP_ASSOCIATION', 'ops': ['p_logger', 'logger']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_monitor', 'p_monitor']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_protocol_checker', 'p_protocol_checker']} ]

UPD HdlStmReturn@@[{'__class__': 'HdlOp', 'fn': 'MAP_ASSOCIATION', 'ops': ['p_actor', 'new_actor']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_data_length', 'data_length']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_id_length', 'id_length']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_dest_length', 'dest_length']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_user_length', 'user_length']} , {'__class__': 'HdlOp', 'fn': 'MAP_ASSOCIATION', 'ops': ['p_logger', 'logger']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_monitor', 'p_monitor']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_protocol_checker', 'p_protocol_checker']} ] to [{'__class__': 'HdlOp', 'fn': 'MAP_ASSOCIATION', 'ops': ['p_actor', 'new_actor']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_data_length', 'data_length']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_id_length', 'id_length']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_dest_length', 'dest_length']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_user_length', 'user_length']} , {'__class__': 'HdlOp', 'fn': 'MAP_ASSOCIATION', 'ops': ['p_logger', 'logger']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_monitor', 'p_monitor']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_protocol_checker', 'p_protocol_checker']} ]
    UPD HdlOp@@MAP_ASSOCIATION to MAP_ASSOCIATION
        UPD HdlValueId@@new_actor to p_actor


CommitId: a7f2bbe7b769679e7d6631c967feca7b96403d3c
add possibility to configure random stalls for axi_stream (#557)
--- a/vunit/vhdl/verification_components/src/axi_stream_pkg.vhd
+++ b/vunit/vhdl/verification_components/src/axi_stream_pkg.vhd
@@ -780,4 +806,17 @@ package body axi_stream_pkg is
     end if;
   end;
 
+  function new_stall_config(
+    stall_probability : real range 0.0 to 1.0;
+    min_stall_cycles  : natural;
+    max_stall_cycles  : natural) return stall_config_t is
+      variable stall_config : stall_config_t;
+  begin
+    stall_config := (
+      stall_probability => stall_probability,
+      min_stall_cycles  => min_stall_cycles,
+      max_stall_cycles  => max_stall_cycles);
+    return stall_config;
+  end;
+
 end package body;
ParseResult:
INS HdlFunctionDef@@new_stall_config to objs
HdlFunctionDef: new_stall_config
    HdlValueId: stall_config_t
    list: params
        HdlIdDef: stall_probability
            HdlOp: RANGE
                list: ops
                    HdlValueId: real
                    HdlOp: TO
                        list: ops
                            float
            HdlDirection: IN
        HdlIdDef: min_stall_cycles
            HdlValueId: natural
            HdlDirection: IN
        HdlIdDef: max_stall_cycles
            HdlValueId: natural
            HdlDirection: IN
    list: body
        HdlIdDef: stall_config
            HdlValueId: stall_config_t
            HdlDirection: INTERNAL
        HdlStmAssign
            list: src
                HdlOp: MAP_ASSOCIATION
                    list: ops
                        HdlValueId: stall_probability
                        HdlValueId: stall_probability
                HdlOp: MAP_ASSOCIATION
                    list: ops
                        HdlValueId: min_stall_cycles
                        HdlValueId: min_stall_cycles
                HdlOp: MAP_ASSOCIATION
                    list: ops
                        HdlValueId: max_stall_cycles
                        HdlValueId: max_stall_cycles
            HdlValueId: stall_config
        HdlStmReturn: stall_config
            HdlValueId: stall_config


CommitId: 1a1923390afef703c5f3ac580836021fc8a8e3ec
Merge pull request #434 from bradleyharden/test_modelsim_fixup
--- a/vunit/vhdl/verification_components/src/bus_master_pkg.vhd
+++ b/vunit/vhdl/verification_components/src/bus_master_pkg.vhd
@@ -70,6 +71,20 @@ package bus_master_pkg is
                       constant data : std_logic_vector;
                       -- default byte enable is all bytes
                       constant byte_enable : std_logic_vector := "");
+  -- Procedures for burst bus write: Caller is responsible for allocation and
+  -- deallocation of data queue. Procedure cunsumes burst_length data words
+  -- from data queue. If data queue has less data words, all data
+  -- words are consumed and pop from empty queue error is raised.
+  procedure burst_write_bus(signal net : inout network_t;
+                      constant bus_handle : bus_master_t;
+                      constant address : std_logic_vector;
+                      constant burst_length : positive;
+                      constant data : queue_t);
+  procedure burst_write_bus(signal net : inout network_t;
+                      constant bus_handle : bus_master_t;
+                      constant address : natural;
+                      constant burst_length : positive;
+                      constant data : queue_t);
 
   -- Non blocking: Read the bus returning a reference to the future reply
   procedure read_bus(signal net : inout network_t;

ParseResult:
INS HdlFunctionDef@@burst_write_bus to objs
HdlFunctionDef: burst_write_bus
    list: params
        HdlIdDef: net
            HdlValueId: network_t
            HdlDirection: INOUT
        HdlIdDef: bus_handle
            HdlValueId: bus_master_t
            HdlDirection: INTERNAL
        HdlIdDef: address
            HdlValueId: std_logic_vector
            HdlDirection: INTERNAL
        HdlIdDef: burst_length
            HdlValueId: positive
            HdlDirection: INTERNAL
        HdlIdDef: data
            HdlValueId: queue_t
            HdlDirection: INTERNAL
    list: body

INS HdlFunctionDef@@burst_write_bus to objs
HdlFunctionDef: burst_write_bus
    list: params
        HdlIdDef: net
            HdlValueId: network_t
            HdlDirection: INOUT
        HdlIdDef: bus_handle
            HdlValueId: bus_master_t
            HdlDirection: INTERNAL
        HdlIdDef: address
            HdlValueId: natural
            HdlDirection: INTERNAL
        HdlIdDef: burst_length
            HdlValueId: positive
            HdlDirection: INTERNAL
        HdlIdDef: data
            HdlValueId: queue_t
            HdlDirection: INTERNAL
    list: body


CommitId: 1a1923390afef703c5f3ac580836021fc8a8e3ec
Merge pull request #434 from bradleyharden/test_modelsim_fixup
--- a/vunit/vhdl/verification_components/src/bus_master_pkg.vhd
+++ b/vunit/vhdl/verification_components/src/bus_master_pkg.vhd
@@ -80,11 +95,28 @@ package bus_master_pkg is
                      constant bus_handle : bus_master_t;
                      constant address : natural;
                      variable reference : inout bus_reference_t);
+  procedure burst_read_bus(signal net : inout network_t;
+                      constant bus_handle : bus_master_t;
+                      constant address : std_logic_vector;
+                      constant burst_length : positive;
+                      variable reference : inout bus_reference_t);
+  procedure burst_read_bus(signal net : inout network_t;
+                      constant bus_handle : bus_master_t;
+                      constant address : natural;
+                      constant burst_length : positive;
+                      variable reference : inout bus_reference_t);
 
   -- Blocking: Await read bus reply data
   procedure await_read_bus_reply(signal net : inout network_t;
                                  variable reference : inout bus_reference_t;
                                  variable data : inout std_logic_vector);
+  -- Procedure for burst read reply: Caller is responsible for allocation and
+  -- deallocation of data queue. Procedure pushes burst_length data words
+  -- into data queue.
+  procedure await_burst_read_bus_reply(signal net : inout network_t;
+                                 constant bus_handle : bus_master_t;
+                                 constant data : queue_t;
+                                 variable reference : inout bus_reference_t);
 
   -- Blocking: Read bus and check result against expected data
   procedure check_bus(signal net : inout network_t;

ParseResult:
INS HdlFunctionDef@@burst_read_bus to objs
HdlFunctionDef: burst_read_bus
    list: params
        HdlIdDef: net
            HdlValueId: network_t
            HdlDirection: INOUT
        HdlIdDef: bus_handle
            HdlValueId: bus_master_t
            HdlDirection: INTERNAL
        HdlIdDef: address
            HdlValueId: std_logic_vector
            HdlDirection: INTERNAL
        HdlIdDef: burst_length
            HdlValueId: positive
            HdlDirection: INTERNAL
        HdlIdDef: reference
            HdlValueId: bus_reference_t
            HdlDirection: INOUT
    list: body

INS HdlFunctionDef@@burst_read_bus to objs
HdlFunctionDef: burst_read_bus
    list: params
        HdlIdDef: net
            HdlValueId: network_t
            HdlDirection: INOUT
        HdlIdDef: bus_handle
            HdlValueId: bus_master_t
            HdlDirection: INTERNAL
        HdlIdDef: address
            HdlValueId: natural
            HdlDirection: INTERNAL
        HdlIdDef: burst_length
            HdlValueId: positive
            HdlDirection: INTERNAL
        HdlIdDef: reference
            HdlValueId: bus_reference_t
            HdlDirection: INOUT
    list: body

INS HdlFunctionDef@@await_burst_read_bus_reply to objs
HdlFunctionDef: await_burst_read_bus_reply
    list: params
        HdlIdDef: net
            HdlValueId: network_t
            HdlDirection: INOUT
        HdlIdDef: bus_handle
            HdlValueId: bus_master_t
            HdlDirection: INTERNAL
        HdlIdDef: data
            HdlValueId: queue_t
            HdlDirection: INTERNAL
        HdlIdDef: reference
            HdlValueId: bus_reference_t
            HdlDirection: INOUT
    list: body


CommitId: 1a1923390afef703c5f3ac580836021fc8a8e3ec
Merge pull request #434 from bradleyharden/test_modelsim_fixup
--- a/vunit/vhdl/verification_components/src/bus_master_pkg.vhd
+++ b/vunit/vhdl/verification_components/src/bus_master_pkg.vhd
@@ -107,6 +139,19 @@ package bus_master_pkg is
                      constant bus_handle : bus_master_t;
                      constant address : natural;
                      variable data : inout std_logic_vector);
+  -- Procedure for burst bus read: Caller is responsible for allocation and
+  -- deallocation of data queue. Procedure pushes burst_length data words
+  -- into data queue.
+  procedure burst_read_bus(signal net : inout network_t;
+                      constant bus_handle : bus_master_t;
+                      constant address : std_logic_vector;
+                      constant burst_length : positive;
+                      constant data : queue_t);
+  procedure burst_read_bus(signal net : inout network_t;
+                      constant bus_handle : bus_master_t;
+                      constant address : natural;
+                      constant burst_length : positive;
+                      constant data : queue_t);
 
   -- Blocking: Wait until a read from address equals the value using
   -- std_match If timeout is reached error with msg

ParseResult:
INS HdlFunctionDef@@burst_read_bus to objs
HdlFunctionDef: burst_read_bus
    list: params
        HdlIdDef: net
            HdlValueId: network_t
            HdlDirection: INOUT
        HdlIdDef: bus_handle
            HdlValueId: bus_master_t
            HdlDirection: INTERNAL
        HdlIdDef: address
            HdlValueId: std_logic_vector
            HdlDirection: INTERNAL
        HdlIdDef: burst_length
            HdlValueId: positive
            HdlDirection: INTERNAL
        HdlIdDef: data
            HdlValueId: queue_t
            HdlDirection: INTERNAL
    list: body

INS HdlFunctionDef@@burst_read_bus to objs
HdlFunctionDef: burst_read_bus
    list: params
        HdlIdDef: net
            HdlValueId: network_t
            HdlDirection: INOUT
        HdlIdDef: bus_handle
            HdlValueId: bus_master_t
            HdlDirection: INTERNAL
        HdlIdDef: address
            HdlValueId: natural
            HdlDirection: INTERNAL
        HdlIdDef: burst_length
            HdlValueId: positive
            HdlDirection: INTERNAL
        HdlIdDef: data
            HdlValueId: queue_t
            HdlDirection: INTERNAL
    list: body


CommitId: 1a1923390afef703c5f3ac580836021fc8a8e3ec
Merge pull request #434 from bradleyharden/test_modelsim_fixup
--- a/vunit/vhdl/verification_components/src/bus_master_pkg.vhd
+++ b/vunit/vhdl/verification_components/src/bus_master_pkg.vhd
@@ -139,4 +184,6 @@ package bus_master_pkg is
   -- Message type definitions, used by VC-instances
   constant bus_write_msg : msg_type_t := new_msg_type("write bus");
   constant bus_read_msg : msg_type_t := new_msg_type("read bus");
+  constant bus_burst_write_msg : msg_type_t := new_msg_type("burst write bus");
+  constant bus_burst_read_msg : msg_type_t := new_msg_type("burst read bus");
 end package;
ParseResult:
INS HdlIdDef@@bus_burst_write_msg to objs
HdlIdDef: bus_burst_write_msg
    HdlValueId: msg_type_t
    HdlOp: INDEX
        list: ops
            HdlValueId: new_msg_type
            str
    HdlDirection: INTERNAL

INS HdlIdDef@@bus_burst_read_msg to objs
HdlIdDef: bus_burst_read_msg
    HdlValueId: msg_type_t
    HdlOp: INDEX
        list: ops
            HdlValueId: new_msg_type
            str
    HdlDirection: INTERNAL


CommitId: a55b6cd01ff19ab978759bf97b4153ddccdfe37c
Allow VC logger to be used in memory error logs
--- a/vunit/vhdl/bfm/src/memory_pkg.vhd
+++ b/vunit/vhdl/bfm/src/memory_pkg.vhd
@@ -114,4 +114,12 @@ package memory_pkg is
   impure function last_address(alloc : alloc_t) return natural;
   impure function num_bytes(alloc : alloc_t) return natural;
 
+  -- Return a reference to the memory object that can be used in a verification
+  -- component. The verification component can use its own logger and
+  -- permissions should be checked.
+  impure function to_vc_interface(memory : memory_t;
+
+                                  -- Override logger, null_logger means no override
+                                  logger : logger_t := null_logger) return memory_t;
+
 end package;
ParseResult:
INS HdlFunctionDef@@to_vc_interface to objs
HdlFunctionDef: to_vc_interface
    HdlValueId: memory_t
    list: params
        HdlIdDef: memory
            HdlValueId: memory_t
            HdlDirection: IN
        HdlIdDef: logger
            HdlValueId: logger_t
            HdlValueId: null_logger
            HdlDirection: IN
    list: body


CommitId: 3646fec05aeb97ecba35f301c6ac665b2c1e5bd4
Set stop level only for warning, error, failure
--- a/vunit/vhdl/logging/src/logger_pkg.vhd
+++ b/vunit/vhdl/logging/src/logger_pkg.vhd
@@ -135,17 +160,6 @@ package logger_pkg is
   impure function get_stop_count(logger : logger_t;
                                  log_level : log_level_t) return positive;
 
-  -- Stop simulation for all levels >= level for this logger and all children
-  -- Only affects and can only be used with the standard log levels
-  -- where an ordering is defined
-  procedure set_stop_level(logger : logger_t;
-                           log_level : standard_log_level_t);
-
-  -- Stop simulation for all levels >= level
-  -- Only affects and can only be used with the standard log levels
-  -- where an ordering is defined
-  procedure set_stop_level(level : standard_log_level_t);
-
   -- Hide log messages of specified level to this handler.
   procedure hide(log_handler : log_handler_t;
                  log_level : log_level_t);
ParseResult:
MOV HdlFunctionDef@@set_stop_level to objs
HdlFunctionDef: set_stop_level
    list: params
        HdlIdDef: logger
            HdlValueId: logger_t
            HdlDirection: IN
        HdlIdDef: log_level
            HdlValueId: standard_log_level_t
            HdlDirection: IN
    list: body

UPD HdlIdDef@@log_level to log_level
    UPD HdlValueId@@standard_log_level_t to alert_log_level_t

DEL HdlFunctionDef@@set_stop_level from objs
HdlFunctionDef: set_stop_level
    list: params
        HdlIdDef: level
            HdlValueId: standard_log_level_t
            HdlDirection: IN
    list: body


CommitId: 8535b440e16f5552b1c11f61b25655f72517b6ab
Fixed bug in AXI stream protocol checker rule 4.
--- a/vunit/vhdl/verification_components/src/axi_stream_protocol_checker.vhd
+++ b/vunit/vhdl/verification_components/src/axi_stream_protocol_checker.vhd
@@ -107,6 +107,7 @@ begin
           result("for performance - tready active " & to_string(n_clock_cycles) &
           " clock cycles after tvalid. Expected <= " & to_string(protocol_checker.p_max_waits) & " clock cycles."),
           level => warning);
+    n_clock_cycles := 0;
   end process;
 
   -- AXI4STREAM_ERRM_TDATA_X A value of X on TDATA is not permitted when TVALID
ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueInt: 0
    HdlValueId: n_clock_cycles


CommitId: 1fe22b3bd64399881eab165ab96e856efb2aceb2
Added option to allow disabled failures and errors
--- a/vunit/vhdl/logging/src/logger_pkg-body.vhd
+++ b/vunit/vhdl/logging/src/logger_pkg-body.vhd
@@ -298,6 +298,12 @@ package body logger_pkg is
     set(state_vec, log_level_t'pos(log_level), state);
   end;
 
+  impure function is_disabled(logger : logger_t;
+                              log_level : log_level_t) return boolean is
+  begin
+    return get_state(logger, log_level) = disabled_state;
+  end;
+
   impure function is_mocked(logger : logger_t; log_level : log_level_t) return boolean is
   begin
     return get_state(logger, log_level) = mocked_state;

ParseResult:
INS HdlFunctionDef@@is_disabled to objs
HdlFunctionDef: is_disabled
    HdlValueId: boolean
    list: params
        HdlIdDef: logger
            HdlValueId: logger_t
            HdlDirection: IN
        HdlIdDef: log_level
            HdlValueId: log_level_t
            HdlDirection: IN
    list: body
        HdlStmReturn: {'__class__': 'HdlOp',  'fn': 'EQ',  'ops':},          'disabled_state']} 
            HdlOp: EQ
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: get_state
                            HdlValueId: logger
                            HdlValueId: log_level
                    HdlValueId: disabled_state


CommitId: 13c80572719cb32d855594b73c84fd2c742a91e9
Adding avalon and wishbone packages to vc context.  Alphebetized package order for easier maintenance
--- a/vunit/vhdl/verification_components/src/avalon_master.vhd
+++ b/vunit/vhdl/verification_components/src/avalon_master.vhd
@@ -23,7 +22,9 @@ use osvvm.RandomPkg.all;
 
 entity avalon_master is
   generic (
-    bus_handle : bus_master_t;
+    bus_handle          : bus_master_t;
+    use_readdatavalid   : boolean := true;
+    fixed_read_latency  : natural := 1;  -- (bus cycles).  This parameter is ignored when use_readdatavalid is true
     write_high_probability : real range 0.0 to 1.0 := 1.0;
     read_high_probability : real range 0.0 to 1.0 := 1.0
   );

ParseResult:
INS HdlIdDef@@use_readdatavalid to params
HdlIdDef: use_readdatavalid
    HdlValueId: boolean
    HdlValueId: true
    HdlDirection: IN

INS HdlIdDef@@fixed_read_latency to params
HdlIdDef: fixed_read_latency
    HdlValueId: natural
    HdlValueInt: 1
    HdlDirection: IN


CommitId: 13c80572719cb32d855594b73c84fd2c742a91e9
Adding avalon and wishbone packages to vc context.  Alphebetized package order for easier maintenance
--- a/vunit/vhdl/verification_components/src/avalon_master.vhd
+++ b/vunit/vhdl/verification_components/src/avalon_master.vhd
@@ -96,7 +97,18 @@ begin
   read_capture : process
     variable request_msg, reply_msg : msg_t;
   begin
-    wait until readdatavalid = '1' and rising_edge(clk);
+    if use_readdatavalid then
+        wait until readdatavalid = '1' and rising_edge(clk);
+    else
+        -- Non-pipelined case: waits for slave to de-assert waitrequest and sample data after fixed_read_latency cycles.
+        wait until rising_edge(clk) and waitrequest = '0' and read = '1';
+        if fixed_read_latency > 0 then
+            for i in 0 to fixed_read_latency - 1 loop
+                wait until rising_edge(clk);
+            end loop;
+        end if;
+              
+    end if;
     request_msg := pop(acknowledge_queue);
     reply_msg := new_msg(sender => av_master_read_actor);
     push_std_ulogic_vector(reply_msg, readdata);
ParseResult:
INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    INS HdlValueId@@use_readdatavalid to 
    INS HdlStmBlock@@SEQ to 
    INS list@@elifs to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmWait:},                            {'__class__': 'HdlOp',                             'fn': 'EQ',                             'ops':}]},                   {'__class__': 'HdlOp',                    'fn': 'EQ',                    'ops':}]}]} ]
                list: val
                    HdlOp: NEG
                        list: ops
                            HdlOp: AND
                                list: ops
                                    HdlOp: AND
                                        list: ops
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: rising_edge
                                                    HdlValueId: clk
                                            HdlOp: EQ
                                                list: ops
                                                    HdlValueId: waitrequest
                                                    HdlValueInt: 0
                                    HdlOp: EQ
                                        list: ops
                                            HdlValueId: read
                                            HdlValueInt: 1
            HdlStmIf
                HdlOp: GT
                    list: ops
                        HdlValueId: fixed_read_latency
                HdlStmBlock: SEQ
                    list: body
                        HdlStmForIn
                            list: var_defs
                                HdlValueId: i
                            HdlOp: TO
                                list: ops
                                    HdlOp: SUB
                                        list: ops
                                            HdlValueId: fixed_read_latency
                                            HdlValueInt: 1
                            HdlStmBlock: SEQ
                                list: body
                                    HdlStmWait:}]} ]
                                        list: val
                                            HdlOp: NEG
                                                list: ops
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlValueId: rising_edge
                                                            HdlValueId: clk
                list: elifs
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

MOV HdlStmWait@@[{'__class__': 'HdlOp',  'fn': 'NEG',  'ops': [{'__class__': 'HdlOp',           'fn': 'AND',           'ops': [{'__class__': 'HdlOp',                    'fn': 'EQ',                    'ops': ['readdatavalid',                            {'__class__': 'HdlValueInt',                             'base': 256,                             'val': '1'}]},                   {'__class__': 'HdlOp',                    'fn': 'INDEX',                    'ops': ['rising_edge', 'clk']}]}]} ] to body
HdlStmWait:},                   {'__class__': 'HdlOp',                    'fn': 'INDEX',                    'ops':}]}]} ]
    list: val
        HdlOp: NEG
            list: ops
                HdlOp: AND
                    list: ops
                        HdlOp: EQ
                            list: ops
                                HdlValueId: readdatavalid
                                HdlValueInt: 1
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: rising_edge
                                HdlValueId: clk


CommitId: 84109e778c3b562d1745ea30339a19cd24d1d9e1
Default check logger is named check again
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -17,7 +17,8 @@ use work.log_levels_pkg.all;
 
 package check_pkg is
 
-  constant default_checker    : checker_t := new_checker;
+  constant default_checker : checker_t := new_checker("check");
+  constant check_logger : logger_t := get_logger(default_checker);
 
   signal check_enabled : std_logic := '1';
 
ParseResult:
INS HdlIdDef@@default_checker to objs
HdlIdDef: default_checker
    HdlValueId: checker_t
    HdlOp: INDEX
        list: ops
            HdlValueId: new_checker
            str
    HdlDirection: INTERNAL

INS HdlIdDef@@check_logger to objs
HdlIdDef: check_logger
    HdlValueId: logger_t
    HdlOp: INDEX
        list: ops
            HdlValueId: get_logger
            HdlValueId: default_checker
    HdlDirection: INTERNAL

DEL HdlIdDef@@default_checker from objs
HdlIdDef: default_checker
    HdlValueId: checker_t
    HdlValueId: new_checker
    HdlDirection: INTERNAL


CommitId: 97dadd1ac03a4526b736623b97f34d086b95b4b6
Moved com codecs to datatypes. Removed support for debug codecs.
--- a/vunit/vhdl/com/src/com_deprecated.vhd
+++ b/vunit/vhdl/com/src/com_deprecated.vhd
@@ -10,7 +10,7 @@
 library ieee;
 use ieee.std_logic_1164.all;
 
-use work.com_codec_pkg.all;
+use work.codec_pkg.all;
 use work.com_support_pkg.all;
 use work.com_messenger_pkg.all;
 use work.com_types_pkg.all;
ParseResult:
INS HdlLibrary@@ieee to objs

DEL HdlLibrary@@ieee from objs


CommitId: e67ac7c9ca4a463d0cc8d4de927d67567c3ebbde
Add stall probability to all axi slave channels.
--- a/vunit/vhdl/verification_components/src/axi_read_slave.vhd
+++ b/vunit/vhdl/verification_components/src/axi_read_slave.vhd
@@ -84,7 +84,7 @@ begin
         address := burst.address;
       end if;
 
-      if beats > 0 and (rvalid = '0' or rready = '1') then
+      if beats > 0 and (rvalid = '0' or rready = '1') and not self.should_stall_data then
         rvalid <= '1';
         for j in 0 to burst.size-1 loop
           idx := (address + j) mod self.data_size;

ParseResult:
UPD HdlStmIf@@ to 
    INS HdlOp@@AND to 
    UPD HdlOp@@AND to AND
        INS list@@ops to AND
        INS HdlOp@@NEG to ops
        HdlOp: NEG
            list: ops
                HdlOp: DOT
                    list: ops
                        HdlValueId: self
                        HdlValueId: should_stall_data

UPD HdlStmIf@@ to 
    MOV HdlOp@@AND to 
    HdlOp: AND
        list: ops
            HdlOp: GT
                list: ops
                    HdlValueId: beats
            HdlOp: OR
                list: ops
                    HdlOp: EQ
                        list: ops
                            HdlValueId: rvalid
                            HdlValueInt: 0
                    HdlOp: EQ
                        list: ops
                            HdlValueId: rready
                            HdlValueInt: 1


CommitId: e67ac7c9ca4a463d0cc8d4de927d67567c3ebbde
Add stall probability to all axi slave channels.
--- a/vunit/vhdl/verification_components/src/axi_read_slave.vhd
+++ b/vunit/vhdl/verification_components/src/axi_read_slave.vhd
@@ -103,7 +103,7 @@ begin
         end if;
       end if;
 
-      if self.should_stall_address_channel or self.burst_queue_full then
+      if self.should_stall_address or self.burst_queue_full then
         arready <= '0';
       else
         arready <= '1';
ParseResult:
UPD HdlStmIf@@ to 
    INS HdlOp@@AND to 
    UPD HdlOp@@AND to AND
        INS list@@ops to AND
        INS HdlOp@@NEG to ops
        HdlOp: NEG
            list: ops
                HdlOp: DOT
                    list: ops
                        HdlValueId: self
                        HdlValueId: should_stall_data

UPD HdlStmIf@@ to 
    MOV HdlOp@@AND to 
    HdlOp: AND
        list: ops
            HdlOp: GT
                list: ops
                    HdlValueId: beats
            HdlOp: OR
                list: ops
                    HdlOp: EQ
                        list: ops
                            HdlValueId: rvalid
                            HdlValueInt: 0
                    HdlOp: EQ
                        list: ops
                            HdlValueId: rready
                            HdlValueInt: 1

UPD HdlStmIf@@ to 
    UPD HdlOp@@OR to OR
        UPD HdlOp@@DOT to DOT
            UPD HdlValueId@@should_stall_address_channel to should_stall_address


CommitId: 8c9023b123bad4fbab2f8a520899503c4a022bd8
Fixed some linting issues.
--- a/vunit/vhdl/com/src/com_deprecated.vhd
+++ b/vunit/vhdl/com/src/com_deprecated.vhd
@@ -315,7 +315,6 @@ package body com_deprecated_pkg is
     variable message      : inout message_ptr_t;
     constant timeout      : in    time    := max_timeout_c;
     constant keep_message : in    boolean := true) is
-    variable receipt : receipt_t;
   begin
     send(net, receiver, inbox, message, timeout, keep_message);
   end;
ParseResult:
DEL HdlIdDef@@receipt from body
HdlIdDef: receipt
    HdlValueId: receipt_t
    HdlDirection: INTERNAL


CommitId: bb0189db05affbe72022d629f168b445384e6ff3
Fix axi_stream_check for zero length fields
--- a/vunit/vhdl/verification_components/src/axi_stream_slave.vhd
+++ b/vunit/vhdl/verification_components/src/axi_stream_slave.vhd
@@ -112,14 +112,12 @@ begin
         tready <= '0';
 
         report_msg := new_string_ptr(pop_string(msg));
-        check_equal(tdata, pop_std_ulogic_vector(msg), "TDATA mismatch, " & to_string(report_msg));
-        check_equal(tlast, pop_std_ulogic(msg), "TLAST mismatch, " & to_string(report_msg));
-        if tkeep'length > 0 then
+        if tdata'length > 0 then
+          check_equal(tdata, pop_std_ulogic_vector(msg), "TDATA mismatch, " & to_string(report_msg));
           check_equal(tkeep, pop_std_ulogic_vector(msg), "TKEEP mismatch, " & to_string(report_msg));
-        end if;
-        if tstrb'length > 0 then
           check_equal(tstrb, pop_std_ulogic_vector(msg), "TSTRB mismatch, " & to_string(report_msg));
         end if;
+        check_equal(tlast, pop_std_ulogic(msg), "TLAST mismatch, " & to_string(report_msg));
         if tid'length > 0 then
           check_equal(tid, pop_std_ulogic_vector(msg), "TID mismatch, " & to_string(report_msg));
         end if;
ParseResult:
INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    INS HdlOp@@GT to 
    HdlOp: GT
        list: ops
            HdlOp: APOSTROPHE
                list: ops
                    HdlValueId: tdata
                    HdlValueId: length

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: CALL
                list: ops
                    HdlValueId: check_equal
                    HdlValueId: tkeep
                    HdlOp: CALL
                        list: ops
                            HdlValueId: pop_std_ulogic_vector
                            HdlValueId: msg
                    HdlOp: CONCAT
                        list: ops
                            str
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: to_string
                                    HdlValueId: report_msg
    MOV list@@elifs to 
    list: elifs
    DEL HdlOp@@GT from 
    HdlOp: GT
        list: ops
            HdlOp: APOSTROPHE
                list: ops
                    HdlValueId: tkeep
                    HdlValueId: length

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: check_equal
                HdlValueId: tdata
                HdlOp: CALL
                    list: ops
                        HdlValueId: pop_std_ulogic_vector
                        HdlValueId: msg
                HdlOp: CONCAT
                    list: ops
                        str
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: to_string
                                HdlValueId: report_msg

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: check_equal
                HdlValueId: tstrb
                HdlOp: CALL
                    list: ops
                        HdlValueId: pop_std_ulogic_vector
                        HdlValueId: msg
                HdlOp: CONCAT
                    list: ops
                        str
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: to_string
                                HdlValueId: report_msg
        DEL list@@body from SEQ
    DEL HdlOp@@GT from 
    HdlOp: GT
        list: ops
            HdlOp: APOSTROPHE
                list: ops
                    HdlValueId: tstrb
                    HdlValueId: length
    DEL HdlStmBlock@@SEQ from 
    DEL list@@elifs from 

DEL HdlStmIf@@ from body

DEL HdlStmIf@@ from body


CommitId: 0a91461301979e2edc5b2d1ad5bf58ba6b7136a3
Merge pull request #154 from joshrsmith/issue_149
--- a/vunit/vhdl/com/src/com_debug_codec_builder.vhd
+++ b/vunit/vhdl/com/src/com_debug_codec_builder.vhd
@@ -95,9 +95,11 @@ package body com_debug_codec_builder_pkg is
     variable code   : out   string;
     variable length : out   natural) is
     variable final : line;
+    variable line_length : integer;
   begin
     if l.all /= "(" then
-      write(final, l.all(1 to l.all'length - 1));
+      line_length := l.all'length;
+      write(final, l.all(1 to line_length - 1));
       deallocate(l);
     else
       final := l;
ParseResult:
INS HdlIdDef@@line_length to body
HdlIdDef: line_length
    HdlValueId: integer
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to body

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@CALL to CALL
            UPD HdlOp@@INDEX to INDEX
                UPD HdlOp@@TO to TO
                    UPD HdlOp@@SUB to SUB
                        MOV HdlOp@@APOSTROPHE to ops
                        HdlOp: APOSTROPHE
                            list: ops
                                HdlOp: DOT
                                    list: ops
                                        HdlValueId: l
                                        HdlAll
                                HdlValueId: length

UPD HdlStmAssign@@ to 
    INS HdlValueId@@line_length to 

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@CALL to CALL
            UPD HdlOp@@INDEX to INDEX
                UPD HdlOp@@TO to TO
                    UPD HdlOp@@SUB to SUB
                        INS HdlValueId@@line_length to ops


CommitId: 1a1923390afef703c5f3ac580836021fc8a8e3ec
Merge pull request #434 from bradleyharden/test_modelsim_fixup
--- a/vunit/vhdl/data_types/src/queue_pkg-body.vhd
+++ b/vunit/vhdl/data_types/src/queue_pkg-body.vhd
@@ -415,10 +415,11 @@ package body queue_pkg is
     return decode(pop_fix_string(queue, time_code_length));
   end;
 
-  procedure push(queue : queue_t; value : integer_vector_ptr_t) is
+  procedure push(queue : queue_t; variable value : inout integer_vector_ptr_t) is
   begin
     push_type(queue, vunit_integer_vector_ptr_t);
     push_fix_string(queue, encode(value));
+    value := null_ptr;
   end;
 
   impure function pop(queue : queue_t) return integer_vector_ptr_t is

ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: null_ptr
    HdlValueId: value

UPD HdlIdDef@@value to value
    UPD HdlDirection@@IN to INOUT


CommitId: 1a1923390afef703c5f3ac580836021fc8a8e3ec
Merge pull request #434 from bradleyharden/test_modelsim_fixup
--- a/vunit/vhdl/data_types/src/queue_pkg-body.vhd
+++ b/vunit/vhdl/data_types/src/queue_pkg-body.vhd
@@ -437,10 +438,11 @@ package body queue_pkg is
     return decode(pop_fix_string(queue, integer_vector_ptr_t_code_length));
   end;
 
-  procedure push(queue : queue_t; value : string_ptr_t) is
+  procedure push(queue : queue_t; variable value : inout string_ptr_t) is
   begin
     push_type(queue, vunit_string_ptr_t);
     push_fix_string(queue, encode(value));
+    value := null_string_ptr;
   end;
 
   impure function pop(queue : queue_t) return string_ptr_t is

ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: null_string_ptr
    HdlValueId: value

UPD HdlIdDef@@value to value
    UPD HdlDirection@@IN to INOUT


CommitId: 1a1923390afef703c5f3ac580836021fc8a8e3ec
Merge pull request #434 from bradleyharden/test_modelsim_fixup
--- a/vunit/vhdl/data_types/src/queue_pkg-body.vhd
+++ b/vunit/vhdl/data_types/src/queue_pkg-body.vhd
@@ -449,10 +451,11 @@ package body queue_pkg is
     return decode(pop_fix_string(queue, string_ptr_t_code_length));
   end;
 
-  procedure push(queue : queue_t; value : queue_t) is
+  procedure push(queue : queue_t; variable value : inout queue_t) is
   begin
     push_type(queue, vunit_queue_t);
     push_fix_string(queue, encode(value));
+    value := null_queue;
   end;
 
   impure function pop(queue : queue_t) return queue_t is
ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: null_queue
    HdlValueId: value

UPD HdlIdDef@@value to value
    UPD HdlDirection@@IN to INOUT


CommitId: b502fabf8d1dc071b48b488e1aec2bc2b18adcc0
Remove default logging to file
--- a/vunit/vhdl/run/src/run.vhd
+++ b/vunit/vhdl/run/src/run.vhd
@@ -34,21 +34,10 @@ package body run_pkg is
       core_pkg.setup(output_path(runner_cfg) & "vunit_results");
     end if;
 
-    init_log_handler(file_handler,
-                     file_name => join(output_path(runner_cfg), "log.csv"),
-                     format => csv);
-    set_log_handlers(runner_trace_logger,
-                     (new_log_handler(file_name => stdout_file_name, format => verbose, use_color => true),
-                      new_log_handler(file_name => join(output_path(runner_cfg), "runner.csv"),
-                                      format => csv, use_color => false)));
-    update_max_logger_name_length(get_log_handler(runner_trace_logger, 0), get_max_logger_name_length(display_handler));
 
     if has_active_python_runner(runner_state) then
-      set_log_level(runner_trace_logger, get_log_handler(runner_trace_logger, 0), warning);
-    else
-      set_log_level(runner_trace_logger, get_log_handler(runner_trace_logger, 0), info);
+      hide(runner_trace_logger, display_handler, info);
     end if;
-    show_all(runner_trace_logger, get_log_handler(runner_trace_logger, 1));
 
     if has_key(runner_cfg, "use_color") and boolean'value(get(runner_cfg, "use_color")) then
       enable_colors;
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@CALL to CALL
            UPD HdlValueId@@set_log_level to hide
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@get_log_handler to display_handler
                MOV HdlValueId@@get_log_handler to ops
                HdlValueId: get_log_handler
                UPD HdlValueId@@runner_trace_logger to info
                MOV HdlValueId@@runner_trace_logger to ops
                HdlValueId: runner_trace_logger
                DEL list@@ops from INDEX
            DEL HdlOp@@INDEX from ops
            DEL HdlValueId@@warning from ops
    DEL HdlStmBlock@@SEQ from 
    HdlStmBlock: SEQ
        list: body
            HdlOp: CALL
                list: ops
                    HdlValueId: set_log_level
                    HdlValueId: runner_trace_logger
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: get_log_handler
                            HdlValueId: runner_trace_logger
                    HdlValueId: info


CommitId: 3d93c0fc19b8af90b4aab73e373e99079b600efb
Added default endianness to memory
--- a/vunit/vhdl/bfm/src/memory_pkg.vhd
+++ b/vunit/vhdl/bfm/src/memory_pkg.vhd
@@ -25,6 +25,9 @@ package memory_pkg is
   end record;
   constant null_memory : memory_t := (p_logger => null_logger, others => null_ptr);
 
+  type endianness_arg_t is (little_endian, big_endian, default_endian);
+  subtype endianness_t is endianness_arg_t range little_endian to big_endian;
+
   -- Reference to buffer allocation within memory
   type alloc_t is record
     -- Private

ParseResult:
INS HdlIdDef@@endianness_arg_t to objs
HdlIdDef: endianness_arg_t
    HdlEnumDef: value
    HdlDirection: INTERNAL

INS HdlIdDef@@endianness_t to objs
HdlIdDef: endianness_t
    HdlOp: RANGE
        list: ops
            HdlValueId: endianness_arg_t
            HdlOp: TO
                list: ops
                    HdlValueId: little_endian
                    HdlValueId: big_endian
    HdlDirection: INTERNAL


CommitId: 3d93c0fc19b8af90b4aab73e373e99079b600efb
Added default endianness to memory
--- a/vunit/vhdl/bfm/src/memory_pkg.vhd
+++ b/vunit/vhdl/bfm/src/memory_pkg.vhd
@@ -43,7 +46,8 @@ package memory_pkg is
   subtype byte_t is integer range 0 to 255;
 
   constant memory_logger : logger_t := get_logger("vunit_lib:memory_pkg");
-  impure function new_memory(logger : logger_t := memory_logger) return memory_t;
+  impure function new_memory(logger : logger_t := memory_logger;
+                             endian : endianness_t := little_endian) return memory_t;
   procedure clear(memory : memory_t);
   procedure deallocate(variable alloc : inout alloc_t);
   impure function allocate(memory : memory_t;

ParseResult:
INS HdlIdDef@@endian to params
HdlIdDef: endian
    HdlValueId: endianness_t
    HdlValueId: little_endian
    HdlDirection: IN


CommitId: 3d93c0fc19b8af90b4aab73e373e99079b600efb
Added default endianness to memory
--- a/vunit/vhdl/bfm/src/memory_pkg.vhd
+++ b/vunit/vhdl/bfm/src/memory_pkg.vhd
@@ -61,20 +65,20 @@ package memory_pkg is
   procedure write_word(memory : memory_t;
                        address : natural;
                        word : std_logic_vector;
-                       big_endian : boolean := false;
+                       endian : endianness_arg_t := default_endian;
                        check_permissions : boolean := false);
 
   impure function read_word(memory : memory_t;
                             address : natural;
                             bytes_per_word : positive;
-                            big_endian : boolean := false;
+                            endian : endianness_arg_t := default_endian;
                             check_permissions : boolean := false) return std_logic_vector;
 
   procedure write_integer(memory : memory_t;
                           address : natural;
                           word : integer;
                           bytes_per_word : natural range 1 to 4 := 4;
-                          big_endian : boolean := false;
+                          endian : endianness_arg_t := default_endian;
                           check_permissions : boolean := false);
 
   -- Check that all expected bytes was written to addresses within alloc

ParseResult:
UPD HdlIdDef@@big_endian to endian

UPD HdlIdDef@@big_endian to endian

UPD HdlIdDef@@big_endian to endian

UPD HdlIdDef@@big_endian to big_endian
    UPD HdlValueId@@boolean to endianness_arg_t
    UPD HdlValueId@@false to default_endian

UPD HdlIdDef@@big_endian to big_endian
    UPD HdlValueId@@boolean to endianness_arg_t
    UPD HdlValueId@@false to default_endian

UPD HdlIdDef@@big_endian to big_endian
    UPD HdlValueId@@boolean to endianness_arg_t
    UPD HdlValueId@@false to default_endian


CommitId: 3d93c0fc19b8af90b4aab73e373e99079b600efb
Added default endianness to memory
--- a/vunit/vhdl/bfm/src/memory_pkg.vhd
+++ b/vunit/vhdl/bfm/src/memory_pkg.vhd
@@ -91,11 +95,14 @@ package memory_pkg is
   impure function has_expected_byte(memory : memory_t; address : natural) return boolean;
   procedure clear_expected_byte(memory : memory_t; address : natural);
   procedure set_expected_byte(memory : memory_t; address : natural; expected : byte_t);
-  procedure set_expected_word(memory : memory_t; address : natural; expected : std_logic_vector; big_endian : boolean := false);
+  procedure set_expected_word(memory : memory_t;
+                              address : natural;
+                              expected : std_logic_vector;
+                              endian : endianness_arg_t := default_endian);
   procedure set_expected_integer(memory : memory_t; address : natural;
                                  expected : integer;
                                  bytes_per_word : natural range 1 to 4 := 4;
-                                 big_endian : boolean := false);
+                                 endian : endianness_arg_t := default_endian);
   impure function get_expected_byte(memory : memory_t; address : natural) return byte_t;
 
   impure function describe_address(memory : memory_t; address : natural) return string;
ParseResult:
UPD HdlIdDef@@big_endian to endian

UPD HdlIdDef@@big_endian to endian

UPD HdlIdDef@@big_endian to big_endian
    UPD HdlValueId@@boolean to endianness_arg_t
    UPD HdlValueId@@false to default_endian

UPD HdlIdDef@@big_endian to big_endian
    UPD HdlValueId@@boolean to endianness_arg_t
    UPD HdlValueId@@false to default_endian


CommitId: 1fb8cf07c2dc93562ec0f067d13d6a541bfd5e99
Integrated AXI protocol checker into other AXI VCs. Some lint fixing.
--- a/vunit/vhdl/verification_components/src/axi_slave_pkg.vhd
+++ b/vunit/vhdl/verification_components/src/axi_slave_pkg.vhd
@@ -275,7 +275,6 @@ package body axi_slave_pkg is
                            variable stat  : inout axi_statistics_t;
                            clear : boolean := false) is
     variable request_msg, reply_msg : msg_t;
-    variable ack : boolean;
   begin
     deallocate(stat);
     request_msg := new_msg(axi_slave_get_statistics_msg);
ParseResult:
DEL HdlIdDef@@ack from body
HdlIdDef: ack
    HdlValueId: boolean
    HdlDirection: INTERNAL


CommitId: a55b6cd01ff19ab978759bf97b4153ddccdfe37c
Allow VC logger to be used in memory error logs
--- a/vunit/vhdl/bfm/src/memory_pkg-body.vhd
+++ b/vunit/vhdl/bfm/src/memory_pkg-body.vhd
@@ -446,4 +446,16 @@ package body memory_pkg is
                  check_permissions => check_permissions);
     end loop;
   end procedure;
+
+  impure function to_vc_interface(memory : memory_t;
+
+                                  -- Override logger, null_logger means no override
+                                  logger : logger_t := null_logger) return memory_t is
+    variable result : memory_t := memory;
+  begin
+    if logger /= null_logger then
+      result.p_logger := logger;
+    end if;
+    return result;
+  end;
 end package body;
ParseResult:
INS HdlFunctionDef@@to_vc_interface to objs
HdlFunctionDef: to_vc_interface
    HdlValueId: memory_t
    list: params
        HdlIdDef: memory
            HdlValueId: memory_t
            HdlDirection: IN
        HdlIdDef: logger
            HdlValueId: logger_t
            HdlValueId: null_logger
            HdlDirection: IN
    list: body
        HdlIdDef: result
            HdlValueId: memory_t
            HdlValueId: memory
            HdlDirection: INTERNAL
        HdlStmIf
            HdlOp: NE
                list: ops
                    HdlValueId: logger
                    HdlValueId: null_logger
            HdlStmBlock: SEQ
                list: body
                    HdlStmAssign
                        HdlValueId: logger
                        HdlOp: DOT
                            list: ops
                                HdlValueId: result
                                HdlValueId: p_logger
            list: elifs
        HdlStmReturn: result
            HdlValueId: result


CommitId: a7f2bbe7b769679e7d6631c967feca7b96403d3c
add possibility to configure random stalls for axi_stream (#557)
--- a/vunit/vhdl/verification_components/src/axi_stream_slave.vhd
+++ b/vunit/vhdl/verification_components/src/axi_stream_slave.vhd
@@ -11,9 +11,13 @@ context work.vunit_context;
 context work.com_context;
 use work.stream_slave_pkg.all;
 use work.axi_stream_pkg.all;
+use work.axi_stream_private_pkg.all;
 use work.sync_pkg.all;
 use work.string_ptr_pkg.all;
 
+library osvvm;
+use osvvm.RandomPkg.RandomPType;
+
 entity axi_stream_slave is
   generic (
     slave : axi_stream_slave_t);

ParseResult:
INS HdlLibrary@@osvvm to objs


CommitId: 29e2559a3604e5416ca5ae5aac769da6ed127444
Minor merge fixes and extensions
--- a/vunit/vhdl/verification_components/src/axi_stream_protocol_checker.vhd
+++ b/vunit/vhdl/verification_components/src/axi_stream_protocol_checker.vhd
@@ -26,7 +26,7 @@ entity axi_stream_protocol_checker is
     tlast    : in std_logic                                                    := '1';
     tkeep    : in std_logic_vector(data_length(protocol_checker)/8-1 downto 0) := (others => '0');
     tstrb    : in std_logic_vector(data_length(protocol_checker)/8-1 downto 0) := (others => '0');
-    tid      : in std_logic_vector(id_length(protocol_checker)-1 downto 0)     := "";
+    tid      : in std_logic_vector(id_length(protocol_checker)-1 downto 0)     := (others => '0');
     tdest    : in std_logic_vector(dest_length(protocol_checker)-1 downto 0)   := (others => '0');
     tuser    : in std_logic_vector(user_length(protocol_checker)-1 downto 0)   := (others => '0')
     );

ParseResult:
UPD HdlIdDef@@tid to tid
    INS list@@value to tid
    list: value
        HdlOp: MAP_ASSOCIATION
            list: ops
                type
                HdlValueInt: 0


CommitId: 29e2559a3604e5416ca5ae5aac769da6ed127444
Minor merge fixes and extensions
--- a/vunit/vhdl/verification_components/src/axi_stream_protocol_checker.vhd
+++ b/vunit/vhdl/verification_components/src/axi_stream_protocol_checker.vhd
@@ -45,8 +45,6 @@ architecture a of axi_stream_protocol_checker is
 
   signal enable_rule1_check, enable_rule2_check, handshake_is_not_x : std_logic;
 begin
-  check_equal(tid'length, 0, result("for tid'length. tid is not supported"));
-
   handshake_is_not_x <= '1' when not is_x(tvalid) and not is_x(tready) else '0';
 
   -- AXI4STREAM_ERRM_TDATA_STABLE TDATA remains stable when TVALID is asserted,
ParseResult:
UPD HdlModuleDef@@axi_stream_protocol_checker-a to axi_stream_protocol_checker-a
    DEL HdlOp@@CALL from objs
    HdlOp: CALL
        list: ops
            HdlValueId: check_equal
            HdlOp: APOSTROPHE
                list: ops
                    HdlValueId: tid
                    HdlValueId: length
            HdlOp: CALL
                list: ops
                    HdlValueId: result
                    str


CommitId: 64cebf1dd3ec13127c0042e45805659cc171e3a2
Fix non-blocking partial check
--- a/vunit/vhdl/verification_components/src/axi_stream_slave.vhd
+++ b/vunit/vhdl/verification_components/src/axi_stream_slave.vhd
@@ -69,6 +69,14 @@ begin
   end process;
 
   bus_process : process
+
+    procedure check_field(got, exp : std_logic_vector; msg : string) is
+    begin
+      if got'length /= 0 and exp'length /= 0 then
+        check_equal(got, exp, msg);
+      end if;
+    end procedure;
+
     variable reply_msg, msg : msg_t;
     variable msg_type : msg_type_t;
     variable report_msg : string_ptr_t;

ParseResult:
INS HdlFunctionDef@@check_field to body
HdlFunctionDef: check_field
    list: params
        HdlIdDef: got
            HdlValueId: std_logic_vector
            HdlDirection: IN
        HdlIdDef: exp
            HdlValueId: std_logic_vector
            HdlDirection: IN
        HdlIdDef: msg
            HdlValueId: string
            HdlDirection: IN
    list: body
        HdlStmIf
            HdlOp: AND
                list: ops
                    HdlOp: NE
                        list: ops
                            HdlOp: APOSTROPHE
                                list: ops
                                    HdlValueId: got
                                    HdlValueId: length
                    HdlOp: NE
                        list: ops
                            HdlOp: APOSTROPHE
                                list: ops
                                    HdlValueId: exp
                                    HdlValueId: length
            HdlStmBlock: SEQ
                list: body
                    HdlOp: CALL
                        list: ops
                            HdlValueId: check_equal
                            HdlValueId: got
                            HdlValueId: exp
                            HdlValueId: msg
            list: elifs


CommitId: 64cebf1dd3ec13127c0042e45805659cc171e3a2
Fix non-blocking partial check
--- a/vunit/vhdl/verification_components/src/axi_stream_slave.vhd
+++ b/vunit/vhdl/verification_components/src/axi_stream_slave.vhd
@@ -117,27 +125,21 @@ begin
 
           reply_msg := new_axi_stream_transaction_msg(axi_stream_transaction);
           reply(net, msg, reply_msg);
+
         elsif msg_type = check_axi_stream_msg then
           tready <= '1';
           wait until (tvalid and tready) = '1' and rising_edge(aclk);
           tready <= '0';
 
           report_msg := new_string_ptr(pop_string(msg));
-          if tdata'length > 0 then
-            check_equal(tdata, pop_std_ulogic_vector(msg), "TDATA mismatch, " & to_string(report_msg));
-            check_equal(tkeep, pop_std_ulogic_vector(msg), "TKEEP mismatch, " & to_string(report_msg));
-            check_equal(tstrb, pop_std_ulogic_vector(msg), "TSTRB mismatch, " & to_string(report_msg));
-          end if;
+          check_field(tdata, pop_std_ulogic_vector(msg), "TDATA mismatch, " & to_string(report_msg));
+          check_field(tkeep, pop_std_ulogic_vector(msg), "TKEEP mismatch, " & to_string(report_msg));
+          check_field(tstrb, pop_std_ulogic_vector(msg), "TSTRB mismatch, " & to_string(report_msg));
           check_equal(tlast, pop_std_ulogic(msg), "TLAST mismatch, " & to_string(report_msg));
-          if tid'length > 0 then
-            check_equal(tid, pop_std_ulogic_vector(msg), "TID mismatch, " & to_string(report_msg));
-          end if;
-          if tdest'length > 0 then
-            check_equal(tdest, pop_std_ulogic_vector(msg), "TDEST mismatch, " & to_string(report_msg));
-          end if;
-          if tuser'length > 0 then
-            check_equal(tuser, pop_std_ulogic_vector(msg), "TUSER mismatch, " & to_string(report_msg));
-          end if;
+          check_field(tid, pop_std_ulogic_vector(msg), "TID mismatch, " & to_string(report_msg));
+          check_field(tdest, pop_std_ulogic_vector(msg), "TDEST mismatch, " & to_string(report_msg));
+          check_field(tuser, pop_std_ulogic_vector(msg), "TUSER mismatch, " & to_string(report_msg));
+
         else
           unexpected_msg_type(msg_type);
         end if;
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: check_equal
                HdlValueId: tkeep
                HdlOp: CALL
                    list: ops
                        HdlValueId: pop_std_ulogic_vector
                        HdlValueId: msg
                HdlOp: CONCAT
                    list: ops
                        str
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: to_string
                                HdlValueId: report_msg
        MOV HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: check_equal
                HdlValueId: tstrb
                HdlOp: CALL
                    list: ops
                        HdlValueId: pop_std_ulogic_vector
                        HdlValueId: msg
                HdlOp: CONCAT
                    list: ops
                        str
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: to_string
                                HdlValueId: report_msg
        MOV HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: check_equal
                HdlValueId: tdata
                HdlOp: CALL
                    list: ops
                        HdlValueId: pop_std_ulogic_vector
                        HdlValueId: msg
                HdlOp: CONCAT
                    list: ops
                        str
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: to_string
                                HdlValueId: report_msg
        UPD HdlOp@@CALL to CALL
            UPD HdlValueId@@check_equal to check_field
            UPD HdlValueId@@tkeep to tdata
        UPD HdlOp@@CALL to CALL
            UPD HdlValueId@@check_equal to check_field
            UPD HdlValueId@@tstrb to tid
        UPD HdlOp@@CALL to CALL
            UPD HdlValueId@@check_equal to check_field
            UPD HdlValueId@@tdata to tuser
        DEL list@@body from SEQ
    DEL HdlOp@@GT from 
    HdlOp: GT
        list: ops
            HdlOp: APOSTROPHE
                list: ops
                    HdlValueId: tdata
                    HdlValueId: length
    DEL HdlStmBlock@@SEQ from 
    DEL list@@elifs from 

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: check_equal
                HdlValueId: tid
                HdlOp: CALL
                    list: ops
                        HdlValueId: pop_std_ulogic_vector
                        HdlValueId: msg
                HdlOp: CONCAT
                    list: ops
                        str
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: to_string
                                HdlValueId: report_msg
        UPD HdlOp@@CALL to CALL
            UPD HdlValueId@@check_equal to check_field
            UPD HdlValueId@@tid to tkeep
        DEL list@@body from SEQ
    DEL HdlOp@@GT from 
    HdlOp: GT
        list: ops
            HdlOp: APOSTROPHE
                list: ops
                    HdlValueId: tid
                    HdlValueId: length
    DEL HdlStmBlock@@SEQ from 
    DEL list@@elifs from 

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: check_equal
                HdlValueId: tdest
                HdlOp: CALL
                    list: ops
                        HdlValueId: pop_std_ulogic_vector
                        HdlValueId: msg
                HdlOp: CONCAT
                    list: ops
                        str
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: to_string
                                HdlValueId: report_msg
        UPD HdlOp@@CALL to CALL
            UPD HdlValueId@@check_equal to check_field
            UPD HdlValueId@@tdest to tstrb
        DEL list@@body from SEQ
    DEL HdlOp@@GT from 
    HdlOp: GT
        list: ops
            HdlOp: APOSTROPHE
                list: ops
                    HdlValueId: tdest
                    HdlValueId: length
    DEL HdlStmBlock@@SEQ from 
    DEL list@@elifs from 

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: check_equal
                HdlValueId: tuser
                HdlOp: CALL
                    list: ops
                        HdlValueId: pop_std_ulogic_vector
                        HdlValueId: msg
                HdlOp: CONCAT
                    list: ops
                        str
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: to_string
                                HdlValueId: report_msg
        UPD HdlOp@@CALL to CALL
            UPD HdlValueId@@check_equal to check_field
            UPD HdlValueId@@tuser to tdest
        DEL list@@body from SEQ
    DEL HdlOp@@GT from 
    HdlOp: GT
        list: ops
            HdlOp: APOSTROPHE
                list: ops
                    HdlValueId: tuser
                    HdlValueId: length
    DEL HdlStmBlock@@SEQ from 
    DEL list@@elifs from 

DEL HdlStmIf@@ from body

DEL HdlStmIf@@ from body

DEL HdlStmIf@@ from body

DEL HdlStmIf@@ from body


CommitId: 05f534dafc3c0fa6b031fbb4410d1aec8e85da01
Fixes #94. Bug in codec generation for integer_vectors with min valued elements.
--- a/vunit/vhdl/com/src/com_string.vhd
+++ b/vunit/vhdl/com/src/com_string.vhd
@@ -134,7 +134,7 @@ package body com_string_pkg is
   function to_detailed_string (
     constant data : integer_vector)
     return string is
-    variable element : string(1 to 2 + data'length * 11);
+    variable element : string(1 to 2 + data'length * 12);
     variable l       : line;
     variable length  : natural;
   begin
ParseResult:
UPD HdlIdDef@@element to element
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@TO to TO
            UPD HdlOp@@ADD to ADD
                UPD HdlOp@@MUL to MUL
                    UPD HdlValueInt@@11 to 12


CommitId: 713e0f6895157c9490d63a5e6331bfb2d0361c1f
Release 4.0.2, fix push of message and make sure axi_lite_master aligns with clk
--- a/vunit/vhdl/com/src/com_types.vhd
+++ b/vunit/vhdl/com/src/com_types.vhd
@@ -528,12 +529,13 @@ package body com_types_pkg is
   impure function pop(queue : queue_t) return msg_t is
     variable ret_val : msg_t;
   begin
-    ret_val.id          := pop(queue);
-    ret_val.status      := com_status_t'val(integer'(pop(queue)));
-    ret_val.sender.id   := pop(queue);
+    ret_val.id := pop(queue);
+    ret_val.msg_type := (p_code => pop(queue));
+    ret_val.status := com_status_t'val(integer'(pop(queue)));
+    ret_val.sender.id := pop(queue);
     ret_val.receiver.id := pop(queue);
-    ret_val.request_id  := pop(queue);
-    ret_val.data        := pop_queue_ref(queue);
+    ret_val.request_id := pop(queue);
+    ret_val.data := pop_queue_ref(queue);
 
     return ret_val;
   end;

ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    list: src
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: p_code
                HdlOp: INDEX
                    list: ops
                        HdlValueId: pop
                        HdlValueId: queue
    HdlOp: DOT
        list: ops
            HdlValueId: ret_val
            HdlValueId: msg_type


CommitId: b10dfa82f68217bbf9eb88905c16118d36592d3c
Fixed Aldec compile issue.
--- a/vunit/vhdl/data_types/src/integer_vector_ptr_pkg.vhd
+++ b/vunit/vhdl/data_types/src/integer_vector_ptr_pkg.vhd
@@ -37,7 +37,7 @@ package integer_vector_ptr_pkg is
   ) return integer;
 
   impure function to_integer_vector_ptr (
-    value : integer
+    value : val_t
   ) return ptr_t;
 
   impure function new_integer_vector_ptr (
ParseResult:
UPD HdlIdDef@@value to value
    UPD HdlValueId@@integer to val_t


CommitId: b502fabf8d1dc071b48b488e1aec2bc2b18adcc0
Remove default logging to file
--- a/vunit/vhdl/logging/src/logger_pkg-body.vhd
+++ b/vunit/vhdl/logging/src/logger_pkg-body.vhd
@@ -144,11 +144,9 @@ package body logger_pkg is
   impure function new_root_logger return logger_t is
     variable logger : logger_t := new_logger(root_logger_id, "", null_logger);
   begin
-    p_set_log_handlers(logger, (display_handler, file_handler));
+    p_set_log_handlers(logger, (0 => display_handler));
     hide_all(logger, display_handler);
     show(logger, display_handler, (info, warning, error, failure));
-    hide_all(logger, file_handler);
-    show(logger, file_handler, (debug, info, warning, error, failure));
     return logger;
   end;
 
ParseResult:
UPD HdlFunctionDef@@new_root_logger to new_root_logger
    UPD HdlOp@@CALL to CALL
        INS list@@ to ops
        INS HdlOp@@MAP_ASSOCIATION to 

UPD HdlFunctionDef@@new_root_logger to new_root_logger
    UPD HdlOp@@CALL to CALL
        UPD list@@ to ops
        MOV list@@ to ops
        list
            HdlValueId: display_handler
            HdlValueId: file_handler
        DEL HdlValueId@@file_handler from 
    DEL HdlOp@@CALL from body
    HdlOp: CALL
        list: ops
            HdlValueId: hide_all
            HdlValueId: logger
            HdlValueId: file_handler
    DEL HdlOp@@CALL from body
    HdlOp: CALL
        list: ops
            HdlValueId: show
            HdlValueId: logger
            HdlValueId: file_handler
            list
                HdlValueId: debug
                HdlValueId: info
                HdlValueId: warning
                HdlValueId: error
                HdlValueId: failure


CommitId: bcdabe4ae13e5e49614f9572232f97c516ca261d
Fix "prefix of array attribute must be an object name"
--- a/vunit/vhdl/logging/src/logger_pkg-body.vhd
+++ b/vunit/vhdl/logging/src/logger_pkg-body.vhd
@@ -92,12 +92,13 @@ package body logger_pkg is
   procedure p_set_log_handlers(logger : logger_t;
                                log_handlers : log_handler_vec_t) is
     constant handlers : integer_vector_ptr_t := to_integer_vector_ptr(get(logger.p_data, handlers_idx));
+    constant full_logger_name : string := get_full_name(logger);
   begin
     resize(handlers, log_handlers'length);
 
     for i in log_handlers'range loop
       set(handlers, i, to_integer(log_handlers(i).p_data));
-      update_max_logger_name_length(log_handlers(i), get_full_name(logger)'length);
+      update_max_logger_name_length(log_handlers(i), full_logger_name'length);
     end loop;
   end;
 

ParseResult:
INS HdlIdDef@@full_logger_name to body

UPD HdlIdDef@@full_logger_name to full_logger_name
    INS HdlValueId@@string to full_logger_name
    INS HdlDirection@@INTERNAL to full_logger_name

UPD HdlStmForIn@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@CALL to CALL
            UPD HdlOp@@APOSTROPHE to APOSTROPHE
                MOV HdlOp@@INDEX to ops
                HdlOp: INDEX
                    list: ops
                        HdlValueId: get_full_name
                        HdlValueId: logger

UPD HdlStmForIn@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@CALL to CALL
            UPD HdlOp@@APOSTROPHE to APOSTROPHE
                INS HdlValueId@@full_logger_name to ops


CommitId: bcdabe4ae13e5e49614f9572232f97c516ca261d
Fix "prefix of array attribute must be an object name"
--- a/vunit/vhdl/logging/src/logger_pkg-body.vhd
+++ b/vunit/vhdl/logging/src/logger_pkg-body.vhd
@@ -262,11 +263,12 @@ package body logger_pkg is
   end;
 
   impure function get_max_name_length(logger : logger_t) return natural is
+    constant full_name : string := get_full_name(logger);
     variable result : natural := 0;
     variable child_result : natural;
   begin
     if num_children(logger) = 0 then
-      return get_full_name(logger)'length;
+      return full_name'length;
     end if;
 
     for i in 0 to num_children(logger)-1 loop
ParseResult:
INS HdlIdDef@@full_name to body

UPD HdlIdDef@@full_name to full_name
    INS HdlValueId@@string to full_name
    INS HdlDirection@@INTERNAL to full_name

UPD HdlStmReturn@@{'__class__': 'HdlOp',  'fn': 'APOSTROPHE',  'ops': [{'__class__': 'HdlOp',           'fn': 'INDEX',           'ops': ['get_full_name', 'logger']},          'length']}  to {'__class__': 'HdlOp',  'fn': 'APOSTROPHE',  'ops': [{'__class__': 'HdlOp',           'fn': 'INDEX',           'ops': ['get_full_name', 'logger']},          'length']} 
    UPD HdlOp@@APOSTROPHE to APOSTROPHE
        MOV HdlOp@@INDEX to ops
        HdlOp: INDEX
            list: ops
                HdlValueId: get_full_name
                HdlValueId: logger

UPD HdlStmReturn@@{'__class__': 'HdlOp',  'fn': 'APOSTROPHE',  'ops': [{'__class__': 'HdlOp',           'fn': 'INDEX',           'ops': ['get_full_name', 'logger']},          'length']}  to {'__class__': 'HdlOp', 'fn': 'APOSTROPHE', 'ops': ['full_name', 'length']} 


CommitId: 3d93c0fc19b8af90b4aab73e373e99079b600efb
Added default endianness to memory
--- a/vunit/vhdl/bfm/src/memory_utils_pkg.vhd
+++ b/vunit/vhdl/bfm/src/memory_utils_pkg.vhd
@@ -22,7 +22,7 @@ package memory_utils_pkg is
                                               name : string := "";
                                               alignment : positive := 1;
                                               bytes_per_word : natural range 1 to 4 := 4;
-                                              big_endian : boolean := false;
+                                              endian : endianness_arg_t := default_endian;
                                               permissions : permissions_t := read_only) return alloc_t;
 
   -- Allocate memory for the integer_vector_ptr, set it as expected data

ParseResult:
UPD HdlIdDef@@big_endian to endian

UPD HdlIdDef@@big_endian to big_endian
    UPD HdlValueId@@boolean to endianness_arg_t
    UPD HdlValueId@@false to default_endian


CommitId: 3d93c0fc19b8af90b4aab73e373e99079b600efb
Added default endianness to memory
--- a/vunit/vhdl/bfm/src/memory_utils_pkg.vhd
+++ b/vunit/vhdl/bfm/src/memory_utils_pkg.vhd
@@ -32,7 +32,7 @@ package memory_utils_pkg is
                                                        name : string := "";
                                                        alignment : positive := 1;
                                                        bytes_per_word : natural range 1 to 4 := 4;
-                                                       big_endian : boolean := false;
+                                                       endian : endianness_arg_t := default_endian;
                                                        permissions : permissions_t := write_only) return alloc_t;
 
   -- Allocate memory for the integer_array, write it there

ParseResult:
UPD HdlIdDef@@big_endian to endian

UPD HdlIdDef@@big_endian to big_endian
    UPD HdlValueId@@boolean to endianness_arg_t
    UPD HdlValueId@@false to default_endian


CommitId: 3d93c0fc19b8af90b4aab73e373e99079b600efb
Added default endianness to memory
--- a/vunit/vhdl/bfm/src/memory_utils_pkg.vhd
+++ b/vunit/vhdl/bfm/src/memory_utils_pkg.vhd
@@ -43,7 +43,7 @@ package memory_utils_pkg is
                                          name : string := "";
                                          alignment : positive := 1;
                                          stride_in_bytes : natural := 0; -- 0 stride means use image width
-                                         big_endian : boolean := false;
+                                         endian : endianness_arg_t := default_endian;
                                          permissions : permissions_t := read_only) return alloc_t;
 
   -- Allocate memory for the integer_array, set it as expected data

ParseResult:
UPD HdlIdDef@@big_endian to endian

UPD HdlIdDef@@big_endian to big_endian
    UPD HdlValueId@@boolean to endianness_arg_t
    UPD HdlValueId@@false to default_endian


CommitId: 3d93c0fc19b8af90b4aab73e373e99079b600efb
Added default endianness to memory
--- a/vunit/vhdl/bfm/src/memory_utils_pkg.vhd
+++ b/vunit/vhdl/bfm/src/memory_utils_pkg.vhd
@@ -54,7 +54,7 @@ package memory_utils_pkg is
                                                   name : string := "";
                                                   alignment : positive := 1;
                                                   stride_in_bytes : natural := 0; -- 0 stride means use image width
-                                                  big_endian : boolean := false;
+                                                  endian : endianness_arg_t := default_endian;
                                                   permissions : permissions_t := write_only) return alloc_t;
 
 end package;

ParseResult:
UPD HdlIdDef@@big_endian to endian

UPD HdlIdDef@@big_endian to big_endian
    UPD HdlValueId@@boolean to endianness_arg_t
    UPD HdlValueId@@false to default_endian


CommitId: 3d93c0fc19b8af90b4aab73e373e99079b600efb
Added default endianness to memory
--- a/vunit/vhdl/bfm/src/memory_utils_pkg.vhd
+++ b/vunit/vhdl/bfm/src/memory_utils_pkg.vhd
@@ -67,7 +67,7 @@ package body memory_utils_pkg is
                                               name : string := "";
                                               alignment : positive := 1;
                                               bytes_per_word : natural range 1 to 4 := 4;
-                                              big_endian : boolean := false;
+                                              endian : endianness_arg_t := default_endian;
                                               permissions : permissions_t := read_only) return alloc_t is
 
     variable alloc : alloc_t;

ParseResult:
UPD HdlIdDef@@big_endian to endian

UPD HdlIdDef@@big_endian to big_endian
    UPD HdlValueId@@boolean to endianness_arg_t
    UPD HdlValueId@@false to default_endian


CommitId: 3d93c0fc19b8af90b4aab73e373e99079b600efb
Added default endianness to memory
--- a/vunit/vhdl/bfm/src/memory_utils_pkg.vhd
+++ b/vunit/vhdl/bfm/src/memory_utils_pkg.vhd
@@ -80,7 +80,7 @@ package body memory_utils_pkg is
     for i in 0 to length(integer_vector_ptr)-1 loop
       write_integer(memory, base_addr + bytes_per_word*i, get(integer_vector_ptr, i),
                     bytes_per_word => bytes_per_word,
-                    big_endian => big_endian);
+                    endian => endian);
     end loop;
     return alloc;
   end;

ParseResult:
UPD HdlStmForIn@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@CALL to CALL
            UPD HdlOp@@ARROW to ARROW
                UPD HdlValueId@@big_endian to endian
                UPD HdlValueId@@big_endian to endian


CommitId: 3d93c0fc19b8af90b4aab73e373e99079b600efb
Added default endianness to memory
--- a/vunit/vhdl/bfm/src/memory_utils_pkg.vhd
+++ b/vunit/vhdl/bfm/src/memory_utils_pkg.vhd
@@ -90,7 +90,7 @@ package body memory_utils_pkg is
                                                        name : string := "";
                                                        alignment : positive := 1;
                                                        bytes_per_word : natural range 1 to 4 := 4;
-                                                       big_endian : boolean := false;
+                                                       endian : endianness_arg_t := default_endian;
                                                        permissions : permissions_t := write_only) return alloc_t is
     variable alloc : alloc_t;
     variable base_addr : integer;

ParseResult:
UPD HdlIdDef@@big_endian to endian

UPD HdlIdDef@@big_endian to big_endian
    UPD HdlValueId@@boolean to endianness_arg_t
    UPD HdlValueId@@false to default_endian


CommitId: 3d93c0fc19b8af90b4aab73e373e99079b600efb
Added default endianness to memory
--- a/vunit/vhdl/bfm/src/memory_utils_pkg.vhd
+++ b/vunit/vhdl/bfm/src/memory_utils_pkg.vhd
@@ -102,7 +102,7 @@ package body memory_utils_pkg is
     for i in 0 to length(integer_vector_ptr)-1 loop
       set_expected_integer(memory,
                            base_addr + bytes_per_word*i,
-                           get(integer_vector_ptr, i), bytes_per_word, big_endian);
+                           get(integer_vector_ptr, i), bytes_per_word, endian);
     end loop;
     return alloc;
   end function;

ParseResult:
UPD HdlStmForIn@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@CALL to CALL
            UPD HdlValueId@@big_endian to endian


CommitId: 3d93c0fc19b8af90b4aab73e373e99079b600efb
Added default endianness to memory
--- a/vunit/vhdl/bfm/src/memory_utils_pkg.vhd
+++ b/vunit/vhdl/bfm/src/memory_utils_pkg.vhd
@@ -112,7 +112,7 @@ package body memory_utils_pkg is
                                          name : string := "";
                                          alignment : positive := 1;
                                          stride_in_bytes : natural := 0; -- 0 stride means use image width
-                                         big_endian : boolean := false;
+                                         endian : endianness_arg_t := default_endian;
                                          permissions : permissions_t := read_only) return alloc_t is
 
     variable alloc : alloc_t;

ParseResult:
UPD HdlIdDef@@big_endian to endian

UPD HdlIdDef@@big_endian to big_endian
    UPD HdlValueId@@boolean to endianness_arg_t
    UPD HdlValueId@@false to default_endian


CommitId: 3d93c0fc19b8af90b4aab73e373e99079b600efb
Added default endianness to memory
--- a/vunit/vhdl/bfm/src/memory_utils_pkg.vhd
+++ b/vunit/vhdl/bfm/src/memory_utils_pkg.vhd
@@ -137,7 +137,7 @@ package body memory_utils_pkg is
                         addr,
                         get(integer_array, x, y, z),
                         bytes_per_word => bytes_per_word,
-                        big_endian => big_endian);
+                        endian => endian);
          addr := addr + bytes_per_word;
         end loop;
 

ParseResult:
UPD HdlStmForIn@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@CALL to CALL
            UPD HdlOp@@ARROW to ARROW
                UPD HdlValueId@@big_endian to endian
                UPD HdlValueId@@big_endian to endian


CommitId: 3d93c0fc19b8af90b4aab73e373e99079b600efb
Added default endianness to memory
--- a/vunit/vhdl/bfm/src/memory_utils_pkg.vhd
+++ b/vunit/vhdl/bfm/src/memory_utils_pkg.vhd
@@ -157,7 +157,7 @@ package body memory_utils_pkg is
                                                   name : string := "";
                                                   alignment : positive := 1;
                                                   stride_in_bytes : natural := 0; -- 0 stride means use image width
-                                                  big_endian : boolean := false;
+                                                  endian : endianness_arg_t := default_endian;
                                                   permissions : permissions_t := write_only) return alloc_t is
 
     variable alloc : alloc_t;

ParseResult:
UPD HdlIdDef@@big_endian to endian

UPD HdlIdDef@@big_endian to big_endian
    UPD HdlValueId@@boolean to endianness_arg_t
    UPD HdlValueId@@false to default_endian


CommitId: 3d93c0fc19b8af90b4aab73e373e99079b600efb
Added default endianness to memory
--- a/vunit/vhdl/bfm/src/memory_utils_pkg.vhd
+++ b/vunit/vhdl/bfm/src/memory_utils_pkg.vhd
@@ -179,7 +179,7 @@ package body memory_utils_pkg is
         addr := base_address(alloc) + stride_in_bytes_v*(y + z*integer_array.height);
 
         for x in 0 to integer_array.width-1 loop
-          set_expected_integer(memory, addr, get(integer_array, x, y, z), bytes_per_word, big_endian);
+          set_expected_integer(memory, addr, get(integer_array, x, y, z), bytes_per_word, endian);
           addr := addr + bytes_per_word;
         end loop;
 
ParseResult:
UPD HdlStmForIn@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@CALL to CALL
            UPD HdlValueId@@big_endian to endian


CommitId: 1fb8cf07c2dc93562ec0f067d13d6a541bfd5e99
Integrated AXI protocol checker into other AXI VCs. Some lint fixing.
--- a/vunit/vhdl/verification_components/src/axi_slave_private_pkg.vhd
+++ b/vunit/vhdl/verification_components/src/axi_slave_private_pkg.vhd
@@ -499,7 +499,7 @@ package body axi_slave_private_pkg is
     variable clear_stat : boolean;
     variable stat : axi_statistics_t;
   begin
-    loop
+    while true loop
       receive(net, self.get_actor, request_msg);
       msg_type := message_type(request_msg);
 
ParseResult:
UPD HdlStmWhile@@ to 
    UPD HdlValueId@@True to true


CommitId: 1b61e106051d6e1983cb3b02d775c63f5008d023
Find the origin of pop from empty queue error
--- a/vunit/vhdl/verification_components/src/wishbone_slave.vhd
+++ b/vunit/vhdl/verification_components/src/wishbone_slave.vhd
@@ -45,8 +45,8 @@ architecture a of wishbone_slave is
 
 	constant ack_actor 		: actor_t := new_actor("slave ack actor");
   constant slave_logger : logger_t := get_logger("slave");
-  constant bus_write_msg   : msg_type_t := new_msg_type("wb slave write");  
-  constant bus_read_msg   : msg_type_t := new_msg_type("wb slave read");  
+  constant slave_write_msg   : msg_type_t := new_msg_type("wb slave write");  
+  constant slave_read_msg   : msg_type_t := new_msg_type("wb slave read");  
 begin
 
   show(slave_logger, display_handler, verbose);

ParseResult:
UPD HdlIdDef@@bus_write_msg to slave_write_msg

UPD HdlIdDef@@bus_read_msg to slave_read_msg


CommitId: 1b61e106051d6e1983cb3b02d775c63f5008d023
Find the origin of pop from empty queue error
--- a/vunit/vhdl/verification_components/src/wishbone_slave.vhd
+++ b/vunit/vhdl/verification_components/src/wishbone_slave.vhd
@@ -57,13 +57,13 @@ begin
   begin
     wait until (cyc and stb) = '1' and rising_edge(clk);
     if we = '1' then
-      wr_request_msg := new_msg(bus_write_msg);
+      wr_request_msg := new_msg(slave_write_msg);
       -- For write address and data is passed to ack proc
       push_integer(wr_request_msg, to_integer(unsigned(adr)));
       push_std_ulogic_vector(wr_request_msg, dat_i);      
       send(net, ack_actor, wr_request_msg);
     elsif we = '0' then
-      rd_request_msg := new_msg(bus_read_msg);
+      rd_request_msg := new_msg(slave_read_msg);
       -- For read, only address is passed to ack proc
       push_integer(rd_request_msg, to_integer(unsigned(adr)));
       send(net, ack_actor, rd_request_msg);

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@bus_write_msg to slave_write_msg

UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@bus_read_msg to slave_read_msg


CommitId: 1b61e106051d6e1983cb3b02d775c63f5008d023
Find the origin of pop from empty queue error
--- a/vunit/vhdl/verification_components/src/wishbone_slave.vhd
+++ b/vunit/vhdl/verification_components/src/wishbone_slave.vhd
@@ -82,7 +82,7 @@ begin
     receive(net, ack_actor, request_msg);
     msg_type := message_type(request_msg);
 
-    if msg_type = bus_write_msg then
+    if msg_type = slave_write_msg then
       addr := pop_integer(request_msg);
       data := pop_std_ulogic_vector(request_msg);
       write_word(memory, addr, data);      	

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        UPD HdlValueId@@bus_write_msg to slave_write_msg
    UPD HdlOp@@EQ to EQ
        UPD HdlValueId@@bus_read_msg to slave_read_msg


CommitId: 1b61e106051d6e1983cb3b02d775c63f5008d023
Find the origin of pop from empty queue error
--- a/vunit/vhdl/verification_components/src/wishbone_slave.vhd
+++ b/vunit/vhdl/verification_components/src/wishbone_slave.vhd
@@ -90,9 +90,10 @@ begin
       wait until rising_edge(clk);
       ack <= '0';
 
-    elsif msg_type = bus_read_msg then
+    elsif msg_type = slave_read_msg then
       data := (others => '0');
-      addr := pop_integer(request_msg);
+			-- error: pop from empty queue below
+      --addr := pop_integer(request_msg);
       data := read_word(memory, addr, 2);
       dat_o <= data;
       ack <= '1';
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        UPD HdlValueId@@bus_write_msg to slave_write_msg
    UPD HdlOp@@EQ to EQ
        UPD HdlValueId@@bus_read_msg to slave_read_msg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlOp: INDEX
        list: ops
            HdlValueId: pop_integer
            HdlValueId: request_msg
    HdlValueId: addr


CommitId: 214de988c32018d19be4101667185747b0bb69fe
Merge pull request #561 from eschmidscs/bugfix/check_axi_stream
--- a/vunit/vhdl/verification_components/src/axi_stream_slave.vhd
+++ b/vunit/vhdl/verification_components/src/axi_stream_slave.vhd
@@ -112,14 +112,12 @@ begin
         tready <= '0';
 
         report_msg := new_string_ptr(pop_string(msg));
-        check_equal(tdata, pop_std_ulogic_vector(msg), "TDATA mismatch, " & to_string(report_msg));
-        check_equal(tlast, pop_std_ulogic(msg), "TLAST mismatch, " & to_string(report_msg));
-        if tkeep'length > 0 then
+        if tdata'length > 0 then
+          check_equal(tdata, pop_std_ulogic_vector(msg), "TDATA mismatch, " & to_string(report_msg));
           check_equal(tkeep, pop_std_ulogic_vector(msg), "TKEEP mismatch, " & to_string(report_msg));
-        end if;
-        if tstrb'length > 0 then
           check_equal(tstrb, pop_std_ulogic_vector(msg), "TSTRB mismatch, " & to_string(report_msg));
         end if;
+        check_equal(tlast, pop_std_ulogic(msg), "TLAST mismatch, " & to_string(report_msg));
         if tid'length > 0 then
           check_equal(tid, pop_std_ulogic_vector(msg), "TID mismatch, " & to_string(report_msg));
         end if;
ParseResult:
INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    INS HdlOp@@GT to 
    HdlOp: GT
        list: ops
            HdlOp: APOSTROPHE
                list: ops
                    HdlValueId: tdata
                    HdlValueId: length

UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: CALL
                list: ops
                    HdlValueId: check_equal
                    HdlValueId: tkeep
                    HdlOp: CALL
                        list: ops
                            HdlValueId: pop_std_ulogic_vector
                            HdlValueId: msg
                    HdlOp: CONCAT
                        list: ops
                            str
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: to_string
                                    HdlValueId: report_msg
    MOV list@@elifs to 
    list: elifs
    DEL HdlOp@@GT from 
    HdlOp: GT
        list: ops
            HdlOp: APOSTROPHE
                list: ops
                    HdlValueId: tkeep
                    HdlValueId: length

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: check_equal
                HdlValueId: tdata
                HdlOp: CALL
                    list: ops
                        HdlValueId: pop_std_ulogic_vector
                        HdlValueId: msg
                HdlOp: CONCAT
                    list: ops
                        str
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: to_string
                                HdlValueId: report_msg

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: check_equal
                HdlValueId: tstrb
                HdlOp: CALL
                    list: ops
                        HdlValueId: pop_std_ulogic_vector
                        HdlValueId: msg
                HdlOp: CONCAT
                    list: ops
                        str
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: to_string
                                HdlValueId: report_msg
        DEL list@@body from SEQ
    DEL HdlOp@@GT from 
    HdlOp: GT
        list: ops
            HdlOp: APOSTROPHE
                list: ops
                    HdlValueId: tstrb
                    HdlValueId: length
    DEL HdlStmBlock@@SEQ from 
    DEL list@@elifs from 

DEL HdlStmIf@@ from body

DEL HdlStmIf@@ from body


CommitId: f31ea350f6c7ec4d5059549973c2b24d892a84fe
Use constant instead of alias to work arround Sigasi bug
--- a/vunit/vhdl/dictionary/src/dictionary.vhd
+++ b/vunit/vhdl/dictionary/src/dictionary.vhd
@@ -14,7 +14,7 @@ package dictionary is
   subtype frozen_dictionary_t is string;
   constant empty : frozen_dictionary_t := "";
   -- Deprecated
-  alias empty_c is empty;
+  constant empty_c : frozen_dictionary_t := empty;
 
   function len (
     constant d : frozen_dictionary_t)
ParseResult:
INS HdlIdDef@@empty_c to objs
HdlIdDef: empty_c
    HdlValueId: frozen_dictionary_t
    HdlValueId: empty
    HdlDirection: INTERNAL


CommitId: f6b2818f653b05124ce4ffa689e5608a5f80dc87
Fixed check_equal of special characters.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -2201,9 +2201,13 @@ package body check_pkg is
   function to_string (
     constant data : character)
     return string is
-    constant full_string : string(1 to 3) := character'image(data);
+    constant full_string : string := character'image(data);
   begin
-    return full_string(2 to 2);
+    if (full_string(full_string'left) = ''') and (full_string(full_string'right) = ''') then
+      return full_string(full_string'left + 1 to full_string'right - 1);
+    else
+      return full_string;
+    end if;
   end function to_string;
 
   function max (
ParseResult:
INS HdlFunctionDef@@to_string to objs

UPD HdlFunctionDef@@to_string to to_string
    INS HdlValueId@@string to to_string
    INS list@@body to to_string

UPD HdlFunctionDef@@to_string to to_string
    MOV list@@params to to_string
    list: params
        HdlIdDef: data
            HdlValueId: character
            HdlDirection: INTERNAL
    DEL HdlValueId@@string from to_string
    DEL list@@body from to_string

MOV HdlIdDef@@full_string to body
HdlIdDef: full_string
    HdlOp: INDEX
        list: ops
            HdlValueId: string
            HdlOp: TO
                list: ops
                    HdlValueInt: 1
                    HdlValueInt: 3
    HdlOp: INDEX
        list: ops
            HdlOp: APOSTROPHE
                list: ops
                    HdlValueId: character
                    HdlValueId: image
            HdlValueId: data
    HdlDirection: INTERNAL

INS HdlStmIf@@ to body
HdlStmIf
    HdlOp: AND
        list: ops
            HdlOp: EQ
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: full_string
                            HdlOp: APOSTROPHE
                                list: ops
                                    HdlValueId: full_string
                                    HdlValueId: left
                    HdlValueInt: '
            HdlOp: EQ
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: full_string
                            HdlOp: APOSTROPHE
                                list: ops
                                    HdlValueId: full_string
                                    HdlValueId: right
                    HdlValueInt: '
    HdlStmBlock: SEQ
        list: body
            HdlStmReturn: {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops':},                            1]},                   {'__class__': 'HdlOp',                    'fn': 'SUB',                    'ops':},                            1]}]}]} 
                HdlOp: INDEX
                    list: ops
                        HdlValueId: full_string
                        HdlOp: TO
                            list: ops
                                HdlOp: ADD
                                    list: ops
                                        HdlOp: APOSTROPHE
                                            list: ops
                                                HdlValueId: full_string
                                                HdlValueId: left
                                        HdlValueInt: 1
                                HdlOp: SUB
                                    list: ops
                                        HdlOp: APOSTROPHE
                                            list: ops
                                                HdlValueId: full_string
                                                HdlValueId: right
                                        HdlValueInt: 1
    list: elifs
    HdlStmBlock: SEQ
        list: body
            HdlStmReturn: full_string
                HdlValueId: full_string

UPD HdlIdDef@@full_string to full_string
    UPD HdlOp@@INDEX to INDEX
        MOV HdlValueId@@string to ops
        HdlValueId: string
        DEL HdlOp@@TO from ops
        HdlOp: TO
            list: ops
                HdlValueInt: 1
                HdlValueInt: 3
        DEL list@@ops from INDEX
    DEL HdlOp@@INDEX from full_string

DEL HdlStmReturn@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['full_string', {'__class__': 'HdlOp', 'fn': 'TO', 'ops': [2, 2]}]}  from body
HdlStmReturn: {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops':}]} 
    HdlOp: INDEX
        list: ops
            HdlValueId: full_string
            HdlOp: TO
                list: ops
                    HdlValueInt: 2
                    HdlValueInt: 2

DEL HdlFunctionDef@@to_string from objs


CommitId: c6ccaeeb5c4506a51c064b72e9aa48f688ee4508
fix: add mode assertions to -93 sources
--- a/vunit/vhdl/data_types/src/integer_vector_ptr_pkg-body-93.vhd
+++ b/vunit/vhdl/data_types/src/integer_vector_ptr_pkg-body-93.vhd
@@ -79,6 +79,11 @@ package body integer_vector_ptr_pkg is
     value  : val_t   := 0
   ) return ptr_t is begin
     reallocate_ids(st.idxs, st.idx);
+    if mode = internal then
+      assert eid = -1 report "mode internal: id/=-1 not supported" severity error;
+    else
+      assert eid /= -1 report "mode external: id must be natural" severity error;
+    end if;
     case mode is
       when internal =>
         st.idxs(st.idx) := (
ParseResult:
INS HdlStmIf@@ to body
HdlStmIf
    HdlOp: EQ
        list: ops
            HdlValueId: mode
            HdlValueId: internal
    HdlStmBlock: SEQ
        list: body
            HdlOp: CALL
                list: ops
                    HdlValueId: assert
                    HdlOp: EQ
                        list: ops
                            HdlValueId: eid
                            HdlOp: MINUS_UNARY
                                list: ops
                                    HdlValueInt: 1
                    str
                    HdlValueId: error
    list: elifs
    HdlStmBlock: SEQ
        list: body
            HdlOp: CALL
                list: ops
                    HdlValueId: assert
                    HdlOp: NE
                        list: ops
                            HdlValueId: eid
                            HdlOp: MINUS_UNARY
                                list: ops
                                    HdlValueInt: 1
                    str
                    HdlValueId: error


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/run/src/run_types.vhd
+++ b/vunit/vhdl/run/src/run_types.vhd
@@ -13,8 +13,12 @@ library ieee;
 use ieee.std_logic_1164.all;
 
 package run_types_pkg is
-  constant max_locked_time_c : time := 1 ms;
-  constant max_n_test_cases_c : natural := 1024;
+  constant max_locked_time : time := 1 ms;
+  constant max_n_test_cases : natural := 1024;
+
+  -- Deprecated
+  alias max_locked_time_c is max_locked_time;
+  alias max_n_test_cases_c is max_n_test_cases;
 
   subtype runner_cfg_t is string; -- Subtype deprecated, use string instead
   constant runner_cfg_default : string := "enabled_test_cases : __all__, output path : , active python runner : false";
ParseResult:
UPD HdlIdDef@@max_locked_time_c to max_locked_time

UPD HdlIdDef@@max_n_test_cases_c to max_n_test_cases


CommitId: 42cd894cb2f54940875fb14c6d3fa04c9b5084f1
Add debug logging to axi_lite_master
--- a/vunit/vhdl/verification_components/src/axi_lite_master.vhd
+++ b/vunit/vhdl/verification_components/src/axi_lite_master.vhd
@@ -67,6 +68,12 @@ begin
         rready <= '0';
         check_axi_resp(bus_handle, rresp, axi_resp_okay, "rresp");
 
+        if is_visible(bus_handle.p_logger, debug) then
+          debug(bus_handle.p_logger,
+                "Read 0x" & to_hstring(rdata) &
+                " from address 0x" & to_hstring(araddr));
+        end if;
+
         reply_msg := new_msg;
         push_std_ulogic_vector(reply_msg, rdata);
         reply(net, request_msg, reply_msg);

ParseResult:
INS HdlStmIf@@ to body
HdlStmIf
    HdlOp: INDEX
        list: ops
            HdlValueId: is_visible
            HdlOp: DOT
                list: ops
                    HdlValueId: bus_handle
                    HdlValueId: p_logger
            HdlValueId: debug
    HdlStmBlock: SEQ
        list: body
            HdlOp: CALL
                list: ops
                    HdlValueId: debug
                    HdlOp: DOT
                        list: ops
                            HdlValueId: bus_handle
                            HdlValueId: p_logger
                    HdlOp: CONCAT
                        list: ops
                            HdlOp: CONCAT
                                list: ops
                                    HdlOp: CONCAT
                                        list: ops
                                            str
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: to_hstring
                                                    HdlValueId: rdata
                                    str
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: to_hstring
                                    HdlValueId: araddr
    list: elifs


CommitId: 42cd894cb2f54940875fb14c6d3fa04c9b5084f1
Add debug logging to axi_lite_master
--- a/vunit/vhdl/verification_components/src/axi_lite_master.vhd
+++ b/vunit/vhdl/verification_components/src/axi_lite_master.vhd
@@ -101,6 +108,12 @@ begin
         bready <= '0';
         check_axi_resp(bus_handle, bresp, axi_resp_okay, "bresp");
 
+        if is_visible(bus_handle.p_logger, debug) then
+          debug(bus_handle.p_logger,
+                "Wrote 0x" & to_hstring(wdata) &
+                " to address 0x" & to_hstring(awaddr));
+        end if;
+
       elsif msg_type = wait_until_idle_msg then
         handle_wait_until_idle(net, msg_type, request_msg);
       else
ParseResult:
INS HdlStmIf@@ to body
HdlStmIf
    HdlOp: INDEX
        list: ops
            HdlValueId: is_visible
            HdlOp: DOT
                list: ops
                    HdlValueId: bus_handle
                    HdlValueId: p_logger
            HdlValueId: debug
    HdlStmBlock: SEQ
        list: body
            HdlOp: CALL
                list: ops
                    HdlValueId: debug
                    HdlOp: DOT
                        list: ops
                            HdlValueId: bus_handle
                            HdlValueId: p_logger
                    HdlOp: CONCAT
                        list: ops
                            HdlOp: CONCAT
                                list: ops
                                    HdlOp: CONCAT
                                        list: ops
                                            str
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: to_hstring
                                                    HdlValueId: wdata
                                    str
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: to_hstring
                                    HdlValueId: awaddr
    list: elifs


CommitId: 305bff61c43a4817f91b64490a7b10486de80412
Fix Riviera-PRO compilation issues.
--- a/vunit/vhdl/data_types/src/integer_vector_ptr_pkg-body-200x.vhd
+++ b/vunit/vhdl/data_types/src/integer_vector_ptr_pkg-body-200x.vhd
@@ -141,7 +141,7 @@ package body integer_vector_ptr_pkg is
   end;
 
   impure function to_integer_vector_ptr (
-    value : integer
+    value : val_t
   ) return ptr_t is begin
     -- @TODO maybe assert that the ref is valid
     return (ref => value);
ParseResult:
UPD HdlIdDef@@value to value
    UPD HdlValueId@@integer to val_t


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/run/src/run.vhd
+++ b/vunit/vhdl/run/src/run.vhd
@@ -395,7 +395,7 @@ package body run_pkg is
   begin
     if runner.locks(get_phase(runner_state)).entry_is_locked then
       trace(runner_trace_logger, "Halting on " & replace(runner_phase_t'image(get_phase(runner_state)), "_", " ") & " phase entry gate.");
-      wait on runner.locks until not runner.locks(get_phase(runner_state)).entry_is_locked for max_locked_time_c;
+      wait on runner.locks until not runner.locks(get_phase(runner_state)).entry_is_locked for max_locked_time;
     end if;
     runner.phase <= get_phase(runner_state);
     wait for 0 ns;

ParseResult:
UPD HdlStmWait@@[{'__class__': 'HdlOp', 'fn': 'DOT', 'ops': ['runner', 'locks']} , {'__class__': 'HdlOp',  'fn': 'NEG',  'ops': [{'__class__': 'HdlOp',           'fn': 'NEG',           'ops': [{'__class__': 'HdlOp',                    'fn': 'DOT',                    'ops': [{'__class__': 'HdlOp',                             'fn': 'INDEX',                             'ops': [{'__class__': 'HdlOp',                                      'fn': 'DOT',                                      'ops': ['runner', 'locks']},                                     {'__class__': 'HdlOp',                                      'fn': 'CALL',                                      'ops': ['get_phase', 'runner_state']}]},                            'entry_is_locked']}]}]} , <HdlValueId max_locked_time_c>] to [{'__class__': 'HdlOp', 'fn': 'DOT', 'ops': ['runner', 'locks']} , {'__class__': 'HdlOp',  'fn': 'NEG',  'ops': [{'__class__': 'HdlOp',           'fn': 'NEG',           'ops': [{'__class__': 'HdlOp',                    'fn': 'DOT',                    'ops': [{'__class__': 'HdlOp',                             'fn': 'INDEX',                             'ops': [{'__class__': 'HdlOp',                                      'fn': 'DOT',                                      'ops': ['runner', 'locks']},                                     {'__class__': 'HdlOp',                                      'fn': 'CALL',                                      'ops': ['get_phase', 'runner_state']}]},                            'entry_is_locked']}]}]} , <HdlValueId max_locked_time>]

UPD HdlStmWait@@[{'__class__': 'HdlOp', 'fn': 'DOT', 'ops': ['runner', 'locks']} , {'__class__': 'HdlOp',  'fn': 'NEG',  'ops': [{'__class__': 'HdlOp',           'fn': 'NEG',           'ops': [{'__class__': 'HdlOp',                    'fn': 'DOT',                    'ops': [{'__class__': 'HdlOp',                             'fn': 'INDEX',                             'ops': [{'__class__': 'HdlOp',                                      'fn': 'DOT',                                      'ops': ['runner', 'locks']},                                     {'__class__': 'HdlOp',                                      'fn': 'CALL',                                      'ops': ['get_phase', 'runner_state']}]},                            'entry_is_locked']}]}]} , <HdlValueId max_locked_time_c>] to [{'__class__': 'HdlOp', 'fn': 'DOT', 'ops': ['runner', 'locks']} , {'__class__': 'HdlOp',  'fn': 'NEG',  'ops': [{'__class__': 'HdlOp',           'fn': 'NEG',           'ops': [{'__class__': 'HdlOp',                    'fn': 'DOT',                    'ops': [{'__class__': 'HdlOp',                             'fn': 'INDEX',                             'ops': [{'__class__': 'HdlOp',                                      'fn': 'DOT',                                      'ops': ['runner', 'locks']},                                     {'__class__': 'HdlOp',                                      'fn': 'CALL',                                      'ops': ['get_phase', 'runner_state']}]},                            'entry_is_locked']}]}]} , <HdlValueId max_locked_time_c>]
    UPD HdlValueId@@max_locked_time_c to max_locked_time


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/run/src/run.vhd
+++ b/vunit/vhdl/run/src/run.vhd
@@ -407,7 +407,7 @@ package body run_pkg is
   begin
     if runner.locks(get_phase(runner_state)).exit_is_locked then
       trace(runner_trace_logger, "Halting on " & replace(runner_phase_t'image(get_phase(runner_state)), "_", " ") & " phase exit gate.");
-      wait on runner.locks until not runner.locks(get_phase(runner_state)).exit_is_locked for max_locked_time_c;
+      wait on runner.locks until not runner.locks(get_phase(runner_state)).exit_is_locked for max_locked_time;
     end if;
     trace(runner_trace_logger, "Passed " & replace(runner_phase_t'image(get_phase(runner_state)), "_", " ") & " phase exit gate.");
   end procedure exit_gate;
ParseResult:
UPD HdlStmWait@@[{'__class__': 'HdlOp', 'fn': 'DOT', 'ops': ['runner', 'locks']} , {'__class__': 'HdlOp',  'fn': 'NEG',  'ops': [{'__class__': 'HdlOp',           'fn': 'NEG',           'ops': [{'__class__': 'HdlOp',                    'fn': 'DOT',                    'ops': [{'__class__': 'HdlOp',                             'fn': 'INDEX',                             'ops': [{'__class__': 'HdlOp',                                      'fn': 'DOT',                                      'ops': ['runner', 'locks']},                                     {'__class__': 'HdlOp',                                      'fn': 'CALL',                                      'ops': ['get_phase', 'runner_state']}]},                            'exit_is_locked']}]}]} , <HdlValueId max_locked_time_c>] to [{'__class__': 'HdlOp', 'fn': 'DOT', 'ops': ['runner', 'locks']} , {'__class__': 'HdlOp',  'fn': 'NEG',  'ops': [{'__class__': 'HdlOp',           'fn': 'NEG',           'ops': [{'__class__': 'HdlOp',                    'fn': 'DOT',                    'ops': [{'__class__': 'HdlOp',                             'fn': 'INDEX',                             'ops': [{'__class__': 'HdlOp',                                      'fn': 'DOT',                                      'ops': ['runner', 'locks']},                                     {'__class__': 'HdlOp',                                      'fn': 'CALL',                                      'ops': ['get_phase', 'runner_state']}]},                            'exit_is_locked']}]}]} , <HdlValueId max_locked_time>]

UPD HdlStmWait@@[{'__class__': 'HdlOp', 'fn': 'DOT', 'ops': ['runner', 'locks']} , {'__class__': 'HdlOp',  'fn': 'NEG',  'ops': [{'__class__': 'HdlOp',           'fn': 'NEG',           'ops': [{'__class__': 'HdlOp',                    'fn': 'DOT',                    'ops': [{'__class__': 'HdlOp',                             'fn': 'INDEX',                             'ops': [{'__class__': 'HdlOp',                                      'fn': 'DOT',                                      'ops': ['runner', 'locks']},                                     {'__class__': 'HdlOp',                                      'fn': 'CALL',                                      'ops': ['get_phase', 'runner_state']}]},                            'exit_is_locked']}]}]} , <HdlValueId max_locked_time_c>] to [{'__class__': 'HdlOp', 'fn': 'DOT', 'ops': ['runner', 'locks']} , {'__class__': 'HdlOp',  'fn': 'NEG',  'ops': [{'__class__': 'HdlOp',           'fn': 'NEG',           'ops': [{'__class__': 'HdlOp',                    'fn': 'DOT',                    'ops': [{'__class__': 'HdlOp',                             'fn': 'INDEX',                             'ops': [{'__class__': 'HdlOp',                                      'fn': 'DOT',                                      'ops': ['runner', 'locks']},                                     {'__class__': 'HdlOp',                                      'fn': 'CALL',                                      'ops': ['get_phase', 'runner_state']}]},                            'exit_is_locked']}]}]} , <HdlValueId max_locked_time_c>]
    UPD HdlValueId@@max_locked_time_c to max_locked_time


CommitId: 10220c5fb7cd6c1e095a4b41087c48aa05e30c59
Deprecated external_error flag to test_runner_cleanup
--- a/vunit/vhdl/run/src/run_api.vhd
+++ b/vunit/vhdl/run/src/run_api.vhd
@@ -53,8 +53,7 @@ package run_pkg is
     return string;
 
   procedure test_runner_cleanup (
-    signal runner: inout runner_sync_t;
-    constant external_failure : in boolean := false);
+    signal runner: inout runner_sync_t);
 
   impure function test_suite_error (
     constant err : boolean)
ParseResult:
DEL HdlIdDef@@external_failure from params
HdlIdDef: external_failure
    HdlValueId: boolean
    HdlValueId: false
    HdlDirection: INTERNAL


CommitId: c6411a32cb3de281420b78cb819086fdf676645e
Fixed to_integer_string such that it can handle long vectors (32+ bits) containing metalogical values.
--- a/vhdl/string_ops/src/string_ops.vhd
+++ b/vhdl/string_ops/src/string_ops.vhd
@@ -4,7 +4,7 @@
 -- License, v. 2.0. If a copy of the MPL was not distributed with this file,
 -- You can obtain one at http://mozilla.org/MPL/2.0/.
 --
--- Copyright (c) 2014, Lars Asplund lars.anders.asplund@gmail.com
+-- Copyright (c) 2014-2015, Lars Asplund lars.anders.asplund@gmail.com
 
 library ieee;
 use ieee.std_logic_1164.all;

ParseResult:
INS HdlLibrary@@ieee to objs

DEL HdlLibrary@@ieee from objs


CommitId: c6411a32cb3de281420b78cb819086fdf676645e
Fixed to_integer_string such that it can handle long vectors (32+ bits) containing metalogical values.
--- a/vhdl/string_ops/src/string_ops.vhd
+++ b/vhdl/string_ops/src/string_ops.vhd
@@ -494,6 +494,10 @@ package body string_ops is
     variable ret_val, reversed_ret_val : line;
     variable last_digit, quotient : unsigned(value'length - 1 downto 0);
   begin
+    if is_x(std_logic_vector(value)) then
+      return "NaN";
+    end if;
+    
     if value = (value'range => '0') then
       return "0";
     end if;

ParseResult:
INS HdlStmIf@@ to body
HdlStmIf
    HdlOp: INDEX
        list: ops
            HdlValueId: is_x
            HdlOp: CALL
                list: ops
                    HdlValueId: std_logic_vector
                    HdlValueId: value
    HdlStmBlock: SEQ
        list: body
            HdlStmReturn: NaN
    list: elifs


CommitId: c6411a32cb3de281420b78cb819086fdf676645e
Fixed to_integer_string such that it can handle long vectors (32+ bits) containing metalogical values.
--- a/vhdl/string_ops/src/string_ops.vhd
+++ b/vhdl/string_ops/src/string_ops.vhd
@@ -538,6 +542,10 @@ package body string_ops is
     variable value_internal_extended: signed(value'length downto 0);
     constant minus_one: signed(value'length downto 0) := (others => '1');
   begin
+    if is_x(std_logic_vector(value)) then
+      return "NaN";
+    end if;
+
     if value'length <= 32 then
       return integer'image(to_integer(value));
     end if;
ParseResult:
INS HdlStmIf@@ to body
HdlStmIf
    HdlOp: INDEX
        list: ops
            HdlValueId: is_x
            HdlOp: CALL
                list: ops
                    HdlValueId: std_logic_vector
                    HdlValueId: value
    HdlStmBlock: SEQ
        list: body
            HdlStmReturn: NaN
    list: elifs


CommitId: 3e5613adc72325e9a7dfba56bd4c4525214aa60a
log_deprecated_pkg: fix compilation issues with Cadence tools
--- a/vunit/vhdl/logging/src/log_deprecated_pkg.vhd
+++ b/vunit/vhdl/logging/src/log_deprecated_pkg.vhd
@@ -101,7 +101,7 @@ package body log_deprecated_pkg is
         end if;
       end function;
 
-      impure function get_logger_display_handler return log_handler_t is
+      impure function get_logger_display_handler(logger : logger_t) return log_handler_t is
       begin
         for idx in 0 to num_log_handlers(logger) - 1 loop
           if get_file_name(get_log_handler(logger, idx)) = stdout_file_name then

ParseResult:
INS HdlIdDef@@logger to params
HdlIdDef: logger
    HdlValueId: logger_t
    HdlDirection: IN


CommitId: 3e5613adc72325e9a7dfba56bd4c4525214aa60a
log_deprecated_pkg: fix compilation issues with Cadence tools
--- a/vunit/vhdl/logging/src/log_deprecated_pkg.vhd
+++ b/vunit/vhdl/logging/src/log_deprecated_pkg.vhd
@@ -112,7 +112,7 @@ package body log_deprecated_pkg is
         return null_log_handler;
       end function;
 
-      impure function get_logger_file_handler return log_handler_t is
+      impure function get_logger_file_handler(logger : logger_t) return log_handler_t is
       begin
         for idx in 0 to num_log_handlers(logger) - 1 loop
           if get_file_name(get_log_handler(logger, idx)) /= stdout_file_name then

ParseResult:
INS HdlIdDef@@logger to params
HdlIdDef: logger
    HdlValueId: logger_t
    HdlDirection: IN


CommitId: 3e5613adc72325e9a7dfba56bd4c4525214aa60a
log_deprecated_pkg: fix compilation issues with Cadence tools
--- a/vunit/vhdl/logging/src/log_deprecated_pkg.vhd
+++ b/vunit/vhdl/logging/src/log_deprecated_pkg.vhd
@@ -123,14 +123,14 @@ package body log_deprecated_pkg is
         return null_log_handler;
       end function;
     begin
-      logger_display_handler := get_logger_display_handler;
+      logger_display_handler := get_logger_display_handler(logger);
       if new_logger or (logger_display_handler = null_log_handler) then
         logger_display_handler := new_log_handler(stdout_file_name, real_format(display_format), true);
       else
         init_log_handler(logger_display_handler, real_format(display_format), stdout_file_name, true);
       end if;
 
-      logger_file_handler := get_logger_file_handler;
+      logger_file_handler := get_logger_file_handler(logger);
       if new_logger or (logger_file_handler = null_log_handler) then
         logger_file_handler := new_log_handler(file_name, real_format(file_format), false);
       else
ParseResult:
UPD HdlStmAssign@@ to 
    INS HdlOp@@INDEX to 
    UPD HdlOp@@INDEX to INDEX
        INS list@@ops to INDEX
        INS HdlValueId@@logger to ops

UPD HdlStmAssign@@ to 
    INS HdlOp@@INDEX to 
    UPD HdlOp@@INDEX to INDEX
        INS list@@ops to INDEX
        INS HdlValueId@@logger to ops

UPD HdlStmAssign@@ to 
    MOV HdlValueId@@get_logger_display_handler to 
    HdlValueId: get_logger_display_handler

UPD HdlStmAssign@@ to 
    MOV HdlValueId@@get_logger_file_handler to 
    HdlValueId: get_logger_file_handler


CommitId: 97dadd1ac03a4526b736623b97f34d086b95b4b6
Moved com codecs to datatypes. Removed support for debug codecs.
--- a/vunit/vhdl/data_types/src/string_ptr_pkg-body-200x.vhd
+++ b/vunit/vhdl/data_types/src/string_ptr_pkg-body-200x.vhd
@@ -176,4 +179,23 @@ package body string_ptr_pkg is
     return string_ptr_storage.to_string(ptr);
   end;
 
+  function encode(data : string_ptr_t) return string is
+  begin
+    return encode(data.index);
+  end;
+
+  function decode(code : string) return string_ptr_t is
+    variable ret_val : string_ptr_t;
+    variable index : positive := code'left;
+  begin
+    decode(code, index, ret_val);
+
+    return ret_val;
+  end;
+
+  procedure decode (constant code : string; variable index : inout positive; variable result : out string_ptr_t) is
+  begin
+    decode(code, index, result.index);
+  end;
+
 end package body;
ParseResult:
INS HdlFunctionDef@@encode to objs
HdlFunctionDef: encode
    HdlValueId: string
    list: params
        HdlIdDef: data
            HdlValueId: string_ptr_t
            HdlDirection: IN
    list: body
        HdlStmReturn: {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops':}]} 
            HdlOp: INDEX
                list: ops
                    HdlValueId: encode
                    HdlOp: DOT
                        list: ops
                            HdlValueId: data
                            HdlValueId: index

INS HdlFunctionDef@@decode to objs
HdlFunctionDef: decode
    HdlValueId: string_ptr_t
    list: params
        HdlIdDef: code
            HdlValueId: string
            HdlDirection: IN
    list: body
        HdlIdDef: ret_val
            HdlValueId: string_ptr_t
            HdlDirection: INTERNAL
        HdlIdDef: index
            HdlValueId: positive
            HdlOp: APOSTROPHE
                list: ops
                    HdlValueId: code
                    HdlValueId: left
            HdlDirection: INTERNAL
        HdlOp: CALL
            list: ops
                HdlValueId: decode
                HdlValueId: code
                HdlValueId: index
                HdlValueId: ret_val
        HdlStmReturn: ret_val
            HdlValueId: ret_val

INS HdlFunctionDef@@decode to objs
HdlFunctionDef: decode
    list: params
        HdlIdDef: code
            HdlValueId: string
            HdlDirection: INTERNAL
        HdlIdDef: index
            HdlValueId: positive
            HdlDirection: INOUT
        HdlIdDef: result
            HdlValueId: string_ptr_t
            HdlDirection: OUT
    list: body
        HdlOp: CALL
            list: ops
                HdlValueId: decode
                HdlValueId: code
                HdlValueId: index
                HdlOp: DOT
                    list: ops
                        HdlValueId: result
                        HdlValueId: index


CommitId: 1fb8cf07c2dc93562ec0f067d13d6a541bfd5e99
Integrated AXI protocol checker into other AXI VCs. Some lint fixing.
--- a/vunit/vhdl/verification_components/src/axi_stream_monitor.vhd
+++ b/vunit/vhdl/verification_components/src/axi_stream_monitor.vhd
@@ -41,4 +41,18 @@ begin
     publish(net, monitor.p_actor, msg);
   end process;
 
+  axi_stream_protocol_checker_generate : if monitor.p_protocol_checker /= null_axi_stream_protocol_checker generate
+    axi_stream_protocol_checker_inst: entity work.axi_stream_protocol_checker
+      generic map (
+        protocol_checker => monitor.p_protocol_checker)
+      port map (
+        aclk     => aclk,
+        areset_n => open,
+        tvalid   => tvalid,
+        tready   => tready,
+        tdata    => tdata,
+        tlast    => tlast,
+        tid      => open);
+  end generate axi_stream_protocol_checker_generate;
+
 end architecture;
ParseResult:
INS HdlStmIf@@ to objs
HdlStmIf
    HdlOp: NE
        list: ops
            HdlOp: DOT
                list: ops
                    HdlValueId: monitor
                    HdlValueId: p_protocol_checker
            HdlValueId: null_axi_stream_protocol_checker
    HdlCompInst: {'__class__': 'HdlOp',  'fn': 'DOT',  'ops':} -axi_stream_protocol_checker_inst
        list: param_map
            HdlOp: ARROW
                list: ops
                    HdlValueId: protocol_checker
                    HdlOp: DOT
                        list: ops
                            HdlValueId: monitor
                            HdlValueId: p_protocol_checker
        list: port_map
            HdlOp: ARROW
                list: ops
                    HdlValueId: aclk
                    HdlValueId: aclk
            HdlOp: ARROW
                list: ops
                    HdlValueId: areset_n
            HdlOp: ARROW
                list: ops
                    HdlValueId: tvalid
                    HdlValueId: tvalid
            HdlOp: ARROW
                list: ops
                    HdlValueId: tready
                    HdlValueId: tready
            HdlOp: ARROW
                list: ops
                    HdlValueId: tdata
                    HdlValueId: tdata
            HdlOp: ARROW
                list: ops
                    HdlValueId: tlast
                    HdlValueId: tlast
            HdlOp: ARROW
                list: ops
                    HdlValueId: tid
    list: elifs


CommitId: 80da5e72bf1c5ebcae99667df537d6d8f6fe7ae5
Changed check_equal error messages to include both vector and integer representations of the left and right operands when at least one operand is a vector. Made
--- a/vhdl/string_ops/src/string_ops.vhd
+++ b/vhdl/string_ops/src/string_ops.vhd
@@ -82,6 +82,24 @@ package string_ops is
     constant sep       : string;
     constant max_split : integer := -1)
     return lines_t;
+  function to_integer_string (
+    constant value : unsigned)
+    return string;
+  function to_integer_string (
+    constant value : signed)
+    return string;
+  function to_integer_string (
+    constant value : std_logic_vector)
+    return string;
+  function to_nibble_string (
+    constant value : unsigned)
+    return string;
+  function to_nibble_string (
+    constant value : std_logic_vector)
+    return string;
+  function to_nibble_string (
+    constant value : signed)
+    return string;
 end package;
 
 package body string_ops is

ParseResult:
INS HdlFunctionDef@@to_integer_string to objs
HdlFunctionDef: to_integer_string
    HdlValueId: string
    list: params
        HdlIdDef: value
            HdlValueId: unsigned
            HdlDirection: INTERNAL
    list: body

INS HdlFunctionDef@@to_integer_string to objs
HdlFunctionDef: to_integer_string
    HdlValueId: string
    list: params
        HdlIdDef: value
            HdlValueId: signed
            HdlDirection: INTERNAL
    list: body

INS HdlFunctionDef@@to_integer_string to objs
HdlFunctionDef: to_integer_string
    HdlValueId: string
    list: params
        HdlIdDef: value
            HdlValueId: std_logic_vector
            HdlDirection: INTERNAL
    list: body

INS HdlFunctionDef@@to_nibble_string to objs
HdlFunctionDef: to_nibble_string
    HdlValueId: string
    list: params
        HdlIdDef: value
            HdlValueId: unsigned
            HdlDirection: INTERNAL
    list: body

INS HdlFunctionDef@@to_nibble_string to objs
HdlFunctionDef: to_nibble_string
    HdlValueId: string
    list: params
        HdlIdDef: value
            HdlValueId: std_logic_vector
            HdlDirection: INTERNAL
    list: body

INS HdlFunctionDef@@to_nibble_string to objs
HdlFunctionDef: to_nibble_string
    HdlValueId: string
    list: params
        HdlIdDef: value
            HdlValueId: signed
            HdlDirection: INTERNAL
    list: body


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -38,10 +38,10 @@ package body check_pkg is
 
     function replace_result_tag (msg, check_result : string) return string is
     begin
-      if msg'length < check_result_tag_c'length then
+      if msg'length < check_result_tag'length then
         return msg;
-      elsif msg(1 to check_result_tag_c'length) = check_result_tag_c then
-        return check_result & msg(check_result_tag_c'length + 1 to msg'right);
+      elsif msg(1 to check_result_tag'length) = check_result_tag then
+        return check_result & msg(check_result_tag'length + 1 to msg'right);
       else
         return msg;
       end if;

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@LT to LT
        UPD HdlOp@@APOSTROPHE to APOSTROPHE
            UPD HdlValueId@@check_result_tag_c to check_result_tag
    UPD HdlOp@@EQ to EQ
        UPD HdlValueId@@check_result_tag_c to check_result_tag
        UPD HdlOp@@INDEX to INDEX
            UPD HdlOp@@TO to TO
                UPD HdlOp@@APOSTROPHE to APOSTROPHE
                    UPD HdlValueId@@check_result_tag_c to check_result_tag

UPD HdlStmReturn@@{'__class__': 'HdlOp',  'fn': 'CONCAT',  'ops': ['check_result',          {'__class__': 'HdlOp',           'fn': 'INDEX',           'ops': ['msg',                   {'__class__': 'HdlOp',                    'fn': 'TO',                    'ops': [{'__class__': 'HdlOp',                             'fn': 'ADD',                             'ops': [{'__class__': 'HdlOp',                                      'fn': 'APOSTROPHE',                                      'ops': ['check_result_tag_c', 'length']},                                     1]},                            {'__class__': 'HdlOp',                             'fn': 'APOSTROPHE',                             'ops': ['msg', 'right']}]}]}]}  to {'__class__': 'HdlOp',  'fn': 'CONCAT',  'ops': ['check_result',          {'__class__': 'HdlOp',           'fn': 'INDEX',           'ops': ['msg',                   {'__class__': 'HdlOp',                    'fn': 'TO',                    'ops': [{'__class__': 'HdlOp',                             'fn': 'ADD',                             'ops': [{'__class__': 'HdlOp',                                      'fn': 'APOSTROPHE',                                      'ops': ['check_result_tag', 'length']},                                     1]},                            {'__class__': 'HdlOp',                             'fn': 'APOSTROPHE',                             'ops': ['msg', 'right']}]}]}]} 

UPD HdlStmReturn@@{'__class__': 'HdlOp',  'fn': 'CONCAT',  'ops': ['check_result',          {'__class__': 'HdlOp',           'fn': 'INDEX',           'ops': ['msg',                   {'__class__': 'HdlOp',                    'fn': 'TO',                    'ops': [{'__class__': 'HdlOp',                             'fn': 'ADD',                             'ops': [{'__class__': 'HdlOp',                                      'fn': 'APOSTROPHE',                                      'ops': ['check_result_tag_c', 'length']},                                     1]},                            {'__class__': 'HdlOp',                             'fn': 'APOSTROPHE',                             'ops': ['msg', 'right']}]}]}]}  to {'__class__': 'HdlOp',  'fn': 'CONCAT',  'ops': ['check_result',          {'__class__': 'HdlOp',           'fn': 'INDEX',           'ops': ['msg',                   {'__class__': 'HdlOp',                    'fn': 'TO',                    'ops': [{'__class__': 'HdlOp',                             'fn': 'ADD',                             'ops': [{'__class__': 'HdlOp',                                      'fn': 'APOSTROPHE',                                      'ops': ['check_result_tag_c', 'length']},                                     1]},                            {'__class__': 'HdlOp',                             'fn': 'APOSTROPHE',                             'ops': ['msg', 'right']}]}]}]} 
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlOp@@INDEX to INDEX
            UPD HdlOp@@TO to TO
                UPD HdlOp@@ADD to ADD
                    UPD HdlOp@@APOSTROPHE to APOSTROPHE
                        UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -123,12 +123,12 @@ package body check_pkg is
   function result (msg : string := "") return string is
   begin
     if msg = "" then
-      return check_result_tag_c;
+      return check_result_tag;
     elsif msg(msg'left) = '.' or msg(msg'left) = ',' or msg(msg'left) = ':' or
       msg(msg'left) = ';' or msg(msg'left) = '?' or msg(msg'left) = '!' then
-      return check_result_tag_c & msg;
+      return check_result_tag & msg;
     else
-      return check_result_tag_c & " " & msg;
+      return check_result_tag & " " & msg;
     end if;
   end;
 

ParseResult:
UPD HdlStmReturn@@check_result_tag_c to check_result_tag

UPD HdlStmReturn@@{'__class__': 'HdlOp',  'fn': 'CONCAT',  'ops': [{'__class__': 'HdlOp',           'fn': 'CONCAT',           'ops': ['check_result_tag_c', {'__class__': 'str', 'val': ' '}]},          'msg']}  to {'__class__': 'HdlOp',  'fn': 'CONCAT',  'ops': [{'__class__': 'HdlOp',           'fn': 'CONCAT',           'ops': ['check_result_tag', {'__class__': 'str', 'val': ' '}]},          'msg']} 

UPD HdlStmReturn@@check_result_tag_c to check_result_tag_c
    UPD HdlValueId@@check_result_tag_c to check_result_tag

UPD HdlStmReturn@@{'__class__': 'HdlOp', 'fn': 'CONCAT', 'ops': ['check_result_tag_c', 'msg']}  to {'__class__': 'HdlOp', 'fn': 'CONCAT', 'ops': ['check_result_tag', 'msg']} 

UPD HdlStmReturn@@{'__class__': 'HdlOp', 'fn': 'CONCAT', 'ops': ['check_result_tag_c', 'msg']}  to {'__class__': 'HdlOp', 'fn': 'CONCAT', 'ops': ['check_result_tag_c', 'msg']} 
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag

UPD HdlStmReturn@@{'__class__': 'HdlOp',  'fn': 'CONCAT',  'ops': [{'__class__': 'HdlOp',           'fn': 'CONCAT',           'ops': ['check_result_tag_c', {'__class__': 'str', 'val': ' '}]},          'msg']}  to {'__class__': 'HdlOp',  'fn': 'CONCAT',  'ops': [{'__class__': 'HdlOp',           'fn': 'CONCAT',           'ops': ['check_result_tag_c', {'__class__': 'str', 'val': ' '}]},          'msg']} 
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlOp@@CONCAT to CONCAT
            UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -160,7 +160,7 @@ package body check_pkg is
     signal clock               : in std_logic;
     signal en                  : in std_logic;
     signal expr                : in std_logic;
-    constant msg               : in string      := check_result_tag_c & ".";
+    constant msg               : in string      := check_result_tag & ".";
     constant level             : in log_level_t := null_log_level;
     constant active_clock_edge : in edge_t      := rising_edge;
     constant line_num          : in natural     := 0;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -176,7 +176,7 @@ package body check_pkg is
     constant checker   : in  checker_t;
     variable pass      : out boolean;
     constant expr      : in  boolean;
-    constant msg       : in  string      := check_result_tag_c & ".";
+    constant msg       : in  string      := check_result_tag & ".";
     constant level     : in  log_level_t := null_log_level;
     constant line_num  : in  natural     := 0;
     constant file_name : in  string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -199,7 +199,7 @@ package body check_pkg is
   procedure check(
     constant checker   : in checker_t;
     constant expr      : in boolean;
-    constant msg       : in string      := check_result_tag_c & ".";
+    constant msg       : in string      := check_result_tag & ".";
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -212,7 +212,7 @@ package body check_pkg is
 
   procedure check(
     constant expr      : in boolean;
-    constant msg       : in string      := check_result_tag_c & ".";
+    constant msg       : in string      := check_result_tag & ".";
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -226,7 +226,7 @@ package body check_pkg is
   procedure check(
     variable pass      : out boolean;
     constant expr      : in  boolean;
-    constant msg       : in  string      := check_result_tag_c & ".";
+    constant msg       : in  string      := check_result_tag & ".";
     constant level     : in  log_level_t := null_log_level;
     constant line_num  : in  natural     := 0;
     constant file_name : in  string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -238,7 +238,7 @@ package body check_pkg is
 
   impure function check(
     constant expr      : in boolean;
-    constant msg       : in string      := check_result_tag_c & ".";
+    constant msg       : in string      := check_result_tag & ".";
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -255,7 +255,7 @@ package body check_pkg is
     signal clock               : in std_logic;
     signal en                  : in std_logic;
     signal expr                : in std_logic;
-    constant msg               : in string      := check_result_tag_c & ".";
+    constant msg               : in string      := check_result_tag & ".";
     constant level             : in log_level_t := null_log_level;
     constant active_clock_edge : in edge_t      := rising_edge;
     constant line_num          : in natural     := 0;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -269,7 +269,7 @@ package body check_pkg is
   impure function check(
     constant checker   : in checker_t;
     constant expr      : in boolean;
-    constant msg       : in string      := check_result_tag_c & ".";
+    constant msg       : in string      := check_result_tag & ".";
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -286,7 +286,7 @@ package body check_pkg is
   -----------------------------------------------------------------------------
   procedure check_passed(
     constant checker   : in checker_t;
-    constant msg       : in string  := check_result_tag_c & ".";
+    constant msg       : in string  := check_result_tag & ".";
     constant line_num  : in natural := 0;
     constant file_name : in string  := "") is
   begin

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -300,7 +300,7 @@ package body check_pkg is
   end;
 
   procedure check_passed(
-    constant msg       : in string  := check_result_tag_c & ".";
+    constant msg       : in string  := check_result_tag & ".";
     constant line_num  : in natural := 0;
     constant file_name : in string  := "") is
   begin

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -314,7 +314,7 @@ package body check_pkg is
   -----------------------------------------------------------------------------
   procedure check_failed(
     constant checker   : in checker_t;
-    constant msg       : in string      := check_result_tag_c & ".";
+    constant msg       : in string      := check_result_tag & ".";
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -325,7 +325,7 @@ package body check_pkg is
   end;
 
   procedure check_failed(
-    constant msg       : in string      := check_result_tag_c & ".";
+    constant msg       : in string      := check_result_tag & ".";
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -343,7 +343,7 @@ package body check_pkg is
     signal clock               : in std_logic;
     signal en                  : in std_logic;
     signal expr                : in std_logic;
-    constant msg               : in string      := check_result_tag_c & ".";
+    constant msg               : in string      := check_result_tag & ".";
     constant level             : in log_level_t := null_log_level;
     constant active_clock_edge : in edge_t      := rising_edge;
     constant line_num          : in natural     := 0;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -359,7 +359,7 @@ package body check_pkg is
     constant checker   : in  checker_t;
     variable pass      : out boolean;
     constant expr      : in  boolean;
-    constant msg       : in  string      := check_result_tag_c & ".";
+    constant msg       : in  string      := check_result_tag & ".";
     constant level     : in  log_level_t := null_log_level;
     constant line_num  : in  natural     := 0;
     constant file_name : in  string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -382,7 +382,7 @@ package body check_pkg is
   procedure check_true(
     constant checker   : in checker_t;
     constant expr      : in boolean;
-    constant msg       : in string      := check_result_tag_c & ".";
+    constant msg       : in string      := check_result_tag & ".";
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -395,7 +395,7 @@ package body check_pkg is
 
   procedure check_true(
     constant expr      : in boolean;
-    constant msg       : in string      := check_result_tag_c & ".";
+    constant msg       : in string      := check_result_tag & ".";
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -409,7 +409,7 @@ package body check_pkg is
   procedure check_true(
     variable pass      : out boolean;
     constant expr      : in  boolean;
-    constant msg       : in  string      := check_result_tag_c & ".";
+    constant msg       : in  string      := check_result_tag & ".";
     constant level     : in  log_level_t := null_log_level;
     constant line_num  : in  natural     := 0;
     constant file_name : in  string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -421,7 +421,7 @@ package body check_pkg is
 
   impure function check_true(
     constant expr      : in boolean;
-    constant msg       : in string      := check_result_tag_c & ".";
+    constant msg       : in string      := check_result_tag & ".";
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -438,7 +438,7 @@ package body check_pkg is
     signal clock               : in std_logic;
     signal en                  : in std_logic;
     signal expr                : in std_logic;
-    constant msg               : in string      := check_result_tag_c & ".";
+    constant msg               : in string      := check_result_tag & ".";
     constant level             : in log_level_t := null_log_level;
     constant active_clock_edge : in edge_t      := rising_edge;
     constant line_num          : in natural     := 0;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -452,7 +452,7 @@ package body check_pkg is
   impure function check_true(
     constant checker   : in checker_t;
     constant expr      : in boolean;
-    constant msg       : in string      := check_result_tag_c & ".";
+    constant msg       : in string      := check_result_tag & ".";
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -472,7 +472,7 @@ package body check_pkg is
     signal clock               : in std_logic;
     signal en                  : in std_logic;
     signal expr                : in std_logic;
-    constant msg               : in string      := check_result_tag_c & ".";
+    constant msg               : in string      := check_result_tag & ".";
     constant level             : in log_level_t := null_log_level;
     constant active_clock_edge : in edge_t      := rising_edge;
     constant line_num          : in natural     := 0;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -488,7 +488,7 @@ package body check_pkg is
     constant checker   : in  checker_t;
     variable pass      : out boolean;
     constant expr      : in  boolean;
-    constant msg       : in  string      := check_result_tag_c & ".";
+    constant msg       : in  string      := check_result_tag & ".";
     constant level     : in  log_level_t := null_log_level;
     constant line_num  : in  natural     := 0;
     constant file_name : in  string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -511,7 +511,7 @@ package body check_pkg is
   procedure check_false(
     constant checker   : in checker_t;
     constant expr      : in boolean;
-    constant msg       : in string      := check_result_tag_c & ".";
+    constant msg       : in string      := check_result_tag & ".";
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -524,7 +524,7 @@ package body check_pkg is
 
   procedure check_false(
     constant expr      : in boolean;
-    constant msg       : in string      := check_result_tag_c & ".";
+    constant msg       : in string      := check_result_tag & ".";
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -538,7 +538,7 @@ package body check_pkg is
   procedure check_false(
     variable pass      : out boolean;
     constant expr      : in  boolean;
-    constant msg       : in  string      := check_result_tag_c & ".";
+    constant msg       : in  string      := check_result_tag & ".";
     constant level     : in  log_level_t := null_log_level;
     constant line_num  : in  natural     := 0;
     constant file_name : in  string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -550,7 +550,7 @@ package body check_pkg is
 
   impure function check_false(
     constant expr      : in boolean;
-    constant msg       : in string      := check_result_tag_c & ".";
+    constant msg       : in string      := check_result_tag & ".";
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -567,7 +567,7 @@ package body check_pkg is
     signal clock               : in std_logic;
     signal en                  : in std_logic;
     signal expr                : in std_logic;
-    constant msg               : in string      := check_result_tag_c & ".";
+    constant msg               : in string      := check_result_tag & ".";
     constant level             : in log_level_t := null_log_level;
     constant active_clock_edge : in edge_t      := rising_edge;
     constant line_num          : in natural     := 0;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -581,7 +581,7 @@ package body check_pkg is
   impure function check_false(
     constant checker   : in checker_t;
     constant expr      : in boolean;
-    constant msg       : in string      := check_result_tag_c & ".";
+    constant msg       : in string      := check_result_tag & ".";
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -603,7 +603,7 @@ package body check_pkg is
     signal en                  : in std_logic;
     signal antecedent_expr     : in std_logic;
     signal consequent_expr     : in std_logic;
-    constant msg               : in string      := check_result_tag_c & ".";
+    constant msg               : in string      := check_result_tag & ".";
     constant level             : in log_level_t := null_log_level;
     constant active_clock_edge : in edge_t      := rising_edge;
     constant line_num          : in natural     := 0;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -622,7 +622,7 @@ package body check_pkg is
     variable pass            : out boolean;
     constant antecedent_expr : in  boolean;
     constant consequent_expr : in  boolean;
-    constant msg             : in  string      := check_result_tag_c & ".";
+    constant msg             : in  string      := check_result_tag & ".";
     constant level           : in  log_level_t := null_log_level;
     constant line_num        : in  natural     := 0;
     constant file_name       : in  string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -652,7 +652,7 @@ package body check_pkg is
     signal en                  : in std_logic;
     signal antecedent_expr     : in std_logic;
     signal consequent_expr     : in std_logic;
-    constant msg               : in string      := check_result_tag_c & ".";
+    constant msg               : in string      := check_result_tag & ".";
     constant level             : in log_level_t := null_log_level;
     constant active_clock_edge : in edge_t      := rising_edge;
     constant line_num          : in natural     := 0;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -667,7 +667,7 @@ package body check_pkg is
     constant checker         : in checker_t;
     constant antecedent_expr : in boolean;
     constant consequent_expr : in boolean;
-    constant msg             : in string      := check_result_tag_c & ".";
+    constant msg             : in string      := check_result_tag & ".";
     constant level           : in log_level_t := null_log_level;
     constant line_num        : in natural     := 0;
     constant file_name       : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -681,7 +681,7 @@ package body check_pkg is
   procedure check_implication(
     constant antecedent_expr : in boolean;
     constant consequent_expr : in boolean;
-    constant msg             : in string      := check_result_tag_c & ".";
+    constant msg             : in string      := check_result_tag & ".";
     constant level           : in log_level_t := null_log_level;
     constant line_num        : in natural     := 0;
     constant file_name       : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -696,7 +696,7 @@ package body check_pkg is
     variable pass            : out boolean;
     constant antecedent_expr : in  boolean;
     constant consequent_expr : in  boolean;
-    constant msg             : in  string      := check_result_tag_c & ".";
+    constant msg             : in  string      := check_result_tag & ".";
     constant level           : in  log_level_t := null_log_level;
     constant line_num        : in  natural     := 0;
     constant file_name       : in  string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -709,7 +709,7 @@ package body check_pkg is
   impure function check_implication(
     constant antecedent_expr : in boolean;
     constant consequent_expr : in boolean;
-    constant msg             : in string      := check_result_tag_c & ".";
+    constant msg             : in string      := check_result_tag & ".";
     constant level           : in log_level_t := null_log_level;
     constant line_num        : in natural     := 0;
     constant file_name       : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -726,7 +726,7 @@ package body check_pkg is
     constant checker         : in checker_t;
     constant antecedent_expr : in boolean;
     constant consequent_expr : in boolean;
-    constant msg             : in string      := check_result_tag_c & ".";
+    constant msg             : in string      := check_result_tag & ".";
     constant level           : in log_level_t := null_log_level;
     constant line_num        : in natural     := 0;
     constant file_name       : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -882,7 +882,7 @@ package body check_pkg is
     signal start_event         : in std_logic;
     signal end_event           : in std_logic;
     signal expr                : in std_logic_vector;
-    constant msg               : in string      := check_result_tag_c;
+    constant msg               : in string      := check_result_tag;
     constant level             : in log_level_t := null_log_level;
     constant active_clock_edge : in edge_t      := rising_edge;
     constant allow_restart     : in boolean     := false;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -913,7 +913,7 @@ package body check_pkg is
     signal start_event         : in std_logic;
     signal end_event           : in std_logic;
     signal expr                : in std_logic_vector;
-    constant msg               : in string      := check_result_tag_c;
+    constant msg               : in string      := check_result_tag;
     constant level             : in log_level_t := null_log_level;
     constant active_clock_edge : in edge_t      := rising_edge;
     constant allow_restart     : in boolean     := false;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -933,7 +933,7 @@ package body check_pkg is
     signal start_event         : in std_logic;
     signal end_event           : in std_logic;
     signal expr                : in std_logic;
-    constant msg               : in string      := check_result_tag_c;
+    constant msg               : in string      := check_result_tag;
     constant level             : in log_level_t := null_log_level;
     constant active_clock_edge : in edge_t      := rising_edge;
     constant allow_restart     : in boolean     := false;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -964,7 +964,7 @@ package body check_pkg is
     signal start_event         : in std_logic;
     signal end_event           : in std_logic;
     signal expr                : in std_logic;
-    constant msg               : in string      := check_result_tag_c;
+    constant msg               : in string      := check_result_tag;
     constant level             : in log_level_t := null_log_level;
     constant active_clock_edge : in edge_t      := rising_edge;
     constant allow_restart     : in boolean     := false;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -985,7 +985,7 @@ package body check_pkg is
     signal clock               : in std_logic;
     signal en                  : in std_logic;
     signal expr                : in std_logic_vector;
-    constant msg               : in string      := check_result_tag_c;
+    constant msg               : in string      := check_result_tag;
     constant level             : in log_level_t := null_log_level;
     constant active_clock_edge : in edge_t      := rising_edge;
     constant line_num          : in natural     := 0;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -1002,7 +1002,7 @@ package body check_pkg is
     constant checker   : in  checker_t;
     variable pass      : out boolean;
     constant expr      : in  std_logic_vector;
-    constant msg       : in  string      := check_result_tag_c;
+    constant msg       : in  string      := check_result_tag;
     constant level     : in  log_level_t := null_log_level;
     constant line_num  : in  natural     := 0;
     constant file_name : in  string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -1034,7 +1034,7 @@ package body check_pkg is
     signal clock               : in std_logic;
     signal en                  : in std_logic;
     signal expr                : in std_logic_vector;
-    constant msg               : in string      := check_result_tag_c;
+    constant msg               : in string      := check_result_tag;
     constant level             : in log_level_t := null_log_level;
     constant active_clock_edge : in edge_t      := rising_edge;
     constant line_num          : in natural     := 0;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -1048,7 +1048,7 @@ package body check_pkg is
   procedure check_not_unknown(
     constant checker   : in checker_t;
     constant expr      : in std_logic_vector;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -1061,7 +1061,7 @@ package body check_pkg is
 
   procedure check_not_unknown(
     constant expr      : in std_logic_vector;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -1075,7 +1075,7 @@ package body check_pkg is
   procedure check_not_unknown(
     variable pass      : out boolean;
     constant expr      : in  std_logic_vector;
-    constant msg       : in  string      := check_result_tag_c;
+    constant msg       : in  string      := check_result_tag;
     constant level     : in  log_level_t := null_log_level;
     constant line_num  : in  natural     := 0;
     constant file_name : in  string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -1087,7 +1087,7 @@ package body check_pkg is
 
   impure function check_not_unknown(
     constant expr      : in std_logic_vector;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -1103,7 +1103,7 @@ package body check_pkg is
   impure function check_not_unknown(
     constant checker   : in checker_t;
     constant expr      : in std_logic_vector;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -1121,7 +1121,7 @@ package body check_pkg is
     signal clock               : in std_logic;
     signal en                  : in std_logic;
     signal expr                : in std_logic;
-    constant msg               : in string      := check_result_tag_c;
+    constant msg               : in string      := check_result_tag;
     constant level             : in log_level_t := null_log_level;
     constant active_clock_edge : in edge_t      := rising_edge;
     constant line_num          : in natural     := 0;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -1138,7 +1138,7 @@ package body check_pkg is
     constant checker   : in  checker_t;
     variable pass      : out boolean;
     constant expr      : in  std_logic;
-    constant msg       : in  string      := check_result_tag_c;
+    constant msg       : in  string      := check_result_tag;
     constant level     : in  log_level_t := null_log_level;
     constant line_num  : in  natural     := 0;
     constant file_name : in  string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -1170,7 +1170,7 @@ package body check_pkg is
     signal clock               : in std_logic;
     signal en                  : in std_logic;
     signal expr                : in std_logic;
-    constant msg               : in string      := check_result_tag_c;
+    constant msg               : in string      := check_result_tag;
     constant level             : in log_level_t := null_log_level;
     constant active_clock_edge : in edge_t      := rising_edge;
     constant line_num          : in natural     := 0;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -1184,7 +1184,7 @@ package body check_pkg is
   procedure check_not_unknown(
     constant checker   : in checker_t;
     constant expr      : in std_logic;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -1197,7 +1197,7 @@ package body check_pkg is
 
   procedure check_not_unknown(
     constant expr      : in std_logic;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -1211,7 +1211,7 @@ package body check_pkg is
   procedure check_not_unknown(
     variable pass      : out boolean;
     constant expr      : in  std_logic;
-    constant msg       : in  string      := check_result_tag_c;
+    constant msg       : in  string      := check_result_tag;
     constant level     : in  log_level_t := null_log_level;
     constant line_num  : in  natural     := 0;
     constant file_name : in  string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -1223,7 +1223,7 @@ package body check_pkg is
 
   impure function check_not_unknown(
     constant expr      : in std_logic;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -1239,7 +1239,7 @@ package body check_pkg is
   impure function check_not_unknown(
     constant checker   : in checker_t;
     constant expr      : in std_logic;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -1279,7 +1279,7 @@ package body check_pkg is
     signal clock               : in std_logic;
     signal en                  : in std_logic;
     signal expr                : in std_logic_vector;
-    constant msg               : in string      := check_result_tag_c;
+    constant msg               : in string      := check_result_tag;
     constant level             : in log_level_t := null_log_level;
     constant active_clock_edge : in edge_t      := rising_edge;
     constant line_num          : in natural     := 0;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -1296,7 +1296,7 @@ package body check_pkg is
     constant checker   : in  checker_t;
     variable pass      : out boolean;
     constant expr      : in  std_logic_vector;
-    constant msg       : in  string      := check_result_tag_c;
+    constant msg       : in  string      := check_result_tag;
     constant level     : in  log_level_t := null_log_level;
     constant line_num  : in  natural     := 0;
     constant file_name : in  string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -1326,7 +1326,7 @@ package body check_pkg is
     signal clock               : in std_logic;
     signal en                  : in std_logic;
     signal expr                : in std_logic_vector;
-    constant msg               : in string      := check_result_tag_c;
+    constant msg               : in string      := check_result_tag;
     constant level             : in log_level_t := null_log_level;
     constant active_clock_edge : in edge_t      := rising_edge;
     constant line_num          : in natural     := 0;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -1340,7 +1340,7 @@ package body check_pkg is
   procedure check_zero_one_hot(
     variable pass      : out boolean;
     constant expr      : in  std_logic_vector;
-    constant msg       : in  string      := check_result_tag_c;
+    constant msg       : in  string      := check_result_tag;
     constant level     : in  log_level_t := null_log_level;
     constant line_num  : in  natural     := 0;
     constant file_name : in  string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -1352,7 +1352,7 @@ package body check_pkg is
 
   impure function check_zero_one_hot(
     constant expr      : in std_logic_vector;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -1368,7 +1368,7 @@ package body check_pkg is
   procedure check_zero_one_hot(
     constant checker   : in checker_t;
     constant expr      : in std_logic_vector;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -1381,7 +1381,7 @@ package body check_pkg is
 
   procedure check_zero_one_hot(
     constant expr      : in std_logic_vector;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -1395,7 +1395,7 @@ package body check_pkg is
   impure function check_zero_one_hot(
     constant checker   : in checker_t;
     constant expr      : in std_logic_vector;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -1416,7 +1416,7 @@ package body check_pkg is
     signal clock               : in std_logic;
     signal en                  : in std_logic;
     signal expr                : in std_logic_vector;
-    constant msg               : in string      := check_result_tag_c;
+    constant msg               : in string      := check_result_tag;
     constant level             : in log_level_t := null_log_level;
     constant active_clock_edge : in edge_t      := rising_edge;
     constant line_num          : in natural     := 0;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -1433,7 +1433,7 @@ package body check_pkg is
     constant checker   : in  checker_t;
     variable pass      : out boolean;
     constant expr      : in  std_logic_vector;
-    constant msg       : in  string      := check_result_tag_c;
+    constant msg       : in  string      := check_result_tag;
     constant level     : in  log_level_t := null_log_level;
     constant line_num  : in  natural     := 0;
     constant file_name : in  string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -1463,7 +1463,7 @@ package body check_pkg is
     signal clock               : in std_logic;
     signal en                  : in std_logic;
     signal expr                : in std_logic_vector;
-    constant msg               : in string      := check_result_tag_c;
+    constant msg               : in string      := check_result_tag;
     constant level             : in log_level_t := null_log_level;
     constant active_clock_edge : in edge_t      := rising_edge;
     constant line_num          : in natural     := 0;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -1477,7 +1477,7 @@ package body check_pkg is
   procedure check_one_hot(
     variable pass      : out boolean;
     constant expr      : in  std_logic_vector;
-    constant msg       : in  string      := check_result_tag_c;
+    constant msg       : in  string      := check_result_tag;
     constant level     : in  log_level_t := null_log_level;
     constant line_num  : in  natural     := 0;
     constant file_name : in  string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -1489,7 +1489,7 @@ package body check_pkg is
 
   impure function check_one_hot(
     constant expr      : in std_logic_vector;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -1505,7 +1505,7 @@ package body check_pkg is
   procedure check_one_hot(
     constant checker   : in checker_t;
     constant expr      : in std_logic_vector;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -1518,7 +1518,7 @@ package body check_pkg is
 
   procedure check_one_hot(
     constant expr      : in std_logic_vector;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -1532,7 +1532,7 @@ package body check_pkg is
   impure function check_one_hot(
     constant checker   : in checker_t;
     constant expr      : in std_logic_vector;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -1554,7 +1554,7 @@ package body check_pkg is
     signal en                    : in std_logic;
     signal start_event           : in std_logic;
     signal expr                  : in std_logic;
-    constant msg                 : in string      := check_result_tag_c;
+    constant msg                 : in string      := check_result_tag;
     constant num_cks             : in natural     := 1;
     constant allow_overlapping   : in boolean     := true;
     constant allow_missing_start : in boolean     := true;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -1659,7 +1659,7 @@ package body check_pkg is
     signal en                    : in std_logic;
     signal start_event           : in std_logic;
     signal expr                  : in std_logic;
-    constant msg                 : in string      := check_result_tag_c;
+    constant msg                 : in string      := check_result_tag;
     constant num_cks             : in natural     := 1;
     constant allow_overlapping   : in boolean     := true;
     constant allow_missing_start : in boolean     := true;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -1682,7 +1682,7 @@ package body check_pkg is
     signal clock               : in std_logic;
     signal en                  : in std_logic;
     signal event_sequence      : in std_logic_vector;
-    constant msg               : in string          := check_result_tag_c;
+    constant msg               : in string          := check_result_tag;
     constant trigger_event     : in trigger_event_t := penultimate;
     constant level             : in log_level_t     := null_log_level;
     constant active_clock_edge : in edge_t          := rising_edge;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -1802,7 +1802,7 @@ package body check_pkg is
     signal clock               : in std_logic;
     signal en                  : in std_logic;
     signal event_sequence      : in std_logic_vector;
-    constant msg               : in string          := check_result_tag_c;
+    constant msg               : in string          := check_result_tag;
     constant trigger_event     : in trigger_event_t := penultimate;
     constant level             : in log_level_t     := null_log_level;
     constant active_clock_edge : in edge_t          := rising_edge;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -1821,7 +1821,7 @@ package body check_pkg is
   procedure check_relation(
     constant checker     : in checker_t;
     constant expr        : in boolean;
-    constant msg         : in string      := check_result_tag_c;
+    constant msg         : in string      := check_result_tag;
     constant level       : in log_level_t := null_log_level;
     constant context_msg : in string      := "";
     constant line_num    : in natural     := 0;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -1837,7 +1837,7 @@ package body check_pkg is
     constant checker     : in  checker_t;
     variable pass        : out boolean;
     constant expr        : in  boolean;
-    constant msg         : in  string      := check_result_tag_c;
+    constant msg         : in  string      := check_result_tag;
     constant level       : in  log_level_t := null_log_level;
     constant context_msg : in  string      := "";
     constant line_num    : in  natural     := 0;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -1860,7 +1860,7 @@ package body check_pkg is
 
   procedure check_relation(
     constant expr        : in boolean;
-    constant msg         : in string      := check_result_tag_c;
+    constant msg         : in string      := check_result_tag;
     constant level       : in log_level_t := null_log_level;
     constant context_msg : in string      := "";
     constant line_num    : in natural     := 0;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -1875,7 +1875,7 @@ package body check_pkg is
   procedure check_relation(
     variable pass        : out boolean;
     constant expr        : in  boolean;
-    constant msg         : in  string      := check_result_tag_c;
+    constant msg         : in  string      := check_result_tag;
     constant level       : in  log_level_t := null_log_level;
     constant context_msg : in  string      := "";
     constant line_num    : in  natural     := 0;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -1888,7 +1888,7 @@ package body check_pkg is
 
   impure function check_relation(
     constant expr        : in boolean;
-    constant msg         : in string      := check_result_tag_c;
+    constant msg         : in string      := check_result_tag;
     constant level       : in log_level_t := null_log_level;
     constant context_msg : in string      := "";
     constant line_num    : in natural     := 0;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -1905,7 +1905,7 @@ package body check_pkg is
   impure function check_relation(
     constant checker     : in checker_t;
     constant expr        : in boolean;
-    constant msg         : in string      := check_result_tag_c;
+    constant msg         : in string      := check_result_tag;
     constant level       : in log_level_t := null_log_level;
     constant context_msg : in string      := "";
     constant line_num    : in natural     := 0;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -1922,7 +1922,7 @@ package body check_pkg is
   procedure check_relation(
     constant checker     : in checker_t;
     constant expr        : in std_ulogic;
-    constant msg         : in string      := check_result_tag_c;
+    constant msg         : in string      := check_result_tag;
     constant level       : in log_level_t := null_log_level;
     constant context_msg : in string      := "";
     constant line_num    : in natural     := 0;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -1938,7 +1938,7 @@ package body check_pkg is
     constant checker     : in  checker_t;
     variable pass        : out boolean;
     constant expr        : in  std_ulogic;
-    constant msg         : in  string      := check_result_tag_c;
+    constant msg         : in  string      := check_result_tag;
     constant level       : in  log_level_t := null_log_level;
     constant context_msg : in  string      := "";
     constant line_num    : in  natural     := 0;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -1951,7 +1951,7 @@ package body check_pkg is
 
   procedure check_relation(
     constant expr        : in std_ulogic;
-    constant msg         : in string      := check_result_tag_c;
+    constant msg         : in string      := check_result_tag;
     constant level       : in log_level_t := null_log_level;
     constant context_msg : in string      := "";
     constant line_num    : in natural     := 0;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -1966,7 +1966,7 @@ package body check_pkg is
   procedure check_relation(
     variable pass        : out boolean;
     constant expr        : in  std_ulogic;
-    constant msg         : in  string      := check_result_tag_c;
+    constant msg         : in  string      := check_result_tag;
     constant level       : in  log_level_t := null_log_level;
     constant context_msg : in  string      := "";
     constant line_num    : in  natural     := 0;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -1979,7 +1979,7 @@ package body check_pkg is
 
   impure function check_relation(
     constant expr        : in std_ulogic;
-    constant msg         : in string      := check_result_tag_c;
+    constant msg         : in string      := check_result_tag;
     constant level       : in log_level_t := null_log_level;
     constant context_msg : in string      := "";
     constant line_num    : in natural     := 0;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -1996,7 +1996,7 @@ package body check_pkg is
   impure function check_relation(
     constant checker     : in checker_t;
     constant expr        : in std_ulogic;
-    constant msg         : in string      := check_result_tag_c;
+    constant msg         : in string      := check_result_tag;
     constant level       : in log_level_t := null_log_level;
     constant context_msg : in string      := "";
     constant line_num    : in natural     := 0;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -2013,7 +2013,7 @@ package body check_pkg is
   procedure check_relation(
     constant checker     : in checker_t;
     constant expr        : in bit;
-    constant msg         : in string      := check_result_tag_c;
+    constant msg         : in string      := check_result_tag;
     constant level       : in log_level_t := null_log_level;
     constant context_msg : in string      := "";
     constant line_num    : in natural     := 0;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -2029,7 +2029,7 @@ package body check_pkg is
     constant checker     : in  checker_t;
     variable pass        : out boolean;
     constant expr        : in  bit;
-    constant msg         : in  string      := check_result_tag_c;
+    constant msg         : in  string      := check_result_tag;
     constant level       : in  log_level_t := null_log_level;
     constant context_msg : in  string      := "";
     constant line_num    : in  natural     := 0;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -2042,7 +2042,7 @@ package body check_pkg is
 
   procedure check_relation(
     constant expr        : in bit;
-    constant msg         : in string      := check_result_tag_c;
+    constant msg         : in string      := check_result_tag;
     constant level       : in log_level_t := null_log_level;
     constant context_msg : in string      := "";
     constant line_num    : in natural     := 0;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -2057,7 +2057,7 @@ package body check_pkg is
   procedure check_relation(
     variable pass        : out boolean;
     constant expr        : in  bit;
-    constant msg         : in  string      := check_result_tag_c;
+    constant msg         : in  string      := check_result_tag;
     constant level       : in  log_level_t := null_log_level;
     constant context_msg : in  string      := "";
     constant line_num    : in  natural     := 0;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -2070,7 +2070,7 @@ package body check_pkg is
 
   impure function check_relation(
     constant expr        : in bit;
-    constant msg         : in string      := check_result_tag_c;
+    constant msg         : in string      := check_result_tag;
     constant level       : in log_level_t := null_log_level;
     constant context_msg : in string      := "";
     constant line_num    : in natural     := 0;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -2087,7 +2087,7 @@ package body check_pkg is
   impure function check_relation(
     constant checker     : in checker_t;
     constant expr        : in bit;
-    constant msg         : in string      := check_result_tag_c;
+    constant msg         : in string      := check_result_tag;
     constant level       : in log_level_t := null_log_level;
     constant context_msg : in string      := "";
     constant line_num    : in natural     := 0;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -2259,7 +2259,7 @@ package body check_pkg is
   procedure check_equal(
     constant got       : in unsigned;
     constant expected  : in unsigned;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -2274,7 +2274,7 @@ package body check_pkg is
     variable pass      : out boolean;
     constant got       : in unsigned;
     constant expected  : in unsigned;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -2289,7 +2289,7 @@ package body check_pkg is
     variable pass      : out boolean;
     constant got       : in unsigned;
     constant expected  : in unsigned;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -2324,7 +2324,7 @@ package body check_pkg is
     constant checker   : in checker_t;
     constant got       : in unsigned;
     constant expected  : in unsigned;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -2338,7 +2338,7 @@ package body check_pkg is
   impure function check_equal(
     constant got       : in unsigned;
     constant expected  : in unsigned;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -2355,7 +2355,7 @@ package body check_pkg is
     constant checker   : in checker_t;
     constant got       : in unsigned;
     constant expected  : in unsigned;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -2371,7 +2371,7 @@ package body check_pkg is
   procedure check_equal(
     constant got       : in unsigned;
     constant expected  : in natural;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -2386,7 +2386,7 @@ package body check_pkg is
     variable pass      : out boolean;
     constant got       : in unsigned;
     constant expected  : in natural;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -2401,7 +2401,7 @@ package body check_pkg is
     variable pass      : out boolean;
     constant got       : in unsigned;
     constant expected  : in natural;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -2436,7 +2436,7 @@ package body check_pkg is
     constant checker   : in checker_t;
     constant got       : in unsigned;
     constant expected  : in natural;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -2450,7 +2450,7 @@ package body check_pkg is
   impure function check_equal(
     constant got       : in unsigned;
     constant expected  : in natural;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -2467,7 +2467,7 @@ package body check_pkg is
     constant checker   : in checker_t;
     constant got       : in unsigned;
     constant expected  : in natural;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -2483,7 +2483,7 @@ package body check_pkg is
   procedure check_equal(
     constant got       : in natural;
     constant expected  : in unsigned;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -2498,7 +2498,7 @@ package body check_pkg is
     variable pass      : out boolean;
     constant got       : in natural;
     constant expected  : in unsigned;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -2513,7 +2513,7 @@ package body check_pkg is
     variable pass      : out boolean;
     constant got       : in natural;
     constant expected  : in unsigned;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -2548,7 +2548,7 @@ package body check_pkg is
     constant checker   : in checker_t;
     constant got       : in natural;
     constant expected  : in unsigned;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -2562,7 +2562,7 @@ package body check_pkg is
   impure function check_equal(
     constant got       : in natural;
     constant expected  : in unsigned;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -2579,7 +2579,7 @@ package body check_pkg is
     constant checker   : in checker_t;
     constant got       : in natural;
     constant expected  : in unsigned;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -2595,7 +2595,7 @@ package body check_pkg is
   procedure check_equal(
     constant got       : in unsigned;
     constant expected  : in std_logic_vector;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -2610,7 +2610,7 @@ package body check_pkg is
     variable pass      : out boolean;
     constant got       : in unsigned;
     constant expected  : in std_logic_vector;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -2625,7 +2625,7 @@ package body check_pkg is
     variable pass      : out boolean;
     constant got       : in unsigned;
     constant expected  : in std_logic_vector;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -2660,7 +2660,7 @@ package body check_pkg is
     constant checker   : in checker_t;
     constant got       : in unsigned;
     constant expected  : in std_logic_vector;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -2674,7 +2674,7 @@ package body check_pkg is
   impure function check_equal(
     constant got       : in unsigned;
     constant expected  : in std_logic_vector;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -2691,7 +2691,7 @@ package body check_pkg is
     constant checker   : in checker_t;
     constant got       : in unsigned;
     constant expected  : in std_logic_vector;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -2707,7 +2707,7 @@ package body check_pkg is
   procedure check_equal(
     constant got       : in std_logic_vector;
     constant expected  : in unsigned;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -2722,7 +2722,7 @@ package body check_pkg is
     variable pass      : out boolean;
     constant got       : in std_logic_vector;
     constant expected  : in unsigned;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -2737,7 +2737,7 @@ package body check_pkg is
     variable pass      : out boolean;
     constant got       : in std_logic_vector;
     constant expected  : in unsigned;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -2772,7 +2772,7 @@ package body check_pkg is
     constant checker   : in checker_t;
     constant got       : in std_logic_vector;
     constant expected  : in unsigned;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -2786,7 +2786,7 @@ package body check_pkg is
   impure function check_equal(
     constant got       : in std_logic_vector;
     constant expected  : in unsigned;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -2803,7 +2803,7 @@ package body check_pkg is
     constant checker   : in checker_t;
     constant got       : in std_logic_vector;
     constant expected  : in unsigned;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -2819,7 +2819,7 @@ package body check_pkg is
   procedure check_equal(
     constant got       : in std_logic_vector;
     constant expected  : in std_logic_vector;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -2834,7 +2834,7 @@ package body check_pkg is
     variable pass      : out boolean;
     constant got       : in std_logic_vector;
     constant expected  : in std_logic_vector;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -2849,7 +2849,7 @@ package body check_pkg is
     variable pass      : out boolean;
     constant got       : in std_logic_vector;
     constant expected  : in std_logic_vector;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -2884,7 +2884,7 @@ package body check_pkg is
     constant checker   : in checker_t;
     constant got       : in std_logic_vector;
     constant expected  : in std_logic_vector;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -2898,7 +2898,7 @@ package body check_pkg is
   impure function check_equal(
     constant got       : in std_logic_vector;
     constant expected  : in std_logic_vector;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -2915,7 +2915,7 @@ package body check_pkg is
     constant checker   : in checker_t;
     constant got       : in std_logic_vector;
     constant expected  : in std_logic_vector;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -2931,7 +2931,7 @@ package body check_pkg is
   procedure check_equal(
     constant got       : in std_logic_vector;
     constant expected  : in natural;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -2946,7 +2946,7 @@ package body check_pkg is
     variable pass      : out boolean;
     constant got       : in std_logic_vector;
     constant expected  : in natural;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -2961,7 +2961,7 @@ package body check_pkg is
     variable pass      : out boolean;
     constant got       : in std_logic_vector;
     constant expected  : in natural;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -2996,7 +2996,7 @@ package body check_pkg is
     constant checker   : in checker_t;
     constant got       : in std_logic_vector;
     constant expected  : in natural;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -3010,7 +3010,7 @@ package body check_pkg is
   impure function check_equal(
     constant got       : in std_logic_vector;
     constant expected  : in natural;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -3027,7 +3027,7 @@ package body check_pkg is
     constant checker   : in checker_t;
     constant got       : in std_logic_vector;
     constant expected  : in natural;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -3043,7 +3043,7 @@ package body check_pkg is
   procedure check_equal(
     constant got       : in natural;
     constant expected  : in std_logic_vector;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -3058,7 +3058,7 @@ package body check_pkg is
     variable pass      : out boolean;
     constant got       : in natural;
     constant expected  : in std_logic_vector;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -3073,7 +3073,7 @@ package body check_pkg is
     variable pass      : out boolean;
     constant got       : in natural;
     constant expected  : in std_logic_vector;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -3108,7 +3108,7 @@ package body check_pkg is
     constant checker   : in checker_t;
     constant got       : in natural;
     constant expected  : in std_logic_vector;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -3122,7 +3122,7 @@ package body check_pkg is
   impure function check_equal(
     constant got       : in natural;
     constant expected  : in std_logic_vector;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -3139,7 +3139,7 @@ package body check_pkg is
     constant checker   : in checker_t;
     constant got       : in natural;
     constant expected  : in std_logic_vector;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -3155,7 +3155,7 @@ package body check_pkg is
   procedure check_equal(
     constant got       : in signed;
     constant expected  : in signed;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -3170,7 +3170,7 @@ package body check_pkg is
     variable pass      : out boolean;
     constant got       : in signed;
     constant expected  : in signed;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -3185,7 +3185,7 @@ package body check_pkg is
     variable pass      : out boolean;
     constant got       : in signed;
     constant expected  : in signed;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -3220,7 +3220,7 @@ package body check_pkg is
     constant checker   : in checker_t;
     constant got       : in signed;
     constant expected  : in signed;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -3234,7 +3234,7 @@ package body check_pkg is
   impure function check_equal(
     constant got       : in signed;
     constant expected  : in signed;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -3251,7 +3251,7 @@ package body check_pkg is
     constant checker   : in checker_t;
     constant got       : in signed;
     constant expected  : in signed;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -3267,7 +3267,7 @@ package body check_pkg is
   procedure check_equal(
     constant got       : in signed;
     constant expected  : in integer;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -3282,7 +3282,7 @@ package body check_pkg is
     variable pass      : out boolean;
     constant got       : in signed;
     constant expected  : in integer;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -3297,7 +3297,7 @@ package body check_pkg is
     variable pass      : out boolean;
     constant got       : in signed;
     constant expected  : in integer;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -3332,7 +3332,7 @@ package body check_pkg is
     constant checker   : in checker_t;
     constant got       : in signed;
     constant expected  : in integer;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -3346,7 +3346,7 @@ package body check_pkg is
   impure function check_equal(
     constant got       : in signed;
     constant expected  : in integer;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -3363,7 +3363,7 @@ package body check_pkg is
     constant checker   : in checker_t;
     constant got       : in signed;
     constant expected  : in integer;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -3379,7 +3379,7 @@ package body check_pkg is
   procedure check_equal(
     constant got       : in integer;
     constant expected  : in signed;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -3394,7 +3394,7 @@ package body check_pkg is
     variable pass      : out boolean;
     constant got       : in integer;
     constant expected  : in signed;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -3409,7 +3409,7 @@ package body check_pkg is
     variable pass      : out boolean;
     constant got       : in integer;
     constant expected  : in signed;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -3444,7 +3444,7 @@ package body check_pkg is
     constant checker   : in checker_t;
     constant got       : in integer;
     constant expected  : in signed;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -3458,7 +3458,7 @@ package body check_pkg is
   impure function check_equal(
     constant got       : in integer;
     constant expected  : in signed;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -3475,7 +3475,7 @@ package body check_pkg is
     constant checker   : in checker_t;
     constant got       : in integer;
     constant expected  : in signed;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -3491,7 +3491,7 @@ package body check_pkg is
   procedure check_equal(
     constant got       : in integer;
     constant expected  : in integer;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -3506,7 +3506,7 @@ package body check_pkg is
     variable pass      : out boolean;
     constant got       : in integer;
     constant expected  : in integer;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -3521,7 +3521,7 @@ package body check_pkg is
     variable pass      : out boolean;
     constant got       : in integer;
     constant expected  : in integer;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -3556,7 +3556,7 @@ package body check_pkg is
     constant checker   : in checker_t;
     constant got       : in integer;
     constant expected  : in integer;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -3570,7 +3570,7 @@ package body check_pkg is
   impure function check_equal(
     constant got       : in integer;
     constant expected  : in integer;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -3587,7 +3587,7 @@ package body check_pkg is
     constant checker   : in checker_t;
     constant got       : in integer;
     constant expected  : in integer;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -3603,7 +3603,7 @@ package body check_pkg is
   procedure check_equal(
     constant got       : in std_logic;
     constant expected  : in std_logic;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -3618,7 +3618,7 @@ package body check_pkg is
     variable pass      : out boolean;
     constant got       : in std_logic;
     constant expected  : in std_logic;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -3633,7 +3633,7 @@ package body check_pkg is
     variable pass      : out boolean;
     constant got       : in std_logic;
     constant expected  : in std_logic;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -3668,7 +3668,7 @@ package body check_pkg is
     constant checker   : in checker_t;
     constant got       : in std_logic;
     constant expected  : in std_logic;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -3682,7 +3682,7 @@ package body check_pkg is
   impure function check_equal(
     constant got       : in std_logic;
     constant expected  : in std_logic;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -3699,7 +3699,7 @@ package body check_pkg is
     constant checker   : in checker_t;
     constant got       : in std_logic;
     constant expected  : in std_logic;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -3715,7 +3715,7 @@ package body check_pkg is
   procedure check_equal(
     constant got       : in std_logic;
     constant expected  : in boolean;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -3730,7 +3730,7 @@ package body check_pkg is
     variable pass      : out boolean;
     constant got       : in std_logic;
     constant expected  : in boolean;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -3745,7 +3745,7 @@ package body check_pkg is
     variable pass      : out boolean;
     constant got       : in std_logic;
     constant expected  : in boolean;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -3780,7 +3780,7 @@ package body check_pkg is
     constant checker   : in checker_t;
     constant got       : in std_logic;
     constant expected  : in boolean;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -3794,7 +3794,7 @@ package body check_pkg is
   impure function check_equal(
     constant got       : in std_logic;
     constant expected  : in boolean;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -3811,7 +3811,7 @@ package body check_pkg is
     constant checker   : in checker_t;
     constant got       : in std_logic;
     constant expected  : in boolean;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -3827,7 +3827,7 @@ package body check_pkg is
   procedure check_equal(
     constant got       : in boolean;
     constant expected  : in std_logic;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -3842,7 +3842,7 @@ package body check_pkg is
     variable pass      : out boolean;
     constant got       : in boolean;
     constant expected  : in std_logic;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -3857,7 +3857,7 @@ package body check_pkg is
     variable pass      : out boolean;
     constant got       : in boolean;
     constant expected  : in std_logic;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -3892,7 +3892,7 @@ package body check_pkg is
     constant checker   : in checker_t;
     constant got       : in boolean;
     constant expected  : in std_logic;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -3906,7 +3906,7 @@ package body check_pkg is
   impure function check_equal(
     constant got       : in boolean;
     constant expected  : in std_logic;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -3923,7 +3923,7 @@ package body check_pkg is
     constant checker   : in checker_t;
     constant got       : in boolean;
     constant expected  : in std_logic;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -3939,7 +3939,7 @@ package body check_pkg is
   procedure check_equal(
     constant got       : in boolean;
     constant expected  : in boolean;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -3954,7 +3954,7 @@ package body check_pkg is
     variable pass      : out boolean;
     constant got       : in boolean;
     constant expected  : in boolean;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -3969,7 +3969,7 @@ package body check_pkg is
     variable pass      : out boolean;
     constant got       : in boolean;
     constant expected  : in boolean;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -4004,7 +4004,7 @@ package body check_pkg is
     constant checker   : in checker_t;
     constant got       : in boolean;
     constant expected  : in boolean;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -4018,7 +4018,7 @@ package body check_pkg is
   impure function check_equal(
     constant got       : in boolean;
     constant expected  : in boolean;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -4035,7 +4035,7 @@ package body check_pkg is
     constant checker   : in checker_t;
     constant got       : in boolean;
     constant expected  : in boolean;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -4051,7 +4051,7 @@ package body check_pkg is
   procedure check_equal(
     constant got       : in string;
     constant expected  : in string;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -4066,7 +4066,7 @@ package body check_pkg is
     variable pass      : out boolean;
     constant got       : in string;
     constant expected  : in string;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -4081,7 +4081,7 @@ package body check_pkg is
     variable pass      : out boolean;
     constant got       : in string;
     constant expected  : in string;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -4116,7 +4116,7 @@ package body check_pkg is
     constant checker   : in checker_t;
     constant got       : in string;
     constant expected  : in string;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -4130,7 +4130,7 @@ package body check_pkg is
   impure function check_equal(
     constant got       : in string;
     constant expected  : in string;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -4147,7 +4147,7 @@ package body check_pkg is
     constant checker   : in checker_t;
     constant got       : in string;
     constant expected  : in string;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -4163,7 +4163,7 @@ package body check_pkg is
   procedure check_equal(
     constant got       : in time;
     constant expected  : in time;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -4178,7 +4178,7 @@ package body check_pkg is
     variable pass      : out boolean;
     constant got       : in time;
     constant expected  : in time;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -4193,7 +4193,7 @@ package body check_pkg is
     variable pass      : out boolean;
     constant got       : in time;
     constant expected  : in time;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -4228,7 +4228,7 @@ package body check_pkg is
     constant checker   : in checker_t;
     constant got       : in time;
     constant expected  : in time;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -4242,7 +4242,7 @@ package body check_pkg is
   impure function check_equal(
     constant got       : in time;
     constant expected  : in time;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -4259,7 +4259,7 @@ package body check_pkg is
     constant checker   : in checker_t;
     constant got       : in time;
     constant expected  : in time;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -4278,7 +4278,7 @@ package body check_pkg is
   procedure check_match(
     constant got       : in unsigned;
     constant expected  : in unsigned;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -4293,7 +4293,7 @@ package body check_pkg is
     variable pass      : out boolean;
     constant got       : in unsigned;
     constant expected  : in unsigned;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -4308,7 +4308,7 @@ package body check_pkg is
     variable pass      : out boolean;
     constant got       : in unsigned;
     constant expected  : in unsigned;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -4345,7 +4345,7 @@ package body check_pkg is
     constant checker   : in checker_t;
     constant got       : in unsigned;
     constant expected  : in unsigned;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -4359,7 +4359,7 @@ package body check_pkg is
   impure function check_match(
     constant got       : in unsigned;
     constant expected  : in unsigned;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -4376,7 +4376,7 @@ package body check_pkg is
     constant checker   : in checker_t;
     constant got       : in unsigned;
     constant expected  : in unsigned;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -4392,7 +4392,7 @@ package body check_pkg is
   procedure check_match(
     constant got       : in std_logic_vector;
     constant expected  : in std_logic_vector;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -4407,7 +4407,7 @@ package body check_pkg is
     variable pass      : out boolean;
     constant got       : in std_logic_vector;
     constant expected  : in std_logic_vector;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -4422,7 +4422,7 @@ package body check_pkg is
     variable pass      : out boolean;
     constant got       : in std_logic_vector;
     constant expected  : in std_logic_vector;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -4459,7 +4459,7 @@ package body check_pkg is
     constant checker   : in checker_t;
     constant got       : in std_logic_vector;
     constant expected  : in std_logic_vector;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -4473,7 +4473,7 @@ package body check_pkg is
   impure function check_match(
     constant got       : in std_logic_vector;
     constant expected  : in std_logic_vector;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -4490,7 +4490,7 @@ package body check_pkg is
     constant checker   : in checker_t;
     constant got       : in std_logic_vector;
     constant expected  : in std_logic_vector;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -4506,7 +4506,7 @@ package body check_pkg is
   procedure check_match(
     constant got       : in signed;
     constant expected  : in signed;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -4521,7 +4521,7 @@ package body check_pkg is
     variable pass      : out boolean;
     constant got       : in signed;
     constant expected  : in signed;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -4536,7 +4536,7 @@ package body check_pkg is
     variable pass      : out boolean;
     constant got       : in signed;
     constant expected  : in signed;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -4573,7 +4573,7 @@ package body check_pkg is
     constant checker   : in checker_t;
     constant got       : in signed;
     constant expected  : in signed;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -4587,7 +4587,7 @@ package body check_pkg is
   impure function check_match(
     constant got       : in signed;
     constant expected  : in signed;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -4604,7 +4604,7 @@ package body check_pkg is
     constant checker   : in checker_t;
     constant got       : in signed;
     constant expected  : in signed;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -4620,7 +4620,7 @@ package body check_pkg is
   procedure check_match(
     constant got       : in std_logic;
     constant expected  : in std_logic;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -4635,7 +4635,7 @@ package body check_pkg is
     variable pass      : out boolean;
     constant got       : in std_logic;
     constant expected  : in std_logic;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -4650,7 +4650,7 @@ package body check_pkg is
     variable pass      : out boolean;
     constant got       : in std_logic;
     constant expected  : in std_logic;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -4687,7 +4687,7 @@ package body check_pkg is
     constant checker   : in checker_t;
     constant got       : in std_logic;
     constant expected  : in std_logic;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "") is

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -4701,7 +4701,7 @@ package body check_pkg is
   impure function check_match(
     constant got       : in std_logic;
     constant expected  : in std_logic;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -4718,7 +4718,7 @@ package body check_pkg is
     constant checker   : in checker_t;
     constant got       : in std_logic;
     constant expected  : in std_logic;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")
ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: 42cd894cb2f54940875fb14c6d3fa04c9b5084f1
Add debug logging to axi_lite_master
--- a/vunit/vhdl/verification_components/src/bus_master_pkg.vhd
+++ b/vunit/vhdl/verification_components/src/bus_master_pkg.vhd
@@ -37,6 +37,9 @@ package bus_master_pkg is
                           logger : logger_t := bus_logger;
                           actor : actor_t := null_actor) return bus_master_t;
 
+  -- Return the logger used by the bus master
+  function get_logger(bus_handle : bus_master_t) return logger_t;
+
   -- Return the length of the data on this bus
   impure function data_length(bus_handle : bus_master_t) return natural;
 
ParseResult:
INS HdlFunctionDef@@get_logger to objs
HdlFunctionDef: get_logger
    HdlValueId: logger_t
    list: params
        HdlIdDef: bus_handle
            HdlValueId: bus_master_t
            HdlDirection: IN
    list: body


CommitId: 1fb8cf07c2dc93562ec0f067d13d6a541bfd5e99
Integrated AXI protocol checker into other AXI VCs. Some lint fixing.
--- a/vunit/vhdl/verification_components/src/wishbone_master.vhd
+++ b/vunit/vhdl/verification_components/src/wishbone_master.vhd
@@ -42,7 +42,6 @@ architecture a of wishbone_master is
   constant rd_request_queue : queue_t := new_queue;
   constant wr_request_queue : queue_t := new_queue;
   constant acknowledge_queue : queue_t := new_queue;
-  constant ack_return_queue : queue_t := new_queue;
   constant bus_ack_msg   : msg_type_t := new_msg_type("wb master ack msg");
   constant wb_master_ack_actor : actor_t := new_actor;
 begin

ParseResult:
DEL HdlIdDef@@ack_return_queue from objs
HdlIdDef: ack_return_queue
    HdlValueId: queue_t
    HdlValueId: new_queue
    HdlDirection: INTERNAL


CommitId: 1fb8cf07c2dc93562ec0f067d13d6a541bfd5e99
Integrated AXI protocol checker into other AXI VCs. Some lint fixing.
--- a/vunit/vhdl/verification_components/src/wishbone_master.vhd
+++ b/vunit/vhdl/verification_components/src/wishbone_master.vhd
@@ -50,7 +49,6 @@ begin
   main : process
     variable request_msg : msg_t;
     variable msg_type : msg_type_t;
-    variable status : com_status_t;
   begin
       request_msg := null_msg;
       receive(net, bus_handle.p_actor, request_msg);

ParseResult:
DEL HdlIdDef@@status from body
HdlIdDef: status
    HdlValueId: com_status_t
    HdlDirection: INTERNAL


CommitId: 1fb8cf07c2dc93562ec0f067d13d6a541bfd5e99
Integrated AXI protocol checker into other AXI VCs. Some lint fixing.
--- a/vunit/vhdl/verification_components/src/wishbone_master.vhd
+++ b/vunit/vhdl/verification_components/src/wishbone_master.vhd
@@ -69,7 +67,6 @@ begin
   request : process
     variable request_msg : msg_t;
     variable ack_msg : msg_t;
-    variable msg_type : msg_type_t;
     variable pending_acks : natural := 0;
     variable received_acks : natural := 0;
     variable rd_cycle : boolean;
ParseResult:
DEL HdlIdDef@@msg_type from body
HdlIdDef: msg_type
    HdlValueId: msg_type_t
    HdlDirection: INTERNAL


CommitId: e67ac7c9ca4a463d0cc8d4de927d67567c3ebbde
Add stall probability to all axi slave channels.
--- a/vunit/vhdl/verification_components/src/axi_write_slave.vhd
+++ b/vunit/vhdl/verification_components/src/axi_write_slave.vhd
@@ -111,20 +111,20 @@ begin
         beats := burst.length;
       end if;
 
-      if not self.resp_queue_empty and (bvalid = '0' or bready = '1') then
+      if not self.resp_queue_empty and (bvalid = '0' or bready = '1') and not self.should_stall_write_response then
         resp_burst := self.pop_resp;
         bvalid <= '1';
         bid <= std_logic_vector(to_unsigned(resp_burst.id, bid'length));
         bresp <= axi_resp_okay;
       end if;
 
-      if beats > 0 and not (beats = 1 and self.resp_queue_full) then
+      if beats > 0 and not (beats = 1 and self.resp_queue_full) and not self.should_stall_data then
         wready <= '1';
       else
         wready <= '0';
       end if;
 
-      if self.should_stall_address_channel or self.burst_queue_full then
+      if self.should_stall_address or self.burst_queue_full then
         awready <= '0';
       else
         awready <= '1';
ParseResult:
UPD HdlStmIf@@ to 
    INS HdlOp@@AND to 
    UPD HdlOp@@AND to AND
        INS list@@ops to AND
        INS HdlOp@@NEG to ops
        HdlOp: NEG
            list: ops
                HdlOp: DOT
                    list: ops
                        HdlValueId: self
                        HdlValueId: should_stall_write_response

UPD HdlStmIf@@ to 
    INS HdlOp@@AND to 
    UPD HdlOp@@AND to AND
        INS list@@ops to AND
        INS HdlOp@@NEG to ops
        HdlOp: NEG
            list: ops
                HdlOp: DOT
                    list: ops
                        HdlValueId: self
                        HdlValueId: should_stall_data

UPD HdlStmIf@@ to 
    MOV HdlOp@@AND to 
    HdlOp: AND
        list: ops
            HdlOp: NEG
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlValueId: self
                            HdlValueId: resp_queue_empty
            HdlOp: OR
                list: ops
                    HdlOp: EQ
                        list: ops
                            HdlValueId: bvalid
                            HdlValueInt: 0
                    HdlOp: EQ
                        list: ops
                            HdlValueId: bready
                            HdlValueInt: 1

UPD HdlStmIf@@ to 
    MOV HdlOp@@AND to 
    HdlOp: AND
        list: ops
            HdlOp: GT
                list: ops
                    HdlValueId: beats
            HdlOp: NEG
                list: ops
                    HdlOp: AND
                        list: ops
                            HdlOp: EQ
                                list: ops
                                    HdlValueId: beats
                                    HdlValueInt: 1
                            HdlOp: DOT
                                list: ops
                                    HdlValueId: self
                                    HdlValueId: resp_queue_full

UPD HdlStmIf@@ to 
    UPD HdlOp@@OR to OR
        UPD HdlOp@@DOT to DOT
            UPD HdlValueId@@should_stall_address_channel to should_stall_address


CommitId: 1fb8cf07c2dc93562ec0f067d13d6a541bfd5e99
Integrated AXI protocol checker into other AXI VCs. Some lint fixing.
--- a/vunit/vhdl/verification_components/src/bus2memory.vhd
+++ b/vunit/vhdl/verification_components/src/bus2memory.vhd
@@ -30,7 +30,7 @@ begin
     variable data  : std_logic_vector(data_length(bus_handle)-1 downto 0);
     constant blen : natural := byte_length(bus_handle);
   begin
-    loop
+    while true loop
       receive(net, bus_handle.p_actor, request_msg);
       msg_type := message_type(request_msg);
 
ParseResult:
UPD HdlStmWhile@@ to 
    UPD HdlValueId@@True to true


CommitId: 3646fec05aeb97ecba35f301c6ac665b2c1e5bd4
Set stop level only for warning, error, failure
--- a/vunit/vhdl/logging/src/log_levels_pkg.vhd
+++ b/vunit/vhdl/logging/src/log_levels_pkg.vhd
@@ -31,16 +31,11 @@ package log_levels_pkg is
   type log_level_vec_t is array (natural range <>) of log_level_t;
   constant null_vec : log_level_vec_t(1 to 0) := (others => info);
 
-  subtype standard_log_level_t is log_level_t range verbose to failure;
+  subtype alert_log_level_t is log_level_t range warning to failure;
   subtype legal_log_level_t is log_level_t range log_level_t'succ(null_log_level) to log_level_t'high;
 
-  constant num_standard_log_levels : natural := (standard_log_level_t'pos(standard_log_level_t'high) -
-                                                 standard_log_level_t'pos(standard_log_level_t'low) + 1);
-
-  constant num_legal_log_levels : natural := (legal_log_level_t'pos(legal_log_level_t'high) -
-                                              legal_log_level_t'pos(legal_log_level_t'low) + 1);
-
-  constant max_num_custom_log_levels : natural := num_legal_log_levels - num_standard_log_levels;
+  constant max_num_custom_log_levels : natural := (
+    1 + log_level_t'pos(log_level_t'high) - log_level_t'pos(custom_level1));
 
   impure function new_log_level(name : string;
                                 fg : ansi_color_t := no_color;

ParseResult:
UPD HdlIdDef@@standard_log_level_t to alert_log_level_t

UPD HdlIdDef@@num_legal_log_levels to max_num_custom_log_levels

UPD HdlIdDef@@num_legal_log_levels to num_legal_log_levels
    UPD HdlOp@@ADD to ADD
        MOV HdlOp@@SUB to ops
        HdlOp: SUB
            list: ops
                HdlOp: INDEX
                    list: ops
                        HdlOp: APOSTROPHE
                            list: ops
                                HdlValueId: legal_log_level_t
                                HdlValueId: pos
                        HdlOp: APOSTROPHE
                            list: ops
                                HdlValueId: legal_log_level_t
                                HdlValueId: high
                HdlOp: INDEX
                    list: ops
                        HdlOp: APOSTROPHE
                            list: ops
                                HdlValueId: legal_log_level_t
                                HdlValueId: pos
                        HdlOp: APOSTROPHE
                            list: ops
                                HdlValueId: legal_log_level_t
                                HdlValueId: low
        UPD HdlOp@@SUB to SUB
            MOV HdlOp@@INDEX to ops
            HdlOp: INDEX
                list: ops
                    HdlOp: APOSTROPHE
                        list: ops
                            HdlValueId: legal_log_level_t
                            HdlValueId: pos
                    HdlOp: APOSTROPHE
                        list: ops
                            HdlValueId: legal_log_level_t
                            HdlValueId: high
            UPD HdlOp@@INDEX to INDEX
                UPD HdlOp@@APOSTROPHE to APOSTROPHE
                    UPD HdlValueId@@legal_log_level_t to custom_level1
                    MOV HdlValueId@@legal_log_level_t to ops
                    HdlValueId: legal_log_level_t
                    DEL HdlValueId@@low from ops
                    DEL list@@ops from APOSTROPHE
                UPD HdlOp@@APOSTROPHE to APOSTROPHE
                    UPD HdlValueId@@legal_log_level_t to log_level_t
                DEL HdlOp@@APOSTROPHE from ops
            UPD HdlOp@@INDEX to INDEX
                UPD HdlOp@@APOSTROPHE to APOSTROPHE
                    UPD HdlValueId@@legal_log_level_t to log_level_t
                UPD HdlOp@@APOSTROPHE to APOSTROPHE
                    UPD HdlValueId@@legal_log_level_t to log_level_t
        DEL HdlValueInt@@1 from ops
        DEL list@@ops from ADD
    DEL HdlOp@@ADD from num_legal_log_levels

UPD HdlIdDef@@max_num_custom_log_levels to max_num_custom_log_levels
    UPD HdlOp@@SUB to SUB
        INS HdlOp@@ADD to ops
        UPD HdlOp@@ADD to ADD
            INS list@@ops to ADD
            INS HdlValueInt@@1 to ops

UPD HdlIdDef@@standard_log_level_t to standard_log_level_t
    UPD HdlOp@@RANGE to RANGE
        UPD HdlOp@@TO to TO
            UPD HdlValueId@@verbose to warning

DEL HdlIdDef@@num_standard_log_levels from objs
HdlIdDef: num_standard_log_levels
    HdlValueId: natural
    HdlOp: ADD
        list: ops
            HdlOp: SUB
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlOp: APOSTROPHE
                                list: ops
                                    HdlValueId: standard_log_level_t
                                    HdlValueId: pos
                            HdlOp: APOSTROPHE
                                list: ops
                                    HdlValueId: standard_log_level_t
                                    HdlValueId: high
                    HdlOp: INDEX
                        list: ops
                            HdlOp: APOSTROPHE
                                list: ops
                                    HdlValueId: standard_log_level_t
                                    HdlValueId: pos
                            HdlOp: APOSTROPHE
                                list: ops
                                    HdlValueId: standard_log_level_t
                                    HdlValueId: low
            HdlValueInt: 1
    HdlDirection: INTERNAL

DEL HdlIdDef@@max_num_custom_log_levels from objs
HdlIdDef: max_num_custom_log_levels
    HdlValueId: natural
    HdlOp: SUB
        list: ops
            HdlValueId: num_legal_log_levels
            HdlValueId: num_standard_log_levels
    HdlDirection: INTERNAL


CommitId: 3646fec05aeb97ecba35f301c6ac665b2c1e5bd4
Set stop level only for warning, error, failure
--- a/vunit/vhdl/logging/src/log_levels_pkg.vhd
+++ b/vunit/vhdl/logging/src/log_levels_pkg.vhd
@@ -48,9 +43,6 @@ package log_levels_pkg is
                                 style : ansi_style_t := normal) return log_level_t;
   impure function is_valid(log_level : log_level_t) return boolean;
 
-  -- Returns true if the log_level is not a custom level
-  impure function is_standard(log_level : log_level_t) return boolean;
-
   impure function get_name(log_level : log_level_t) return string;
   impure function get_color(log_level : log_level_t) return ansi_colors_t;
   impure function max_level_length return natural;
ParseResult:
DEL HdlFunctionDef@@is_standard from objs
HdlFunctionDef: is_standard
    HdlValueId: boolean
    list: params
        HdlIdDef: log_level
            HdlValueId: log_level_t
            HdlDirection: IN
    list: body


CommitId: 41b99a093408b9ed2742d7debbdae4a144d4f975
push avalon master read req msg one cycle earlier (fix #695) (#696)
--- a/vunit/vhdl/verification_components/src/avalon_master.vhd
+++ b/vunit/vhdl/verification_components/src/avalon_master.vhd
@@ -78,9 +78,9 @@ begin
           address <= pop_std_ulogic_vector(request_msg);
           byteenable(byteenable'range) <= (others => '1');
           read <= '1';
+          push(acknowledge_queue, request_msg);
           wait until rising_edge(clk) and waitrequest = '0';
           read <= '0';
-          push(acknowledge_queue, request_msg);
 
         elsif msg_type = bus_burst_read_msg then
           while rnd.Uniform(0.0, 1.0) > read_high_probability loop

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: push
                HdlValueId: acknowledge_queue
                HdlValueId: request_msg
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: push
                HdlValueId: burst_acknowledge_queue
                HdlValueId: request_msg


CommitId: 41b99a093408b9ed2742d7debbdae4a144d4f975
push avalon master read req msg one cycle earlier (fix #695) (#696)
--- a/vunit/vhdl/verification_components/src/avalon_master.vhd
+++ b/vunit/vhdl/verification_components/src/avalon_master.vhd
@@ -92,9 +92,9 @@ begin
           burstcount <= std_logic_vector(to_unsigned(burst, burstcount'length));
           byteenable(byteenable'range) <= (others => '1');
           read <= '1';
+          push(burst_acknowledge_queue, request_msg);
           wait until rising_edge(clk) and waitrequest = '0';
           read <= '0';
-          push(burst_acknowledge_queue, request_msg);
           push(burstlen_queue, burst);
 
         elsif msg_type = bus_write_msg then
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: push
                HdlValueId: acknowledge_queue
                HdlValueId: request_msg
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: push
                HdlValueId: burst_acknowledge_queue
                HdlValueId: request_msg


CommitId: f31ea350f6c7ec4d5059549973c2b24d892a84fe
Use constant instead of alias to work arround Sigasi bug
--- a/vunit/vhdl/com/src/com_deprecated.vhd
+++ b/vunit/vhdl/com/src/com_deprecated.vhd
@@ -23,7 +23,7 @@ package com_deprecated_pkg is
   -----------------------------------------------------------------------------
   -- Handling of actors
   -----------------------------------------------------------------------------
-  alias null_actor_c is null_actor;
+  constant null_actor_c : actor_t := null_actor;
   impure function create (name :       string := ""; inbox_size : positive := positive'high) return actor_t;
   procedure destroy (actor     : inout actor_t; status : out com_status_t);
   impure function inbox_size (actor      : actor_t) return natural;

ParseResult:
INS HdlIdDef@@null_actor_c to objs
HdlIdDef: null_actor_c
    HdlValueId: actor_t
    HdlValueId: null_actor
    HdlDirection: INTERNAL


CommitId: f31ea350f6c7ec4d5059549973c2b24d892a84fe
Use constant instead of alias to work arround Sigasi bug
--- a/vunit/vhdl/com/src/com_deprecated.vhd
+++ b/vunit/vhdl/com/src/com_deprecated.vhd
@@ -31,7 +31,7 @@ package com_deprecated_pkg is
   -----------------------------------------------------------------------------
   -- Message related subprograms
   -----------------------------------------------------------------------------
-  alias no_message_id_c is no_message_id;
+  constant no_message_id_c : message_id_t := no_message_id;
   impure function new_message (sender : actor_t := null_actor_c) return message_ptr_t;
   impure function compose (
     payload    : string       := "";

ParseResult:
INS HdlIdDef@@no_message_id_c to objs
HdlIdDef: no_message_id_c
    HdlValueId: message_id_t
    HdlValueId: no_message_id
    HdlDirection: INTERNAL


CommitId: f31ea350f6c7ec4d5059549973c2b24d892a84fe
Use constant instead of alias to work arround Sigasi bug
--- a/vunit/vhdl/com/src/com_deprecated.vhd
+++ b/vunit/vhdl/com/src/com_deprecated.vhd
@@ -44,7 +44,7 @@ package com_deprecated_pkg is
   -----------------------------------------------------------------------------
   -- Primary send and receive related subprograms
   -----------------------------------------------------------------------------
-  alias max_timeout_c is max_timeout;
+  constant max_timeout_c : time := max_timeout;
   procedure send (
     signal net            : inout network_t;
     constant receiver     : in    actor_t;
ParseResult:
INS HdlIdDef@@max_timeout_c to objs
HdlIdDef: max_timeout_c
    HdlValueId: time
    HdlValueId: max_timeout
    HdlDirection: INTERNAL


CommitId: f6537bb85d5ef051583d49253de4b01f859c3e51
Update com.
--- a/vunit/vhdl/com/src/com_string.vhd
+++ b/vunit/vhdl/com/src/com_string.vhd
@@ -59,6 +62,12 @@ package com_string_pkg is
   function to_string (
     constant data : complex_polar)
     return string;
+  function to_string (
+    constant data : integer_vector_ptr_t)
+    return string;
+  function to_string (
+    constant data : queue_t)
+    return string;
   function to_detailed_string (
     constant data : ieee.numeric_bit.unsigned)
     return string;

ParseResult:
INS HdlFunctionDef@@to_string to objs
HdlFunctionDef: to_string
    HdlValueId: string
    list: params
        HdlIdDef: data
            HdlValueId: integer_vector_ptr_t
            HdlDirection: INTERNAL
    list: body

INS HdlFunctionDef@@to_string to objs
HdlFunctionDef: to_string
    HdlValueId: string
    list: params
        HdlIdDef: data
            HdlValueId: queue_t
            HdlDirection: INTERNAL
    list: body


CommitId: f6537bb85d5ef051583d49253de4b01f859c3e51
Update com.
--- a/vunit/vhdl/com/src/com_string.vhd
+++ b/vunit/vhdl/com/src/com_string.vhd
@@ -204,6 +213,20 @@ package body com_string_pkg is
     return create_group(2, to_detailed_string(data.mag), to_detailed_string(data.arg));
   end;
 
+  function to_string (
+    constant data : integer_vector_ptr_t)
+    return string is
+  begin
+    return create_group(1, to_string(data.index));
+  end;
+
+  function to_string (
+    constant data : queue_t)
+    return string is
+  begin
+    return create_group(2, to_string(data.p_meta), to_string(to_integer(data.data)));
+  end;
+
   function to_detailed_string (
     constant data : ieee.numeric_bit.unsigned)
     return string is
ParseResult:
INS HdlFunctionDef@@to_string to objs
HdlFunctionDef: to_string
    HdlValueId: string
    list: params
        HdlIdDef: data
            HdlValueId: integer_vector_ptr_t
            HdlDirection: INTERNAL
    list: body
        HdlStmReturn: {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops':}]}]} 
            HdlOp: INDEX
                list: ops
                    HdlValueId: create_group
                    HdlValueInt: 1
                    HdlOp: CALL
                        list: ops
                            HdlValueId: to_string
                            HdlOp: DOT
                                list: ops
                                    HdlValueId: data
                                    HdlValueId: index

INS HdlFunctionDef@@to_string to objs
HdlFunctionDef: to_string
    HdlValueId: string
    list: params
        HdlIdDef: data
            HdlValueId: queue_t
            HdlDirection: INTERNAL
    list: body
        HdlStmReturn: {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops':}]},          {'__class__': 'HdlOp',           'fn': 'CALL',           'ops':}]}]}]} 
            HdlOp: INDEX
                list: ops
                    HdlValueId: create_group
                    HdlValueInt: 2
                    HdlOp: CALL
                        list: ops
                            HdlValueId: to_string
                            HdlOp: DOT
                                list: ops
                                    HdlValueId: data
                                    HdlValueId: p_meta
                    HdlOp: CALL
                        list: ops
                            HdlValueId: to_string
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: to_integer
                                    HdlOp: DOT
                                        list: ops
                                            HdlValueId: data
                                            HdlValueId: data


CommitId: 97dadd1ac03a4526b736623b97f34d086b95b4b6
Moved com codecs to datatypes. Removed support for debug codecs.
--- a/vunit/vhdl/data_types/src/integer_vector_ptr_pkg.vhd
+++ b/vunit/vhdl/data_types/src/integer_vector_ptr_pkg.vhd
@@ -27,5 +27,13 @@ package integer_vector_ptr_pkg is
   impure function get(ptr : integer_vector_ptr_t; index : integer) return integer;
   procedure reallocate(ptr : integer_vector_ptr_t; length : natural; value : integer := 0);
   procedure resize(ptr : integer_vector_ptr_t; length : natural; drop : natural := 0; value : integer := 0);
+  function encode(data : integer_vector_ptr_t) return string;
+  function decode(code : string) return integer_vector_ptr_t;
+  procedure decode(
+    constant code   : string;
+    variable index : inout positive;
+    variable result : out integer_vector_ptr_t);
+  alias encode_integer_vector_ptr_t is encode[integer_vector_ptr_t return string];
+  alias decode_integer_vector_ptr_t is decode[string return integer_vector_ptr_t];
 
 end package;
ParseResult:
INS HdlFunctionDef@@encode to objs
HdlFunctionDef: encode
    HdlValueId: string
    list: params
        HdlIdDef: data
            HdlValueId: integer_vector_ptr_t
            HdlDirection: IN
    list: body

INS HdlFunctionDef@@decode to objs
HdlFunctionDef: decode
    HdlValueId: integer_vector_ptr_t
    list: params
        HdlIdDef: code
            HdlValueId: string
            HdlDirection: IN
    list: body

INS HdlFunctionDef@@decode to objs
HdlFunctionDef: decode
    list: params
        HdlIdDef: code
            HdlValueId: string
            HdlDirection: INTERNAL
        HdlIdDef: index
            HdlValueId: positive
            HdlDirection: INOUT
        HdlIdDef: result
            HdlValueId: integer_vector_ptr_t
            HdlDirection: OUT
    list: body


CommitId: 00fea7276c5711a14dd54fd045b485331b36ebfa
Added support for displaying the full vector representation of integers/naturals in check_equal error messages even when the vector with which the integer/natural is compared has a length shorter than what's needed to house the integer/natural.
--- a/vhdl/check/src/check.vhd
+++ b/vhdl/check/src/check.vhd
@@ -9,6 +9,7 @@
 library ieee;
 use ieee.std_logic_1164.all;
 use ieee.std_logic_unsigned.all;
+use ieee.numeric_std.all;
 use std.textio.all;
 use work.check_types_pkg.all;
 use work.check_base_pkg.all;

ParseResult:
INS HdlLibrary@@ieee to objs

DEL HdlLibrary@@ieee from objs


CommitId: 00fea7276c5711a14dd54fd045b485331b36ebfa
Added support for displaying the full vector representation of integers/naturals in check_equal error messages even when the vector with which the integer/natural is compared has a length shorter than what's needed to house the integer/natural.
--- a/vhdl/check/src/check.vhd
+++ b/vhdl/check/src/check.vhd
@@ -18,6 +19,7 @@ use work.string_ops.all;
 
 package body check_pkg is
   type boolean_vector is array (natural range <>) of boolean;
+  constant max_supported_num_of_bits_in_integer_implementation : natural := 256;
 
   procedure checker_init (
     constant default_level  : in log_level_t  := error;

ParseResult:
INS HdlIdDef@@max_supported_num_of_bits_in_integer_implementation to objs
HdlIdDef: max_supported_num_of_bits_in_integer_implementation
    HdlValueId: natural
    HdlValueInt: 256
    HdlDirection: INTERNAL


CommitId: f31ea350f6c7ec4d5059549973c2b24d892a84fe
Use constant instead of alias to work arround Sigasi bug
--- a/vunit/vhdl/run/src/runner_pkg.vhd
+++ b/vunit/vhdl/run/src/runner_pkg.vhd
@@ -22,7 +22,7 @@ package runner_pkg is
   constant unknown_num_of_test_cases : integer := integer'left;
 
   -- Deprecated
-  alias unknown_num_of_test_cases_c is unknown_num_of_test_cases;
+  constant unknown_num_of_test_cases_c : integer := unknown_num_of_test_cases;
 
   impure function new_runner return runner_t;
 
ParseResult:
INS HdlIdDef@@unknown_num_of_test_cases_c to objs
HdlIdDef: unknown_num_of_test_cases_c
    HdlValueId: integer
    HdlValueId: unknown_num_of_test_cases
    HdlDirection: INTERNAL


CommitId: 97958c90812cae985c4c6f6c7accaa0cad5e85be
Using line instead of 10000 long fixed string for runner_cfg
--- a/vunit/vhdl/run/src/run_base93.vhd
+++ b/vunit/vhdl/run/src/run_base93.vhd
@@ -40,8 +40,7 @@ package body run_base_pkg is
     default_runner.test_case_iteration := 0;
     default_runner.test_case_exit_after_error := false;
     default_runner.test_suite_exit_after_error := false;
-    default_runner.runner_cfg := (others => ' ');
-    default_runner.runner_cfg(runner_cfg_default'range) := runner_cfg_default;
+    default_runner.runner_cfg := new string'(runner_cfg_default);
   end;
 
   impure function has_active_python_runner return boolean is

ParseResult:
INS HdlStmAssign@@ to body

UPD HdlStmAssign@@ to 
    INS HdlOp@@CALL to 
    HdlOp: CALL
        list: ops
            HdlValueId: new
            HdlOp: APOSTROPHE
                list: ops
                    HdlValueId: string
                    HdlValueId: runner_cfg_default

UPD HdlStmAssign@@ to 
    MOV HdlOp@@DOT to 
    HdlOp: DOT
        list: ops
            HdlValueId: default_runner
            HdlValueId: runner_cfg
    DEL list@@src from 
    list: src
        HdlOp: MAP_ASSOCIATION
            list: ops
                type
                HdlValueInt:  

UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to CALL
    MOV HdlOp@@INDEX to 
    HdlOp: INDEX
        list: ops
            HdlOp: DOT
                list: ops
                    HdlValueId: default_runner
                    HdlValueId: runner_cfg
            HdlOp: APOSTROPHE
                list: ops
                    HdlValueId: runner_cfg_default
                    HdlValueId: range
    DEL HdlValueId@@runner_cfg_default from 
    UPD HdlOp@@INDEX to INDEX
        DEL HdlOp@@APOSTROPHE from ops
        HdlOp: APOSTROPHE
            list: ops
                HdlValueId: runner_cfg_default
                HdlValueId: range

DEL HdlStmAssign@@ from body

DEL HdlStmAssign@@ from body


CommitId: 97958c90812cae985c4c6f6c7accaa0cad5e85be
Using line instead of 10000 long fixed string for runner_cfg
--- a/vunit/vhdl/run/src/run_base93.vhd
+++ b/vunit/vhdl/run/src/run_base93.vhd
@@ -267,14 +266,16 @@ package body run_base_pkg is
   procedure set_cfg (
     constant new_value : in string) is
   begin
-    default_runner.runner_cfg := (others => ' ');
-    default_runner.runner_cfg(new_value'range) := new_value;
+      if default_runner.runner_cfg /= null then
+        deallocate(default_runner.runner_cfg);
+      end if;
+    default_runner.runner_cfg := new string'(new_value);
   end;
 
   impure function get_cfg
     return string is
   begin
-    return default_runner.runner_cfg;
+    return default_runner.runner_cfg.all;
   end;
 
 end package body run_base_pkg;
ParseResult:
UPD HdlFunctionDef@@get_cfg to get_cfg
    INS list@@body to get_cfg

INS HdlStmIf@@ to body

UPD HdlStmReturn@@{'__class__': 'HdlOp', 'fn': 'DOT', 'ops': ['default_runner', 'runner_cfg']}  to {'__class__': 'HdlOp',  'fn': 'DOT',  'ops': [{'__class__': 'HdlOp',           'fn': 'DOT',           'ops': ['default_runner', 'runner_cfg']},          {'__class__': 'HdlAll'}]} 

MOV HdlStmReturn@@{'__class__': 'HdlOp', 'fn': 'DOT', 'ops': ['default_runner', 'runner_cfg']}  to body
HdlStmReturn: {'__class__': 'HdlOp', 'fn': 'DOT', 'ops':} 
    HdlOp: DOT
        list: ops
            HdlValueId: default_runner
            HdlValueId: runner_cfg

UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to NE
    MOV HdlOp@@INDEX to 
    HdlOp: INDEX
        list: ops
            HdlOp: DOT
                list: ops
                    HdlValueId: default_runner
                    HdlValueId: runner_cfg
            HdlOp: APOSTROPHE
                list: ops
                    HdlValueId: new_value
                    HdlValueId: range
    UPD HdlValueId@@new_value to new
    MOV HdlValueId@@new_value to 
    HdlValueId: new_value
    UPD HdlOp@@INDEX to INDEX
        DEL HdlOp@@APOSTROPHE from ops
        HdlOp: APOSTROPHE
            list: ops
                HdlValueId: new_value
                HdlValueId: range

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    INS list@@elifs to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        UPD HdlOp@@CALL to CALL
            INS HdlValueId@@deallocate to ops

UPD HdlStmAssign@@ to 
    INS HdlOp@@CALL to 
    UPD HdlOp@@CALL to CALL
        INS list@@ops to CALL
        INS HdlOp@@APOSTROPHE to ops
        HdlOp: APOSTROPHE
            list: ops
                HdlValueId: string
                HdlValueId: new_value

UPD HdlStmAssign@@ to 
    MOV HdlOp@@DOT to 
    HdlOp: DOT
        list: ops
            HdlValueId: default_runner
            HdlValueId: runner_cfg
    DEL list@@src from 
    list: src
        HdlOp: MAP_ASSOCIATION
            list: ops
                type
                HdlValueInt:  

UPD HdlStmReturn@@{'__class__': 'HdlOp',  'fn': 'DOT',  'ops': [{'__class__': 'HdlOp',           'fn': 'DOT',           'ops': ['default_runner', 'runner_cfg']},          {'__class__': 'HdlAll'}]}  to {'__class__': 'HdlOp',  'fn': 'DOT',  'ops': [{'__class__': 'HdlOp',           'fn': 'DOT',           'ops': ['default_runner', 'runner_cfg']},          {'__class__': 'HdlAll'}]} 
    INS HdlOp@@DOT to {'__class__': 'HdlOp',  'fn': 'DOT',  'ops': [{'__class__': 'HdlOp',           'fn': 'DOT',           'ops': ['default_runner', 'runner_cfg']},          {'__class__': 'HdlAll'}]} 
    UPD HdlOp@@DOT to DOT
        INS HdlAll@@ to ops

UPD HdlFunctionDef@@get_cfg to get_cfg
    UPD list@@body to ops
    MOV list@@body to get_cfg
    list: body
        HdlStmReturn: {'__class__': 'HdlOp', 'fn': 'DOT', 'ops':} 
            HdlOp: DOT
                list: ops
                    HdlValueId: default_runner
                    HdlValueId: runner_cfg

UPD HdlStmReturn@@{'__class__': 'HdlOp', 'fn': 'DOT', 'ops': ['default_runner', 'runner_cfg']}  to {'__class__': 'HdlOp', 'fn': 'DOT', 'ops': ['default_runner', 'runner_cfg']} 
    MOV HdlOp@@DOT to {'__class__': 'HdlOp', 'fn': 'DOT', 'ops': ['default_runner', 'runner_cfg']} 
    HdlOp: DOT
        list: ops
            HdlValueId: default_runner
            HdlValueId: runner_cfg

DEL HdlStmAssign@@ from body


CommitId: 3fecbad750f8ae99d54e51d15ec22bb783b31076
Fixed memory leak
--- a/vunit/vhdl/com/src/com_types.vhd
+++ b/vunit/vhdl/com/src/com_types.vhd
@@ -461,7 +461,11 @@ package body com_types_pkg is
   impure function copy(msg : msg_t) return msg_t is
     variable result : msg_t := msg;
   begin
-    result.data := copy(msg.data);
+    result.data := new_queue(queue_pool);
+    for i in 0 to length(msg.data) - 1 loop
+      push(result.data, get(msg.data.data, 1+i));
+    end loop;
+
     return result;
   end;
 
ParseResult:
UPD HdlFunctionDef@@copy to copy
    INS list@@body to copy

MOV HdlIdDef@@result to body
HdlIdDef: result
    HdlValueId: msg_t
    HdlValueId: msg
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to body

INS HdlStmForIn@@ to body

MOV HdlStmReturn@@result to body
HdlStmReturn: result
    HdlValueId: result

UPD HdlStmAssign@@ to 
    INS HdlOp@@INDEX to 
    HdlOp: INDEX
        list: ops
            HdlValueId: new_queue
            HdlValueId: queue_pool

UPD HdlStmAssign@@ to 
    MOV HdlOp@@DOT to 
    HdlOp: DOT
        list: ops
            HdlValueId: result
            HdlValueId: data
    MOV HdlOp@@INDEX to 
    HdlOp: INDEX
        list: ops
            HdlValueId: copy
            HdlOp: DOT
                list: ops
                    HdlValueId: msg
                    HdlValueId: data
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@copy to length

UPD HdlStmForIn@@ to 
    INS list@@var_defs to 
    list: var_defs
        HdlValueId: i
    INS HdlOp@@TO to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlOp: CALL
                list: ops
                    HdlValueId: push
                    HdlOp: DOT
                        list: ops
                            HdlValueId: result
                            HdlValueId: data
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: get
                            HdlOp: DOT
                                list: ops
                                    HdlOp: DOT
                                        list: ops
                                            HdlValueId: msg
                                            HdlValueId: data
                                    HdlValueId: data
                            HdlOp: ADD
                                list: ops
                                    HdlValueInt: 1
                                    HdlValueId: i
    UPD HdlOp@@TO to TO
        INS list@@ops to TO
        INS HdlOp@@SUB to ops
        UPD HdlOp@@SUB to SUB
            INS HdlValueInt@@1 to ops

UPD HdlFunctionDef@@copy to copy
    UPD list@@body to ops
    MOV list@@body to copy
    list: body
        HdlIdDef: result
            HdlValueId: msg_t
            HdlValueId: msg
            HdlDirection: INTERNAL
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: copy
                    HdlOp: DOT
                        list: ops
                            HdlValueId: msg
                            HdlValueId: data
            HdlOp: DOT
                list: ops
                    HdlValueId: result
                    HdlValueId: data
        HdlStmReturn: result
            HdlValueId: result

DEL HdlStmAssign@@ from body


CommitId: f046e9d800bd6561abdb52b3ea1ce61304ded9db
adds transaction record to avalon stream (#381)
--- a/vunit/vhdl/verification_components/src/avalon_sink.vhd
+++ b/vunit/vhdl/verification_components/src/avalon_sink.vhd
@@ -36,11 +36,12 @@ begin
     variable reply_msg, msg : msg_t;
     variable msg_type : msg_type_t;
     variable rnd : RandomPType;
+    variable avalon_stream_transaction : avalon_stream_transaction_t(data(data'range));
   begin
     receive(net, sink.p_actor, msg);
     msg_type := message_type(msg);
 
-    if msg_type = stream_pop_msg then
+    if msg_type = stream_pop_msg or msg_type = avalon_stream_transaction_msg then
       -- Loop till got valid data
       loop
         while rnd.Uniform(0.0, 1.0) > sink.ready_high_probability loop

ParseResult:
INS HdlIdDef@@avalon_stream_transaction to body
HdlIdDef: avalon_stream_transaction
    HdlOp: INDEX
        list: ops
            HdlValueId: avalon_stream_transaction_t
            HdlOp: CALL
                list: ops
                    HdlValueId: data
                    HdlOp: APOSTROPHE
                        list: ops
                            HdlValueId: data
                            HdlValueId: range
    HdlDirection: INTERNAL

UPD HdlStmIf@@ to 
    INS HdlOp@@OR to 
    UPD HdlOp@@OR to OR
        INS list@@ops to OR
        INS HdlOp@@EQ to ops
        HdlOp: EQ
            list: ops
                HdlValueId: msg_type
                HdlValueId: avalon_stream_transaction_msg

UPD HdlStmIf@@ to 
    MOV HdlOp@@EQ to 
    HdlOp: EQ
        list: ops
            HdlValueId: msg_type
            HdlValueId: stream_pop_msg


CommitId: f046e9d800bd6561abdb52b3ea1ce61304ded9db
adds transaction record to avalon stream (#381)
--- a/vunit/vhdl/verification_components/src/avalon_sink.vhd
+++ b/vunit/vhdl/verification_components/src/avalon_sink.vhd
@@ -50,7 +51,12 @@ begin
         wait until ready = '1' and rising_edge(clk);
         if valid = '1' then
           reply_msg := new_msg;
-          push_std_ulogic_vector(reply_msg, data);
+          if msg_type = avalon_stream_transaction_msg then
+            avalon_stream_transaction.data := data;
+            push_avalon_stream_transaction(reply_msg, avalon_stream_transaction);
+          else
+            push_std_ulogic_vector(reply_msg, data);
+          end if;
           reply(net, msg, reply_msg);
           ready <= '0';
           exit;
ParseResult:
UPD HdlStmIf@@ to 
    INS HdlOp@@OR to 
    UPD HdlOp@@OR to OR
        INS list@@ops to OR
        INS HdlOp@@EQ to ops
        HdlOp: EQ
            list: ops
                HdlValueId: msg_type
                HdlValueId: avalon_stream_transaction_msg

UPD HdlStmIf@@ to 
    MOV HdlOp@@EQ to 
    HdlOp: EQ
        list: ops
            HdlValueId: msg_type
            HdlValueId: stream_pop_msg

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: push_std_ulogic_vector
                HdlValueId: reply_msg
                HdlValueId: data


CommitId: 53c1546040f6ea6ddf556424a35dfdaced7da34a
Merge pull request #378 from eschmidscs/wbm_wait
--- a/vunit/vhdl/verification_components/src/wishbone_master.vhd
+++ b/vunit/vhdl/verification_components/src/wishbone_master.vhd
@@ -98,6 +98,9 @@ begin
         request_msg := null_msg;
 
       elsif msg_type = wait_until_idle_msg then
+        if cycle then
+          wait until not cycle;
+        end if;
         handle_wait_until_idle(net, msg_type, request_msg);
 
       else
ParseResult:
INS HdlStmIf@@ to body
HdlStmIf
    HdlValueId: cycle
    HdlStmBlock: SEQ
        list: body
            HdlStmWait:}]} ]
                list: val
                    HdlOp: NEG
                        list: ops
                            HdlOp: NEG
                                list: ops
                                    HdlValueId: cycle
    list: elifs


CommitId: a55b6cd01ff19ab978759bf97b4153ddccdfe37c
Allow VC logger to be used in memory error logs
--- a/vunit/vhdl/bfm/src/axi_read_slave.vhd
+++ b/vunit/vhdl/bfm/src/axi_read_slave.vhd
@@ -16,8 +16,7 @@ context work.com_context;
 
 entity axi_read_slave is
   generic (
-    axi_slave : axi_slave_t;
-    memory : memory_t);
+    axi_slave : axi_slave_t);
   port (
     aclk : in std_logic;
 

ParseResult:
DEL HdlIdDef@@memory from params
HdlIdDef: memory
    HdlValueId: memory_t
    HdlDirection: IN


CommitId: a55b6cd01ff19ab978759bf97b4153ddccdfe37c
Allow VC logger to be used in memory error logs
--- a/vunit/vhdl/bfm/src/axi_read_slave.vhd
+++ b/vunit/vhdl/bfm/src/axi_read_slave.vhd
@@ -88,7 +87,7 @@ begin
         rvalid <= '1';
         for j in 0 to burst.size-1 loop
           idx := (address + j) mod self.data_size;
-          rdata(8*idx+7 downto 8*idx) <= std_logic_vector(to_unsigned(read_byte(memory, address+j, check_permissions => true), 8));
+          rdata(8*idx+7 downto 8*idx) <= std_logic_vector(to_unsigned(read_byte(axi_slave.p_memory, address+j, check_permissions => true), 8));
         end loop;
 
         if burst.burst_type = axi_burst_type_incr then
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@INDEX to INDEX
            UPD HdlOp@@INDEX to INDEX
                INS HdlOp@@DOT to ops
                UPD HdlOp@@DOT to DOT
                    INS list@@ops to DOT
                    INS HdlValueId@@axi_slave to ops

UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@INDEX to INDEX
            UPD HdlOp@@INDEX to INDEX
                UPD HdlValueId@@memory to p_memory
                MOV HdlValueId@@memory to ops
                HdlValueId: memory


CommitId: fbdb49dce691a155ac9e182859d80657048297b1
Merge pull request #420 from olafvandenberg/fix/axi_stream_master_clock_alignment
--- a/vunit/vhdl/verification_components/src/axi_stream_master.vhd
+++ b/vunit/vhdl/verification_components/src/axi_stream_master.vhd
@@ -123,4 +154,4 @@ begin
       );
   end generate axi_stream_protocol_checker_generate;
 
-end architecture;
+end architecture;
\ No newline at end of file
ParseResult:
UPD HdlStmWhile@@ to 
    INS HdlOp@@NEG to 
    HdlOp: NEG
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: is_empty
                    HdlValueId: message_queue
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        INS HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: delete
                HdlValueId: msg

UPD HdlStmIf@@ to 
    INS HdlOp@@EQ to 
    HdlOp: EQ
        list: ops
            HdlValueId: msg_type
            HdlValueId: wait_for_time_msg
    INS HdlStmBlock@@SEQ to 
    INS list@@elifs to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    INS tuple@@ to elifs


CommitId: 1a1923390afef703c5f3ac580836021fc8a8e3ec
Merge pull request #434 from bradleyharden/test_modelsim_fixup
--- a/vunit/vhdl/verification_components/src/avalon_pkg.vhd
+++ b/vunit/vhdl/verification_components/src/avalon_pkg.vhd
@@ -45,7 +45,7 @@ package body avalon_pkg is
     return avalon_slave_t is
   begin
     return (p_actor => new_actor(name),
-            p_ack_actor => new_actor(name&"_ack"),
+            p_ack_actor => new_actor(name&" read-ack"),
             p_memory => to_vc_interface(memory, logger),
             p_logger => logger,
             readdatavalid_high_probability => readdatavalid_high_probability,
ParseResult:
UPD HdlStmReturn@@[{'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_actor',          {'__class__': 'HdlOp', 'fn': 'INDEX', 'ops': ['new_actor', 'name']}]} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_ack_actor',          {'__class__': 'HdlOp',           'fn': 'INDEX',           'ops': ['new_actor',                   {'__class__': 'HdlOp',                    'fn': 'CONCAT',                    'ops': ['name', {'__class__': 'str', 'val': '_ack'}]}]}]} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_memory',          {'__class__': 'HdlOp',           'fn': 'INDEX',           'ops': ['to_vc_interface', 'memory', 'logger']}]} , {'__class__': 'HdlOp', 'fn': 'MAP_ASSOCIATION', 'ops': ['p_logger', 'logger']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['readdatavalid_high_probability', 'readdatavalid_high_probability']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['waitrequest_high_probability', 'waitrequest_high_probability']} ] to [{'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_actor',          {'__class__': 'HdlOp', 'fn': 'INDEX', 'ops': ['new_actor', 'name']}]} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_ack_actor',          {'__class__': 'HdlOp',           'fn': 'INDEX',           'ops': ['new_actor',                   {'__class__': 'HdlOp',                    'fn': 'CONCAT',                    'ops': ['name',                            {'__class__': 'str', 'val': ' read-ack'}]}]}]} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_memory',          {'__class__': 'HdlOp',           'fn': 'INDEX',           'ops': ['to_vc_interface', 'memory', 'logger']}]} , {'__class__': 'HdlOp', 'fn': 'MAP_ASSOCIATION', 'ops': ['p_logger', 'logger']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['readdatavalid_high_probability', 'readdatavalid_high_probability']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['waitrequest_high_probability', 'waitrequest_high_probability']} ]


CommitId: e4f01d7b88f92fb7b34711a63d592f39aa99e29d
Work-around fix for #149
--- a/vunit/vhdl/com/src/com_debug_codec_builder.vhd
+++ b/vunit/vhdl/com/src/com_debug_codec_builder.vhd
@@ -95,9 +95,11 @@ package body com_debug_codec_builder_pkg is
     variable code   : out   string;
     variable length : out   natural) is
     variable final : line;
+    variable line_length : integer;
   begin
     if l.all /= "(" then
-      write(final, l.all(1 to l.all'length - 1));
+      line_length := l.all'length;
+      write(final, l.all(1 to line_length - 1));
       deallocate(l);
     else
       final := l;
ParseResult:
INS HdlIdDef@@line_length to body
HdlIdDef: line_length
    HdlValueId: integer
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to body

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@CALL to CALL
            UPD HdlOp@@INDEX to INDEX
                UPD HdlOp@@TO to TO
                    UPD HdlOp@@SUB to SUB
                        MOV HdlOp@@APOSTROPHE to ops
                        HdlOp: APOSTROPHE
                            list: ops
                                HdlOp: DOT
                                    list: ops
                                        HdlValueId: l
                                        HdlAll
                                HdlValueId: length

UPD HdlStmAssign@@ to 
    INS HdlValueId@@line_length to 

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@CALL to CALL
            UPD HdlOp@@INDEX to INDEX
                UPD HdlOp@@TO to TO
                    UPD HdlOp@@SUB to SUB
                        INS HdlValueId@@line_length to ops


CommitId: 19c4d89270da4081ad0e4c79bafdefd4a8ba6980
Fixed memory leak when popping messages from queues.
--- a/vunit/vhdl/com/src/com_types.vhd
+++ b/vunit/vhdl/com/src/com_types.vhd
@@ -521,7 +521,7 @@ package body com_types_pkg is
   end;
 
   impure function pop(queue : queue_t) return msg_t is
-    variable ret_val : msg_t := new_msg;
+    variable ret_val : msg_t;
   begin
     ret_val.id          := pop(queue);
     ret_val.status      := com_status_t'val(integer'(pop(queue)));
ParseResult:
UPD HdlIdDef@@ret_val to ret_val
    DEL HdlValueId@@new_msg from ret_val


CommitId: 80da5e72bf1c5ebcae99667df537d6d8f6fe7ae5
Changed check_equal error messages to include both vector and integer representations of the left and right operands when at least one operand is a vector. Made
--- a/vhdl/check/src/check.vhd
+++ b/vhdl/check/src/check.vhd
@@ -1554,7 +1554,7 @@ package body check_pkg is
   begin
     -- pragma translate_off
     check(checker, pass, got = expected,
-          equality_error_msg(to_string(got), to_string(expected), msg),
+          equality_error_msg(to_nibble_string(got) & " (" & to_integer_string(got) & ")", to_string(expected) & " (" & to_nibble_string(to_unsigned(expected, got'length)) & ")", msg),
           level, line_num, file_name);
     -- pragma translate_on
   end;

ParseResult:
UPD HdlFunctionDef@@check_equal to check_equal
    INS list@@body to check_equal
    INS HdlOp@@CALL to body
    UPD HdlOp@@CALL to CALL
        INS list@@ops to CALL
        INS HdlValueId@@check to ops
        INS HdlValueId@@checker to ops
        INS HdlValueId@@pass to ops
        INS HdlOp@@INDEX to ops
        INS HdlValueId@@level to ops
        INS HdlValueId@@line_num to ops
        INS HdlValueId@@file_name to ops
        UPD HdlOp@@INDEX to INDEX
            INS list@@ops to INDEX
            INS HdlValueId@@equality_error_msg to ops
            INS HdlOp@@CONCAT to ops
            HdlOp: CONCAT
                list: ops
                    HdlOp: CONCAT
                        list: ops
                            HdlOp: CONCAT
                                list: ops
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: to_nibble_string
                                            HdlValueId: got
                                    str
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: to_integer_string
                                    HdlValueId: got
                    str
            INS HdlOp@@CONCAT to ops
            INS HdlValueId@@msg to ops
            UPD HdlOp@@CONCAT to CONCAT
                INS list@@ops to CONCAT
                INS HdlOp@@CONCAT to ops
                INS str@@ to ops
                UPD HdlOp@@CONCAT to CONCAT
                    INS list@@ops to CONCAT
                    INS HdlOp@@CONCAT to ops
                    INS HdlOp@@INDEX to ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: to_nibble_string
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: to_unsigned
                                    HdlValueId: expected
                                    HdlOp: APOSTROPHE
                                        list: ops
                                            HdlValueId: got
                                            HdlValueId: length
                    UPD HdlOp@@CONCAT to CONCAT
                        INS list@@ops to CONCAT
                        INS str@@ to ops


CommitId: 80da5e72bf1c5ebcae99667df537d6d8f6fe7ae5
Changed check_equal error messages to include both vector and integer representations of the left and right operands when at least one operand is a vector. Made
--- a/vhdl/check/src/check.vhd
+++ b/vhdl/check/src/check.vhd
@@ -1630,7 +1630,7 @@ package body check_pkg is
   begin
     -- pragma translate_off
     check(checker, pass, got = expected,
-          equality_error_msg(to_string(got), to_string(expected), msg),
+          equality_error_msg(to_string(got) & " (" & to_nibble_string(to_unsigned(got, expected'length)) & ")", to_nibble_string(expected) & " (" & to_integer_string(expected) & ")", msg),
           level, line_num, file_name);
     -- pragma translate_on
   end;

ParseResult:
UPD HdlFunctionDef@@check_equal to check_equal
    INS list@@body to check_equal
    INS HdlOp@@CALL to body
    UPD HdlOp@@CALL to CALL
        INS list@@ops to CALL
        INS HdlValueId@@check to ops
        INS HdlValueId@@checker to ops
        INS HdlValueId@@pass to ops
        INS HdlOp@@INDEX to ops
        INS HdlValueId@@level to ops
        INS HdlValueId@@line_num to ops
        INS HdlValueId@@file_name to ops
        UPD HdlOp@@INDEX to INDEX
            INS list@@ops to INDEX
            INS HdlValueId@@equality_error_msg to ops
            INS HdlOp@@CONCAT to ops
            INS HdlOp@@CONCAT to ops
            HdlOp: CONCAT
                list: ops
                    HdlOp: CONCAT
                        list: ops
                            HdlOp: CONCAT
                                list: ops
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: to_nibble_string
                                            HdlValueId: expected
                                    str
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: to_integer_string
                                    HdlValueId: expected
                    str
            INS HdlValueId@@msg to ops
            UPD HdlOp@@CONCAT to CONCAT
                INS list@@ops to CONCAT
                INS HdlOp@@CONCAT to ops
                INS str@@ to ops
                UPD HdlOp@@CONCAT to CONCAT
                    INS list@@ops to CONCAT
                    INS HdlOp@@INDEX to ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: to_nibble_string
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: to_unsigned
                                    HdlValueId: got
                                    HdlOp: APOSTROPHE
                                        list: ops
                                            HdlValueId: expected
                                            HdlValueId: length
                    UPD HdlOp@@CONCAT to CONCAT
                        INS str@@ to ops


CommitId: 80da5e72bf1c5ebcae99667df537d6d8f6fe7ae5
Changed check_equal error messages to include both vector and integer representations of the left and right operands when at least one operand is a vector. Made
--- a/vhdl/check/src/check.vhd
+++ b/vhdl/check/src/check.vhd
@@ -1706,7 +1706,7 @@ package body check_pkg is
   begin
     -- pragma translate_off
     check(checker, pass, got = expected,
-          equality_error_msg(to_string(got), to_string(expected), msg),
+          equality_error_msg(to_nibble_string(got) & " (" & to_integer_string(got) & ")", to_nibble_string(expected) & " (" & to_integer_string(expected) & ")", msg),
           level, line_num, file_name);
     -- pragma translate_on
   end;

ParseResult:
UPD HdlFunctionDef@@check_equal to check_equal
    INS list@@body to check_equal
    INS HdlOp@@CALL to body
    UPD HdlOp@@CALL to CALL
        INS list@@ops to CALL
        INS HdlValueId@@check to ops
        INS HdlValueId@@checker to ops
        INS HdlValueId@@pass to ops
        INS HdlOp@@INDEX to ops
        HdlOp: INDEX
            list: ops
                HdlValueId: equality_error_msg
                HdlOp: CONCAT
                    list: ops
                        HdlOp: CONCAT
                            list: ops
                                HdlOp: CONCAT
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: to_nibble_string
                                                HdlValueId: got
                                        str
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: to_integer_string
                                        HdlValueId: got
                        str
                HdlOp: CONCAT
                    list: ops
                        HdlOp: CONCAT
                            list: ops
                                HdlOp: CONCAT
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: to_nibble_string
                                                HdlValueId: expected
                                        str
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: to_integer_string
                                        HdlValueId: expected
                        str
                HdlValueId: msg
        INS HdlValueId@@level to ops
        INS HdlValueId@@line_num to ops
        INS HdlValueId@@file_name to ops


CommitId: 80da5e72bf1c5ebcae99667df537d6d8f6fe7ae5
Changed check_equal error messages to include both vector and integer representations of the left and right operands when at least one operand is a vector. Made
--- a/vhdl/check/src/check.vhd
+++ b/vhdl/check/src/check.vhd
@@ -1782,7 +1782,7 @@ package body check_pkg is
   begin
     -- pragma translate_off
     check(checker, pass, got = expected,
-          equality_error_msg(to_string(got), to_string(expected), msg),
+          equality_error_msg(to_nibble_string(got) & " (" & to_integer_string(got) & ")", to_nibble_string(expected) & " (" & to_integer_string(expected) & ")", msg),
           level, line_num, file_name);
     -- pragma translate_on
   end;

ParseResult:
UPD HdlFunctionDef@@check_equal to check_equal
    INS list@@body to check_equal
    INS HdlOp@@CALL to body
    UPD HdlOp@@CALL to CALL
        INS list@@ops to CALL
        INS HdlValueId@@check to ops
        INS HdlValueId@@checker to ops
        INS HdlValueId@@pass to ops
        INS HdlOp@@INDEX to ops
        HdlOp: INDEX
            list: ops
                HdlValueId: equality_error_msg
                HdlOp: CONCAT
                    list: ops
                        HdlOp: CONCAT
                            list: ops
                                HdlOp: CONCAT
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: to_nibble_string
                                                HdlValueId: got
                                        str
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: to_integer_string
                                        HdlValueId: got
                        str
                HdlOp: CONCAT
                    list: ops
                        HdlOp: CONCAT
                            list: ops
                                HdlOp: CONCAT
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: to_nibble_string
                                                HdlValueId: expected
                                        str
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: to_integer_string
                                        HdlValueId: expected
                        str
                HdlValueId: msg
        INS HdlValueId@@level to ops
        INS HdlValueId@@line_num to ops
        INS HdlValueId@@file_name to ops


CommitId: 80da5e72bf1c5ebcae99667df537d6d8f6fe7ae5
Changed check_equal error messages to include both vector and integer representations of the left and right operands when at least one operand is a vector. Made
--- a/vhdl/check/src/check.vhd
+++ b/vhdl/check/src/check.vhd
@@ -1858,7 +1858,7 @@ package body check_pkg is
   begin
     -- pragma translate_off
     check(checker, pass, got = expected,
-          equality_error_msg(to_string(got), to_string(expected), msg),
+          equality_error_msg(to_nibble_string(got) & " (" & to_integer_string(got) & ")", to_nibble_string(expected) & " (" & to_integer_string(expected) & ")", msg),
           level, line_num, file_name);
     -- pragma translate_on
   end;

ParseResult:
UPD HdlFunctionDef@@check_equal to check_equal
    INS list@@body to check_equal
    INS HdlOp@@CALL to body
    UPD HdlOp@@CALL to CALL
        INS list@@ops to CALL
        INS HdlValueId@@check to ops
        INS HdlValueId@@checker to ops
        INS HdlValueId@@pass to ops
        INS HdlOp@@INDEX to ops
        HdlOp: INDEX
            list: ops
                HdlValueId: equality_error_msg
                HdlOp: CONCAT
                    list: ops
                        HdlOp: CONCAT
                            list: ops
                                HdlOp: CONCAT
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: to_nibble_string
                                                HdlValueId: got
                                        str
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: to_integer_string
                                        HdlValueId: got
                        str
                HdlOp: CONCAT
                    list: ops
                        HdlOp: CONCAT
                            list: ops
                                HdlOp: CONCAT
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: to_nibble_string
                                                HdlValueId: expected
                                        str
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: to_integer_string
                                        HdlValueId: expected
                        str
                HdlValueId: msg
        INS HdlValueId@@level to ops
        INS HdlValueId@@line_num to ops
        INS HdlValueId@@file_name to ops


CommitId: 80da5e72bf1c5ebcae99667df537d6d8f6fe7ae5
Changed check_equal error messages to include both vector and integer representations of the left and right operands when at least one operand is a vector. Made
--- a/vhdl/check/src/check.vhd
+++ b/vhdl/check/src/check.vhd
@@ -1934,7 +1934,7 @@ package body check_pkg is
   begin
     -- pragma translate_off
     check(checker, pass, got = expected,
-          equality_error_msg(to_string(got), to_string(expected), msg),
+          equality_error_msg(to_nibble_string(got) & " (" & to_integer_string(got) & ")", to_nibble_string(expected) & " (" & to_integer_string(expected) & ")", msg),
           level, line_num, file_name);
     -- pragma translate_on
   end;

ParseResult:
UPD HdlFunctionDef@@check_equal to check_equal
    INS list@@body to check_equal
    INS HdlOp@@CALL to body
    UPD HdlOp@@CALL to CALL
        INS list@@ops to CALL
        INS HdlValueId@@check to ops
        INS HdlValueId@@checker to ops
        INS HdlValueId@@pass to ops
        INS HdlOp@@INDEX to ops
        HdlOp: INDEX
            list: ops
                HdlValueId: equality_error_msg
                HdlOp: CONCAT
                    list: ops
                        HdlOp: CONCAT
                            list: ops
                                HdlOp: CONCAT
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: to_nibble_string
                                                HdlValueId: got
                                        str
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: to_integer_string
                                        HdlValueId: got
                        str
                HdlOp: CONCAT
                    list: ops
                        HdlOp: CONCAT
                            list: ops
                                HdlOp: CONCAT
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: to_nibble_string
                                                HdlValueId: expected
                                        str
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: to_integer_string
                                        HdlValueId: expected
                        str
                HdlValueId: msg
        INS HdlValueId@@level to ops
        INS HdlValueId@@line_num to ops
        INS HdlValueId@@file_name to ops


CommitId: 267d91eef24f986b724421e91f0ddc652aab0007
Fixed lint issues in check package.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -1634,7 +1634,7 @@ package body check_pkg is
 
   begin
     -- pragma translate_off
-    loop
+    while true loop
       wait_on_edge(clock, en, active_clock_edge);
       clock_cycles_after_start_event := clock_cycles_after_start_event + 1;
 

ParseResult:
UPD HdlStmWhile@@ to 
    UPD HdlValueId@@True to true


CommitId: 267d91eef24f986b724421e91f0ddc652aab0007
Fixed lint issues in check package.
--- a/vunit/vhdl/check/src/check.vhd
+++ b/vunit/vhdl/check/src/check.vhd
@@ -2224,9 +2224,7 @@ package body check_pkg is
     constant value      : integer;
     constant min_length : natural)
     return signed is
-    variable ret_val         : signed(255 downto 0);
     variable min_value       : integer := -1;
-    variable max_value       : natural := 0;
     variable required_length : natural := 1;
   begin
     if value < 0 then
ParseResult:
DEL HdlIdDef@@ret_val from body
HdlIdDef: ret_val
    HdlOp: INDEX
        list: ops
            HdlValueId: signed
            HdlOp: DOWNTO
                list: ops
                    HdlValueInt: 255
    HdlDirection: INTERNAL

DEL HdlIdDef@@max_value from body
HdlIdDef: max_value
    HdlValueId: natural
    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: f6537bb85d5ef051583d49253de4b01f859c3e51
Update com.
--- a/vunit/vhdl/com/src/com_codec_api.vhd
+++ b/vunit/vhdl/com/src/com_codec_api.vhd
@@ -185,6 +188,14 @@ package com_codec_pkg is
     constant code : string)
     return float;
 
+  -----------------------------------------------------------------------------
+  -- VUnit types
+  -----------------------------------------------------------------------------
+  function encode(data : queue_t) return string;
+  function decode(code : string) return queue_t;
+  function encode(data : integer_vector_ptr_t) return string;
+  function decode(code : string) return integer_vector_ptr_t;
+
   -----------------------------------------------------------------------------
   -- Aliases
   -----------------------------------------------------------------------------
ParseResult:
INS HdlFunctionDef@@encode to objs
HdlFunctionDef: encode
    HdlValueId: string
    list: params
        HdlIdDef: data
            HdlValueId: queue_t
            HdlDirection: IN
    list: body

INS HdlFunctionDef@@decode to objs
HdlFunctionDef: decode
    HdlValueId: queue_t
    list: params
        HdlIdDef: code
            HdlValueId: string
            HdlDirection: IN
    list: body

INS HdlFunctionDef@@encode to objs
HdlFunctionDef: encode
    HdlValueId: string
    list: params
        HdlIdDef: data
            HdlValueId: integer_vector_ptr_t
            HdlDirection: IN
    list: body

INS HdlFunctionDef@@decode to objs
HdlFunctionDef: decode
    HdlValueId: integer_vector_ptr_t
    list: params
        HdlIdDef: code
            HdlValueId: string
            HdlDirection: IN
    list: body


CommitId: 7ba63aadaa8732e4359abd41672a8458858d3cbf
Fixed lint issues in com package.
--- a/vunit/vhdl/com/src/com_std_codec_builder.vhd
+++ b/vunit/vhdl/com/src/com_std_codec_builder.vhd
@@ -187,7 +187,7 @@ package body com_std_codec_builder_pkg is
     constant code   :       string;
     variable index  : inout positive;
     variable result : out   real) is
-    variable f64 : float64;
+    constant f64 : float64 := (others => '0');
   begin
     result := to_real(to_float(to_slv(from_byte_array(code(index to index + 7))), f64));
     index  := index + 8;

ParseResult:
UPD HdlIdDef@@f64 to f64
    INS list@@value to f64
    list: value
        HdlOp: MAP_ASSOCIATION
            list: ops
                type
                HdlValueInt: 0


CommitId: f31ea350f6c7ec4d5059549973c2b24d892a84fe
Use constant instead of alias to work arround Sigasi bug
--- a/vunit/vhdl/run/src/run_types.vhd
+++ b/vunit/vhdl/run/src/run_types.vhd
@@ -17,8 +17,8 @@ package run_types_pkg is
   constant max_n_test_cases : natural := 1024;
 
   -- Deprecated
-  alias max_locked_time_c is max_locked_time;
-  alias max_n_test_cases_c is max_n_test_cases;
+  constant max_locked_time_c : time := max_locked_time;
+  constant max_n_test_cases_c : natural := max_n_test_cases;
 
   subtype runner_cfg_t is string; -- Subtype deprecated, use string instead
   constant runner_cfg_default : string := "enabled_test_cases : __all__, output path : , active python runner : false";
ParseResult:
INS HdlIdDef@@max_locked_time_c to objs
HdlIdDef: max_locked_time_c
    HdlValueId: time
    HdlValueId: max_locked_time
    HdlDirection: INTERNAL

INS HdlIdDef@@max_n_test_cases_c to objs
HdlIdDef: max_n_test_cases_c
    HdlValueId: natural
    HdlValueId: max_n_test_cases
    HdlDirection: INTERNAL


CommitId: c7c580ce359291b428d4d3971de8788ba9687477
Move new_log_handler to public section and add default parameters (closes #566)
--- a/vunit/vhdl/logging/src/log_handler_pkg-body.vhd
+++ b/vunit/vhdl/logging/src/log_handler_pkg-body.vhd
@@ -61,8 +61,8 @@ package body log_handler_pkg is
   end;
 
   impure function new_log_handler(file_name : string;
-                                  format : log_format_t;
-                                  use_color : boolean) return log_handler_t is
+                                  format : log_format_t := verbose;
+                                  use_color : boolean := false) return log_handler_t is
     constant id : natural := get(next_log_handler_id, 0);
   begin
     set(next_log_handler_id, 0, id + 1);
ParseResult:
UPD HdlIdDef@@format to format
    INS HdlValueId@@verbose to format

UPD HdlIdDef@@use_color to use_color
    INS HdlValueId@@false to use_color


CommitId: c6ccaeeb5c4506a51c064b72e9aa48f688ee4508
fix: add mode assertions to -93 sources
--- a/vunit/vhdl/data_types/src/string_ptr_pkg-body-93.vhd
+++ b/vunit/vhdl/data_types/src/string_ptr_pkg-body-93.vhd
@@ -79,6 +79,11 @@ package body string_ptr_pkg is
     value  : val_t   := val_t'low
   ) return ptr_t is begin
     reallocate_ids(st.idxs, st.idx);
+    if mode = internal then
+      assert eid = -1 report "mode internal: id/=-1 not supported" severity error;
+    else
+      assert eid /= -1 report "mode external: id must be natural" severity error;
+    end if;
     case mode is
       when internal =>
         st.idxs(st.idx) := (
ParseResult:
INS HdlStmIf@@ to body
HdlStmIf
    HdlOp: EQ
        list: ops
            HdlValueId: mode
            HdlValueId: internal
    HdlStmBlock: SEQ
        list: body
            HdlOp: CALL
                list: ops
                    HdlValueId: assert
                    HdlOp: EQ
                        list: ops
                            HdlValueId: eid
                            HdlOp: MINUS_UNARY
                                list: ops
                                    HdlValueInt: 1
                    str
                    HdlValueId: error
    list: elifs
    HdlStmBlock: SEQ
        list: body
            HdlOp: CALL
                list: ops
                    HdlValueId: assert
                    HdlOp: NE
                        list: ops
                            HdlValueId: eid
                            HdlOp: MINUS_UNARY
                                list: ops
                                    HdlValueInt: 1
                    str
                    HdlValueId: error


CommitId: b502fabf8d1dc071b48b488e1aec2bc2b18adcc0
Remove default logging to file
--- a/vunit/vhdl/logging/src/log_deprecated_pkg.vhd
+++ b/vunit/vhdl/logging/src/log_deprecated_pkg.vhd
@@ -92,7 +92,7 @@ package body log_deprecated_pkg is
 
       impure function get_logger_display_handler return log_handler_t is
       begin
-        for idx in 0 to num_log_handlers(logger) loop
+        for idx in 0 to num_log_handlers(logger) - 1 loop
           if get_file_name(get_log_handler(logger, idx)) = stdout_file_name then
             return get_log_handler(logger, idx);
           end if;

ParseResult:
UPD HdlStmForIn@@ to 
    INS HdlOp@@TO to 
    UPD HdlOp@@TO to TO
        INS list@@ops to TO
        UPD HdlOp@@SUB to SUB
            INS HdlValueInt@@1 to ops

UPD HdlStmForIn@@ to 
    UPD HdlOp@@TO to SUB
    MOV HdlOp@@TO to 
    HdlOp: TO
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: num_log_handlers
                    HdlValueId: logger


CommitId: b502fabf8d1dc071b48b488e1aec2bc2b18adcc0
Remove default logging to file
--- a/vunit/vhdl/logging/src/log_deprecated_pkg.vhd
+++ b/vunit/vhdl/logging/src/log_deprecated_pkg.vhd
@@ -103,7 +103,7 @@ package body log_deprecated_pkg is
 
       impure function get_logger_file_handler return log_handler_t is
       begin
-        for idx in 0 to num_log_handlers(logger) loop
+        for idx in 0 to num_log_handlers(logger) - 1 loop
           if get_file_name(get_log_handler(logger, idx)) /= stdout_file_name then
             return get_log_handler(logger, idx);
           end if;

ParseResult:
UPD HdlStmForIn@@ to 
    INS HdlOp@@TO to 
    UPD HdlOp@@TO to TO
        INS list@@ops to TO
        UPD HdlOp@@SUB to SUB
            INS HdlValueInt@@1 to ops

UPD HdlStmForIn@@ to 
    UPD HdlOp@@TO to SUB
    MOV HdlOp@@TO to 
    HdlOp: TO
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: num_log_handlers
                    HdlValueId: logger


CommitId: b502fabf8d1dc071b48b488e1aec2bc2b18adcc0
Remove default logging to file
--- a/vunit/vhdl/logging/src/log_deprecated_pkg.vhd
+++ b/vunit/vhdl/logging/src/log_deprecated_pkg.vhd
@@ -120,7 +120,7 @@ package body log_deprecated_pkg is
       end if;
 
       logger_file_handler := get_logger_file_handler;
-      if new_logger or (logger_display_handler = null_handler) then
+      if new_logger or (logger_file_handler = null_handler) then
         logger_file_handler := new_log_handler(file_name, real_format(file_format), false);
       else
         init_log_handler(logger_file_handler, real_format(file_format), file_name, false);
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@OR to OR
        UPD HdlOp@@EQ to EQ
            UPD HdlValueId@@logger_display_handler to logger_file_handler


CommitId: 9e3e0a196d44984e47083d813c8c2547771d853f
Fixed reading output in com
--- a/vhdl/com/src/com.vhd
+++ b/vhdl/com/src/com.vhd
@@ -585,7 +585,7 @@ end;
 -- Network related
 -----------------------------------------------------------------------------
 procedure notify (
-  signal net : out network_t) is
+  signal net : inout network_t) is
 begin
   if net /= network_event then
     net <= network_event;

ParseResult:
UPD HdlIdDef@@net to net
    UPD HdlDirection@@OUT to INOUT


CommitId: 9e3e0a196d44984e47083d813c8c2547771d853f
Fixed reading output in com
--- a/vhdl/com/src/com.vhd
+++ b/vhdl/com/src/com.vhd
@@ -629,6 +629,7 @@ procedure send (
   variable receipt      : out   receipt_t;
   constant timeout      : in    time    := max_timeout_c;
   constant keep_message : in    boolean := false) is
+  variable send_message : boolean := true;
 begin
   if message = null then
     receipt.status := null_message_error;

ParseResult:
INS HdlIdDef@@send_message to body
HdlIdDef: send_message
    HdlValueId: boolean
    HdlValueId: true
    HdlDirection: INTERNAL


CommitId: 9e3e0a196d44984e47083d813c8c2547771d853f
Fixed reading output in com
--- a/vhdl/com/src/com.vhd
+++ b/vhdl/com/src/com.vhd
@@ -646,14 +647,12 @@ begin
     wait on net until not messenger.inbox_is_full(receiver) for timeout;
     if messenger.inbox_is_full(receiver) then
       receipt.status := full_inbox_error;
+      send_message := false;
     end if;
   end if;
 
-  if receipt.status = ok then
+  if send_message then
     messenger.send(message.sender, receiver, message.request_id, message.payload.all, receipt);
-  end if;
-
-  if receipt.status = ok then
     notify(net);
   end if;
 
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        UPD HdlOp@@DOT to DOT
            UPD HdlValueId@@status to send_message
            MOV HdlValueId@@status to ops
            HdlValueId: status
            DEL HdlValueId@@receipt from ops
            DEL list@@ops from DOT
        DEL HdlOp@@DOT from ops
        DEL HdlValueId@@ok from ops
        DEL list@@ops from EQ
    DEL HdlOp@@EQ from 

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: notify
                HdlValueId: net
        DEL list@@body from SEQ
    DEL HdlOp@@EQ from 
    HdlOp: EQ
        list: ops
            HdlOp: DOT
                list: ops
                    HdlValueId: receipt
                    HdlValueId: status
            HdlValueId: ok
    DEL HdlStmBlock@@SEQ from 
    DEL list@@elifs from 

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: false
    HdlValueId: send_message

DEL HdlStmIf@@ from body


CommitId: c7c580ce359291b428d4d3971de8788ba9687477
Move new_log_handler to public section and add default parameters (closes #566)
--- a/vunit/vhdl/logging/src/log_handler_pkg.vhd
+++ b/vunit/vhdl/logging/src/log_handler_pkg.vhd
@@ -55,6 +55,10 @@ package log_handler_pkg is
                        variable format : out log_format_t;
                        variable use_color : out boolean);
 
+  impure function new_log_handler(file_name : string;
+                                  format : log_format_t := verbose;
+                                  use_color : boolean := false) return log_handler_t;
+
   ---------------------------------------------
   -- Private parts not intended for public use
   ---------------------------------------------

ParseResult:
INS HdlFunctionDef@@new_log_handler to objs

UPD HdlFunctionDef@@new_log_handler to new_log_handler
    INS HdlValueId@@log_handler_t to new_log_handler
    INS list@@params to new_log_handler
    INS list@@body to new_log_handler

INS HdlIdDef@@format to params
HdlIdDef: format
    HdlValueId: log_format_t
    HdlValueId: verbose
    HdlDirection: IN

INS HdlIdDef@@use_color to params
HdlIdDef: use_color
    HdlValueId: boolean
    HdlValueId: false
    HdlDirection: IN


CommitId: c7c580ce359291b428d4d3971de8788ba9687477
Move new_log_handler to public section and add default parameters (closes #566)
--- a/vunit/vhdl/logging/src/log_handler_pkg.vhd
+++ b/vunit/vhdl/logging/src/log_handler_pkg.vhd
@@ -71,10 +75,6 @@ package log_handler_pkg is
                            line_num : natural := 0;
                            file_name : string := "");
 
-  impure function new_log_handler(file_name : string;
-                                  format : log_format_t;
-                                  use_color : boolean) return log_handler_t;
-
   procedure init_log_handler(log_handler : log_handler_t;
                              format : log_format_t;
                              file_name : string;
ParseResult:
MOV HdlIdDef@@file_name to params
HdlIdDef: file_name
    HdlValueId: string
    HdlDirection: IN

UPD HdlFunctionDef@@new_log_handler to new_log_handler
    DEL HdlValueId@@log_handler_t from new_log_handler
    DEL list@@params from new_log_handler
    DEL list@@body from new_log_handler

DEL HdlIdDef@@format from params
HdlIdDef: format
    HdlValueId: log_format_t
    HdlDirection: IN

DEL HdlIdDef@@use_color from params
HdlIdDef: use_color
    HdlValueId: boolean
    HdlDirection: IN

DEL HdlFunctionDef@@new_log_handler from objs


CommitId: 97dadd1ac03a4526b736623b97f34d086b95b4b6
Moved com codecs to datatypes. Removed support for debug codecs.
--- a/vunit/vhdl/data_types/src/string_ptr_pkg.vhd
+++ b/vunit/vhdl/data_types/src/string_ptr_pkg.vhd
@@ -29,4 +29,10 @@ package string_ptr_pkg is
   procedure reallocate(ptr : string_ptr_t; value : string);
   procedure resize(ptr : string_ptr_t; length : natural; drop : natural := 0);
   impure function to_string(ptr : string_ptr_t) return string;
+  function encode(data : string_ptr_t) return string;
+  function decode(code : string) return string_ptr_t;
+  procedure decode (constant code : string; variable index : inout positive; variable result : out string_ptr_t);
+  alias encode_string_ptr_t is encode[string_ptr_t return string];
+  alias decode_string_ptr_t is decode[string return string_ptr_t];
+
 end package;
ParseResult:
INS HdlFunctionDef@@encode to objs
HdlFunctionDef: encode
    HdlValueId: string
    list: params
        HdlIdDef: data
            HdlValueId: string_ptr_t
            HdlDirection: IN
    list: body

INS HdlFunctionDef@@decode to objs
HdlFunctionDef: decode
    HdlValueId: string_ptr_t
    list: params
        HdlIdDef: code
            HdlValueId: string
            HdlDirection: IN
    list: body

INS HdlFunctionDef@@decode to objs
HdlFunctionDef: decode
    list: params
        HdlIdDef: code
            HdlValueId: string
            HdlDirection: INTERNAL
        HdlIdDef: index
            HdlValueId: positive
            HdlDirection: INOUT
        HdlIdDef: result
            HdlValueId: string_ptr_t
            HdlDirection: OUT
    list: body


CommitId: 4d38b358430c75bd822e0c6f812d70836d29b3aa
Make memory permission checking off by default.
--- a/vunit/vhdl/bfm/src/memory_pkg.vhd
+++ b/vunit/vhdl/bfm/src/memory_pkg.vhd
@@ -56,27 +56,27 @@ package memory_pkg is
   -- Return the number of allocated bytes in the memory
   impure function num_bytes(memory : memory_t) return natural;
 
-  procedure write_byte(memory : memory_t; address : natural; byte : byte_t; ignore_permissions : boolean := false);
-  impure function read_byte(memory : memory_t; address : natural; ignore_permissions : boolean := false) return byte_t;
+  procedure write_byte(memory : memory_t; address : natural; byte : byte_t; check_permissions : boolean := false);
+  impure function read_byte(memory : memory_t; address : natural; check_permissions : boolean := false) return byte_t;
 
   procedure write_word(memory : memory_t;
                        address : natural;
                        word : std_logic_vector;
                        big_endian : boolean := false;
-                       ignore_permissions : boolean := false);
+                       check_permissions : boolean := false);
 
   impure function read_word(memory : memory_t;
                             address : natural;
                             bytes_per_word : positive;
                             big_endian : boolean := false;
-                            ignore_permissions : boolean := false) return std_logic_vector;
+                            check_permissions : boolean := false) return std_logic_vector;
 
   procedure write_integer(memory : memory_t;
                           address : natural;
                           word : integer;
                           bytes_per_word : natural range 1 to 4 := 4;
                           big_endian : boolean := false;
-                          ignore_permissions : boolean := false);
+                          check_permissions : boolean := false);
 
   -- Check that all expected bytes was written to addresses within alloc
   procedure check_expected_was_written(alloc : alloc_t);
ParseResult:
UPD HdlIdDef@@ignore_permissions to check_permissions

UPD HdlIdDef@@ignore_permissions to check_permissions

UPD HdlIdDef@@ignore_permissions to check_permissions

UPD HdlIdDef@@ignore_permissions to check_permissions

UPD HdlIdDef@@ignore_permissions to check_permissions


CommitId: 7358afdd6176d8aa24162d56b15db55a428dcf77
Fixed core_pkg corruption
--- a/vunit/vhdl/core/src/core_pkg.vhd
+++ b/vunit/vhdl/core/src/core_pkg.vhd
@@ -62,7 +62,7 @@ package body core_pkg is
     return state;
   end;
 
-  constant core_failure_mock_state : integer_vector_ptr_t := new_integer_vector_ptr(core_failure_mock_state_length, value => 0);
+  constant core_failure_mock_state : integer_vector_ptr_t := new_core_failure_mock_state;
 
   procedure mock_core_failure is
   begin
ParseResult:
UPD HdlIdDef@@core_failure_mock_state to core_failure_mock_state
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@core_failure_mock_state_length to new_core_failure_mock_state
        MOV HdlValueId@@core_failure_mock_state_length to ops
        HdlValueId: core_failure_mock_state_length
        DEL HdlValueId@@new_integer_vector_ptr from ops
        DEL HdlOp@@ARROW from ops
        HdlOp: ARROW
            list: ops
                HdlValueId: value
        DEL list@@ops from INDEX
    DEL HdlOp@@INDEX from core_failure_mock_state


CommitId: 84109e778c3b562d1745ea30339a19cd24d1d9e1
Default check logger is named check again
--- a/vunit/vhdl/check/src/checker_pkg-body.vhd
+++ b/vunit/vhdl/check/src/checker_pkg-body.vhd
@@ -22,11 +22,6 @@ package body checker_pkg is
     return new_checker(get_logger(logger_name), default_log_level);
   end;
 
-  impure function new_checker(default_log_level : log_level_t := error) return checker_t is
-  begin
-    return new_checker(default_logger, default_log_level);
-  end;
-
   impure function new_checker(logger            : logger_t;
                               default_log_level : log_level_t := error) return checker_t is
     variable checker : checker_t;
ParseResult:
DEL HdlFunctionDef@@new_checker from objs
HdlFunctionDef: new_checker
    HdlValueId: checker_t
    list: params
        HdlIdDef: default_log_level
            HdlValueId: log_level_t
            HdlValueId: error
            HdlDirection: IN
    list: body
        HdlStmReturn: {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops':} 
            HdlOp: INDEX
                list: ops
                    HdlValueId: new_checker
                    HdlValueId: default_logger
                    HdlValueId: default_log_level


CommitId: 1a1923390afef703c5f3ac580836021fc8a8e3ec
Merge pull request #434 from bradleyharden/test_modelsim_fixup
--- a/vunit/vhdl/verification_components/src/axi_stream_slave.vhd
+++ b/vunit/vhdl/verification_components/src/axi_stream_slave.vhd
@@ -98,7 +138,7 @@ begin
         protocol_checker => slave.p_protocol_checker)
       port map (
         aclk     => aclk,
-        areset_n => open,
+        areset_n => areset_n,
         tvalid   => tvalid,
         tready   => tready,
         tdata    => tdata,
ParseResult:
UPD HdlStmWhile@@ to 
    INS HdlOp@@NEG to 
    HdlOp: NEG
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: is_empty
                    HdlValueId: message_queue
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    INS HdlOp@@EQ to 
    HdlOp: EQ
        list: ops
            HdlValueId: msg_type
            HdlValueId: wait_for_time_msg
    INS HdlStmBlock@@SEQ to 
    INS list@@elifs to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    INS tuple@@ to elifs
    tuple
        HdlOp: EQ
            list: ops
                HdlValueId: msg_type
                HdlValueId: notify_request_msg
        HdlStmBlock: SEQ
            list: body
    INS tuple@@ to elifs


CommitId: aede68068f86c9e0c95208fa3da9665054bc6060
Fixed missing request_id in reply messages.
--- a/vhdl/com/src/com.vhd
+++ b/vhdl/com/src/com.vhd
@@ -770,9 +794,10 @@ begin
   message        := new message_t;
   message.status := null_message_error;
   if messenger.has_messages(receiver) then
-    message.status := ok;
-    message.id     := messenger.get_first_message_id(receiver);
-    message.sender := messenger.get_first_message_sender(receiver);
+    message.status     := ok;
+    message.id         := messenger.get_first_message_id(receiver);
+    message.request_id := messenger.get_first_message_request_id(receiver);
+    message.sender     := messenger.get_first_message_sender(receiver);
     write(message.payload, messenger.get_first_message_payload(receiver));
     if delete_from_inbox then
       messenger.delete_first_envelope(receiver);

ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlOp: INDEX
        list: ops
            HdlOp: DOT
                list: ops
                    HdlValueId: messenger
                    HdlValueId: get_first_message_request_id
            HdlValueId: receiver
    HdlOp: DOT
        list: ops
            HdlValueId: message
            HdlValueId: request_id


CommitId: aede68068f86c9e0c95208fa3da9665054bc6060
Fixed missing request_id in reply messages.
--- a/vhdl/com/src/com.vhd
+++ b/vhdl/com/src/com.vhd
@@ -848,6 +873,7 @@ begin
   if messenger.has_reply_stash_message(receiver) then
     message.status := ok;
     message.id     := messenger.get_reply_stash_message_id(receiver);
+    message.request_id     := messenger.get_reply_stash_message_request_id(receiver);
     message.sender := messenger.get_reply_stash_message_sender(receiver);
     write(message.payload, messenger.get_reply_stash_message_payload(receiver));
     if clear_reply_stash then
ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlOp: INDEX
        list: ops
            HdlOp: DOT
                list: ops
                    HdlValueId: messenger
                    HdlValueId: get_reply_stash_message_request_id
            HdlValueId: receiver
    HdlOp: DOT
        list: ops
            HdlValueId: message
            HdlValueId: request_id


CommitId: 7f3877303724e15990ddeb71c3ec3ed2765a5f74
Updated com user guide and example testbench with the publisher/subscriber pattern. Fixed bugs.
--- a/vunit/vhdl/com/src/msg_types_pkg.vhd
+++ b/vunit/vhdl/com/src/msg_types_pkg.vhd
@@ -25,6 +25,8 @@ package msg_types_pkg is
   constant msg_types_logger : logger_t := get_logger("vunit_lib:msg_types_pkg");
 
   impure function new_msg_type(name : string) return msg_type_t;
+  impure function name( msg_type : msg_type_t) return string;
+
   procedure unexpected_msg_type(msg_type : msg_type_t;
                                     logger : logger_t := msg_types_logger);
 

ParseResult:
INS HdlFunctionDef@@name to objs
HdlFunctionDef: name
    HdlValueId: string
    list: params
        HdlIdDef: msg_type
            HdlValueId: msg_type_t
            HdlDirection: IN
    list: body


CommitId: 7f3877303724e15990ddeb71c3ec3ed2765a5f74
Updated com user guide and example testbench with the publisher/subscriber pattern. Fixed bugs.
--- a/vunit/vhdl/com/src/msg_types_pkg.vhd
+++ b/vunit/vhdl/com/src/msg_types_pkg.vhd
@@ -51,6 +53,11 @@ package body msg_types_pkg is
     return (p_code => code);
   end function;
 
+  impure function name( msg_type : msg_type_t) return string is
+  begin
+    return to_string(to_string_ptr(get(p_msg_types.p_name_ptrs, msg_type.p_code)));
+  end;
+
   constant message_handled : msg_type_t := new_msg_type("message handled");
 
   impure function is_valid(code : integer) return boolean is
ParseResult:
INS HdlFunctionDef@@name to objs
HdlFunctionDef: name
    HdlValueId: string
    list: params
        HdlIdDef: msg_type
            HdlValueId: msg_type_t
            HdlDirection: IN
    list: body
        HdlStmReturn: {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops':},                            {'__class__': 'HdlOp',                             'fn': 'DOT',                             'ops':}]}]}]} 
            HdlOp: INDEX
                list: ops
                    HdlValueId: to_string
                    HdlOp: CALL
                        list: ops
                            HdlValueId: to_string_ptr
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: get
                                    HdlOp: DOT
                                        list: ops
                                            HdlValueId: p_msg_types
                                            HdlValueId: p_name_ptrs
                                    HdlOp: DOT
                                        list: ops
                                            HdlValueId: msg_type
                                            HdlValueId: p_code


CommitId: 0dddf5bd73acc33d6ec0c93ac0342ad0a190da71
Fix Pop from empty queue error
--- a/vunit/vhdl/verification_components/src/wishbone_master.vhd
+++ b/vunit/vhdl/verification_components/src/wishbone_master.vhd
@@ -44,12 +44,16 @@ begin
     variable msg_type : msg_type_t;
     variable pending_acks : natural := 0;
     variable received_acks : natural := 0;
+    variable status		: com_status_t;
   begin
     cyc <= '0';
     stb <= '0';
     wait until rising_edge(clk);
     loop
-      receive(net, bus_handle.p_actor, request_msg);
+    	-- Cannot use receive, as it deletes the message
+      --receive(net, bus_handle.p_actor, request_msg);
+      wait_for_message(net, bus_handle.p_actor, status);
+      get_message(net, bus_handle.p_actor, request_msg);      
       msg_type := message_type(request_msg);
       if msg_type = bus_read_msg then
         adr <= pop_std_ulogic_vector(request_msg);
ParseResult:
INS HdlIdDef@@status to body
HdlIdDef: status
    HdlValueId: com_status_t
    HdlDirection: INTERNAL

UPD HdlStmWhile@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: get_message
                HdlValueId: net
                HdlOp: DOT
                    list: ops
                        HdlValueId: bus_handle
                        HdlValueId: p_actor
                HdlValueId: request_msg

UPD HdlStmWhile@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@CALL to CALL
            UPD HdlValueId@@receive to wait_for_message
            UPD HdlValueId@@request_msg to status


CommitId: 0d0b2391c34ccbbda3f389d581f72cb00b8b28a0
Updated test_runner_cleanup to fail on all checkers with n_failed > 0 and on all logger entries with level error and above.
--- a/vunit/vhdl/run/src/run.vhd
+++ b/vunit/vhdl/run/src/run.vhd
@@ -96,12 +98,12 @@ package body run_pkg is
 
     impure function check_logger_status(logger : logger_t) return boolean is
 
-      impure function add_suffix(str : string; num : natural) return string is
+      impure function entry_spelling(is_plural : boolean) return string is
       begin
-        if num = 1 then
-          return str;
+        if is_plural then
+          return "entries";
         end if;
-        return str & "s";
+        return "entry";
       end;
 
       variable child : logger_t;

ParseResult:
UPD HdlFunctionDef@@add_suffix to entry_spelling

UPD HdlIdDef@@str to is_plural

UPD HdlStmReturn@@{'__class__': 'HdlOp',  'fn': 'CONCAT',  'ops': ['str', {'__class__': 'str', 'val': 's'}]}  to entry

UPD HdlIdDef@@str to str
    UPD HdlValueId@@string to boolean

UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        UPD HdlValueId@@num to is_plural
        MOV HdlValueId@@num to ops
        HdlValueId: num
        DEL HdlValueInt@@1 from ops
        DEL list@@ops from EQ
    DEL HdlOp@@EQ from 

UPD HdlStmReturn@@str to entries

DEL HdlIdDef@@num from params
HdlIdDef: num
    HdlValueId: natural
    HdlDirection: IN

UPD HdlStmReturn@@str to str
    DEL HdlValueId@@str from str

UPD HdlStmReturn@@{'__class__': 'HdlOp',  'fn': 'CONCAT',  'ops': ['str', {'__class__': 'str', 'val': 's'}]}  to {'__class__': 'HdlOp',  'fn': 'CONCAT',  'ops': ['str', {'__class__': 'str', 'val': 's'}]} 
    DEL HdlOp@@CONCAT from {'__class__': 'HdlOp',  'fn': 'CONCAT',  'ops': ['str', {'__class__': 'str', 'val': 's'}]} 
    HdlOp: CONCAT
        list: ops
            HdlValueId: str
            str


CommitId: 0d0b2391c34ccbbda3f389d581f72cb00b8b28a0
Updated test_runner_cleanup to fail on all checkers with n_failed > 0 and on all logger entries with level error and above.
--- a/vunit/vhdl/run/src/run.vhd
+++ b/vunit/vhdl/run/src/run.vhd
@@ -150,6 +180,10 @@ package body run_pkg is
     wait for 0 ns;
     verbose(runner_trace_logger, "Entering test runner exit phase.");
 
+    if not check_checker_status then
+      return;
+    end if;
+
     if not check_logger_status(root_logger) then
       return;
     end if;
ParseResult:
INS HdlStmIf@@ to body
HdlStmIf
    HdlOp: NEG
        list: ops
            HdlValueId: check_checker_status
    HdlStmBlock: SEQ
        list: body
            HdlStmReturn
    list: elifs

UPD HdlStmForIn@@ to 
    INS list@@var_defs to 
    list: var_defs
        HdlValueId: i
    INS HdlOp@@TO to 
    HdlOp: TO
        list: ops
            HdlOp: SUB
                list: ops
                    HdlValueId: num_checkers
                    HdlValueInt: 1
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmIf@@ to 
    UPD HdlOp@@GT to GT
        INS list@@ops to GT
        INS HdlOp@@DOT to ops
        UPD HdlOp@@DOT to DOT
            INS HdlValueId@@n_failed to ops

UPD HdlStmIf@@ to 
    INS HdlOp@@EQ to 
    HdlOp: EQ
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: get_name
                    HdlValueId: checker
    INS HdlStmBlock@@SEQ to 
    INS list@@elifs to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        INS HdlOp@@CALL to body
        UPD HdlOp@@CALL to CALL
            INS list@@ops to CALL
            INS HdlOp@@CONCAT to ops
            HdlOp: CONCAT
                list: ops
                    HdlOp: CONCAT
                        list: ops
                            HdlOp: CONCAT
                                list: ops
                                    HdlOp: CONCAT
                                        list: ops
                                            str
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlOp: APOSTROPHE
                                                        list: ops
                                                            HdlValueId: integer
                                                            HdlValueId: image
                                                    HdlOp: DOT
                                                        list: ops
                                                            HdlValueId: stat
                                                            HdlValueId: n_failed
                                    str
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: check_spelling
                                    HdlOp: GT
                                        list: ops
                                            HdlOp: DOT
                                                list: ops
                                                    HdlValueId: stat
                                                    HdlValueId: n_failed
                                            HdlValueInt: 1
                    str
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        UPD HdlOp@@CALL to CALL
            INS HdlOp@@DOT to ops
            HdlOp: DOT
                list: ops
                    HdlValueId: core_pkg
                    HdlValueId: core_failure
            INS HdlOp@@CONCAT to ops
            UPD HdlOp@@CONCAT to CONCAT
                INS list@@ops to CONCAT
                INS HdlOp@@CONCAT to ops
                INS str@@ to ops
                UPD HdlOp@@CONCAT to CONCAT
                    INS list@@ops to CONCAT
                    INS HdlOp@@INDEX to ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: check_spelling
                            HdlOp: GT
                                list: ops
                                    HdlOp: DOT
                                        list: ops
                                            HdlValueId: stat
                                            HdlValueId: n_failed
                                    HdlValueInt: 1
                    UPD HdlOp@@CONCAT to CONCAT
                        UPD HdlOp@@CONCAT to CONCAT
                            UPD HdlOp@@INDEX to INDEX
                                INS HdlOp@@DOT to ops
                                UPD HdlOp@@DOT to DOT
                                    INS list@@ops to DOT
                                    INS HdlValueId@@n_failed to ops


CommitId: 79f4e1238c9864b01157d7ab546b720ad48c0081
Make fail_on_warning first parameter of test_runner_cleanup.
--- a/vunit/vhdl/run/src/run.vhd
+++ b/vunit/vhdl/run/src/run.vhd
@@ -92,9 +92,9 @@ package body run_pkg is
 
   procedure test_runner_cleanup (
     signal runner: inout runner_sync_t;
+    fail_on_warning : boolean := false;
     allow_disabled_errors : boolean := false;
-    allow_disabled_failures : boolean := false;
-    fail_on_warning : boolean := false) is
+    allow_disabled_failures : boolean := false) is
   begin
     set_phase(runner_state, test_runner_cleanup);
     runner.phase <= test_runner_cleanup;
ParseResult:
MOV HdlIdDef@@fail_on_warning to params
HdlIdDef: fail_on_warning
    HdlValueId: boolean
    HdlValueId: false
    HdlDirection: IN


CommitId: 1a1923390afef703c5f3ac580836021fc8a8e3ec
Merge pull request #434 from bradleyharden/test_modelsim_fixup
--- a/vunit/vhdl/data_types/src/queue_pkg.vhd
+++ b/vunit/vhdl/data_types/src/queue_pkg.vhd
@@ -128,17 +128,17 @@ package queue_pkg is
   alias push_time is push[queue_t, time];
   alias pop_time is pop[queue_t return time];
 
-  procedure push(queue : queue_t; value : integer_vector_ptr_t);
+  procedure push(queue : queue_t; variable value : inout integer_vector_ptr_t);
   impure function pop(queue : queue_t) return integer_vector_ptr_t;
   alias push_integer_vector_ptr_ref is push[queue_t, integer_vector_ptr_t];
   alias pop_integer_vector_ptr_ref is pop[queue_t return integer_vector_ptr_t];
 
-  procedure push(queue : queue_t; value : string_ptr_t);
+  procedure push(queue : queue_t; variable value : inout string_ptr_t);
   impure function pop(queue : queue_t) return string_ptr_t;
   alias push_string_ptr_ref is push[queue_t, string_ptr_t];
   alias pop_string_ptr_ref is pop[queue_t return string_ptr_t];
 
-  procedure push(queue : queue_t; value : queue_t);
+  procedure push(queue : queue_t; variable value : inout queue_t);
   impure function pop(queue : queue_t) return queue_t;
   alias push_queue_ref is push[queue_t, queue_t];
   alias pop_queue_ref is pop[queue_t return queue_t];
ParseResult:
UPD HdlIdDef@@value to value
    UPD HdlDirection@@IN to INOUT

UPD HdlIdDef@@value to value
    UPD HdlDirection@@IN to INOUT

UPD HdlIdDef@@value to value
    UPD HdlDirection@@IN to INOUT


CommitId: f046e9d800bd6561abdb52b3ea1ce61304ded9db
adds transaction record to avalon stream (#381)
--- a/vunit/vhdl/verification_components/src/avalon_source.vhd
+++ b/vunit/vhdl/verification_components/src/avalon_source.vhd
@@ -35,18 +35,24 @@ begin
     variable msg : msg_t;
     variable msg_type : msg_type_t;
     variable rnd : RandomPType;
+    variable avalon_stream_transaction : avalon_stream_transaction_t(data(data'range));
   begin
     receive(net, source.p_actor, msg);
     msg_type := message_type(msg);
 
     handle_sync_message(net, msg_type, msg);
 
-    if msg_type = stream_push_msg then
+    if msg_type = stream_push_msg or msg_type = avalon_stream_transaction_msg then
       while rnd.Uniform(0.0, 1.0) > source.valid_high_probability loop
         wait until rising_edge(clk);
       end loop;
       valid <= '1';
-      data <= pop_std_ulogic_vector(msg);
+      if msg_type = avalon_stream_transaction_msg then
+        pop_avalon_stream_transaction(msg, avalon_stream_transaction);
+        data <= avalon_stream_transaction.data;
+      else
+        data <= pop_std_ulogic_vector(msg);
+      end if;
       wait until (valid and ready) = '1' and rising_edge(clk);
       valid <= '0';
     else
ParseResult:
INS HdlIdDef@@avalon_stream_transaction to body
HdlIdDef: avalon_stream_transaction
    HdlOp: INDEX
        list: ops
            HdlValueId: avalon_stream_transaction_t
            HdlOp: CALL
                list: ops
                    HdlValueId: data
                    HdlOp: APOSTROPHE
                        list: ops
                            HdlValueId: data
                            HdlValueId: range
    HdlDirection: INTERNAL

UPD HdlStmIf@@ to 
    INS HdlOp@@OR to 
    UPD HdlOp@@OR to OR
        INS list@@ops to OR
        INS HdlOp@@EQ to ops
        HdlOp: EQ
            list: ops
                HdlValueId: msg_type
                HdlValueId: avalon_stream_transaction_msg

UPD HdlStmIf@@ to 
    MOV HdlOp@@EQ to 
    HdlOp: EQ
        list: ops
            HdlValueId: msg_type
            HdlValueId: stream_push_msg

INS HdlStmIf@@ to body

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlOp: INDEX
        list: ops
            HdlValueId: pop_std_ulogic_vector
            HdlValueId: msg
    HdlValueId: data


CommitId: 1fb8cf07c2dc93562ec0f067d13d6a541bfd5e99
Integrated AXI protocol checker into other AXI VCs. Some lint fixing.
--- a/vunit/vhdl/verification_components/src/axi_stream_pkg.vhd
+++ b/vunit/vhdl/verification_components/src/axi_stream_pkg.vhd
@@ -234,9 +306,9 @@ package body axi_stream_pkg is
   end;
 
   procedure push_axi_stream(signal net : inout network_t;
-                            axi_stream :       axi_stream_master_t;
-                            tdata      :       std_logic_vector;
-                            tlast      :       std_logic := '1') is
+                            axi_stream : axi_stream_master_t;
+                            tdata      : std_logic_vector;
+                            tlast      : std_logic := '1') is
     variable msg             : msg_t                                       := new_msg(push_axi_stream_msg);
     constant normalized_data : std_logic_vector(tdata'length - 1 downto 0) := tdata;
   begin

ParseResult:
UPD HdlStmReturn@@[{'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_type', 'custom_component']} , {'__class__': 'HdlOp', 'fn': 'MAP_ASSOCIATION', 'ops': ['p_actor', 'actor']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_data_length', 'data_length']} , {'__class__': 'HdlOp', 'fn': 'MAP_ASSOCIATION', 'ops': ['p_logger', 'logger']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_protocol_checker', 'p_protocol_checker']} ] to [{'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_type', 'custom_component']} , {'__class__': 'HdlOp', 'fn': 'MAP_ASSOCIATION', 'ops': ['p_actor', 'actor']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_data_length', 'data_length']} , {'__class__': 'HdlOp', 'fn': 'MAP_ASSOCIATION', 'ops': ['p_logger', 'logger']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_protocol_checker', 'p_protocol_checker']} ]
    INS HdlOp@@MAP_ASSOCIATION to val
    HdlOp: MAP_ASSOCIATION
        list: ops
            HdlValueId: p_type
            HdlValueId: custom_component
    INS HdlOp@@MAP_ASSOCIATION to val
    HdlOp: MAP_ASSOCIATION
        list: ops
            HdlValueId: p_protocol_checker
            HdlValueId: p_protocol_checker


CommitId: 1fb8cf07c2dc93562ec0f067d13d6a541bfd5e99
Integrated AXI protocol checker into other AXI VCs. Some lint fixing.
--- a/vunit/vhdl/verification_components/src/axi_stream_pkg.vhd
+++ b/vunit/vhdl/verification_components/src/axi_stream_pkg.vhd
@@ -252,9 +324,9 @@ package body axi_stream_pkg is
   end;
 
   procedure pop_axi_stream_transaction(
-    constant msg                    : in  msg_t;
+    constant msg                    : in msg_t;
     variable axi_stream_transaction : out axi_stream_transaction_t
-    ) is
+  ) is
   begin
     axi_stream_transaction.tdata := pop_std_ulogic_vector(msg);
     axi_stream_transaction.tlast := pop_boolean(msg);

ParseResult:
UPD HdlStmReturn@@[{'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_type', 'custom_component']} , {'__class__': 'HdlOp', 'fn': 'MAP_ASSOCIATION', 'ops': ['p_actor', 'actor']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_data_length', 'data_length']} , {'__class__': 'HdlOp', 'fn': 'MAP_ASSOCIATION', 'ops': ['p_logger', 'logger']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_max_waits', 'max_waits']} ] to [{'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_type', 'custom_component']} , {'__class__': 'HdlOp', 'fn': 'MAP_ASSOCIATION', 'ops': ['p_actor', 'actor']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_data_length', 'data_length']} , {'__class__': 'HdlOp', 'fn': 'MAP_ASSOCIATION', 'ops': ['p_logger', 'logger']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_max_waits', 'max_waits']} ]
    INS HdlOp@@MAP_ASSOCIATION to val
    HdlOp: MAP_ASSOCIATION
        list: ops
            HdlValueId: p_type
            HdlValueId: custom_component


CommitId: b423930d4337f4a463bc051bf4626d88525a1bbc
Pass sim
--- a/vunit/vhdl/verification_components/src/wishbone_master.vhd
+++ b/vunit/vhdl/verification_components/src/wishbone_master.vhd
@@ -80,9 +80,10 @@ begin
         -- TODO bus errors detection
         received_acks := received_acks +1;
         if pending_acks = received_acks then
+          info(bus_handle.p_logger, "finished wb cycle");
           -- End of wb cycle
           cyc <= '0';
-          wait until rising_edge(clk);
+          --wait until rising_edge(clk);
           pending_acks := 0;
           received_acks := 0;
         end if;
ParseResult:
UPD HdlStmWait@@[{'__class__': 'HdlOp',  'fn': 'NEG',  'ops': [{'__class__': 'HdlOp', 'fn': 'INDEX', 'ops': ['rising_edge', 'clk']}]} ] to [{'__class__': 'HdlOp',  'fn': 'NEG',  'ops': [{'__class__': 'HdlOp', 'fn': 'INDEX', 'ops': ['rising_edge', 'clk']}]} ]
    UPD HdlOp@@NEG to CALL
    MOV HdlOp@@NEG to val
    HdlOp: NEG
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: rising_edge
                    HdlValueId: clk
    UPD HdlOp@@NEG to NEG
        UPD HdlOp@@INDEX to DOT
        UPD HdlOp@@INDEX to INDEX
            UPD HdlValueId@@rising_edge to bus_handle
            UPD HdlValueId@@clk to p_logger
    DEL list@@val from [{'__class__': 'HdlOp',  'fn': 'NEG',  'ops': [{'__class__': 'HdlOp', 'fn': 'INDEX', 'ops': ['rising_edge', 'clk']}]} ]

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@CALL to CALL
            INS HdlValueId@@info to ops
            INS str@@ to ops

DEL HdlStmWait@@[{'__class__': 'HdlOp',  'fn': 'NEG',  'ops': [{'__class__': 'HdlOp', 'fn': 'INDEX', 'ops': ['rising_edge', 'clk']}]} ] from body


CommitId: f31ea350f6c7ec4d5059549973c2b24d892a84fe
Use constant instead of alias to work arround Sigasi bug
--- a/vunit/vhdl/check/src/check_deprecated_pkg.vhd
+++ b/vunit/vhdl/check/src/check_deprecated_pkg.vhd
@@ -77,7 +77,7 @@ package check_deprecated_pkg is
     return boolean;
 
   -- Deprecated constant with _c suffix. Use without suffix instead
-  alias check_result_tag_c is check_result_tag;
+  constant check_result_tag_c : string := check_result_tag;
 
 end package check_deprecated_pkg;
 
ParseResult:
INS HdlIdDef@@check_result_tag_c to objs
HdlIdDef: check_result_tag_c
    HdlValueId: string
    HdlValueId: check_result_tag
    HdlDirection: INTERNAL


CommitId: 1a1923390afef703c5f3ac580836021fc8a8e3ec
Merge pull request #434 from bradleyharden/test_modelsim_fixup
--- a/vunit/vhdl/run/src/runner_pkg.vhd
+++ b/vunit/vhdl/run/src/runner_pkg.vhd
@@ -527,7 +528,7 @@ package body runner_pkg is
   end;
 
   procedure set_timeout(runner : runner_t; timeout : time) is
-    constant new_value : string := time'image(timeout);
+    constant new_value : string := encode(timeout);
     variable timeout_ptr : string_ptr_t := to_string_ptr(get(runner.p_data, timeout_idx));
   begin
     if timeout_ptr = null_string_ptr then

ParseResult:
UPD HdlIdDef@@new_value to new_value
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@APOSTROPHE to APOSTROPHE
            UPD HdlValueId@@time to encode
            MOV HdlValueId@@time to ops
            HdlValueId: time
            DEL HdlValueId@@image from ops
            DEL list@@ops from APOSTROPHE
        DEL HdlOp@@APOSTROPHE from ops


CommitId: 1a1923390afef703c5f3ac580836021fc8a8e3ec
Merge pull request #434 from bradleyharden/test_modelsim_fixup
--- a/vunit/vhdl/run/src/runner_pkg.vhd
+++ b/vunit/vhdl/run/src/runner_pkg.vhd
@@ -541,7 +542,7 @@ package body runner_pkg is
   impure function get_timeout(runner : runner_t) return time is
     constant timeout_ptr : string_ptr_t := to_string_ptr(get(runner.p_data, timeout_idx));
   begin
-    return time'value(to_string(timeout_ptr));
+    return decode(to_string(timeout_ptr));
   end;
 
 end package body;
ParseResult:
UPD HdlStmReturn@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': [{'__class__': 'HdlOp', 'fn': 'APOSTROPHE', 'ops': ['time', 'value']},          {'__class__': 'HdlOp',           'fn': 'CALL',           'ops': ['to_string', 'timeout_ptr']}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['decode',          {'__class__': 'HdlOp',           'fn': 'CALL',           'ops': ['to_string', 'timeout_ptr']}]} 

UPD HdlStmReturn@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': [{'__class__': 'HdlOp', 'fn': 'APOSTROPHE', 'ops': ['time', 'value']},          {'__class__': 'HdlOp',           'fn': 'CALL',           'ops': ['to_string', 'timeout_ptr']}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': [{'__class__': 'HdlOp', 'fn': 'APOSTROPHE', 'ops': ['time', 'value']},          {'__class__': 'HdlOp',           'fn': 'CALL',           'ops': ['to_string', 'timeout_ptr']}]} 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@APOSTROPHE to APOSTROPHE
            UPD HdlValueId@@time to decode
            MOV HdlValueId@@time to ops
            HdlValueId: time
            DEL HdlValueId@@value from ops
            DEL list@@ops from APOSTROPHE
        DEL HdlOp@@APOSTROPHE from ops


CommitId: a66b46d36bec81bd6b827ba4d6af298e81cb8ec5
Fixed lint issues in com.
--- a/vunit/vhdl/com/src/com_codec_debug.vhd
+++ b/vunit/vhdl/com/src/com_codec_debug.vhd
@@ -37,7 +37,7 @@ package body com_codec_pkg is
   function decode (
     constant code : string)
     return real is
-    variable f64 : float64;
+    constant f64 : float64 := (others => '0');
   begin
     return to_real(from_string(code, f64));
   end;

ParseResult:
UPD HdlIdDef@@f64 to f64
    INS list@@value to f64
    list: value
        HdlOp: MAP_ASSOCIATION
            list: ops
                type
                HdlValueInt: 0


CommitId: a66b46d36bec81bd6b827ba4d6af298e81cb8ec5
Fixed lint issues in com.
--- a/vunit/vhdl/com/src/com_codec_debug.vhd
+++ b/vunit/vhdl/com/src/com_codec_debug.vhd
@@ -221,8 +221,8 @@ package body com_codec_pkg is
     constant range_left         : natural := decode(get_element(code, 1));
     constant range_right        : natural := decode(get_element(code, 2));
     constant is_ascending       : boolean := decode(get_element(code, 3));
-    variable ret_val_ascending  : range_t(range_left to range_right);
-    variable ret_val_descending : range_t(range_left downto range_right);
+    constant ret_val_ascending  : range_t(range_left to range_right) := (others => '0');
+    constant ret_val_descending : range_t(range_left downto range_right) := (others => '0');
   begin
     if is_ascending then
       return ret_val_ascending;

ParseResult:
UPD HdlIdDef@@ret_val_ascending to ret_val_ascending
    INS list@@value to ret_val_ascending
    list: value
        HdlOp: MAP_ASSOCIATION
            list: ops
                type
                HdlValueInt: 0

UPD HdlIdDef@@ret_val_descending to ret_val_descending
    INS list@@value to ret_val_descending
    list: value
        HdlOp: MAP_ASSOCIATION
            list: ops
                type
                HdlValueInt: 0


CommitId: a66b46d36bec81bd6b827ba4d6af298e81cb8ec5
Fixed lint issues in com.
--- a/vunit/vhdl/com/src/com_codec_debug.vhd
+++ b/vunit/vhdl/com/src/com_codec_debug.vhd
@@ -481,7 +481,6 @@ package body com_codec_pkg is
     return ieee.numeric_bit.signed is
     variable ret_val : ieee.numeric_bit.signed(get_range(code)'range) := (others => '0');
     variable l       : line;
-    variable length  : natural;
     variable index   : natural := 1;
   begin
     write(l, get_first_element(code));
ParseResult:
DEL HdlIdDef@@length from body
HdlIdDef: length
    HdlValueId: natural
    HdlDirection: INTERNAL


CommitId: 8c9023b123bad4fbab2f8a520899503c4a022bd8
Fixed some linting issues.
--- a/vunit/vhdl/com/src/com.vhd
+++ b/vunit/vhdl/com/src/com.vhd
@@ -537,8 +537,6 @@ package body com_pkg is
     constant receiver : in    actor_t;
     variable msg      : inout msg_t;
     constant timeout  : in    time := max_timeout_c) is
-    variable status                  : com_status_t;
-    variable started_with_full_inbox : boolean;
   begin
     receive(net, actor_vec_t'(0 => receiver), msg, timeout);
   end;
ParseResult:
DEL HdlIdDef@@status from body
HdlIdDef: status
    HdlValueId: com_status_t
    HdlDirection: INTERNAL

DEL HdlIdDef@@started_with_full_inbox from body
HdlIdDef: started_with_full_inbox
    HdlValueId: boolean
    HdlDirection: INTERNAL


CommitId: 1a1923390afef703c5f3ac580836021fc8a8e3ec
Merge pull request #434 from bradleyharden/test_modelsim_fixup
--- a/vunit/vhdl/verification_components/src/bus_master_pkg-body.vhd
+++ b/vunit/vhdl/verification_components/src/bus_master_pkg-body.vhd
@@ -171,6 +225,25 @@ package body bus_master_pkg is
     delete(reply_msg);
   end procedure;
 
+  procedure await_burst_read_bus_reply(signal net : inout network_t;
+                                 constant bus_handle : bus_master_t;
+                                 constant data : queue_t;
+                                 variable reference : inout bus_reference_t) is
+    variable reply_msg : msg_t;
+    alias request_msg : msg_t is reference;
+    variable d : std_logic_vector(bus_handle.p_data_length-1 downto 0);
+    variable burst_length : positive;
+  begin
+    receive_reply(net, request_msg, reply_msg);
+    burst_length := pop_integer(reply_msg);
+    for i in 0 to burst_length-1 loop
+      d := pop_std_ulogic_vector(reply_msg)(d'range);
+      push(data, d);
+    end loop;
+    delete(request_msg);
+    delete(reply_msg);
+  end procedure;
+
   -- Blocking read with immediate reply
   procedure read_bus(signal net : inout network_t;
                      constant bus_handle : bus_master_t;

ParseResult:
INS HdlFunctionDef@@await_burst_read_bus_reply to objs
HdlFunctionDef: await_burst_read_bus_reply
    list: params
        HdlIdDef: net
            HdlValueId: network_t
            HdlDirection: INOUT
        HdlIdDef: bus_handle
            HdlValueId: bus_master_t
            HdlDirection: INTERNAL
        HdlIdDef: data
            HdlValueId: queue_t
            HdlDirection: INTERNAL
        HdlIdDef: reference
            HdlValueId: bus_reference_t
            HdlDirection: INOUT
    list: body
        HdlIdDef: reply_msg
            HdlValueId: msg_t
            HdlDirection: INTERNAL
        HdlIdDef: d
            HdlOp: INDEX
                list: ops
                    HdlValueId: std_logic_vector
                    HdlOp: DOWNTO
                        list: ops
                            HdlOp: SUB
                                list: ops
                                    HdlOp: DOT
                                        list: ops
                                            HdlValueId: bus_handle
                                            HdlValueId: p_data_length
                                    HdlValueInt: 1
            HdlDirection: INTERNAL
        HdlIdDef: burst_length
            HdlValueId: positive
            HdlDirection: INTERNAL
        HdlOp: CALL
            list: ops
                HdlValueId: receive_reply
                HdlValueId: net
                HdlValueId: request_msg
                HdlValueId: reply_msg
        HdlStmAssign
            HdlOp: INDEX
                list: ops
                    HdlValueId: pop_integer
                    HdlValueId: reply_msg
            HdlValueId: burst_length
        HdlStmForIn
            list: var_defs
                HdlValueId: i
            HdlOp: TO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlValueId: burst_length
                            HdlValueInt: 1
            HdlStmBlock: SEQ
                list: body
                    HdlStmAssign
                        HdlOp: INDEX
                            list: ops
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: pop_std_ulogic_vector
                                        HdlValueId: reply_msg
                                HdlOp: APOSTROPHE
                                    list: ops
                                        HdlValueId: d
                                        HdlValueId: range
                        HdlValueId: d
                    HdlOp: CALL
                        list: ops
                            HdlValueId: push
                            HdlValueId: data
                            HdlValueId: d
        HdlOp: CALL
            list: ops
                HdlValueId: delete
                HdlValueId: request_msg
        HdlOp: CALL
            list: ops
                HdlValueId: delete
                HdlValueId: reply_msg


CommitId: 9e3e0a196d44984e47083d813c8c2547771d853f
Fixed reading output in com
--- a/vhdl/com/src/com_std_codec_builder.vhd
+++ b/vhdl/com/src/com_std_codec_builder.vhd
@@ -200,8 +200,9 @@ package body com_std_codec_builder_pkg is
     constant resolution  : time           := std.env.resolution_limit;
     variable code_int    : string(1 to 8) := code(index to index + 7);
     variable is_negative : boolean        := false;
+    variable r : time;
   begin
-    result := resolution * 0;
+    r := resolution * 0;
 
     if character'pos(code_int(1)) > 127 then
       code_int(1) := character'val(character'pos(code_int(1)) - 128);

ParseResult:
INS HdlIdDef@@r to body
HdlIdDef: r
    HdlValueId: time
    HdlDirection: INTERNAL

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@result to r


CommitId: 9e3e0a196d44984e47083d813c8c2547771d853f
Fixed reading output in com
--- a/vhdl/com/src/com_std_codec_builder.vhd
+++ b/vhdl/com/src/com_std_codec_builder.vhd
@@ -209,15 +210,16 @@ package body com_std_codec_builder_pkg is
     end if;
 
     for i in code_int'range loop
-      result := result * 256;
-      result := result + character'pos(code_int(i)) * resolution;
+      r := r * 256;
+      r := r + character'pos(code_int(i)) * resolution;
     end loop;
 
     if is_negative then
-      result := -1 * result;
+      r := -1 * r;
     end if;
 
     index := index + 8;
+    result := r;
   end procedure decode;
 
   procedure decode (
ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: r
    HdlValueId: result

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@result to r
    UPD HdlOp@@MUL to MUL
        UPD HdlValueId@@result to r

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@result to r
    UPD HdlOp@@ADD to ADD
        UPD HdlValueId@@result to r

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@result to r
    UPD HdlOp@@MINUS_UNARY to MINUS_UNARY
        UPD HdlOp@@MUL to MUL
            UPD HdlValueId@@result to r


CommitId: 1fb8cf07c2dc93562ec0f067d13d6a541bfd5e99
Integrated AXI protocol checker into other AXI VCs. Some lint fixing.
--- a/vunit/vhdl/verification_components/src/axi_stream_protocol_checker.vhd
+++ b/vunit/vhdl/verification_components/src/axi_stream_protocol_checker.vhd
@@ -23,7 +23,8 @@ entity axi_stream_protocol_checker is
     tvalid   : in std_logic;
     tready   : in std_logic := '1';
     tdata    : in std_logic_vector(data_length(protocol_checker) - 1 downto 0);
-    tlast    : in std_logic := '1'
+    tlast    : in std_logic := '1';
+    tid      : in std_logic_vector := ""
     );
 end entity;
 

ParseResult:
INS HdlIdDef@@tid to ports
HdlIdDef: tid
    HdlValueId: std_logic_vector
    HdlDirection: IN


CommitId: 1fb8cf07c2dc93562ec0f067d13d6a541bfd5e99
Integrated AXI protocol checker into other AXI VCs. Some lint fixing.
--- a/vunit/vhdl/verification_components/src/axi_stream_protocol_checker.vhd
+++ b/vunit/vhdl/verification_components/src/axi_stream_protocol_checker.vhd
@@ -38,12 +39,10 @@ architecture a of axi_stream_protocol_checker is
   constant rule8_checker : checker_t := new_checker(get_name(protocol_checker.p_logger) & ":rule 8");
   constant rule9_checker : checker_t := new_checker(get_name(protocol_checker.p_logger) & ":rule 9");
 
-  -- tid is yet to be supported but is kept internally to prepare some checks
-  -- that will depend on it once supported
-  constant tid : std_logic_vector(-1 downto 0) := x"";
-
   signal enable_rule1_check, enable_rule2_check, handshake_is_not_x : std_logic;
 begin
+  check_equal(tid'length, 0, result("for tid'length. tid is not supported"));
+
   handshake_is_not_x <= '1' when not is_x(tvalid) and not is_x(tready) else '0';
 
   -- AXI4STREAM_ERRM_TDATA_STABLE TDATA remains stable when TVALID is asserted,

ParseResult:
UPD HdlModuleDef@@axi_stream_protocol_checker-a to axi_stream_protocol_checker-a
    INS HdlOp@@CALL to objs
    HdlOp: CALL
        list: ops
            HdlValueId: check_equal
            HdlOp: APOSTROPHE
                list: ops
                    HdlValueId: tid
                    HdlValueId: length
            HdlOp: CALL
                list: ops
                    HdlValueId: result
                    str

DEL HdlIdDef@@tid from objs
HdlIdDef: tid
    HdlOp: INDEX
        list: ops
            HdlValueId: std_logic_vector
            HdlOp: DOWNTO
                list: ops
                    HdlOp: MINUS_UNARY
                        list: ops
                            HdlValueInt: 1
    HdlValueInt: value
    HdlDirection: INTERNAL


CommitId: 1fb8cf07c2dc93562ec0f067d13d6a541bfd5e99
Integrated AXI protocol checker into other AXI VCs. Some lint fixing.
--- a/vunit/vhdl/verification_components/src/axi_stream_protocol_checker.vhd
+++ b/vunit/vhdl/verification_components/src/axi_stream_protocol_checker.vhd
@@ -78,8 +77,8 @@ begin
     end loop;
     check(rule4_checker,
           n_clock_cycles <= protocol_checker.p_max_waits,
-          "Check failed for performance - tready active " & to_string(n_clock_cycles) &
-          " clock cycles after tvalid. Expected <= " & to_string(protocol_checker.p_max_waits) & " clock cycles.",
+          result("for performance - tready active " & to_string(n_clock_cycles) &
+          " clock cycles after tvalid. Expected <= " & to_string(protocol_checker.p_max_waits) & " clock cycles."),
           level => warning);
   end process;
 

ParseResult:
UPD HdlModuleDef@@axi_stream_protocol_checker-a to axi_stream_protocol_checker-a
    INS HdlOp@@CALL to objs
    HdlOp: CALL
        list: ops
            HdlValueId: check_equal
            HdlOp: APOSTROPHE
                list: ops
                    HdlValueId: tid
                    HdlValueId: length
            HdlOp: CALL
                list: ops
                    HdlValueId: result
                    str

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@CALL to CALL
            INS HdlOp@@CALL to ops
            UPD HdlOp@@CALL to CALL
                INS list@@ops to CALL
                INS HdlValueId@@result to ops

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@CALL to CALL
            MOV HdlOp@@CONCAT to ops
            HdlOp: CONCAT
                list: ops
                    HdlOp: CONCAT
                        list: ops
                            HdlOp: CONCAT
                                list: ops
                                    HdlOp: CONCAT
                                        list: ops
                                            str
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: to_string
                                                    HdlValueId: n_clock_cycles
                                    str
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: to_string
                                    HdlOp: DOT
                                        list: ops
                                            HdlValueId: protocol_checker
                                            HdlValueId: p_max_waits
                    str


CommitId: 1fb8cf07c2dc93562ec0f067d13d6a541bfd5e99
Integrated AXI protocol checker into other AXI VCs. Some lint fixing.
--- a/vunit/vhdl/verification_components/src/axi_stream_protocol_checker.vhd
+++ b/vunit/vhdl/verification_components/src/axi_stream_protocol_checker.vhd
@@ -126,7 +125,7 @@ begin
       wait_until(runner, test_runner_cleanup);
 
       if tid'length = 0 then
-        check(rule9_checker, get(active_streams, 0) = 0, "Packet incomplete.");
+        check(rule9_checker, get(active_streams, 0) = 0, result("for packet completion."));
       else
         for i in 0 to 2 * tid'length - 1 loop
           if get(active_streams, i) /= 0 then

ParseResult:
UPD HdlModuleDef@@axi_stream_protocol_checker-a to axi_stream_protocol_checker-a
    INS HdlOp@@CALL to objs
    HdlOp: CALL
        list: ops
            HdlValueId: check_equal
            HdlOp: APOSTROPHE
                list: ops
                    HdlValueId: tid
                    HdlValueId: length
            HdlOp: CALL
                list: ops
                    HdlValueId: result
                    str


CommitId: 1fb8cf07c2dc93562ec0f067d13d6a541bfd5e99
Integrated AXI protocol checker into other AXI VCs. Some lint fixing.
--- a/vunit/vhdl/verification_components/src/axi_stream_protocol_checker.vhd
+++ b/vunit/vhdl/verification_components/src/axi_stream_protocol_checker.vhd
@@ -139,7 +138,10 @@ begin
         end loop;
 
         if incomplete_streams /= null then
-          check_failed(rule9_checker, "Packet incomplete for the following streams: " & incomplete_streams.all & ".");
+          check_failed(rule9_checker, result("for packet completion for the following streams: " &
+            incomplete_streams.all & "."));
+        else
+          check_passed(rule9_checker, result("for packet completion."));
         end if;
       end if;
 
ParseResult:
UPD HdlModuleDef@@axi_stream_protocol_checker-a to axi_stream_protocol_checker-a
    INS HdlOp@@CALL to objs
    HdlOp: CALL
        list: ops
            HdlValueId: check_equal
            HdlOp: APOSTROPHE
                list: ops
                    HdlValueId: tid
                    HdlValueId: length
            HdlOp: CALL
                list: ops
                    HdlValueId: result
                    str


CommitId: a55b6cd01ff19ab978759bf97b4153ddccdfe37c
Allow VC logger to be used in memory error logs
--- a/vunit/vhdl/bfm/src/axi_write_slave.vhd
+++ b/vunit/vhdl/bfm/src/axi_write_slave.vhd
@@ -16,8 +16,7 @@ context work.com_context;
 
 entity axi_write_slave is
   generic (
-    axi_slave : axi_slave_t;
-    memory : memory_t);
+    axi_slave : axi_slave_t);
   port (
     aclk : in std_logic;
 

ParseResult:
DEL HdlIdDef@@memory from params
HdlIdDef: memory
    HdlValueId: memory_t
    HdlDirection: IN


CommitId: a55b6cd01ff19ab978759bf97b4153ddccdfe37c
Allow VC logger to be used in memory error logs
--- a/vunit/vhdl/bfm/src/axi_write_slave.vhd
+++ b/vunit/vhdl/bfm/src/axi_write_slave.vhd
@@ -90,7 +89,7 @@ begin
         aligned_address := address - (address mod self.data_size);
         for j in 0 to self.data_size-1 loop
           if wstrb(j) = '1' then
-            write_byte(memory, aligned_address+j, to_integer(unsigned(wdata(8*j+7 downto 8*j))),
+            write_byte(axi_slave.p_memory, aligned_address+j, to_integer(unsigned(wdata(8*j+7 downto 8*j))),
                        check_permissions => true);
           end if;
         end loop;
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@CALL to CALL
            INS HdlOp@@DOT to ops
            UPD HdlOp@@DOT to DOT
                INS list@@ops to DOT
                INS HdlValueId@@axi_slave to ops

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@CALL to CALL
            UPD HdlValueId@@memory to p_memory
            MOV HdlValueId@@memory to ops
            HdlValueId: memory


CommitId: 1a1923390afef703c5f3ac580836021fc8a8e3ec
Merge pull request #434 from bradleyharden/test_modelsim_fixup
--- a/vunit/vhdl/verification_components/src/avalon_master.vhd
+++ b/vunit/vhdl/verification_components/src/avalon_master.vhd
@@ -44,7 +46,11 @@ end entity;
 
 architecture a of avalon_master is
   constant av_master_read_actor : actor_t := new_actor;
+  constant avmm_burst_rd_actor : actor_t := new_actor;
   constant acknowledge_queue : queue_t := new_queue;
+  constant burst_acknowledge_queue : queue_t := new_queue;
+  constant burstlen_queue : queue_t := new_queue;
+  signal burst_read_flag : boolean := false;
 begin
 
   main : process

ParseResult:
INS HdlIdDef@@avmm_burst_rd_actor to objs
HdlIdDef: avmm_burst_rd_actor
    HdlValueId: actor_t
    HdlValueId: new_actor
    HdlDirection: INTERNAL

INS HdlIdDef@@burst_acknowledge_queue to objs
HdlIdDef: burst_acknowledge_queue
    HdlValueId: queue_t
    HdlValueId: new_queue
    HdlDirection: INTERNAL

INS HdlIdDef@@burstlen_queue to objs
HdlIdDef: burstlen_queue
    HdlValueId: queue_t
    HdlValueId: new_queue
    HdlDirection: INTERNAL

INS HdlIdDef@@burst_read_flag to objs
HdlIdDef: burst_read_flag
    HdlValueId: boolean
    HdlValueId: false
    HdlDirection: INTERNAL


CommitId: 1a1923390afef703c5f3ac580836021fc8a8e3ec
Merge pull request #434 from bradleyharden/test_modelsim_fixup
--- a/vunit/vhdl/verification_components/src/avalon_master.vhd
+++ b/vunit/vhdl/verification_components/src/avalon_master.vhd
@@ -52,10 +58,12 @@ begin
     variable msg_type : msg_type_t;
     variable rnd : RandomPType;
     variable msgs : natural;
+    variable burst : positive;
   begin
     rnd.InitSeed(rnd'instance_name);
     write <= '0';
     read  <= '0';
+    burstcount <= std_logic_vector(to_unsigned(1, burstcount'length));
     wait until rising_edge(clk);
     loop
       request_msg := null_msg;

ParseResult:
INS HdlIdDef@@burst to body
HdlIdDef: burst
    HdlValueId: positive
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlOp: INDEX
        list: ops
            HdlValueId: std_logic_vector
            HdlOp: INDEX
                list: ops
                    HdlValueId: to_unsigned
                    HdlValueInt: 1
                    HdlOp: APOSTROPHE
                        list: ops
                            HdlValueId: burstcount
                            HdlValueId: length
    HdlValueId: burstcount


CommitId: 1a1923390afef703c5f3ac580836021fc8a8e3ec
Merge pull request #434 from bradleyharden/test_modelsim_fixup
--- a/vunit/vhdl/verification_components/src/avalon_master.vhd
+++ b/vunit/vhdl/verification_components/src/avalon_master.vhd
@@ -98,7 +144,7 @@ begin
     variable request_msg, reply_msg : msg_t;
   begin
     if use_readdatavalid then
-        wait until readdatavalid = '1' and rising_edge(clk);
+        wait until readdatavalid = '1' and not is_empty(acknowledge_queue) and rising_edge(clk);
     else
         -- Non-pipelined case: waits for slave to de-assert waitrequest and sample data after fixed_read_latency cycles.
         wait until rising_edge(clk) and waitrequest = '0' and read = '1';

ParseResult:
UPD HdlStmIf@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmWait:},                   {'__class__': 'HdlOp',                    'fn': 'INDEX',                    'ops':}]}]} ]
                list: val
                    HdlOp: NEG
                        list: ops
                            HdlOp: AND
                                list: ops
                                    HdlOp: EQ
                                        list: ops
                                            HdlValueId: readdatavalid
                                            HdlValueInt: 1
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: rising_edge
                                            HdlValueId: clk

UPD HdlStmWait@@[{'__class__': 'HdlOp',  'fn': 'NEG',  'ops': [{'__class__': 'HdlOp',           'fn': 'AND',           'ops': [{'__class__': 'HdlOp',                    'fn': 'EQ',                    'ops': ['readdatavalid',                            {'__class__': 'HdlValueInt',                             'base': 256,                             'val': '1'}]},                   {'__class__': 'HdlOp',                    'fn': 'INDEX',                    'ops': ['rising_edge', 'clk']}]}]} ] to [{'__class__': 'HdlOp',  'fn': 'NEG',  'ops': [{'__class__': 'HdlOp',           'fn': 'AND',           'ops': [{'__class__': 'HdlOp',                    'fn': 'EQ',                    'ops': ['readdatavalid',                            {'__class__': 'HdlValueInt',                             'base': 256,                             'val': '1'}]},                   {'__class__': 'HdlOp',                    'fn': 'INDEX',                    'ops': ['rising_edge', 'clk']}]}]} , {'__class__': 'HdlOp', 'fn': 'UNIT_SPEC', 'ops': [1, 'us']} ]

UPD HdlStmIf@@ to 
    INS tuple@@ to elifs
    tuple
        HdlOp: EQ
            list: ops
                HdlValueId: msg_type
                HdlValueId: bus_burst_read_msg
        HdlStmBlock: SEQ
            list: body
                HdlStmWhile
                    HdlOp: GT
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlOp: DOT
                                        list: ops
                                            HdlValueId: rnd
                                            HdlValueId: Uniform
                                    float
                            HdlValueId: read_high_probability
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmWait:}]} ]
                                list: val
                                    HdlOp: NEG
                                        list: ops
                                            HdlOp: INDEX
                                                list: ops
                                                    HdlValueId: rising_edge
                                                    HdlValueId: clk
                HdlStmAssign
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: pop_std_ulogic_vector
                            HdlValueId: request_msg
                    HdlValueId: address
                HdlStmAssign
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: std_logic_vector
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: to_unsigned
                                    HdlValueInt: 1
                                    HdlOp: APOSTROPHE
                                        list: ops
                                            HdlValueId: burstcount
                                            HdlValueId: length
                    HdlValueId: burstcount
                HdlStmAssign
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: pop_integer
                            HdlValueId: request_msg
                    HdlValueId: burst
                HdlStmAssign
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: std_logic_vector
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: to_unsigned
                                    HdlValueId: burst
                                    HdlOp: APOSTROPHE
                                        list: ops
                                            HdlValueId: burstcount
                                            HdlValueId: length
                    HdlValueId: burstcount
                HdlStmAssign
                    list: src
                        HdlOp: MAP_ASSOCIATION
                            list: ops
                                type
                                HdlValueInt: 1
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: byteenable
                            HdlOp: APOSTROPHE
                                list: ops
                                    HdlValueId: byteenable
                                    HdlValueId: range
                HdlStmAssign
                    HdlValueInt: 1
                    HdlValueId: read
                HdlStmWait:},                   {'__class__': 'HdlOp',                    'fn': 'EQ',                    'ops':}]}]} ]
                    list: val
                        HdlOp: NEG
                            list: ops
                                HdlOp: AND
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: rising_edge
                                                HdlValueId: clk
                                        HdlOp: EQ
                                            list: ops
                                                HdlValueId: waitrequest
                                                HdlValueInt: 0
                HdlStmAssign
                    HdlValueInt: 0
                    HdlValueId: read
                HdlOp: CALL
                    list: ops
                        HdlValueId: push
                        HdlValueId: burst_acknowledge_queue
                        HdlValueId: request_msg
                HdlOp: CALL
                    list: ops
                        HdlValueId: push
                        HdlValueId: burstlen_queue
                        HdlValueId: burst
    INS tuple@@ to elifs
    tuple
        HdlOp: EQ
            list: ops
                HdlValueId: msg_type
                HdlValueId: bus_burst_write_msg
        HdlStmBlock: SEQ
            list: body
                HdlStmAssign
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: pop_std_ulogic_vector
                            HdlValueId: request_msg
                    HdlValueId: address
                HdlStmAssign
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: pop_integer
                            HdlValueId: request_msg
                    HdlValueId: burst
                HdlStmAssign
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: std_logic_vector
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: to_unsigned
                                    HdlValueId: burst
                                    HdlOp: APOSTROPHE
                                        list: ops
                                            HdlValueId: burstcount
                                            HdlValueId: length
                    HdlValueId: burstcount
                HdlStmForIn
                    list: var_defs
                        HdlValueId: i
                    HdlOp: TO
                        list: ops
                            HdlOp: SUB
                                list: ops
                                    HdlValueId: burst
                                    HdlValueInt: 1
                    HdlStmBlock: SEQ
                        list: body
                            HdlStmWhile
                                HdlOp: GT
                                    list: ops
                                        HdlOp: INDEX
                                            list: ops
                                                HdlOp: DOT
                                                    list: ops
                                                        HdlValueId: rnd
                                                        HdlValueId: Uniform
                                                float
                                        HdlValueId: write_high_probability
                                HdlStmBlock: SEQ
                                    list: body
                                        HdlStmWait:}]} ]
                                            list: val
                                                HdlOp: NEG
                                                    list: ops
                                                        HdlOp: INDEX
                                                            list: ops
                                                                HdlValueId: rising_edge
                                                                HdlValueId: clk
                            HdlStmAssign
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: pop_std_ulogic_vector
                                        HdlValueId: request_msg
                                HdlValueId: writedata
                            HdlStmAssign
                                list: src
                                    HdlOp: MAP_ASSOCIATION
                                        list: ops
                                            type
                                            HdlValueInt: 1
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: byteenable
                                        HdlOp: APOSTROPHE
                                            list: ops
                                                HdlValueId: byteenable
                                                HdlValueId: range
                            HdlStmAssign
                                HdlValueInt: 1
                                HdlValueId: write
                            HdlStmWait:},                   {'__class__': 'HdlOp',                    'fn': 'EQ',                    'ops':}]}]} ]
                                list: val
                                    HdlOp: NEG
                                        list: ops
                                            HdlOp: AND
                                                list: ops
                                                    HdlOp: INDEX
                                                        list: ops
                                                            HdlValueId: rising_edge
                                                            HdlValueId: clk
                                                    HdlOp: EQ
                                                        list: ops
                                                            HdlValueId: waitrequest
                                                            HdlValueInt: 0
                            HdlStmAssign
                                HdlValueInt: 0
                                HdlValueId: write
                            HdlStmAssign
                                list: src
                                    HdlOp: MAP_ASSOCIATION
                                        list: ops
                                            type
                                            HdlValueInt: U
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: address
                                        HdlOp: APOSTROPHE
                                            list: ops
                                                HdlValueId: address
                                                HdlValueId: range
                            HdlStmAssign
                                list: src
                                    HdlOp: MAP_ASSOCIATION
                                        list: ops
                                            type
                                            HdlValueInt: U
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: burstcount
                                        HdlOp: APOSTROPHE
                                            list: ops
                                                HdlValueId: burstcount
                                                HdlValueId: range
    INS tuple@@ to elifs
    tuple
        HdlOp: EQ
            list: ops
                HdlValueId: msg_type
                HdlValueId: wait_until_idle_msg
        HdlStmBlock: SEQ
            list: body
                HdlStmWait:},                            {'__class__': 'HdlOp',                             'fn': 'INDEX',                             'ops':}]},                   {'__class__': 'HdlOp',                    'fn': 'INDEX',                    'ops':}]}]} ]
                    list: val
                        HdlOp: NEG
                            list: ops
                                HdlOp: AND
                                    list: ops
                                        HdlOp: AND
                                            list: ops
                                                HdlOp: NEG
                                                    list: ops
                                                        HdlValueId: burst_read_flag
                                                HdlOp: INDEX
                                                    list: ops
                                                        HdlValueId: is_empty
                                                        HdlValueId: burst_acknowledge_queue
                                        HdlOp: INDEX
                                            list: ops
                                                HdlValueId: rising_edge
                                                HdlValueId: clk
                HdlOp: CALL
                    list: ops
                        HdlValueId: handle_wait_until_idle
                        HdlValueId: net
                        HdlValueId: msg_type
                        HdlValueId: request_msg


CommitId: 3694499f9d83bcc2a08d2daf7e15ec602ebe0dfa
Fix negative index out of natural range in com_string.vhd
--- a/vhdl/com/src/com_string.vhd
+++ b/vhdl/com/src/com_string.vhd
@@ -251,24 +251,33 @@ package body com_string_pkg is
   function to_detailed_string (
     constant data : ufixed)
     return string is
-    variable unsigned_data : ieee.numeric_std.unsigned(data'length - 1 downto 0) := ieee.numeric_std.unsigned(data);
+    variable unsigned_data : ieee.numeric_std.unsigned(data'length - 1 downto 0);
   begin
+    for i in unsigned_data'range loop
+      unsigned_data(i) := data(i + data'low);
+    end loop;
     return create_array_group(to_string(unsigned_data), to_string(data'left), to_string(data'right), false);
   end;
 
   function to_detailed_string (
     constant data : sfixed)
     return string is
-    variable unsigned_data : ieee.numeric_std.unsigned(data'length - 1 downto 0) := ieee.numeric_std.unsigned(data);
+    variable unsigned_data : ieee.numeric_std.unsigned(data'length - 1 downto 0);
   begin
+    for i in unsigned_data'range loop
+      unsigned_data(i) := data(i + data'low);
+    end loop;
     return create_array_group(to_string(unsigned_data), to_string(data'left), to_string(data'right), false);
   end;
 
   function to_detailed_string (
     constant data : float)
     return string is
-    variable unsigned_data : ieee.numeric_std.unsigned(data'length - 1 downto 0) := ieee.numeric_std.unsigned(data);
+    variable unsigned_data : ieee.numeric_std.unsigned(data'length - 1 downto 0);
   begin
+    for i in unsigned_data'range loop
+      unsigned_data(i) := data(i + data'low);
+    end loop;
     return create_array_group(to_string(unsigned_data), to_string(data'left), to_string(data'right), false);
   end;
 
ParseResult:
INS HdlStmForIn@@ to body

INS HdlStmForIn@@ to body

INS HdlStmForIn@@ to body

UPD HdlStmForIn@@ to 
    INS list@@var_defs to 
    list: var_defs
        HdlValueId: i
    INS HdlOp@@APOSTROPHE to 
    HdlOp: APOSTROPHE
        list: ops
            HdlValueId: unsigned_data
            HdlValueId: range
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmForIn@@ to 
    INS list@@var_defs to 
    list: var_defs
        HdlValueId: i
    INS HdlOp@@APOSTROPHE to 
    HdlOp: APOSTROPHE
        list: ops
            HdlValueId: unsigned_data
            HdlValueId: range
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmForIn@@ to 
    INS list@@var_defs to 
    list: var_defs
        HdlValueId: i
    INS HdlOp@@APOSTROPHE to 
    HdlOp: APOSTROPHE
        list: ops
            HdlValueId: unsigned_data
            HdlValueId: range
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

INS HdlStmAssign@@ to body

INS HdlStmAssign@@ to body

INS HdlStmAssign@@ to body

UPD HdlIdDef@@unsigned_data to unsigned_data
    MOV HdlOp@@INDEX to unsigned_data
    HdlOp: INDEX
        list: ops
            HdlOp: DOT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlValueId: ieee
                            HdlValueId: numeric_std
                    HdlValueId: unsigned
            HdlValueId: data
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@DOT to ADD
        UPD HdlOp@@DOT to DOT
            UPD HdlOp@@DOT to APOSTROPHE
            UPD HdlOp@@DOT to DOT
                UPD HdlValueId@@ieee to data
                UPD HdlValueId@@numeric_std to low
            DEL HdlValueId@@unsigned from ops
        DEL HdlValueId@@data from ops

UPD HdlStmAssign@@ to 
    INS HdlOp@@INDEX to 
    HdlOp: INDEX
        list: ops
            HdlValueId: unsigned_data
            HdlValueId: i
    UPD HdlOp@@INDEX to INDEX
        INS HdlValueId@@data to ops
        UPD HdlOp@@ADD to ADD
            INS HdlValueId@@i to ops

UPD HdlIdDef@@unsigned_data to unsigned_data
    MOV HdlOp@@INDEX to unsigned_data
    HdlOp: INDEX
        list: ops
            HdlOp: DOT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlValueId: ieee
                            HdlValueId: numeric_std
                    HdlValueId: unsigned
            HdlValueId: data
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@DOT to ADD
        UPD HdlOp@@DOT to DOT
            UPD HdlOp@@DOT to APOSTROPHE
            UPD HdlOp@@DOT to DOT
                UPD HdlValueId@@ieee to data
                UPD HdlValueId@@numeric_std to low
            DEL HdlValueId@@unsigned from ops
        DEL HdlValueId@@data from ops

UPD HdlStmAssign@@ to 
    INS HdlOp@@INDEX to 
    HdlOp: INDEX
        list: ops
            HdlValueId: unsigned_data
            HdlValueId: i
    UPD HdlOp@@INDEX to INDEX
        INS HdlValueId@@data to ops
        UPD HdlOp@@ADD to ADD
            INS HdlValueId@@i to ops

UPD HdlIdDef@@unsigned_data to unsigned_data
    MOV HdlOp@@INDEX to unsigned_data
    HdlOp: INDEX
        list: ops
            HdlOp: DOT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlValueId: ieee
                            HdlValueId: numeric_std
                    HdlValueId: unsigned
            HdlValueId: data
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@DOT to ADD
        UPD HdlOp@@DOT to DOT
            UPD HdlOp@@DOT to APOSTROPHE
            UPD HdlOp@@DOT to DOT
                UPD HdlValueId@@ieee to data
                UPD HdlValueId@@numeric_std to low
            DEL HdlValueId@@unsigned from ops
        DEL HdlValueId@@data from ops


CommitId: 3d93c0fc19b8af90b4aab73e373e99079b600efb
Added default endianness to memory
--- a/vunit/vhdl/bfm/src/memory_pkg-body.vhd
+++ b/vunit/vhdl/bfm/src/memory_pkg-body.vhd
@@ -11,7 +11,8 @@ package body memory_pkg is
 
   constant num_bytes_idx : natural := 0;
   constant num_allocations_idx : natural := 1;
-  constant num_meta : natural := num_allocations_idx + 1;
+  constant default_endian_idx : natural := 2;
+  constant num_meta : natural := default_endian_idx + 1;
 
   type memory_data_t is record
     byte : byte_t;

ParseResult:
INS HdlIdDef@@default_endian_idx to objs
HdlIdDef: default_endian_idx
    HdlValueId: natural
    HdlValueInt: 2
    HdlDirection: INTERNAL

INS HdlIdDef@@num_meta to objs
HdlIdDef: num_meta
    HdlValueId: natural
    HdlOp: ADD
        list: ops
            HdlValueId: default_endian_idx
            HdlValueInt: 1
    HdlDirection: INTERNAL

DEL HdlIdDef@@num_meta from objs
HdlIdDef: num_meta
    HdlValueId: natural
    HdlOp: ADD
        list: ops
            HdlValueId: num_allocations_idx
            HdlValueInt: 1
    HdlDirection: INTERNAL


CommitId: 3d93c0fc19b8af90b4aab73e373e99079b600efb
Added default endianness to memory
--- a/vunit/vhdl/bfm/src/memory_pkg-body.vhd
+++ b/vunit/vhdl/bfm/src/memory_pkg-body.vhd
@@ -20,9 +21,15 @@ package body memory_pkg is
     perm : permissions_t;
   end record;
 
-  impure function new_memory(logger : logger_t := memory_logger) return memory_t is
+  impure function new_memory(logger : logger_t := memory_logger;
+                             endian : endianness_t := little_endian) return memory_t is
+    constant p_meta : integer_vector_ptr_t := new_integer_vector_ptr(num_meta);
   begin
-    return (p_meta => new_integer_vector_ptr(num_meta),
+    set(p_meta, num_bytes_idx, 0);
+    set(p_meta, num_allocations_idx, 0);
+    set(p_meta, default_endian_idx, endianness_t'pos(endian));
+
+    return (p_meta => p_meta,
             p_data => new_integer_vector_ptr(0),
             p_allocs => new_integer_vector_ptr(0),
             p_logger => logger);

ParseResult:
INS HdlIdDef@@endian to params
HdlIdDef: endian
    HdlValueId: endianness_t
    HdlValueId: little_endian
    HdlDirection: IN

INS HdlIdDef@@p_meta to body

UPD HdlFunctionDef@@new_memory to new_memory
    INS HdlOp@@CALL to body
    HdlOp: CALL
        list: ops
            HdlValueId: set
            HdlValueId: p_meta
            HdlValueId: num_bytes_idx
    INS HdlOp@@CALL to body
    HdlOp: CALL
        list: ops
            HdlValueId: set
            HdlValueId: p_meta
            HdlValueId: num_allocations_idx
    INS HdlOp@@CALL to body
    HdlOp: CALL
        list: ops
            HdlValueId: set
            HdlValueId: p_meta
            HdlValueId: default_endian_idx
            HdlOp: CALL
                list: ops
                    HdlOp: APOSTROPHE
                        list: ops
                            HdlValueId: endianness_t
                            HdlValueId: pos
                    HdlValueId: endian

UPD HdlStmReturn@@[{'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_meta',          {'__class__': 'HdlOp',           'fn': 'INDEX',           'ops': ['new_integer_vector_ptr', 'num_meta']}]} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_data',          {'__class__': 'HdlOp',           'fn': 'INDEX',           'ops': ['new_integer_vector_ptr', 0]}]} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_allocs',          {'__class__': 'HdlOp',           'fn': 'INDEX',           'ops': ['new_integer_vector_ptr', 0]}]} , {'__class__': 'HdlOp', 'fn': 'MAP_ASSOCIATION', 'ops': ['p_logger', 'logger']} ] to [{'__class__': 'HdlOp', 'fn': 'MAP_ASSOCIATION', 'ops': ['p_meta', 'p_meta']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_data',          {'__class__': 'HdlOp',           'fn': 'INDEX',           'ops': ['new_integer_vector_ptr', 0]}]} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_allocs',          {'__class__': 'HdlOp',           'fn': 'INDEX',           'ops': ['new_integer_vector_ptr', 0]}]} , {'__class__': 'HdlOp', 'fn': 'MAP_ASSOCIATION', 'ops': ['p_logger', 'logger']} ]

UPD HdlIdDef@@p_meta to p_meta
    INS HdlValueId@@integer_vector_ptr_t to p_meta
    INS HdlDirection@@INTERNAL to p_meta

UPD HdlStmReturn@@[{'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_meta',          {'__class__': 'HdlOp',           'fn': 'INDEX',           'ops': ['new_integer_vector_ptr', 'num_meta']}]} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_data',          {'__class__': 'HdlOp',           'fn': 'INDEX',           'ops': ['new_integer_vector_ptr', 0]}]} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_allocs',          {'__class__': 'HdlOp',           'fn': 'INDEX',           'ops': ['new_integer_vector_ptr', 0]}]} , {'__class__': 'HdlOp', 'fn': 'MAP_ASSOCIATION', 'ops': ['p_logger', 'logger']} ] to [{'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_meta',          {'__class__': 'HdlOp',           'fn': 'INDEX',           'ops': ['new_integer_vector_ptr', 'num_meta']}]} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_data',          {'__class__': 'HdlOp',           'fn': 'INDEX',           'ops': ['new_integer_vector_ptr', 0]}]} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_allocs',          {'__class__': 'HdlOp',           'fn': 'INDEX',           'ops': ['new_integer_vector_ptr', 0]}]} , {'__class__': 'HdlOp', 'fn': 'MAP_ASSOCIATION', 'ops': ['p_logger', 'logger']} ]
    UPD HdlOp@@MAP_ASSOCIATION to MAP_ASSOCIATION
        MOV HdlOp@@INDEX to ops
        HdlOp: INDEX
            list: ops
                HdlValueId: new_integer_vector_ptr
                HdlValueId: num_meta


CommitId: 3d93c0fc19b8af90b4aab73e373e99079b600efb
Added default endianness to memory
--- a/vunit/vhdl/bfm/src/memory_pkg-body.vhd
+++ b/vunit/vhdl/bfm/src/memory_pkg-body.vhd
@@ -37,6 +44,15 @@ package body memory_pkg is
     reallocate(memory.p_allocs, 0);
   end procedure;
 
+  impure function evaluate_endian(memory : memory_t; endian : endianness_arg_t) return endianness_t is
+  begin
+    if endian = default_endian then
+      return endianness_t'val(get(memory.p_meta, default_endian_idx));
+    else
+      return endian;
+    end if;
+  end;
+
   impure function decode(value : integer) return memory_data_t is
   begin
     return (byte => value mod 256,

ParseResult:
INS HdlFunctionDef@@evaluate_endian to objs
HdlFunctionDef: evaluate_endian
    HdlValueId: endianness_t
    list: params
        HdlIdDef: memory
            HdlValueId: memory_t
            HdlDirection: IN
        HdlIdDef: endian
            HdlValueId: endianness_arg_t
            HdlDirection: IN
    list: body
        HdlStmIf
            HdlOp: EQ
                list: ops
                    HdlValueId: endian
                    HdlValueId: default_endian
            HdlStmBlock: SEQ
                list: body
                    HdlStmReturn: {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops':},          {'__class__': 'HdlOp',           'fn': 'INDEX',           'ops':},                   'default_endian_idx']}]} 
                        HdlOp: INDEX
                            list: ops
                                HdlOp: APOSTROPHE
                                    list: ops
                                        HdlValueId: endianness_t
                                        HdlValueId: val
                                HdlOp: INDEX
                                    list: ops
                                        HdlValueId: get
                                        HdlOp: DOT
                                            list: ops
                                                HdlValueId: memory
                                                HdlValueId: p_meta
                                        HdlValueId: default_endian_idx
            list: elifs
            HdlStmBlock: SEQ
                list: body
                    HdlStmReturn: endian
                        HdlValueId: endian

UPD HdlStmReturn@@[{'__class__': 'HdlOp', 'fn': 'MAP_ASSOCIATION', 'ops': ['p_meta', 'p_meta']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_data',          {'__class__': 'HdlOp',           'fn': 'INDEX',           'ops': ['new_integer_vector_ptr', 0]}]} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_allocs',          {'__class__': 'HdlOp',           'fn': 'INDEX',           'ops': ['new_integer_vector_ptr', 0]}]} , {'__class__': 'HdlOp', 'fn': 'MAP_ASSOCIATION', 'ops': ['p_logger', 'logger']} ] to [{'__class__': 'HdlOp', 'fn': 'MAP_ASSOCIATION', 'ops': ['p_meta', 'p_meta']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_data',          {'__class__': 'HdlOp',           'fn': 'INDEX',           'ops': ['new_integer_vector_ptr', 0]}]} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_allocs',          {'__class__': 'HdlOp',           'fn': 'INDEX',           'ops': ['new_integer_vector_ptr', 0]}]} , {'__class__': 'HdlOp', 'fn': 'MAP_ASSOCIATION', 'ops': ['p_logger', 'logger']} ]
    UPD HdlOp@@MAP_ASSOCIATION to MAP_ASSOCIATION
        INS HdlValueId@@p_meta to ops


CommitId: 3d93c0fc19b8af90b4aab73e373e99079b600efb
Added default endianness to memory
--- a/vunit/vhdl/bfm/src/memory_pkg-body.vhd
+++ b/vunit/vhdl/bfm/src/memory_pkg-body.vhd
@@ -326,8 +347,10 @@ package body memory_pkg is
                                  address : natural;
                                  expected : integer;
                                  bytes_per_word : natural range 1 to 4 := 4;
-                                 big_endian : boolean := false) is
-    constant bytes : integer_vector(0 to bytes_per_word-1) := serialize(expected, bytes_per_word, big_endian);
+                                 endian : endianness_arg_t := default_endian) is
+    constant bytes : integer_vector(0 to bytes_per_word-1) := serialize(expected,
+                                                                        bytes_per_word,
+                                                                        evaluate_endian(memory, endian));
   begin
     for byte_idx in 0 to bytes_per_word-1 loop
       set_expected_byte(memory, address + byte_idx, bytes(byte_idx));

ParseResult:
UPD HdlIdDef@@big_endian to endian

UPD HdlStmCase@@endian to endian
    INS HdlStmCaseType@@CASE to endian
    INS HdlValueId@@endian to endian
    INS list@@cases to endian
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueId@@little_endian to 

UPD HdlIdDef@@big_endian to big_endian
    UPD HdlValueId@@boolean to endianness_arg_t
    UPD HdlValueId@@false to default_endian

UPD HdlIdDef@@bytes to bytes
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@big_endian to endian
        MOV HdlValueId@@big_endian to ops
        HdlValueId: big_endian


CommitId: 3d93c0fc19b8af90b4aab73e373e99079b600efb
Added default endianness to memory
--- a/vunit/vhdl/bfm/src/memory_pkg-body.vhd
+++ b/vunit/vhdl/bfm/src/memory_pkg-body.vhd
@@ -408,10 +434,12 @@ package body memory_pkg is
                           address : natural;
                           word : integer;
                           bytes_per_word : natural range 1 to 4 := 4;
-                          big_endian : boolean := false;
+                          endian : endianness_arg_t := default_endian;
                           check_permissions : boolean := false) is
 
-    constant bytes : integer_vector := serialize(word, bytes_per_word, big_endian);
+    constant bytes : integer_vector := serialize(word,
+                                                 bytes_per_word,
+                                                 evaluate_endian(memory, endian));
   begin
     for byte_idx in 0 to bytes_per_word-1 loop
       write_byte(memory, address + byte_idx,
ParseResult:
UPD HdlIdDef@@big_endian to endian

UPD HdlStmCase@@endianness to endianness
    INS HdlStmCaseType@@CASE to endianness
    INS HdlValueId@@endianness to endianness
    INS list@@cases to endianness
    INS tuple@@ to cases
    INS tuple@@ to cases
    INS HdlValueId@@little_endian to 

UPD HdlIdDef@@big_endian to big_endian
    UPD HdlValueId@@boolean to endianness_arg_t
    UPD HdlValueId@@false to default_endian

UPD HdlIdDef@@bytes to bytes
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@big_endian to endian
        MOV HdlValueId@@big_endian to ops
        HdlValueId: big_endian


CommitId: f87a6ecdbc0d66ba05634c80b425d4fdfc91fcd3
fix broken msg passing in wishbone master for (fix #692) (#693)
--- a/vunit/vhdl/verification_components/src/wishbone_master.vhd
+++ b/vunit/vhdl/verification_components/src/wishbone_master.vhd
@@ -91,11 +91,10 @@ begin
           -- TODO why sel is not passed in msg for reading (present for writing)?
           --sel <= pop_std_ulogic_vector(request_msg);
         end if;
+        push(acknowledge_queue, request_msg);
         wait until rising_edge(clk) and stall = '0';
         stb <= '0';
 
-        push(acknowledge_queue, request_msg);
-
       elsif msg_type = wait_until_idle_msg then
         if cycle then
           wait until not cycle;
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: push
                HdlValueId: acknowledge_queue
                HdlValueId: request_msg


CommitId: 29112aa13e0821e353f315d2f82f0977e0fe1719
Potential GHDL fix
--- a/vunit/vhdl/logging/src/logger_pkg-body.vhd
+++ b/vunit/vhdl/logging/src/logger_pkg-body.vhd
@@ -1202,9 +1202,11 @@ package body logger_pkg is
 
     impure function create_string return string is
       variable lines : lines_t;
+      variable num_items : natural;
     begin
       lines := split(logger_name, ":");
-      for idx in 0 to lines'length-1 loop
+      num_items := integer'(lines.all'length);
+      for idx in 0 to num_items - 1 loop
         write(l, colorize(lines(idx).all, fg => white, style => bright));
         deallocate(lines(idx));
         if idx /= lines'length - 1 then
ParseResult:
INS HdlIdDef@@num_items to body
HdlIdDef: num_items
    HdlValueId: natural
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlOp: APOSTROPHE
        list: ops
            HdlValueId: integer
            HdlOp: APOSTROPHE
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlValueId: lines
                            HdlAll
                    HdlValueId: length
    HdlValueId: num_items

UPD HdlStmForIn@@ to 
    UPD HdlOp@@TO to TO
        UPD HdlOp@@SUB to SUB
            UPD HdlOp@@APOSTROPHE to APOSTROPHE
                UPD HdlValueId@@lines to num_items
                MOV HdlValueId@@lines to ops
                HdlValueId: lines
                DEL HdlValueId@@length from ops
                DEL list@@ops from APOSTROPHE
            DEL HdlOp@@APOSTROPHE from ops


CommitId: 330b74e53a16c31c8d3064b4b45dd173446aad8c
Fixed incorrect use of 'value attribute. GHDL gives error, modelsim warns
--- a/vhdl/com/src/com_codec_debug.vhd
+++ b/vhdl/com/src/com_codec_debug.vhd
@@ -131,7 +131,7 @@ package body com_codec_pkg is
     constant code : string)
     return bit is
   begin
-    return bit'value(code);
+    return bit'value("'" & code & "'");
   end;
 
   function encode (

ParseResult:
UPD HdlStmReturn@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': [{'__class__': 'HdlOp', 'fn': 'APOSTROPHE', 'ops': ['bit', 'value']},          'code']}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': [{'__class__': 'HdlOp', 'fn': 'APOSTROPHE', 'ops': ['bit', 'value']},          {'__class__': 'HdlOp',           'fn': 'CONCAT',           'ops': [{'__class__': 'HdlOp',                    'fn': 'CONCAT',                    'ops': [{'__class__': 'str', 'val': "'"}, 'code']},                   {'__class__': 'str', 'val': "'"}]}]} 

UPD HdlStmReturn@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': [{'__class__': 'HdlOp', 'fn': 'APOSTROPHE', 'ops': ['bit', 'value']},          {'__class__': 'HdlOp',           'fn': 'CONCAT',           'ops': [{'__class__': 'HdlOp',                    'fn': 'CONCAT',                    'ops': [{'__class__': 'str', 'val': "'"}, 'code']},                   {'__class__': 'str', 'val': "'"}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': [{'__class__': 'HdlOp', 'fn': 'APOSTROPHE', 'ops': ['bit', 'value']},          {'__class__': 'HdlOp',           'fn': 'CONCAT',           'ops': [{'__class__': 'HdlOp',                    'fn': 'CONCAT',                    'ops': [{'__class__': 'str', 'val': "'"}, 'code']},                   {'__class__': 'str', 'val': "'"}]}]} 
    UPD HdlOp@@INDEX to INDEX
        INS HdlOp@@CONCAT to ops
        UPD HdlOp@@CONCAT to CONCAT
            INS list@@ops to CONCAT
            INS HdlOp@@CONCAT to ops
            INS str@@ to ops
            UPD HdlOp@@CONCAT to CONCAT
                INS list@@ops to CONCAT
                INS str@@ to ops

UPD HdlStmReturn@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': [{'__class__': 'HdlOp', 'fn': 'APOSTROPHE', 'ops': ['bit', 'value']},          'code']}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': [{'__class__': 'HdlOp', 'fn': 'APOSTROPHE', 'ops': ['bit', 'value']},          'code']} 
    UPD HdlOp@@INDEX to INDEX
        MOV HdlValueId@@code to ops
        HdlValueId: code


CommitId: 330b74e53a16c31c8d3064b4b45dd173446aad8c
Fixed incorrect use of 'value attribute. GHDL gives error, modelsim warns
--- a/vhdl/com/src/com_codec_debug.vhd
+++ b/vhdl/com/src/com_codec_debug.vhd
@@ -145,7 +145,7 @@ package body com_codec_pkg is
     constant code : string)
     return std_ulogic is
   begin
-    return std_ulogic'value(code);
+    return std_ulogic'value("'" & code & "'");
   end;
 
   function encode (
ParseResult:
UPD HdlStmReturn@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': [{'__class__': 'HdlOp',           'fn': 'APOSTROPHE',           'ops': ['std_ulogic', 'value']},          'code']}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': [{'__class__': 'HdlOp',           'fn': 'APOSTROPHE',           'ops': ['std_ulogic', 'value']},          {'__class__': 'HdlOp',           'fn': 'CONCAT',           'ops': [{'__class__': 'HdlOp',                    'fn': 'CONCAT',                    'ops': [{'__class__': 'str', 'val': "'"}, 'code']},                   {'__class__': 'str', 'val': "'"}]}]} 

UPD HdlStmReturn@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': [{'__class__': 'HdlOp',           'fn': 'APOSTROPHE',           'ops': ['std_ulogic', 'value']},          {'__class__': 'HdlOp',           'fn': 'CONCAT',           'ops': [{'__class__': 'HdlOp',                    'fn': 'CONCAT',                    'ops': [{'__class__': 'str', 'val': "'"}, 'code']},                   {'__class__': 'str', 'val': "'"}]}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': [{'__class__': 'HdlOp',           'fn': 'APOSTROPHE',           'ops': ['std_ulogic', 'value']},          {'__class__': 'HdlOp',           'fn': 'CONCAT',           'ops': [{'__class__': 'HdlOp',                    'fn': 'CONCAT',                    'ops': [{'__class__': 'str', 'val': "'"}, 'code']},                   {'__class__': 'str', 'val': "'"}]}]} 
    UPD HdlOp@@INDEX to INDEX
        INS HdlOp@@CONCAT to ops
        UPD HdlOp@@CONCAT to CONCAT
            INS list@@ops to CONCAT
            INS HdlOp@@CONCAT to ops
            INS str@@ to ops
            UPD HdlOp@@CONCAT to CONCAT
                INS list@@ops to CONCAT
                INS str@@ to ops

UPD HdlStmReturn@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': [{'__class__': 'HdlOp',           'fn': 'APOSTROPHE',           'ops': ['std_ulogic', 'value']},          'code']}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': [{'__class__': 'HdlOp',           'fn': 'APOSTROPHE',           'ops': ['std_ulogic', 'value']},          'code']} 
    UPD HdlOp@@INDEX to INDEX
        MOV HdlValueId@@code to ops
        HdlValueId: code


CommitId: 7f3877303724e15990ddeb71c3ec3ed2765a5f74
Updated com user guide and example testbench with the publisher/subscriber pattern. Fixed bugs.
--- a/vunit/vhdl/verification_components/src/sync_pkg.vhd
+++ b/vunit/vhdl/verification_components/src/sync_pkg.vhd
@@ -16,19 +16,30 @@ package sync_pkg is
 
   -- Blocking: Wait until all operations requested from the VC have been finished
   procedure wait_until_idle(signal net : inout network_t;
-                            handle : sync_handle_t);
+                            handle     :       sync_handle_t);
 
   -- Non-blocking: Make VC wait for a delay before starting the next operation
   procedure wait_for_time(signal net : inout network_t;
-                          handle : sync_handle_t;
-                          delay : delay_length);
+                          handle     :       sync_handle_t;
+                          delay      :       delay_length);
 
   -- Message type definitions used by VC implementing the synchronization VCI
-  constant wait_until_idle_msg : msg_type_t := new_msg_type("wait until idle");
-  constant wait_for_time_msg : msg_type_t := new_msg_type("wait for time");
+  constant wait_until_idle_msg       : msg_type_t := new_msg_type("wait until idle");
+  constant wait_until_idle_reply_msg : msg_type_t := new_msg_type("wait until idle reply");
+  constant wait_for_time_msg         : msg_type_t := new_msg_type("wait for time");
+
+  -- Standard implementation of wait_until_idle VCI which may be used by VC
+  procedure handle_wait_until_idle(signal net        : inout network_t;
+                                   variable msg_type : inout msg_type_t;
+                                   variable msg      : inout msg_t);
+
+  -- Standard implementation of wait_for_time VCI which may be used by VC
+  procedure handle_wait_for_time(signal net        : inout network_t;
+                                 variable msg_type : inout msg_type_t;
+                                 variable msg      : inout msg_t);
 
   -- Standard implementation of synchronization VCI which may be used by VC
-  procedure handle_sync_message(signal net : inout network_t;
+  procedure handle_sync_message(signal net        : inout network_t;
                                 variable msg_type : inout msg_type_t;
-                                variable msg : inout msg_t);
+                                variable msg      : inout msg_t);
 end package;
ParseResult:
INS HdlIdDef@@wait_until_idle_reply_msg to objs
HdlIdDef: wait_until_idle_reply_msg
    HdlValueId: msg_type_t
    HdlOp: INDEX
        list: ops
            HdlValueId: new_msg_type
            str
    HdlDirection: INTERNAL

INS HdlFunctionDef@@handle_wait_until_idle to objs
HdlFunctionDef: handle_wait_until_idle
    list: params
        HdlIdDef: net
            HdlValueId: network_t
            HdlDirection: INOUT
        HdlIdDef: msg_type
            HdlValueId: msg_type_t
            HdlDirection: INOUT
        HdlIdDef: msg
            HdlValueId: msg_t
            HdlDirection: INOUT
    list: body

INS HdlFunctionDef@@handle_wait_for_time to objs
HdlFunctionDef: handle_wait_for_time
    list: params
        HdlIdDef: net
            HdlValueId: network_t
            HdlDirection: INOUT
        HdlIdDef: msg_type
            HdlValueId: msg_type_t
            HdlDirection: INOUT
        HdlIdDef: msg
            HdlValueId: msg_t
            HdlDirection: INOUT
    list: body


CommitId: 1fe22b3bd64399881eab165ab96e856efb2aceb2
Added option to allow disabled failures and errors
--- a/vunit/vhdl/logging/src/logger_pkg.vhd
+++ b/vunit/vhdl/logging/src/logger_pkg.vhd
@@ -245,6 +245,10 @@ package logger_pkg is
                     log_level : log_level_t;
                     include_children : boolean := true);
 
+  -- Returns true if the logger and log_level is disabled
+  impure function is_disabled(logger : logger_t;
+                              log_level : log_level_t) return boolean;
+
   -- Hide log messages of specified level to this handler.
   procedure hide(log_handler : log_handler_t;
                  log_level : log_level_t);

ParseResult:
INS HdlFunctionDef@@is_disabled to objs
HdlFunctionDef: is_disabled
    HdlValueId: boolean
    list: params
        HdlIdDef: logger
            HdlValueId: logger_t
            HdlDirection: IN
        HdlIdDef: log_level
            HdlValueId: log_level_t
            HdlDirection: IN
    list: body


CommitId: 1fe22b3bd64399881eab165ab96e856efb2aceb2
Added option to allow disabled failures and errors
--- a/vunit/vhdl/logging/src/logger_pkg.vhd
+++ b/vunit/vhdl/logging/src/logger_pkg.vhd
@@ -346,8 +350,10 @@ package logger_pkg is
                             log_level : log_level_t := null_log_level;
                             include_children : boolean := true);
 
-  procedure final_log_check;
-  impure function final_log_check return boolean;
+  procedure final_log_check(allow_disabled_errors : boolean := false;
+                            allow_disabled_failures : boolean := false);
+  impure function final_log_check(allow_disabled_errors : boolean := false;
+                                  allow_disabled_failures : boolean := false) return boolean;
 
   ---------------------------------------------------------------------
   -- Mock procedures to enable unit testing of code performing logging
ParseResult:
INS HdlIdDef@@allow_disabled_errors to params
HdlIdDef: allow_disabled_errors
    HdlValueId: boolean
    HdlValueId: false
    HdlDirection: IN

INS HdlIdDef@@allow_disabled_failures to params
HdlIdDef: allow_disabled_failures
    HdlValueId: boolean
    HdlValueId: false
    HdlDirection: IN

INS HdlIdDef@@allow_disabled_errors to params
HdlIdDef: allow_disabled_errors
    HdlValueId: boolean
    HdlValueId: false
    HdlDirection: IN

INS HdlIdDef@@allow_disabled_failures to params
HdlIdDef: allow_disabled_failures
    HdlValueId: boolean
    HdlValueId: false
    HdlDirection: IN


CommitId: e67ac7c9ca4a463d0cc8d4de927d67567c3ebbde
Add stall probability to all axi slave channels.
--- a/vunit/vhdl/verification_components/src/axi_pkg.vhd
+++ b/vunit/vhdl/verification_components/src/axi_pkg.vhd
@@ -68,35 +87,45 @@ package axi_pkg is
   -- 2. uses max arsize supported by data width
   procedure enable_well_behaved_check(signal net : inout network_t; axi_slave : axi_slave_t);
 
-  constant axi_slave_set_address_channel_fifo_depth_msg : msg_type_t := new_msg_type("axi slave set address channel fifo depth");
+  constant axi_slave_set_address_fifo_depth_msg : msg_type_t := new_msg_type("axi slave set address channel fifo depth");
   constant axi_slave_set_write_response_fifo_depth_msg : msg_type_t := new_msg_type("set write response fifo depth");
-  constant axi_slave_set_address_channel_stall_probability_msg : msg_type_t := new_msg_type("axi slave set address channel stall probability");
+  constant axi_slave_set_address_stall_probability_msg : msg_type_t := new_msg_type("axi slave set address channel stall probability");
+  constant axi_slave_set_data_stall_probability_msg : msg_type_t := new_msg_type("axi slave set data stall probability");
+  constant axi_slave_set_write_response_stall_probability_msg : msg_type_t := new_msg_type("axi slave set write response stall probability");
   constant axi_slave_configure_4kbyte_boundary_check_msg : msg_type_t := new_msg_type("axi slave configure 4kbyte boundary check");
   constant axi_slave_enable_well_behaved_check_msg : msg_type_t := new_msg_type("axi slave enable well behaved check");
 
 end package;
 
 package body axi_pkg is
-  impure function new_axi_slave(address_channel_fifo_depth : positive := 1;
+  impure function new_axi_slave(memory : memory_t;
+                                address_fifo_depth : positive := 1;
+                                write_response_fifo_depth : positive := 1;
                                 check_4kbyte_boundary : boolean := true;
-                                memory : memory_t;
+                                address_stall_probability : probability_t := 0.0;
+                                data_stall_probability : probability_t := 0.0;
+                                write_response_stall_probability : probability_t := 0.0;
                                 logger : logger_t := axi_slave_logger) return axi_slave_t is
   begin
     return (p_actor => new_actor,
-            p_initial_address_channel_fifo_depth => address_channel_fifo_depth,
+            p_initial_address_fifo_depth => address_fifo_depth,
+            p_initial_write_response_fifo_depth => write_response_fifo_depth,
             p_initial_check_4kbyte_boundary => check_4kbyte_boundary,
+            p_initial_address_stall_probability => address_stall_probability,
+            p_initial_data_stall_probability => data_stall_probability,
+            p_initial_write_response_stall_probability => write_response_stall_probability,
             p_memory => to_vc_interface(memory, logger),
             p_logger => logger);
   end;
 
-  procedure set_address_channel_fifo_depth(signal net : inout network_t; axi_slave : axi_slave_t; depth : positive) is
+  procedure set_address_fifo_depth(signal net : inout network_t; axi_slave : axi_slave_t; depth : positive) is
     variable request_msg : msg_t;
     variable ack : boolean;
   begin
-    request_msg := new_msg(axi_slave_set_address_channel_fifo_depth_msg);
+    request_msg := new_msg(axi_slave_set_address_fifo_depth_msg);
     push(request_msg, depth);
     request(net, axi_slave.p_actor, request_msg, ack);
-    assert ack report "Failed on set_address_channel_fifo_depth command";
+    assert ack report "Failed on set_address_fifo_depth command";
   end;
 
   procedure set_write_response_fifo_depth(signal net : inout network_t; axi_slave : axi_slave_t; depth : positive) is

ParseResult:
UPD HdlIdDef@@axi_slave_set_address_channel_fifo_depth_msg to axi_slave_set_address_fifo_depth_msg

INS HdlIdDef@@axi_slave_set_address_stall_probability_msg to objs
HdlIdDef: axi_slave_set_address_stall_probability_msg
    HdlValueId: msg_type_t
    HdlOp: INDEX
        list: ops
            HdlValueId: new_msg_type
            str
    HdlDirection: INTERNAL

UPD HdlIdDef@@axi_slave_set_address_channel_stall_probability_msg to axi_slave_set_data_stall_probability_msg

INS HdlIdDef@@axi_slave_set_write_response_stall_probability_msg to objs
HdlIdDef: axi_slave_set_write_response_stall_probability_msg
    HdlValueId: msg_type_t
    HdlOp: INDEX
        list: ops
            HdlValueId: new_msg_type
            str
    HdlDirection: INTERNAL

UPD HdlFunctionDef@@set_address_channel_fifo_depth to set_address_fifo_depth

MOV HdlIdDef@@memory to params
HdlIdDef: memory
    HdlValueId: memory_t
    HdlDirection: IN

UPD HdlIdDef@@address_channel_fifo_depth to address_fifo_depth

INS HdlIdDef@@write_response_fifo_depth to params
HdlIdDef: write_response_fifo_depth
    HdlValueId: positive
    HdlValueInt: 1
    HdlDirection: IN

INS HdlIdDef@@address_stall_probability to params
HdlIdDef: address_stall_probability
    HdlValueId: probability_t
    HdlDirection: IN

INS HdlIdDef@@data_stall_probability to params
HdlIdDef: data_stall_probability
    HdlValueId: probability_t
    HdlDirection: IN

INS HdlIdDef@@write_response_stall_probability to params
HdlIdDef: write_response_stall_probability
    HdlValueId: probability_t
    HdlDirection: IN

UPD HdlStmReturn@@[{'__class__': 'HdlOp', 'fn': 'MAP_ASSOCIATION', 'ops': ['p_actor', 'new_actor']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_initial_address_channel_fifo_depth', 'address_channel_fifo_depth']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_initial_check_4kbyte_boundary', 'check_4kbyte_boundary']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_memory',          {'__class__': 'HdlOp',           'fn': 'INDEX',           'ops': ['to_vc_interface', 'memory', 'logger']}]} , {'__class__': 'HdlOp', 'fn': 'MAP_ASSOCIATION', 'ops': ['p_logger', 'logger']} ] to [{'__class__': 'HdlOp', 'fn': 'MAP_ASSOCIATION', 'ops': ['p_actor', 'new_actor']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_initial_address_fifo_depth', 'address_fifo_depth']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_initial_write_response_fifo_depth', 'write_response_fifo_depth']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_initial_check_4kbyte_boundary', 'check_4kbyte_boundary']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_initial_address_stall_probability', 'address_stall_probability']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_initial_data_stall_probability', 'data_stall_probability']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_initial_write_response_stall_probability',          'write_response_stall_probability']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_memory',          {'__class__': 'HdlOp',           'fn': 'INDEX',           'ops': ['to_vc_interface', 'memory', 'logger']}]} , {'__class__': 'HdlOp', 'fn': 'MAP_ASSOCIATION', 'ops': ['p_logger', 'logger']} ]

UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@axi_slave_set_address_channel_fifo_depth_msg to axi_slave_set_address_fifo_depth_msg

UPD HdlStmReturn@@[{'__class__': 'HdlOp', 'fn': 'MAP_ASSOCIATION', 'ops': ['p_actor', 'new_actor']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_initial_address_channel_fifo_depth', 'address_channel_fifo_depth']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_initial_check_4kbyte_boundary', 'check_4kbyte_boundary']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_memory',          {'__class__': 'HdlOp',           'fn': 'INDEX',           'ops': ['to_vc_interface', 'memory', 'logger']}]} , {'__class__': 'HdlOp', 'fn': 'MAP_ASSOCIATION', 'ops': ['p_logger', 'logger']} ] to [{'__class__': 'HdlOp', 'fn': 'MAP_ASSOCIATION', 'ops': ['p_actor', 'new_actor']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_initial_address_channel_fifo_depth', 'address_channel_fifo_depth']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_initial_check_4kbyte_boundary', 'check_4kbyte_boundary']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_memory',          {'__class__': 'HdlOp',           'fn': 'INDEX',           'ops': ['to_vc_interface', 'memory', 'logger']}]} , {'__class__': 'HdlOp', 'fn': 'MAP_ASSOCIATION', 'ops': ['p_logger', 'logger']} ]
    UPD HdlOp@@MAP_ASSOCIATION to MAP_ASSOCIATION
        UPD HdlValueId@@p_initial_address_channel_fifo_depth to p_initial_address_fifo_depth
        UPD HdlValueId@@address_channel_fifo_depth to address_fifo_depth


CommitId: 2eed8ec88049ca9b15d9e6edd703a31a3f2ad852
Fix set_timeout for large values in ModelSim. Closes #405
--- a/vunit/vhdl/run/src/runner_pkg.vhd
+++ b/vunit/vhdl/run/src/runner_pkg.vhd
@@ -527,7 +528,7 @@ package body runner_pkg is
   end;
 
   procedure set_timeout(runner : runner_t; timeout : time) is
-    constant new_value : string := time'image(timeout);
+    constant new_value : string := encode(timeout);
     variable timeout_ptr : string_ptr_t := to_string_ptr(get(runner.p_data, timeout_idx));
   begin
     if timeout_ptr = null_string_ptr then

ParseResult:
UPD HdlIdDef@@new_value to new_value
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@APOSTROPHE to APOSTROPHE
            UPD HdlValueId@@time to encode
            MOV HdlValueId@@time to ops
            HdlValueId: time
            DEL HdlValueId@@image from ops
            DEL list@@ops from APOSTROPHE
        DEL HdlOp@@APOSTROPHE from ops


CommitId: 2eed8ec88049ca9b15d9e6edd703a31a3f2ad852
Fix set_timeout for large values in ModelSim. Closes #405
--- a/vunit/vhdl/run/src/runner_pkg.vhd
+++ b/vunit/vhdl/run/src/runner_pkg.vhd
@@ -541,7 +542,7 @@ package body runner_pkg is
   impure function get_timeout(runner : runner_t) return time is
     constant timeout_ptr : string_ptr_t := to_string_ptr(get(runner.p_data, timeout_idx));
   begin
-    return time'value(to_string(timeout_ptr));
+    return decode(to_string(timeout_ptr));
   end;
 
 end package body;
ParseResult:
UPD HdlStmReturn@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': [{'__class__': 'HdlOp', 'fn': 'APOSTROPHE', 'ops': ['time', 'value']},          {'__class__': 'HdlOp',           'fn': 'CALL',           'ops': ['to_string', 'timeout_ptr']}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': ['decode',          {'__class__': 'HdlOp',           'fn': 'CALL',           'ops': ['to_string', 'timeout_ptr']}]} 

UPD HdlStmReturn@@{'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': [{'__class__': 'HdlOp', 'fn': 'APOSTROPHE', 'ops': ['time', 'value']},          {'__class__': 'HdlOp',           'fn': 'CALL',           'ops': ['to_string', 'timeout_ptr']}]}  to {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops': [{'__class__': 'HdlOp', 'fn': 'APOSTROPHE', 'ops': ['time', 'value']},          {'__class__': 'HdlOp',           'fn': 'CALL',           'ops': ['to_string', 'timeout_ptr']}]} 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@APOSTROPHE to APOSTROPHE
            UPD HdlValueId@@time to decode
            MOV HdlValueId@@time to ops
            HdlValueId: time
            DEL HdlValueId@@value from ops
            DEL list@@ops from APOSTROPHE
        DEL HdlOp@@APOSTROPHE from ops


CommitId: 1a1923390afef703c5f3ac580836021fc8a8e3ec
Merge pull request #434 from bradleyharden/test_modelsim_fixup
--- a/vunit/vhdl/verification_components/src/axi_stream_master.vhd
+++ b/vunit/vhdl/verification_components/src/axi_stream_master.vhd
@@ -110,7 +158,7 @@ begin
         protocol_checker => master.p_protocol_checker)
       port map (
         aclk     => aclk,
-        areset_n => open,
+        areset_n => areset_n,
         tvalid   => tvalid,
         tready   => tready,
         tdata    => tdata,

ParseResult:
UPD HdlStmIf@@ to 
    INS HdlOp@@EQ to 
    HdlOp: EQ
        list: ops
            HdlValueId: areset_n
            HdlValueInt: 0
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: tvalid
    INS list@@elifs to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmWhile@@ to 
    INS HdlOp@@NEG to 
    HdlOp: NEG
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: is_empty
                    HdlValueId: message_queue
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        INS HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: delete
                HdlValueId: msg

UPD HdlStmIf@@ to 
    INS HdlOp@@EQ to 
    HdlOp: EQ
        list: ops
            HdlValueId: msg_type
            HdlValueId: wait_for_time_msg
    INS HdlStmBlock@@SEQ to 
    INS list@@elifs to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    INS tuple@@ to elifs
    tuple
        HdlOp: EQ
            list: ops
                HdlValueId: msg_type
                HdlValueId: notify_request_msg
        HdlStmBlock: SEQ
            list: body
    INS tuple@@ to elifs


CommitId: 1a1923390afef703c5f3ac580836021fc8a8e3ec
Merge pull request #434 from bradleyharden/test_modelsim_fixup
--- a/vunit/vhdl/verification_components/src/axi_stream_master.vhd
+++ b/vunit/vhdl/verification_components/src/axi_stream_master.vhd
@@ -123,4 +171,4 @@ begin
       );
   end generate axi_stream_protocol_checker_generate;
 
-end architecture;
+end architecture;
\ No newline at end of file
ParseResult:
UPD HdlStmIf@@ to 
    INS HdlOp@@EQ to 
    HdlOp: EQ
        list: ops
            HdlValueId: areset_n
            HdlValueInt: 0
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: tvalid
    INS list@@elifs to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlStmWhile@@ to 
    INS HdlOp@@NEG to 
    HdlOp: NEG
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: is_empty
                    HdlValueId: message_queue
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        INS HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: delete
                HdlValueId: msg

UPD HdlStmIf@@ to 
    INS HdlOp@@EQ to 
    HdlOp: EQ
        list: ops
            HdlValueId: msg_type
            HdlValueId: wait_for_time_msg
    INS HdlStmBlock@@SEQ to 
    INS list@@elifs to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
    INS tuple@@ to elifs
    tuple
        HdlOp: EQ
            list: ops
                HdlValueId: msg_type
                HdlValueId: notify_request_msg
        HdlStmBlock: SEQ
            list: body
    INS tuple@@ to elifs


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/run/src/runner_pkg.vhd
+++ b/vunit/vhdl/run/src/runner_pkg.vhd
@@ -19,7 +19,10 @@ package runner_pkg is
   end record;
 
   constant null_runner : runner_t := (p_data => null_ptr);
-  constant unknown_num_of_test_cases_c : integer := integer'left;
+  constant unknown_num_of_test_cases : integer := integer'left;
+
+  -- Deprecated
+  alias unknown_num_of_test_cases_c is unknown_num_of_test_cases;
 
   impure function new_runner return runner_t;
 

ParseResult:
UPD HdlIdDef@@unknown_num_of_test_cases_c to unknown_num_of_test_cases


CommitId: 6f66db2051d9f0644c634b3e82042cdb85961cef
Remove default file_handler
--- a/vunit/vhdl/logging/src/log_handler_pkg.vhd
+++ b/vunit/vhdl/logging/src/log_handler_pkg.vhd
@@ -37,10 +37,6 @@ package log_handler_pkg is
   -- Display handler; Write to stdout
   impure function display_handler return log_handler_t;
 
-  -- File handler; Write to file
-  -- Is configured to output_path/log.csv by test_runner_setup
-  impure function file_handler return log_handler_t;
-
   -- Get the name of the file used by the handler
   impure function get_file_name (log_handler : log_handler_t) return string;
 
ParseResult:
DEL HdlFunctionDef@@file_handler from objs
HdlFunctionDef: file_handler
    HdlValueId: log_handler_t
    list: params
    list: body


CommitId: 17adec4363116528ac9813bef776765eacda6e88
dictionary: add default value option to get function
--- a/vunit/vhdl/dictionary/src/dictionary.vhd
+++ b/vunit/vhdl/dictionary/src/dictionary.vhd
@@ -27,7 +27,11 @@ package dictionary is
     constant d   : frozen_dictionary_t;
     constant key : string)
     return boolean;
-
+  impure function get (
+    d             : frozen_dictionary_t; 
+    key           : string; 
+    default_value : string) 
+    return string;
 end package dictionary;
 
 package body dictionary is

ParseResult:
INS HdlFunctionDef@@get to objs
HdlFunctionDef: get
    HdlValueId: string
    list: params
        HdlIdDef: d
            HdlValueId: frozen_dictionary_t
            HdlDirection: IN
        HdlIdDef: key
            HdlValueId: string
            HdlDirection: IN
        HdlIdDef: default_value
            HdlValueId: string
            HdlDirection: IN
    list: body


CommitId: 17adec4363116528ac9813bef776765eacda6e88
dictionary: add default value option to get function
--- a/vunit/vhdl/dictionary/src/dictionary.vhd
+++ b/vunit/vhdl/dictionary/src/dictionary.vhd
@@ -105,4 +109,18 @@ package body dictionary is
     return status = valid_value;
   end;
 
+  impure function get (
+    d             : frozen_dictionary_t; 
+    key           : string; 
+    default_value : string) 
+    return string is
+  begin
+    if (has_key(d, key) = True) then
+      return get(d, key);
+    else
+      return default_value;
+    end if; 
+  end function get; 
+  
+  
 end package body dictionary;
ParseResult:
INS HdlFunctionDef@@get to objs
HdlFunctionDef: get
    HdlValueId: string
    list: params
        HdlIdDef: d
            HdlValueId: frozen_dictionary_t
            HdlDirection: IN
        HdlIdDef: key
            HdlValueId: string
            HdlDirection: IN
        HdlIdDef: default_value
            HdlValueId: string
            HdlDirection: IN
    list: body
        HdlStmIf
            HdlOp: EQ
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: has_key
                            HdlValueId: d
                            HdlValueId: key
                    HdlValueId: True
            HdlStmBlock: SEQ
                list: body
                    HdlStmReturn: {'__class__': 'HdlOp', 'fn': 'INDEX', 'ops':} 
                        HdlOp: INDEX
                            list: ops
                                HdlValueId: get
                                HdlValueId: d
                                HdlValueId: key
            list: elifs
            HdlStmBlock: SEQ
                list: body
                    HdlStmReturn: default_value
                        HdlValueId: default_value


CommitId: 97dadd1ac03a4526b736623b97f34d086b95b4b6
Moved com codecs to datatypes. Removed support for debug codecs.
--- a/vunit/vhdl/data_types/src/string_ptr_pkg-body-93.vhd
+++ b/vunit/vhdl/data_types/src/string_ptr_pkg-body-93.vhd
@@ -114,4 +117,23 @@ package body string_ptr_pkg is
     return result;
   end function;
 
+  function encode(data : string_ptr_t) return string is
+  begin
+    return encode(data.index);
+  end;
+
+  function decode(code : string) return string_ptr_t is
+    variable ret_val : string_ptr_t;
+    variable index : positive := code'left;
+  begin
+    decode(code, index, ret_val);
+
+    return ret_val;
+  end;
+
+  procedure decode (constant code : string; variable index : inout positive; variable result : out string_ptr_t) is
+  begin
+    decode(code, index, result.index);
+  end;
+
 end package body;
ParseResult:
INS HdlFunctionDef@@encode to objs
HdlFunctionDef: encode
    HdlValueId: string
    list: params
        HdlIdDef: data
            HdlValueId: string_ptr_t
            HdlDirection: IN
    list: body
        HdlStmReturn: {'__class__': 'HdlOp',  'fn': 'INDEX',  'ops':}]} 
            HdlOp: INDEX
                list: ops
                    HdlValueId: encode
                    HdlOp: DOT
                        list: ops
                            HdlValueId: data
                            HdlValueId: index

INS HdlFunctionDef@@decode to objs
HdlFunctionDef: decode
    HdlValueId: string_ptr_t
    list: params
        HdlIdDef: code
            HdlValueId: string
            HdlDirection: IN
    list: body
        HdlIdDef: ret_val
            HdlValueId: string_ptr_t
            HdlDirection: INTERNAL
        HdlIdDef: index
            HdlValueId: positive
            HdlOp: APOSTROPHE
                list: ops
                    HdlValueId: code
                    HdlValueId: left
            HdlDirection: INTERNAL
        HdlOp: CALL
            list: ops
                HdlValueId: decode
                HdlValueId: code
                HdlValueId: index
                HdlValueId: ret_val
        HdlStmReturn: ret_val
            HdlValueId: ret_val

INS HdlFunctionDef@@decode to objs
HdlFunctionDef: decode
    list: params
        HdlIdDef: code
            HdlValueId: string
            HdlDirection: INTERNAL
        HdlIdDef: index
            HdlValueId: positive
            HdlDirection: INOUT
        HdlIdDef: result
            HdlValueId: string_ptr_t
            HdlDirection: OUT
    list: body
        HdlOp: CALL
            list: ops
                HdlValueId: decode
                HdlValueId: code
                HdlValueId: index
                HdlOp: DOT
                    list: ops
                        HdlValueId: result
                        HdlValueId: index


CommitId: a7f2bbe7b769679e7d6631c967feca7b96403d3c
add possibility to configure random stalls for axi_stream (#557)
--- a/vunit/vhdl/verification_components/src/axi_stream_master.vhd
+++ b/vunit/vhdl/verification_components/src/axi_stream_master.vhd
@@ -11,9 +11,13 @@ context work.vunit_context;
 context work.com_context;
 use work.stream_master_pkg.all;
 use work.axi_stream_pkg.all;
+use work.axi_stream_private_pkg.all;
 use work.queue_pkg.all;
 use work.sync_pkg.all;
 
+library osvvm;
+use osvvm.RandomPkg.RandomPType;
+
 entity axi_stream_master is
   generic (
     master                 : axi_stream_master_t;

ParseResult:
INS HdlLibrary@@osvvm to objs


CommitId: a7f2bbe7b769679e7d6631c967feca7b96403d3c
add possibility to configure random stalls for axi_stream (#557)
--- a/vunit/vhdl/verification_components/src/axi_stream_master.vhd
+++ b/vunit/vhdl/verification_components/src/axi_stream_master.vhd
@@ -42,6 +46,22 @@ architecture a of axi_stream_master is
   constant message_queue           : queue_t    := new_queue;
   signal   notify_bus_process_done : std_logic  := '0';
 
+  procedure drive_invalid_output(signal l_tdata : out std_logic_vector(data_length(master)-1 downto 0);
+                                 signal l_tkeep : out std_logic_vector(data_length(master)/8-1 downto 0);
+                                 signal l_tstrb : out std_logic_vector(data_length(master)/8-1 downto 0);
+                                 signal l_tid   : out std_logic_vector(id_length(master)-1 downto 0);
+                                 signal l_tdest : out std_logic_vector(dest_length(master)-1 downto 0);
+                                 signal l_tuser : out std_logic_vector(user_length(master)-1 downto 0))
+  is
+  begin
+    l_tdata <= (others => drive_invalid_val);
+    l_tkeep <= (others => drive_invalid_val);
+    l_tstrb <= (others => drive_invalid_val);
+    l_tid   <= (others => drive_invalid_val);
+    l_tdest <= (others => drive_invalid_val);
+    l_tuser <= (others => drive_invalid_val_user);
+  end procedure;
+
 begin
 
   main : process

ParseResult:
INS HdlFunctionDef@@drive_invalid_output to objs


CommitId: a7f2bbe7b769679e7d6631c967feca7b96403d3c
add possibility to configure random stalls for axi_stream (#557)
--- a/vunit/vhdl/verification_components/src/axi_stream_master.vhd
+++ b/vunit/vhdl/verification_components/src/axi_stream_master.vhd
@@ -171,4 +194,4 @@ begin
       );
   end generate axi_stream_protocol_checker_generate;
 
-end architecture;
\ No newline at end of file
+end architecture;
ParseResult:
UPD HdlStmProcess@@ to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ
        INS HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlOp: DOT
                    list: ops
                        HdlValueId: rnd
                        HdlValueId: InitSeed
                HdlOp: APOSTROPHE
                    list: ops
                        HdlValueId: rnd
                        HdlValueId: instance_name

UPD HdlStmWhile@@ to 
    INS HdlValueId@@True to 


CommitId: 305bff61c43a4817f91b64490a7b10486de80412
Fix Riviera-PRO compilation issues.
--- a/vunit/vhdl/data_types/src/integer_vector_ptr_pkg-body-93.vhd
+++ b/vunit/vhdl/data_types/src/integer_vector_ptr_pkg-body-93.vhd
@@ -96,7 +96,7 @@ package body integer_vector_ptr_pkg is
   end;
 
   impure function to_integer_vector_ptr (
-    value : integer
+    value : val_t
   ) return ptr_t is begin
     -- @TODO maybe assert that the ref is valid
     return (ref => value);
ParseResult:
UPD HdlIdDef@@value to value
    UPD HdlValueId@@integer to val_t


CommitId: 4d38b358430c75bd822e0c6f812d70836d29b3aa
Make memory permission checking off by default.
--- a/vunit/vhdl/bfm/src/memory_pkg-body.vhd
+++ b/vunit/vhdl/bfm/src/memory_pkg-body.vhd
@@ -150,7 +150,7 @@ package body memory_pkg is
 
   impure function check_address(memory : memory_t; address : natural;
                                 reading : boolean;
-                                ignore_permissions : boolean := false) return boolean is
+                                check_permissions : boolean := false) return boolean is
     impure function verb return string is
     begin
       if reading then

ParseResult:
UPD HdlIdDef@@ignore_permissions to check_permissions


CommitId: 4d38b358430c75bd822e0c6f812d70836d29b3aa
Make memory permission checking off by default.
--- a/vunit/vhdl/bfm/src/memory_pkg-body.vhd
+++ b/vunit/vhdl/bfm/src/memory_pkg-body.vhd
@@ -167,22 +167,22 @@ package body memory_pkg is
     elsif address >= length(memory.p_data) then
       failure(memory.p_logger, verb & " address " & to_string(address) & " out of range 0 to " & to_string(length(memory.p_data)-1));
       return false;
-    elsif not ignore_permissions and get_permissions(memory, address) = no_access then
+    elsif check_permissions and get_permissions(memory, address) = no_access then
       failure(memory.p_logger, verb & " " & describe_address(memory, address) & " without permission (no_access)");
       return false;
-    elsif not ignore_permissions and reading and get_permissions(memory, address) = write_only then
+    elsif check_permissions and reading and get_permissions(memory, address) = write_only then
       failure(memory.p_logger, verb & " " & describe_address(memory, address) & " without permission (write_only)");
       return false;
-    elsif not ignore_permissions and not reading and get_permissions(memory, address) = read_only then
+    elsif check_permissions and not reading and get_permissions(memory, address) = read_only then
       failure(memory.p_logger, verb & " " & describe_address(memory, address) & " without permission (read_only)");
       return false;
     end if;
     return true;
   end;
 
-  impure function get(memory : memory_t; address : natural; reading : boolean; ignore_permissions : boolean) return memory_data_t is
+  impure function get(memory : memory_t; address : natural; reading : boolean; check_permissions : boolean := false) return memory_data_t is
   begin
-    if not check_address(memory, address, reading, ignore_permissions) then
+    if not check_address(memory, address, reading, check_permissions) then
       return decode(0);
     end if;
     return decode(get(memory.p_data, address));

ParseResult:
UPD HdlIdDef@@ignore_permissions to check_permissions

UPD HdlIdDef@@check_permissions to check_permissions
    INS HdlValueId@@false to check_permissions

UPD HdlStmIf@@ to 
    UPD HdlOp@@AND to AND
        UPD HdlOp@@NEG to NEG
            UPD HdlValueId@@ignore_permissions to check_permissions
            MOV HdlValueId@@ignore_permissions to ops
            HdlValueId: ignore_permissions
            DEL list@@ops from NEG
        DEL HdlOp@@NEG from ops
    UPD HdlOp@@AND to AND
        UPD HdlOp@@AND to AND
            UPD HdlOp@@NEG to NEG
                UPD HdlValueId@@ignore_permissions to check_permissions
                MOV HdlValueId@@ignore_permissions to ops
                HdlValueId: ignore_permissions
                DEL list@@ops from NEG
            DEL HdlOp@@NEG from ops
    UPD HdlOp@@AND to AND
        UPD HdlOp@@AND to AND
            UPD HdlOp@@NEG to NEG
                UPD HdlValueId@@ignore_permissions to check_permissions
                MOV HdlValueId@@ignore_permissions to ops
                HdlValueId: ignore_permissions
                DEL list@@ops from NEG
            DEL HdlOp@@NEG from ops

UPD HdlStmIf@@ to 
    UPD HdlOp@@NEG to NEG
        UPD HdlOp@@INDEX to INDEX
            UPD HdlValueId@@ignore_permissions to check_permissions


CommitId: 4d38b358430c75bd822e0c6f812d70836d29b3aa
Make memory permission checking off by default.
--- a/vunit/vhdl/bfm/src/memory_pkg-body.vhd
+++ b/vunit/vhdl/bfm/src/memory_pkg-body.vhd
@@ -193,24 +193,22 @@ package body memory_pkg is
     return get(memory.p_meta, num_bytes_idx);
   end;
 
-  procedure write_byte(memory : memory_t; address : natural; byte : byte_t; ignore_permissions : boolean := false) is
+  procedure write_byte(memory : memory_t; address : natural; byte : byte_t; check_permissions : boolean := false) is
     variable old : memory_data_t;
   begin
-    if not check_address(memory, address, false, ignore_permissions) then
+    if not check_address(memory, address, false, check_permissions) then
       return;
     end if;
 
-    if not ignore_permissions then
-      check_write_data(memory, address, byte);
-    end if;
+    check_write_data(memory, address, byte);
 
     old := decode(get(memory.p_data, address));
     set(memory.p_data, address, encode((byte => byte, exp => old.exp, has_exp => old.has_exp, perm => old.perm)));
   end;
 
-  impure function read_byte(memory : memory_t; address : natural; ignore_permissions : boolean := false) return byte_t is
+  impure function read_byte(memory : memory_t; address : natural; check_permissions : boolean := false) return byte_t is
   begin
-    return get(memory, address, true, ignore_permissions).byte;
+    return get(memory, address, true, check_permissions).byte;
   end;
 
   procedure check_expected_was_written(memory : memory_t; address : natural; num_bytes : natural) is

ParseResult:
INS HdlFunctionDef@@read_byte to objs

UPD HdlFunctionDef@@read_byte to read_byte
    INS HdlValueId@@byte_t to read_byte
    INS list@@body to read_byte
    list: body
        HdlStmReturn: {'__class__': 'HdlOp',  'fn': 'DOT',  'ops':},          'byte']} 
            HdlOp: DOT
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: get
                            HdlValueId: memory
                            HdlValueId: address
                            HdlValueId: true
                            HdlValueId: check_permissions
                    HdlValueId: byte

UPD HdlFunctionDef@@read_byte to read_byte
    MOV list@@params to read_byte
    list: params
        HdlIdDef: memory
            HdlValueId: memory_t
            HdlDirection: IN
        HdlIdDef: address
            HdlValueId: natural
            HdlDirection: IN
        HdlIdDef: ignore_permissions
            HdlValueId: boolean
            HdlValueId: false
            HdlDirection: IN
    DEL HdlValueId@@byte_t from read_byte
    DEL list@@body from read_byte
    list: body
        HdlStmReturn: {'__class__': 'HdlOp',  'fn': 'DOT',  'ops':},          'byte']} 
            HdlOp: DOT
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: get
                            HdlValueId: memory
                            HdlValueId: address
                            HdlValueId: true
                            HdlValueId: ignore_permissions
                    HdlValueId: byte

UPD HdlIdDef@@ignore_permissions to check_permissions

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: check_write_data
                HdlValueId: memory
                HdlValueId: address
                HdlValueId: byte
        DEL list@@body from SEQ
    DEL HdlOp@@NEG from 
    HdlOp: NEG
        list: ops
            HdlValueId: ignore_permissions
    DEL HdlStmBlock@@SEQ from 
    DEL list@@elifs from 

UPD HdlIdDef@@ignore_permissions to check_permissions

UPD HdlStmIf@@ to 
    UPD HdlOp@@NEG to NEG
        UPD HdlOp@@INDEX to INDEX
            UPD HdlValueId@@ignore_permissions to check_permissions

DEL HdlStmIf@@ from body

DEL HdlFunctionDef@@read_byte from objs


CommitId: 4d38b358430c75bd822e0c6f812d70836d29b3aa
Make memory permission checking off by default.
--- a/vunit/vhdl/bfm/src/memory_pkg-body.vhd
+++ b/vunit/vhdl/bfm/src/memory_pkg-body.vhd
@@ -238,13 +236,13 @@ package body memory_pkg is
 
   impure function get_permissions(memory : memory_t; address : natural) return permissions_t is
   begin
-    return get(memory, address, true, ignore_permissions => true).perm;
+    return get(memory, address, true).perm;
   end;
 
   procedure set_permissions(memory : memory_t; address : natural; permissions : permissions_t) is
     variable old : memory_data_t;
   begin
-    if not check_address(memory, address, false, ignore_permissions => true) then
+    if not check_address(memory, address, false) then
       return;
     end if;
     old := decode(get(memory.p_data, address));

ParseResult:
INS HdlFunctionDef@@get_permissions to objs

UPD HdlFunctionDef@@get_permissions to get_permissions
    INS HdlValueId@@permissions_t to get_permissions
    INS list@@body to get_permissions
    list: body
        HdlStmReturn: {'__class__': 'HdlOp',  'fn': 'DOT',  'ops':},          'perm']} 
            HdlOp: DOT
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: get
                            HdlValueId: memory
                            HdlValueId: address
                            HdlValueId: true
                    HdlValueId: perm

UPD HdlFunctionDef@@get_permissions to get_permissions
    MOV list@@params to get_permissions
    list: params
        HdlIdDef: memory
            HdlValueId: memory_t
            HdlDirection: IN
        HdlIdDef: address
            HdlValueId: natural
            HdlDirection: IN
    DEL HdlValueId@@permissions_t from get_permissions
    DEL list@@body from get_permissions
    list: body
        HdlStmReturn: {'__class__': 'HdlOp',  'fn': 'DOT',  'ops':}]},          'perm']} 
            HdlOp: DOT
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: get
                            HdlValueId: memory
                            HdlValueId: address
                            HdlValueId: true
                            HdlOp: ARROW
                                list: ops
                                    HdlValueId: ignore_permissions
                                    HdlValueId: true
                    HdlValueId: perm

DEL HdlFunctionDef@@get_permissions from objs

UPD HdlStmIf@@ to 
    UPD HdlOp@@NEG to NEG
        UPD HdlOp@@INDEX to INDEX
            DEL HdlOp@@ARROW from ops
            HdlOp: ARROW
                list: ops
                    HdlValueId: ignore_permissions
                    HdlValueId: true


CommitId: 4d38b358430c75bd822e0c6f812d70836d29b3aa
Make memory permission checking off by default.
--- a/vunit/vhdl/bfm/src/memory_pkg-body.vhd
+++ b/vunit/vhdl/bfm/src/memory_pkg-body.vhd
@@ -253,13 +251,13 @@ package body memory_pkg is
 
   impure function has_expected_byte(memory : memory_t; address : natural) return boolean is
   begin
-    return get(memory, address, true, ignore_permissions => true).has_exp;
+    return get(memory, address, true).has_exp;
   end;
 
   procedure clear_expected_byte(memory : memory_t; address : natural) is
     variable old : memory_data_t;
   begin
-    if not check_address(memory, address, false, ignore_permissions => true) then
+    if not check_address(memory, address, false) then
       return;
     end if;
     old := decode(get(memory.p_data, address));

ParseResult:
INS HdlFunctionDef@@has_expected_byte to objs

UPD HdlFunctionDef@@has_expected_byte to has_expected_byte
    MOV list@@params to has_expected_byte
    list: params
        HdlIdDef: memory
            HdlValueId: memory_t
            HdlDirection: IN
        HdlIdDef: address
            HdlValueId: natural
            HdlDirection: IN
    DEL HdlValueId@@boolean from has_expected_byte
    DEL list@@body from has_expected_byte
    list: body
        HdlStmReturn: {'__class__': 'HdlOp',  'fn': 'DOT',  'ops':}]},          'has_exp']} 
            HdlOp: DOT
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: get
                            HdlValueId: memory
                            HdlValueId: address
                            HdlValueId: true
                            HdlOp: ARROW
                                list: ops
                                    HdlValueId: ignore_permissions
                                    HdlValueId: true
                    HdlValueId: has_exp

DEL HdlFunctionDef@@has_expected_byte from objs

UPD HdlStmIf@@ to 
    UPD HdlOp@@NEG to NEG
        UPD HdlOp@@INDEX to INDEX
            DEL HdlOp@@ARROW from ops
            HdlOp: ARROW
                list: ops
                    HdlValueId: ignore_permissions
                    HdlValueId: true


CommitId: 4d38b358430c75bd822e0c6f812d70836d29b3aa
Make memory permission checking off by default.
--- a/vunit/vhdl/bfm/src/memory_pkg-body.vhd
+++ b/vunit/vhdl/bfm/src/memory_pkg-body.vhd
@@ -269,7 +267,7 @@ package body memory_pkg is
   procedure set_expected_byte(memory : memory_t; address : natural; expected : byte_t) is
     variable old : memory_data_t;
   begin
-    if not check_address(memory, address, false, ignore_permissions => true) then
+    if not check_address(memory, address, false) then
       return;
     end if;
     old := decode(get(memory.p_data, address));

ParseResult:
UPD HdlFunctionDef@@get_expected_byte to get_expected_byte
    INS HdlValueId@@byte_t to get_expected_byte
    INS list@@body to get_expected_byte
    list: body
        HdlStmReturn: {'__class__': 'HdlOp',  'fn': 'DOT',  'ops':},          'exp']} 
            HdlOp: DOT
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: get
                            HdlValueId: memory
                            HdlValueId: address
                            HdlValueId: true
                    HdlValueId: exp

UPD HdlStmIf@@ to 
    UPD HdlOp@@NEG to NEG
        UPD HdlOp@@INDEX to INDEX
            DEL HdlOp@@ARROW from ops
            HdlOp: ARROW
                list: ops
                    HdlValueId: ignore_permissions
                    HdlValueId: true


CommitId: 4d38b358430c75bd822e0c6f812d70836d29b3aa
Make memory permission checking off by default.
--- a/vunit/vhdl/bfm/src/memory_pkg-body.vhd
+++ b/vunit/vhdl/bfm/src/memory_pkg-body.vhd
@@ -278,7 +276,7 @@ package body memory_pkg is
 
   impure function get_expected_byte(memory : memory_t; address : natural) return byte_t is
   begin
-    return get(memory, address, true, ignore_permissions => true).exp;
+    return get(memory, address, true).exp;
   end;
 
   procedure set_expected_word(memory : memory_t; address : natural; expected : std_logic_vector; big_endian : boolean := false) is

ParseResult:
INS HdlFunctionDef@@get_expected_byte to objs

UPD HdlFunctionDef@@get_expected_byte to get_expected_byte
    MOV list@@params to get_expected_byte
    list: params
        HdlIdDef: memory
            HdlValueId: memory_t
            HdlDirection: IN
        HdlIdDef: address
            HdlValueId: natural
            HdlDirection: IN
    DEL HdlValueId@@byte_t from get_expected_byte
    DEL list@@body from get_expected_byte
    list: body
        HdlStmReturn: {'__class__': 'HdlOp',  'fn': 'DOT',  'ops':}]},          'exp']} 
            HdlOp: DOT
                list: ops
                    HdlOp: INDEX
                        list: ops
                            HdlValueId: get
                            HdlValueId: memory
                            HdlValueId: address
                            HdlValueId: true
                            HdlOp: ARROW
                                list: ops
                                    HdlValueId: ignore_permissions
                                    HdlValueId: true
                    HdlValueId: exp

DEL HdlFunctionDef@@get_expected_byte from objs


CommitId: 4d38b358430c75bd822e0c6f812d70836d29b3aa
Make memory permission checking off by default.
--- a/vunit/vhdl/bfm/src/memory_pkg-body.vhd
+++ b/vunit/vhdl/bfm/src/memory_pkg-body.vhd
@@ -349,7 +347,7 @@ package body memory_pkg is
                        address : natural;
                        word : std_logic_vector;
                        big_endian : boolean := false;
-                       ignore_permissions : boolean := false) is
+                       check_permissions : boolean := false) is
 
     -- Normalize to downto range to enable std_logic_vector literals which are
     -- 1 to N

ParseResult:
UPD HdlIdDef@@ignore_permissions to check_permissions


CommitId: 4d38b358430c75bd822e0c6f812d70836d29b3aa
Make memory permission checking off by default.
--- a/vunit/vhdl/bfm/src/memory_pkg-body.vhd
+++ b/vunit/vhdl/bfm/src/memory_pkg-body.vhd
@@ -359,13 +357,13 @@ package body memory_pkg is
       for idx in 0 to word_i'length/8-1 loop
         write_byte(memory, address + word_i'length/8 - 1 - idx,
                    to_integer(unsigned(word_i(8*idx+7 downto 8*idx))),
-                   ignore_permissions => ignore_permissions);
+                   check_permissions => check_permissions);
       end loop;
     else
       for idx in 0 to word_i'length/8-1 loop
         write_byte(memory, address + idx,
                    to_integer(unsigned(word_i(8*idx+7 downto 8*idx))),
-                   ignore_permissions => ignore_permissions);
+                   check_permissions => check_permissions);
       end loop;
     end if;
   end procedure;

ParseResult:
UPD HdlStmForIn@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@CALL to CALL
            UPD HdlOp@@ARROW to ARROW
                UPD HdlValueId@@ignore_permissions to check_permissions
                UPD HdlValueId@@ignore_permissions to check_permissions

UPD HdlStmForIn@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@CALL to CALL
            UPD HdlOp@@ARROW to ARROW
                UPD HdlValueId@@ignore_permissions to check_permissions
                UPD HdlValueId@@ignore_permissions to check_permissions


CommitId: 4d38b358430c75bd822e0c6f812d70836d29b3aa
Make memory permission checking off by default.
--- a/vunit/vhdl/bfm/src/memory_pkg-body.vhd
+++ b/vunit/vhdl/bfm/src/memory_pkg-body.vhd
@@ -375,7 +373,7 @@ package body memory_pkg is
                             address : natural;
                             bytes_per_word : positive;
                             big_endian : boolean := false;
-                            ignore_permissions : boolean := false) return std_logic_vector is
+                            check_permissions : boolean := false) return std_logic_vector is
     variable result : std_logic_vector(8*bytes_per_word-1 downto 0);
     variable bidx : natural;
   begin

ParseResult:
UPD HdlIdDef@@ignore_permissions to check_permissions


CommitId: 4d38b358430c75bd822e0c6f812d70836d29b3aa
Make memory permission checking off by default.
--- a/vunit/vhdl/bfm/src/memory_pkg-body.vhd
+++ b/vunit/vhdl/bfm/src/memory_pkg-body.vhd
@@ -388,7 +386,7 @@ package body memory_pkg is
 
       result(8*bidx+7 downto 8*bidx) := std_logic_vector(
         to_unsigned(read_byte(memory, address + idx,
-                              ignore_permissions => ignore_permissions), 8));
+                              check_permissions => check_permissions), 8));
 
     end loop;
     return result;

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@INDEX to INDEX
            UPD HdlOp@@INDEX to INDEX
                UPD HdlOp@@ARROW to ARROW
                    UPD HdlValueId@@ignore_permissions to check_permissions
                    UPD HdlValueId@@ignore_permissions to check_permissions


CommitId: 4d38b358430c75bd822e0c6f812d70836d29b3aa
Make memory permission checking off by default.
--- a/vunit/vhdl/bfm/src/memory_pkg-body.vhd
+++ b/vunit/vhdl/bfm/src/memory_pkg-body.vhd
@@ -399,14 +397,14 @@ package body memory_pkg is
                           word : integer;
                           bytes_per_word : natural range 1 to 4 := 4;
                           big_endian : boolean := false;
-                          ignore_permissions : boolean := false) is
+                          check_permissions : boolean := false) is
 
     constant bytes : integer_vector := serialize(word, bytes_per_word, big_endian);
   begin
     for byte_idx in 0 to bytes_per_word-1 loop
       write_byte(memory, address + byte_idx,
                  bytes(byte_idx),
-                 ignore_permissions => true);
+                 check_permissions => check_permissions);
     end loop;
   end procedure;
 

ParseResult:
UPD HdlIdDef@@ignore_permissions to check_permissions

UPD HdlStmForIn@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@CALL to CALL
            UPD HdlOp@@ARROW to ARROW
                UPD HdlValueId@@ignore_permissions to check_permissions
                UPD HdlValueId@@true to check_permissions


CommitId: 4d38b358430c75bd822e0c6f812d70836d29b3aa
Make memory permission checking off by default.
--- a/vunit/vhdl/bfm/src/memory_pkg-body.vhd
+++ b/vunit/vhdl/bfm/src/memory_pkg-body.vhd
@@ -429,8 +427,7 @@ package body memory_pkg is
     for i in 0 to length(integer_vector_ptr)-1 loop
       write_integer(memory, base_addr + bytes_per_word*i, get(integer_vector_ptr, i),
                     bytes_per_word => bytes_per_word,
-                    big_endian => big_endian,
-                    ignore_permissions => true);
+                    big_endian => big_endian);
     end loop;
     return alloc;
   end;

ParseResult:
UPD HdlStmForIn@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@CALL to CALL
            DEL HdlOp@@ARROW from ops
            HdlOp: ARROW
                list: ops
                    HdlValueId: ignore_permissions
                    HdlValueId: true


CommitId: 4d38b358430c75bd822e0c6f812d70836d29b3aa
Make memory permission checking off by default.
--- a/vunit/vhdl/bfm/src/memory_pkg-body.vhd
+++ b/vunit/vhdl/bfm/src/memory_pkg-body.vhd
@@ -489,8 +486,7 @@ package body memory_pkg is
                         addr,
                         get(integer_array, x, y, z),
                         bytes_per_word => bytes_per_word,
-                        big_endian => big_endian,
-                        ignore_permissions => true);
+                        big_endian => big_endian);
          addr := addr + bytes_per_word;
         end loop;
 
ParseResult:
UPD HdlStmForIn@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@CALL to CALL
            DEL HdlOp@@ARROW from ops
            HdlOp: ARROW
                list: ops
                    HdlValueId: ignore_permissions
                    HdlValueId: true


CommitId: 1fb8cf07c2dc93562ec0f067d13d6a541bfd5e99
Integrated AXI protocol checker into other AXI VCs. Some lint fixing.
--- a/vunit/vhdl/verification_components/src/axi_stream_slave.vhd
+++ b/vunit/vhdl/verification_components/src/axi_stream_slave.vhd
@@ -62,4 +62,18 @@ begin
       );
   end generate axi_stream_monitor_generate;
 
+  axi_stream_protocol_checker_generate : if slave.p_protocol_checker /= null_axi_stream_protocol_checker generate
+    axi_stream_protocol_checker_inst: entity work.axi_stream_protocol_checker
+      generic map (
+        protocol_checker => slave.p_protocol_checker)
+      port map (
+        aclk     => aclk,
+        areset_n => open,
+        tvalid   => tvalid,
+        tready   => tready,
+        tdata    => tdata,
+        tlast    => tlast,
+        tid      => open);
+  end generate axi_stream_protocol_checker_generate;
+
 end architecture;
ParseResult:
INS HdlStmIf@@ to objs
HdlStmIf
    HdlOp: NE
        list: ops
            HdlOp: DOT
                list: ops
                    HdlValueId: slave
                    HdlValueId: p_protocol_checker
            HdlValueId: null_axi_stream_protocol_checker
    HdlCompInst: {'__class__': 'HdlOp',  'fn': 'DOT',  'ops':} -axi_stream_protocol_checker_inst
        list: param_map
            HdlOp: ARROW
                list: ops
                    HdlValueId: protocol_checker
                    HdlOp: DOT
                        list: ops
                            HdlValueId: slave
                            HdlValueId: p_protocol_checker
        list: port_map
            HdlOp: ARROW
                list: ops
                    HdlValueId: aclk
                    HdlValueId: aclk
            HdlOp: ARROW
                list: ops
                    HdlValueId: areset_n
            HdlOp: ARROW
                list: ops
                    HdlValueId: tvalid
                    HdlValueId: tvalid
            HdlOp: ARROW
                list: ops
                    HdlValueId: tready
                    HdlValueId: tready
            HdlOp: ARROW
                list: ops
                    HdlValueId: tdata
                    HdlValueId: tdata
            HdlOp: ARROW
                list: ops
                    HdlValueId: tlast
                    HdlValueId: tlast
            HdlOp: ARROW
                list: ops
                    HdlValueId: tid
    list: elifs


CommitId: 0a5315cd941c68dece460b98902c1717192fe464
Fixed lint issues in string_ops.vhd
--- a/vunit/vhdl/string_ops/src/string_ops.vhd
+++ b/vunit/vhdl/string_ops/src/string_ops.vhd
@@ -177,7 +177,6 @@ package body string_ops is
     constant offset : natural;
     constant length : natural)
     return string is
-    variable ret_val : string(1 to length);
   begin
     if s'ascending then
       return s(s'left + offset to s'left + offset + length - 1);

ParseResult:
DEL HdlIdDef@@ret_val from body
HdlIdDef: ret_val
    HdlOp: INDEX
        list: ops
            HdlValueId: string
            HdlOp: TO
                list: ops
                    HdlValueInt: 1
                    HdlValueId: length
    HdlDirection: INTERNAL


CommitId: 0a5315cd941c68dece460b98902c1717192fe464
Fixed lint issues in string_ops.vhd
--- a/vunit/vhdl/string_ops/src/string_ops.vhd
+++ b/vunit/vhdl/string_ops/src/string_ops.vhd
@@ -207,7 +206,7 @@ package body string_ops is
     type character_array is array (natural range <>) of character;
     variable ret_val : string(1 to (data'length + 3)/4 + 3);
     variable data_extended : std_logic_vector((((data'length + 3)/4)*4)-1 downto 0) := (others => '0');
-    variable i, j, k: integer;
+    variable j: integer;
     variable meta_value_detected : boolean;
     constant hex_characters : character_array(0 to 15) := ('0','1','2','3','4','5','6','7','8','9','a','b','c','d','e','f');
   begin

ParseResult:
DEL HdlIdDef@@i from body
HdlIdDef: i
    HdlValueId: integer
    HdlDirection: INTERNAL

DEL HdlIdDef@@k from body
HdlIdDef: k
    HdlValueId: integer
    HdlDirection: INTERNAL


CommitId: 0a5315cd941c68dece460b98902c1717192fe464
Fixed lint issues in string_ops.vhd
--- a/vunit/vhdl/string_ops/src/string_ops.vhd
+++ b/vunit/vhdl/string_ops/src/string_ops.vhd
@@ -406,7 +405,6 @@ package body string_ops is
   function upper (
     constant s : string)
     return string is
-    variable last_char : character := NUL;
     variable result : string(s'range);
   begin
     for i in s'range loop

ParseResult:
DEL HdlIdDef@@last_char from body
HdlIdDef: last_char
    HdlValueId: character
    HdlValueId: NUL
    HdlDirection: INTERNAL


CommitId: 0a5315cd941c68dece460b98902c1717192fe464
Fixed lint issues in string_ops.vhd
--- a/vunit/vhdl/string_ops/src/string_ops.vhd
+++ b/vunit/vhdl/string_ops/src/string_ops.vhd
@@ -422,7 +420,6 @@ package body string_ops is
   function lower (
     constant s : string)
     return string is
-    variable last_char : character := NUL;
     variable result : string(s'range);
   begin
     for i in s'range loop

ParseResult:
DEL HdlIdDef@@last_char from body
HdlIdDef: last_char
    HdlValueId: character
    HdlValueId: NUL
    HdlDirection: INTERNAL


CommitId: 0a5315cd941c68dece460b98902c1717192fe464
Fixed lint issues in string_ops.vhd
--- a/vunit/vhdl/string_ops/src/string_ops.vhd
+++ b/vunit/vhdl/string_ops/src/string_ops.vhd
@@ -454,7 +451,7 @@ package body string_ops is
     constant stop : natural := 0)
     return natural is
     variable start_pos, stop_pos : natural;
-    variable n, o, length : natural := 0;
+    variable n, o : natural := 0;
   begin
     if substring = "" then
       n := s'length + 1;

ParseResult:
DEL HdlIdDef@@length from body
HdlIdDef: length
    HdlValueId: natural
    HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 0a5315cd941c68dece460b98902c1717192fe464
Fixed lint issues in string_ops.vhd
--- a/vunit/vhdl/string_ops/src/string_ops.vhd
+++ b/vunit/vhdl/string_ops/src/string_ops.vhd
@@ -647,9 +644,8 @@ package body string_ops is
   function to_integer_string (
     constant value : signed)
     return string is
-    variable value_internal: signed(value'length - 1 downto 0) := value;
+    constant value_internal: signed(value'length - 1 downto 0) := value;
     variable value_internal_extended: signed(value'length downto 0);
-    constant minus_one: signed(value'length downto 0) := (others => '1');
   begin
     if is_x(std_logic_vector(value)) then
       return "NaN";

ParseResult:
DEL HdlIdDef@@minus_one from body
HdlIdDef: minus_one
    HdlOp: INDEX
        list: ops
            HdlValueId: signed
            HdlOp: DOWNTO
                list: ops
                    HdlOp: APOSTROPHE
                        list: ops
                            HdlValueId: value
                            HdlValueId: length
    list: value
        HdlOp: MAP_ASSOCIATION
            list: ops
                type
                HdlValueInt: 1
    HdlDirection: INTERNAL


CommitId: 7f3877303724e15990ddeb71c3ec3ed2765a5f74
Updated com user guide and example testbench with the publisher/subscriber pattern. Fixed bugs.
--- a/vunit/vhdl/com/src/com_api.vhd
+++ b/vunit/vhdl/com/src/com_api.vhd
@@ -57,6 +57,7 @@ package com_pkg is
   alias create is new_msg [actor_t return msg_t];
   procedure delete (msg          : inout msg_t);
   function sender(msg : msg_t) return actor_t;
+  function receiver(msg : msg_t) return actor_t;
 
   procedure push(msg : msg_t; value : integer);
   impure function pop(msg : msg_t) return integer;
ParseResult:
INS HdlFunctionDef@@receiver to objs
HdlFunctionDef: receiver
    HdlValueId: actor_t
    list: params
        HdlIdDef: msg
            HdlValueId: msg_t
            HdlDirection: IN
    list: body


CommitId: 29e2559a3604e5416ca5ae5aac769da6ed127444
Minor merge fixes and extensions
--- a/vunit/vhdl/verification_components/src/axi_stream_pkg.vhd
+++ b/vunit/vhdl/verification_components/src/axi_stream_pkg.vhd
@@ -212,9 +212,16 @@ package axi_stream_pkg is
       variable tuser : out std_logic_vector
     );
 
+  procedure pop_axi_stream(
+      signal net : inout network_t;
+      axi_stream : axi_stream_slave_t;
+      variable tdata : out std_logic_vector;
+      variable tlast : out std_logic
+    );
+
   -- Non-blocking: pop a value from the axi stream to be read in the future
   procedure pop_axi_stream(signal net : inout network_t;
-                           stream : axi_stream_slave_t;
+                           axi_stream : axi_stream_slave_t;
                            variable reference : inout axi_stream_reference_t);
 
   -- Blocking: Wait for reply to non-blocking pop

ParseResult:
INS HdlFunctionDef@@pop_axi_stream to objs
HdlFunctionDef: pop_axi_stream
    list: params
        HdlIdDef: net
            HdlValueId: network_t
            HdlDirection: INOUT
        HdlIdDef: axi_stream
            HdlValueId: axi_stream_slave_t
            HdlDirection: IN
        HdlIdDef: tdata
            HdlValueId: std_logic_vector
            HdlDirection: OUT
        HdlIdDef: tlast
            HdlValueId: std_logic
            HdlDirection: OUT
    list: body

UPD HdlIdDef@@stream to axi_stream


CommitId: 29e2559a3604e5416ca5ae5aac769da6ed127444
Minor merge fixes and extensions
--- a/vunit/vhdl/verification_components/src/axi_stream_pkg.vhd
+++ b/vunit/vhdl/verification_components/src/axi_stream_pkg.vhd
@@ -230,10 +237,17 @@ package axi_stream_pkg is
       variable tuser     : out std_logic_vector
     );
 
+  procedure await_pop_axi_stream_reply(
+      signal net : inout network_t;
+      variable reference : inout axi_stream_reference_t;
+      variable tdata     : out std_logic_vector;
+      variable tlast     : out std_logic
+    );
+
   -- Blocking: read axi stream and check result against expected value
   procedure check_axi_stream(
       signal net : inout network_t;
-      stream   : axi_stream_slave_t;
+      axi_stream   : axi_stream_slave_t;
       expected : std_logic_vector;
       tlast    : std_logic        := '1';
       tkeep    : std_logic_vector := "";

ParseResult:
INS HdlFunctionDef@@await_pop_axi_stream_reply to objs
HdlFunctionDef: await_pop_axi_stream_reply
    list: params
        HdlIdDef: net
            HdlValueId: network_t
            HdlDirection: INOUT
        HdlIdDef: reference
            HdlValueId: axi_stream_reference_t
            HdlDirection: INOUT
        HdlIdDef: tdata
            HdlValueId: std_logic_vector
            HdlDirection: OUT
        HdlIdDef: tlast
            HdlValueId: std_logic
            HdlDirection: OUT
    list: body

UPD HdlIdDef@@stream to axi_stream


CommitId: 29e2559a3604e5416ca5ae5aac769da6ed127444
Minor merge fixes and extensions
--- a/vunit/vhdl/verification_components/src/axi_stream_pkg.vhd
+++ b/vunit/vhdl/verification_components/src/axi_stream_pkg.vhd
@@ -380,12 +394,15 @@ package body axi_stream_pkg is
 
   impure function new_axi_stream_monitor(
       data_length      : natural;
+      id_length        : natural  := 0;
+      dest_length      : natural  := 0;
+      user_length      : natural  := 0;
       logger           : logger_t := axi_stream_logger;
       actor            : actor_t;
       protocol_checker : axi_stream_protocol_checker_t := null_axi_stream_protocol_checker
     ) return axi_stream_monitor_t is
     constant p_protocol_checker : axi_stream_protocol_checker_t := get_valid_protocol_checker(
-      data_length, logger, actor, protocol_checker, "monitor"
+      data_length, id_length, dest_length, user_length, logger, actor, protocol_checker, "monitor"
     );
   begin
     return (

ParseResult:
INS HdlIdDef@@id_length to params
HdlIdDef: id_length
    HdlValueId: natural
    HdlValueInt: 0
    HdlDirection: IN

INS HdlIdDef@@dest_length to params
HdlIdDef: dest_length
    HdlValueId: natural
    HdlValueInt: 0
    HdlDirection: IN

INS HdlIdDef@@user_length to params
HdlIdDef: user_length
    HdlValueId: natural
    HdlValueInt: 0
    HdlDirection: IN


CommitId: 29e2559a3604e5416ca5ae5aac769da6ed127444
Minor merge fixes and extensions
--- a/vunit/vhdl/verification_components/src/axi_stream_pkg.vhd
+++ b/vunit/vhdl/verification_components/src/axi_stream_pkg.vhd
@@ -401,6 +418,9 @@ package body axi_stream_pkg is
 
   impure function new_axi_stream_protocol_checker(
       data_length : natural;
+      id_length   : natural  := 0;
+      dest_length : natural  := 0;
+      user_length : natural  := 0;
       logger      : logger_t := axi_stream_logger;
       actor       : actor_t  := null_actor;
       max_waits   : natural  := 16

ParseResult:
INS HdlIdDef@@id_length to params
HdlIdDef: id_length
    HdlValueId: natural
    HdlValueInt: 0
    HdlDirection: IN

INS HdlIdDef@@dest_length to params
HdlIdDef: dest_length
    HdlValueId: natural
    HdlValueInt: 0
    HdlDirection: IN

INS HdlIdDef@@user_length to params
HdlIdDef: user_length
    HdlValueId: natural
    HdlValueInt: 0
    HdlDirection: IN

UPD HdlIdDef@@p_protocol_checker to p_protocol_checker
    UPD HdlOp@@INDEX to INDEX
        INS HdlValueId@@id_length to ops
        INS HdlValueId@@dest_length to ops
        INS HdlValueId@@user_length to ops


CommitId: 29e2559a3604e5416ca5ae5aac769da6ed127444
Minor merge fixes and extensions
--- a/vunit/vhdl/verification_components/src/axi_stream_pkg.vhd
+++ b/vunit/vhdl/verification_components/src/axi_stream_pkg.vhd
@@ -553,11 +573,11 @@ package body axi_stream_pkg is
   end;
 
   procedure pop_axi_stream(signal net : inout network_t;
-                           stream : axi_stream_slave_t;
+                           axi_stream : axi_stream_slave_t;
                            variable reference : inout axi_stream_reference_t) is
   begin
     reference := new_msg(pop_axi_stream_msg);
-    send(net, stream.p_actor, reference);
+    send(net, axi_stream.p_actor, reference);
   end;
 
   procedure await_pop_axi_stream_reply(

ParseResult:
UPD HdlIdDef@@stream to axi_stream

UPD HdlFunctionDef@@pop_axi_stream to pop_axi_stream
    UPD HdlOp@@CALL to CALL
        UPD HdlOp@@DOT to DOT
            UPD HdlValueId@@stream to axi_stream


CommitId: 29e2559a3604e5416ca5ae5aac769da6ed127444
Minor merge fixes and extensions
--- a/vunit/vhdl/verification_components/src/axi_stream_pkg.vhd
+++ b/vunit/vhdl/verification_components/src/axi_stream_pkg.vhd
@@ -575,7 +595,11 @@ package body axi_stream_pkg is
   begin
     receive_reply(net, reference, reply_msg);
     tdata := pop_std_ulogic_vector(reply_msg);
-    tlast := pop_std_ulogic(reply_msg);
+    if pop_boolean(reply_msg) then
+      tlast := '1';
+    else
+      tlast := '0';
+    end if;
     tkeep := pop_std_ulogic_vector(reply_msg);
     tstrb := pop_std_ulogic_vector(reply_msg);
     tid   := pop_std_ulogic_vector(reply_msg);

ParseResult:
INS HdlStmIf@@ to body

UPD HdlStmAssign@@ to 
    MOV HdlOp@@INDEX to 
    HdlOp: INDEX
        list: ops
            HdlValueId: pop_std_ulogic
            HdlValueId: reply_msg
    UPD HdlOp@@INDEX to INDEX
        UPD HdlValueId@@pop_std_ulogic to pop_boolean
    MOV HdlValueId@@tlast to 
    HdlValueId: tlast

INS HdlStmAssign@@ to body

DEL HdlStmAssign@@ from body


CommitId: 29e2559a3604e5416ca5ae5aac769da6ed127444
Minor merge fixes and extensions
--- a/vunit/vhdl/verification_components/src/axi_stream_pkg.vhd
+++ b/vunit/vhdl/verification_components/src/axi_stream_pkg.vhd
@@ -598,13 +641,25 @@ package body axi_stream_pkg is
     ) is
     variable reference : axi_stream_reference_t;
   begin
-    pop_axi_stream(net, stream, reference);
+    pop_axi_stream(net, axi_stream, reference);
     await_pop_axi_stream_reply(net, reference, tdata, tlast, tkeep, tstrb, tid, tdest, tuser);
   end;
 
-  procedure check_stream(
+  procedure pop_axi_stream(
+      signal net : inout network_t;
+      axi_stream : axi_stream_slave_t;
+      variable tdata : out std_logic_vector;
+      variable tlast : out std_logic
+    ) is
+    variable reference : axi_stream_reference_t;
+  begin
+    pop_axi_stream(net, axi_stream, reference);
+    await_pop_axi_stream_reply(net, reference, tdata, tlast);
+  end;
+
+  procedure check_axi_stream(
       signal net : inout network_t;
-      stream   : axi_stream_slave_t;
+      axi_stream   : axi_stream_slave_t;
       expected : std_logic_vector;
       tlast    : std_logic        := '1';
       tkeep    : std_logic_vector := "";

ParseResult:
INS HdlFunctionDef@@pop_axi_stream to objs
HdlFunctionDef: pop_axi_stream
    list: params
        HdlIdDef: net
            HdlValueId: network_t
            HdlDirection: INOUT
        HdlIdDef: axi_stream
            HdlValueId: axi_stream_slave_t
            HdlDirection: IN
        HdlIdDef: tdata
            HdlValueId: std_logic_vector
            HdlDirection: OUT
        HdlIdDef: tlast
            HdlValueId: std_logic
            HdlDirection: OUT
    list: body
        HdlIdDef: reference
            HdlValueId: axi_stream_reference_t
            HdlDirection: INTERNAL
        HdlOp: CALL
            list: ops
                HdlValueId: pop_axi_stream
                HdlValueId: net
                HdlValueId: axi_stream
                HdlValueId: reference
        HdlOp: CALL
            list: ops
                HdlValueId: await_pop_axi_stream_reply
                HdlValueId: net
                HdlValueId: reference
                HdlValueId: tdata
                HdlValueId: tlast

UPD HdlFunctionDef@@check_stream to check_axi_stream

UPD HdlIdDef@@stream to axi_stream

UPD HdlStmIf@@ to 
    INS HdlStmBlock@@SEQ to 
    INS list@@elifs to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlValueInt: 0
                HdlValueId: tlast
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

UPD HdlFunctionDef@@pop_axi_stream to pop_axi_stream
    UPD HdlOp@@CALL to CALL
        UPD HdlValueId@@stream to axi_stream

UPD HdlFunctionDef@@check_stream to check_stream
    UPD HdlOp@@CALL to CALL
        UPD HdlValueId@@stream to axi_stream

UPD HdlStmAssign@@ to 
    INS HdlValueInt@@1 to 


CommitId: 8773637c0b44313c4a83bfc48ac010c1752bbc9b
Fix axi_write_slave narrow and unaligned bursts
--- a/vunit/vhdl/bfm/src/axi_write_slave.vhd
+++ b/vunit/vhdl/bfm/src/axi_write_slave.vhd
@@ -58,7 +58,7 @@ begin
 
   axi_process : process
     variable resp_burst, burst : axi_burst_t;
-    variable address : integer;
+    variable address, aligned_address : integer;
     variable idx : integer;
     variable beats : natural := 0;
   begin

ParseResult:
INS HdlIdDef@@aligned_address to body
HdlIdDef: aligned_address
    HdlValueId: integer
    HdlDirection: INTERNAL


CommitId: 8773637c0b44313c4a83bfc48ac010c1752bbc9b
Fix axi_write_slave narrow and unaligned bursts
--- a/vunit/vhdl/bfm/src/axi_write_slave.vhd
+++ b/vunit/vhdl/bfm/src/axi_write_slave.vhd
@@ -87,10 +87,10 @@ begin
                     " starting at address " & to_string(burst.address));
         end if;
 
-        for j in 0 to burst.size-1 loop
-          idx := (address + j) mod self.data_size; -- Align data bus
-          if wstrb(idx) = '1' then
-            write_byte(memory, address+j, to_integer(unsigned(wdata(8*idx+7 downto 8*idx))));
+        aligned_address := address - (address mod self.data_size);
+        for j in 0 to self.data_size-1 loop
+          if wstrb(j) = '1' then
+            write_byte(memory, aligned_address+j, to_integer(unsigned(wdata(8*j+7 downto 8*j))));
           end if;
         end loop;
 
ParseResult:
MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlOp: MOD
        list: ops
            HdlOp: ADD
                list: ops
                    HdlValueId: address
                    HdlValueId: j
            HdlOp: DOT
                list: ops
                    HdlValueId: self
                    HdlValueId: data_size
    HdlValueId: idx

UPD HdlStmAssign@@ to 
    INS HdlOp@@SUB to 
    UPD HdlOp@@SUB to SUB
        INS list@@ops to SUB
        INS HdlValueId@@address to ops

UPD HdlStmAssign@@ to 
    UPD HdlValueId@@idx to aligned_address
    MOV HdlOp@@MOD to 
    HdlOp: MOD
        list: ops
            HdlOp: ADD
                list: ops
                    HdlValueId: address
                    HdlValueId: j
            HdlOp: DOT
                list: ops
                    HdlValueId: self
                    HdlValueId: data_size
    UPD HdlOp@@MOD to MOD
        UPD HdlOp@@ADD to ADD
            MOV HdlValueId@@address to ops
            HdlValueId: address
            DEL HdlValueId@@j from ops
            DEL list@@ops from ADD
        DEL HdlOp@@ADD from ops

UPD HdlStmForIn@@ to 
    UPD HdlOp@@TO to TO
        UPD HdlOp@@SUB to SUB
            UPD HdlOp@@DOT to DOT
                UPD HdlValueId@@burst to self
                UPD HdlValueId@@size to data_size

UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        UPD HdlOp@@INDEX to INDEX
            UPD HdlValueId@@idx to j
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@CALL to CALL
            UPD HdlOp@@ADD to ADD
                UPD HdlValueId@@address to aligned_address
            UPD HdlOp@@CALL to CALL
                UPD HdlOp@@INDEX to INDEX
                    UPD HdlOp@@INDEX to INDEX
                        UPD HdlOp@@DOWNTO to DOWNTO
                            UPD HdlOp@@MUL to MUL
                                UPD HdlValueId@@idx to j
                            UPD HdlOp@@ADD to ADD
                                UPD HdlOp@@MUL to MUL
                                    UPD HdlValueId@@idx to j


CommitId: 6f66db2051d9f0644c634b3e82042cdb85961cef
Remove default file_handler
--- a/vunit/vhdl/logging/src/log_handler_pkg-body.vhd
+++ b/vunit/vhdl/logging/src/log_handler_pkg-body.vhd
@@ -16,8 +16,7 @@ use work.string_ops.upper;
 package body log_handler_pkg is
 
   constant display_handler_id : natural := 0;
-  constant file_handler_id : natural := 1;
-  constant next_log_handler_id : integer_vector_ptr_t := new_integer_vector_ptr(1, value => file_handler_id+1);
+  constant next_log_handler_id : integer_vector_ptr_t := new_integer_vector_ptr(1, value => display_handler_id+1);
 
   constant id_idx : natural := 0;
   constant file_name_idx : natural := 1;

ParseResult:
INS HdlIdDef@@next_log_handler_id to objs
HdlIdDef: next_log_handler_id
    HdlValueId: integer_vector_ptr_t
    HdlOp: INDEX
        list: ops
            HdlValueId: new_integer_vector_ptr
            HdlValueInt: 1
            HdlOp: ARROW
                list: ops
                    HdlValueId: value
                    HdlOp: ADD
                        list: ops
                            HdlValueId: display_handler_id
                            HdlValueInt: 1
    HdlDirection: INTERNAL

DEL HdlIdDef@@file_handler_id from objs
HdlIdDef: file_handler_id
    HdlValueId: natural
    HdlValueInt: 1
    HdlDirection: INTERNAL

DEL HdlIdDef@@next_log_handler_id from objs
HdlIdDef: next_log_handler_id
    HdlValueId: integer_vector_ptr_t
    HdlOp: INDEX
        list: ops
            HdlValueId: new_integer_vector_ptr
            HdlValueInt: 1
            HdlOp: ARROW
                list: ops
                    HdlValueId: value
                    HdlOp: ADD
                        list: ops
                            HdlValueId: file_handler_id
                            HdlValueInt: 1
    HdlDirection: INTERNAL


CommitId: 6f66db2051d9f0644c634b3e82042cdb85961cef
Remove default file_handler
--- a/vunit/vhdl/logging/src/log_handler_pkg-body.vhd
+++ b/vunit/vhdl/logging/src/log_handler_pkg-body.vhd
@@ -79,23 +78,11 @@ package body log_handler_pkg is
                                                                 format => verbose,
                                                                 use_color => true);
 
-  -- File handler; Write to file
-  -- Is configured to output_path/log.csv by test_runner_setup
-  constant p_file_handler : log_handler_t := new_log_handler(file_handler_id,
-                                                             null_file_name,
-                                                             format => verbose,
-                                                             use_color => false);
-
   impure function display_handler return log_handler_t is
   begin
     return p_display_handler;
   end function;
 
-  impure function file_handler return log_handler_t is
-  begin
-    return p_file_handler;
-  end function;
-
   impure function get_id(log_handler : log_handler_t) return natural is
   begin
     return get(log_handler.p_data, id_idx);
ParseResult:
DEL HdlIdDef@@p_file_handler from objs
HdlIdDef: p_file_handler
    HdlValueId: log_handler_t
    HdlOp: INDEX
        list: ops
            HdlValueId: new_log_handler
            HdlValueId: file_handler_id
            HdlValueId: null_file_name
            HdlOp: ARROW
                list: ops
                    HdlValueId: format
                    HdlValueId: verbose
            HdlOp: ARROW
                list: ops
                    HdlValueId: use_color
                    HdlValueId: false
    HdlDirection: INTERNAL

DEL HdlFunctionDef@@file_handler from objs
HdlFunctionDef: file_handler
    HdlValueId: log_handler_t
    list: params
    list: body
        HdlStmReturn: p_file_handler
            HdlValueId: p_file_handler


CommitId: 1fb8cf07c2dc93562ec0f067d13d6a541bfd5e99
Integrated AXI protocol checker into other AXI VCs. Some lint fixing.
--- a/vunit/vhdl/verification_components/src/axi_stream_master.vhd
+++ b/vunit/vhdl/verification_components/src/axi_stream_master.vhd
@@ -70,5 +70,18 @@ begin
       );
   end generate axi_stream_monitor_generate;
 
+  axi_stream_protocol_checker_generate : if master.p_protocol_checker /= null_axi_stream_protocol_checker generate
+    axi_stream_protocol_checker_inst: entity work.axi_stream_protocol_checker
+      generic map (
+        protocol_checker => master.p_protocol_checker)
+      port map (
+        aclk     => aclk,
+        areset_n => open,
+        tvalid   => tvalid,
+        tready   => tready,
+        tdata    => tdata,
+        tlast    => tlast,
+        tid      => open);
+  end generate axi_stream_protocol_checker_generate;
 
 end architecture;
ParseResult:
INS HdlStmIf@@ to objs
HdlStmIf
    HdlOp: NE
        list: ops
            HdlOp: DOT
                list: ops
                    HdlValueId: master
                    HdlValueId: p_protocol_checker
            HdlValueId: null_axi_stream_protocol_checker
    HdlCompInst: {'__class__': 'HdlOp',  'fn': 'DOT',  'ops':} -axi_stream_protocol_checker_inst
        list: param_map
            HdlOp: ARROW
                list: ops
                    HdlValueId: protocol_checker
                    HdlOp: DOT
                        list: ops
                            HdlValueId: master
                            HdlValueId: p_protocol_checker
        list: port_map
            HdlOp: ARROW
                list: ops
                    HdlValueId: aclk
                    HdlValueId: aclk
            HdlOp: ARROW
                list: ops
                    HdlValueId: areset_n
            HdlOp: ARROW
                list: ops
                    HdlValueId: tvalid
                    HdlValueId: tvalid
            HdlOp: ARROW
                list: ops
                    HdlValueId: tready
                    HdlValueId: tready
            HdlOp: ARROW
                list: ops
                    HdlValueId: tdata
                    HdlValueId: tdata
            HdlOp: ARROW
                list: ops
                    HdlValueId: tlast
                    HdlValueId: tlast
            HdlOp: ARROW
                list: ops
                    HdlValueId: tid
    list: elifs


CommitId: 4d38b358430c75bd822e0c6f812d70836d29b3aa
Make memory permission checking off by default.
--- a/vunit/vhdl/bfm/src/axi_write_slave.vhd
+++ b/vunit/vhdl/bfm/src/axi_write_slave.vhd
@@ -90,7 +90,8 @@ begin
         aligned_address := address - (address mod self.data_size);
         for j in 0 to self.data_size-1 loop
           if wstrb(j) = '1' then
-            write_byte(memory, aligned_address+j, to_integer(unsigned(wdata(8*j+7 downto 8*j))));
+            write_byte(memory, aligned_address+j, to_integer(unsigned(wdata(8*j+7 downto 8*j))),
+                       check_permissions => true);
           end if;
         end loop;
 
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@CALL to CALL
            INS HdlOp@@ARROW to ops
            HdlOp: ARROW
                list: ops
                    HdlValueId: check_permissions
                    HdlValueId: true


CommitId: 36aca5ef97592346ad9642fbf5d32b79d4b775f4
Possible fix for #161
--- a/vunit/vhdl/string_ops/src/string_ops.vhd
+++ b/vunit/vhdl/string_ops/src/string_ops.vhd
@@ -306,15 +306,15 @@ package body string_ops is
     constant cnt : in natural := natural'high)
     return string is
     constant n_occurences : natural := count(s, old_segment);
-    function string_length_after_replace return natural is
-      variable n_replacements : natural := n_occurences;
+    function string_length_after_replace (constant n_occurences_i : natural) return natural is
+      variable n_replacements : natural := n_occurences_i;
     begin
       if cnt < n_replacements  then
         n_replacements := cnt;
       end if;
       return s'length + n_replacements * (new_segment'length - old_segment'length);
     end;
-    variable ret_val : string(1 to string_length_after_replace);
+    variable ret_val : string(1 to string_length_after_replace(n_occurences));
     variable replaced_substrings : natural := 0;
     variable i,j : natural := 1;
     variable s_int : string(1 to s'length) := s;
ParseResult:
INS HdlIdDef@@n_occurences_i to params
HdlIdDef: n_occurences_i
    HdlValueId: natural
    HdlDirection: INTERNAL

UPD HdlIdDef@@n_replacements to n_replacements
    UPD HdlValueId@@n_occurences to n_occurences_i

UPD HdlIdDef@@ret_val to ret_val
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@TO to TO
            INS HdlOp@@INDEX to ops
            UPD HdlOp@@INDEX to INDEX
                INS list@@ops to INDEX
                INS HdlValueId@@n_occurences to ops

UPD HdlIdDef@@ret_val to ret_val
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@TO to TO
            MOV HdlValueId@@string_length_after_replace to ops
            HdlValueId: string_length_after_replace


CommitId: b423930d4337f4a463bc051bf4626d88525a1bbc
Pass sim
--- a/vunit/vhdl/verification_components/src/wishbone_slave.vhd
+++ b/vunit/vhdl/verification_components/src/wishbone_slave.vhd
@@ -83,14 +83,15 @@ begin
     if msg_type = bus_write_msg then
       addr := pop_integer(request_msg);
       data := pop_std_ulogic_vector(request_msg);
-      --write_word(memory, addr, data);      	
+      write_word(memory, addr, data);      	
       ack <= '1';
       wait until rising_edge(clk);
       ack <= '0';
 
     elsif msg_type = bus_read_msg then
+      data := (others => '0');
       addr := pop_integer(request_msg);
-      --data := read_word(memory, addr, dat_o'length/8);
+      data := read_word(memory, addr, 2);
       dat_o <= data;
       ack <= '1';
       wait until rising_edge(clk);
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: write_word
                HdlValueId: memory
                HdlValueId: addr
                HdlValueId: data

INS HdlStmAssign@@ to body
HdlStmAssign
    list: src
        HdlOp: MAP_ASSOCIATION
            list: ops
                type
                HdlValueInt: 0
    HdlValueId: data

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlOp: INDEX
        list: ops
            HdlValueId: read_word
            HdlValueId: memory
            HdlValueId: addr
            HdlValueInt: 2
    HdlValueId: data


CommitId: 1b61e106051d6e1983cb3b02d775c63f5008d023
Find the origin of pop from empty queue error
--- a/vunit/vhdl/verification_components/src/wishbone_master.vhd
+++ b/vunit/vhdl/verification_components/src/wishbone_master.vhd
@@ -97,7 +97,6 @@ begin
     variable request_msg, reply_msg, ack_msg : msg_t;
     variable msg_type : msg_type_t;
   begin
-  loop
     wait until ack = '1' and rising_edge(clk);
     request_msg := pop(request_queue);
     -- Reply only on read

ParseResult:
UPD HdlStmWhile@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmWait:},                   {'__class__': 'HdlOp',                    'fn': 'INDEX',                    'ops':}]}]} ]
                list: val
                    HdlOp: NEG
                        list: ops
                            HdlOp: AND
                                list: ops
                                    HdlOp: EQ
                                        list: ops
                                            HdlValueId: ack
                                            HdlValueInt: 1
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: rising_edge
                                            HdlValueId: clk
            HdlStmAssign
                HdlOp: INDEX
                    list: ops
                        HdlValueId: pop
                        HdlValueId: request_queue
                HdlValueId: request_msg
            HdlStmIf
                HdlOp: EQ
                    list: ops
                        HdlValueId: we
                        HdlValueInt: 0
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: new_msg
                                    HdlOp: ARROW
                                        list: ops
                                            HdlValueId: sender
                                            HdlValueId: wb_master_ack_actor
                            HdlValueId: reply_msg
                        HdlOp: CALL
                            list: ops
                                HdlValueId: push_std_ulogic_vector
                                HdlValueId: reply_msg
                                HdlValueId: dat_i
                        HdlOp: CALL
                            list: ops
                                HdlValueId: reply
                                HdlValueId: net
                                HdlValueId: request_msg
                                HdlValueId: reply_msg
                        HdlOp: CALL
                            list: ops
                                HdlValueId: delete
                                HdlValueId: request_msg
                list: elifs
            HdlStmAssign
                HdlOp: INDEX
                    list: ops
                        HdlValueId: new_msg
                        HdlValueId: bus_ack_msg
                HdlValueId: ack_msg
            HdlOp: CALL
                list: ops
                    HdlValueId: send
                    HdlValueId: net
                    HdlOp: DOT
                        list: ops
                            HdlValueId: bus_handle
                            HdlValueId: p_actor
                    HdlValueId: ack_msg
    DEL HdlValueId@@True from 

MOV HdlIdDef@@request_msg to body
HdlIdDef: request_msg
    HdlValueId: msg_t
    HdlDirection: INTERNAL

MOV HdlIdDef@@reply_msg to body
HdlIdDef: reply_msg
    HdlValueId: msg_t
    HdlDirection: INTERNAL

MOV HdlIdDef@@ack_msg to body
HdlIdDef: ack_msg
    HdlValueId: msg_t
    HdlDirection: INTERNAL

MOV HdlIdDef@@msg_type to body
HdlIdDef: msg_type
    HdlValueId: msg_type_t
    HdlDirection: INTERNAL

DEL HdlStmWhile@@ from body

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 


CommitId: 1b61e106051d6e1983cb3b02d775c63f5008d023
Find the origin of pop from empty queue error
--- a/vunit/vhdl/verification_components/src/wishbone_master.vhd
+++ b/vunit/vhdl/verification_components/src/wishbone_master.vhd
@@ -110,6 +109,5 @@ begin
     -- Response main that ack is received
     ack_msg := new_msg(bus_ack_msg);
     send(net, bus_handle.p_actor, ack_msg);
-  end loop;
   end process;
 end architecture;
ParseResult:
UPD HdlStmWhile@@ to 
    MOV HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmWait:},                   {'__class__': 'HdlOp',                    'fn': 'INDEX',                    'ops':}]}]} ]
                list: val
                    HdlOp: NEG
                        list: ops
                            HdlOp: AND
                                list: ops
                                    HdlOp: EQ
                                        list: ops
                                            HdlValueId: ack
                                            HdlValueInt: 1
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: rising_edge
                                            HdlValueId: clk
            HdlStmAssign
                HdlOp: INDEX
                    list: ops
                        HdlValueId: pop
                        HdlValueId: request_queue
                HdlValueId: request_msg
            HdlStmIf
                HdlOp: EQ
                    list: ops
                        HdlValueId: we
                        HdlValueInt: 0
                HdlStmBlock: SEQ
                    list: body
                        HdlStmAssign
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: new_msg
                                    HdlOp: ARROW
                                        list: ops
                                            HdlValueId: sender
                                            HdlValueId: wb_master_ack_actor
                            HdlValueId: reply_msg
                        HdlOp: CALL
                            list: ops
                                HdlValueId: push_std_ulogic_vector
                                HdlValueId: reply_msg
                                HdlValueId: dat_i
                        HdlOp: CALL
                            list: ops
                                HdlValueId: reply
                                HdlValueId: net
                                HdlValueId: request_msg
                                HdlValueId: reply_msg
                        HdlOp: CALL
                            list: ops
                                HdlValueId: delete
                                HdlValueId: request_msg
                list: elifs
            HdlStmAssign
                HdlOp: INDEX
                    list: ops
                        HdlValueId: new_msg
                        HdlValueId: bus_ack_msg
                HdlValueId: ack_msg
            HdlOp: CALL
                list: ops
                    HdlValueId: send
                    HdlValueId: net
                    HdlOp: DOT
                        list: ops
                            HdlValueId: bus_handle
                            HdlValueId: p_actor
                    HdlValueId: ack_msg
    DEL HdlValueId@@True from 

DEL HdlStmWhile@@ from body

UPD HdlStmProcess@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 


CommitId: 88c11b19bc86d0fde69f711ef97446822c7d6239
Fix and test wishbone master wait for idle
--- a/vunit/vhdl/verification_components/src/wishbone_master.vhd
+++ b/vunit/vhdl/verification_components/src/wishbone_master.vhd
@@ -98,6 +98,9 @@ begin
         request_msg := null_msg;
 
       elsif msg_type = wait_until_idle_msg then
+        if cycle then
+          wait until not cycle;
+        end if;
         handle_wait_until_idle(net, msg_type, request_msg);
 
       else
ParseResult:
INS HdlStmIf@@ to body
HdlStmIf
    HdlValueId: cycle
    HdlStmBlock: SEQ
        list: body
            HdlStmWait:}]} ]
                list: val
                    HdlOp: NEG
                        list: ops
                            HdlOp: NEG
                                list: ops
                                    HdlValueId: cycle
    list: elifs


CommitId: a48d66343ce78d50181c8a2b7067ab4462d86957
Increased length of runner_cfg_default to the maximum for runner_cfg to work with Incisive. Generally removed the default value from testbenches but kept it in examples where it's explicitly discussed.
--- a/vunit/vhdl/run/src/run_types.vhd
+++ b/vunit/vhdl/run/src/run_types.vhd
@@ -19,7 +19,7 @@ package run_types_pkg is
 
   subtype runner_cfg_t is string; -- Subtype deprecated, use string instead
   constant max_dictionary_length_c : positive := 10000;
-  constant runner_cfg_default : string := "enabled_test_cases : __all__, output path : , active python runner : false";
+  constant runner_cfg_default : string(1 to max_dictionary_length_c) := "enabled_test_cases : __all__, output path : , active python runner : false" & (75 to max_dictionary_length_c => ' ');
   subtype test_cases_t is string;
 
   type runner_phase_unresolved_t is (test_runner_entry, test_runner_setup, test_suite_setup, test_case_setup, test_case, test_case_cleanup, test_suite_cleanup, test_runner_cleanup, test_runner_exit, multiple_drivers);
ParseResult:
UPD HdlIdDef@@runner_cfg_default to runner_cfg_default
    INS HdlOp@@INDEX to runner_cfg_default
    INS HdlOp@@CONCAT to runner_cfg_default
    HdlOp: CONCAT
        list: ops
            str
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlOp: TO
                        list: ops
                            HdlValueInt: 75
                            HdlValueId: max_dictionary_length_c
                    HdlValueInt:  
    UPD HdlOp@@INDEX to INDEX
        INS list@@ops to INDEX
        INS HdlOp@@TO to ops
        HdlOp: TO
            list: ops
                HdlValueInt: 1
                HdlValueId: max_dictionary_length_c

UPD HdlIdDef@@runner_cfg_default to runner_cfg_default
    MOV HdlValueId@@string to runner_cfg_default
    HdlValueId: string


CommitId: 1fb8cf07c2dc93562ec0f067d13d6a541bfd5e99
Integrated AXI protocol checker into other AXI VCs. Some lint fixing.
--- a/vunit/vhdl/verification_components/src/axi_write_slave.vhd
+++ b/vunit/vhdl/verification_components/src/axi_write_slave.vhd
@@ -125,7 +125,6 @@ begin
 
     variable resp_burst, input_burst, burst : axi_burst_t;
     variable address, aligned_address : integer;
-    variable idx : integer;
     variable beats : natural := 0;
     variable input_data : burst_data_t;
     constant input_data_queue : queue_t := new_queue;
ParseResult:
DEL HdlIdDef@@idx from body
HdlIdDef: idx
    HdlValueId: integer
    HdlDirection: INTERNAL


CommitId: 4d38b358430c75bd822e0c6f812d70836d29b3aa
Make memory permission checking off by default.
--- a/vunit/vhdl/bfm/src/bus2memory.vhd
+++ b/vunit/vhdl/bfm/src/bus2memory.vhd
@@ -36,7 +36,8 @@ begin
 
       if msg_type = bus_read_msg then
         address := pop_std_ulogic_vector(request_msg);
-        data := read_word(memory, to_integer(unsigned(address)), bytes_per_word => data'length/8);
+        data := read_word(memory, to_integer(unsigned(address)), bytes_per_word => data'length/8,
+                          check_permissions => true);
         reply_msg := create;
         push_std_ulogic_vector(reply_msg, data);
         reply(net, request_msg, reply_msg);

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to INDEX
        INS HdlOp@@ARROW to ops
        HdlOp: ARROW
            list: ops
                HdlValueId: check_permissions
                HdlValueId: true


CommitId: 4d38b358430c75bd822e0c6f812d70836d29b3aa
Make memory permission checking off by default.
--- a/vunit/vhdl/bfm/src/bus2memory.vhd
+++ b/vunit/vhdl/bfm/src/bus2memory.vhd
@@ -49,7 +50,8 @@ begin
         for i in byte_enable'range loop
           -- @TODO byte_enable on memory_t?
           if byte_enable(i) = '1' then
-            write_word(memory, to_integer(unsigned(address))+i, data(blen*(i+1)-1 downto blen*i));
+            write_word(memory, to_integer(unsigned(address))+i, data(blen*(i+1)-1 downto blen*i),
+                       check_permissions => true);
           end if;
         end loop;
       else
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@CALL to CALL
            INS HdlOp@@ARROW to ops
            HdlOp: ARROW
                list: ops
                    HdlValueId: check_permissions
                    HdlValueId: true


CommitId: 1a1923390afef703c5f3ac580836021fc8a8e3ec
Merge pull request #434 from bradleyharden/test_modelsim_fixup
--- a/vunit/vhdl/verification_components/src/axi_write_slave.vhd
+++ b/vunit/vhdl/verification_components/src/axi_write_slave.vhd
@@ -57,7 +57,7 @@ architecture a of axi_write_slave is
     data : integer_vector_ptr_t;
   end record;
 
-  procedure push_burst_data(queue : queue_t; burst_data : burst_data_t) is
+  procedure push_burst_data(queue : queue_t; variable burst_data : inout burst_data_t) is
   begin
      push_integer(queue, burst_data.length);
      push_integer_vector_ptr_ref(queue, burst_data.address);
ParseResult:
UPD HdlIdDef@@burst_data to burst_data
    UPD HdlDirection@@IN to INOUT


CommitId: a55b6cd01ff19ab978759bf97b4153ddccdfe37c
Allow VC logger to be used in memory error logs
--- a/vunit/vhdl/bfm/src/axi_pkg.vhd
+++ b/vunit/vhdl/bfm/src/axi_pkg.vhd
@@ -30,11 +30,13 @@ package axi_pkg is
   type axi_slave_t is record
     p_initial_address_channel_fifo_depth : positive;
     p_actor : actor_t;
+    p_memory : memory_t;
     p_logger : logger_t;
   end record;
 
   constant axi_slave_logger : logger_t := get_logger("vunit_lib:axi_slave_pkg");
   impure function new_axi_slave(address_channel_fifo_depth : positive := 1;
+                                memory : memory_t;
                                 logger : logger_t := axi_slave_logger) return axi_slave_t;
 
   -- Set the maximum number address channel tokens that can be queued

ParseResult:
INS HdlIdDef@@memory to params
HdlIdDef: memory
    HdlValueId: memory_t
    HdlDirection: IN


CommitId: a55b6cd01ff19ab978759bf97b4153ddccdfe37c
Allow VC logger to be used in memory error logs
--- a/vunit/vhdl/bfm/src/axi_pkg.vhd
+++ b/vunit/vhdl/bfm/src/axi_pkg.vhd
@@ -69,10 +71,12 @@ end package;
 
 package body axi_pkg is
   impure function new_axi_slave(address_channel_fifo_depth : positive := 1;
+                                memory : memory_t;
                                 logger : logger_t := axi_slave_logger) return axi_slave_t is
   begin
     return (p_actor => create,
             p_initial_address_channel_fifo_depth => address_channel_fifo_depth,
+            p_memory => to_vc_interface(memory, logger),
             p_logger => logger);
   end;
 
ParseResult:
INS HdlIdDef@@memory to params
HdlIdDef: memory
    HdlValueId: memory_t
    HdlDirection: IN

UPD HdlStmReturn@@[{'__class__': 'HdlOp', 'fn': 'MAP_ASSOCIATION', 'ops': ['p_actor', 'create']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_initial_address_channel_fifo_depth', 'address_channel_fifo_depth']} , {'__class__': 'HdlOp', 'fn': 'MAP_ASSOCIATION', 'ops': ['p_logger', 'logger']} ] to [{'__class__': 'HdlOp', 'fn': 'MAP_ASSOCIATION', 'ops': ['p_actor', 'create']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_initial_address_channel_fifo_depth', 'address_channel_fifo_depth']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_memory',          {'__class__': 'HdlOp',           'fn': 'INDEX',           'ops': ['to_vc_interface', 'memory', 'logger']}]} , {'__class__': 'HdlOp', 'fn': 'MAP_ASSOCIATION', 'ops': ['p_logger', 'logger']} ]

UPD HdlStmReturn@@[{'__class__': 'HdlOp', 'fn': 'MAP_ASSOCIATION', 'ops': ['p_actor', 'create']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_initial_address_channel_fifo_depth', 'address_channel_fifo_depth']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_memory',          {'__class__': 'HdlOp',           'fn': 'INDEX',           'ops': ['to_vc_interface', 'memory', 'logger']}]} , {'__class__': 'HdlOp', 'fn': 'MAP_ASSOCIATION', 'ops': ['p_logger', 'logger']} ] to [{'__class__': 'HdlOp', 'fn': 'MAP_ASSOCIATION', 'ops': ['p_actor', 'create']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_initial_address_channel_fifo_depth', 'address_channel_fifo_depth']} , {'__class__': 'HdlOp',  'fn': 'MAP_ASSOCIATION',  'ops': ['p_memory',          {'__class__': 'HdlOp',           'fn': 'INDEX',           'ops': ['to_vc_interface', 'memory', 'logger']}]} , {'__class__': 'HdlOp', 'fn': 'MAP_ASSOCIATION', 'ops': ['p_logger', 'logger']} ]
    INS HdlOp@@MAP_ASSOCIATION to val
    HdlOp: MAP_ASSOCIATION
        list: ops
            HdlValueId: p_memory
            HdlOp: INDEX
                list: ops
                    HdlValueId: to_vc_interface
                    HdlValueId: memory
                    HdlValueId: logger


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/dictionary/src/dictionary.vhd
+++ b/vunit/vhdl/dictionary/src/dictionary.vhd
@@ -12,7 +12,9 @@ use std.textio.all;
 
 package dictionary is
   subtype frozen_dictionary_t is string;
-  constant empty_c : frozen_dictionary_t := "";
+  constant empty : frozen_dictionary_t := "";
+  -- Deprecated
+  alias empty_c is empty;
 
   function len (
     constant d : frozen_dictionary_t)
ParseResult:
UPD HdlIdDef@@empty_c to empty


CommitId: 1a1923390afef703c5f3ac580836021fc8a8e3ec
Merge pull request #434 from bradleyharden/test_modelsim_fixup
--- a/vunit/vhdl/verification_components/src/axi_lite_master.vhd
+++ b/vunit/vhdl/verification_components/src/axi_lite_master.vhd
@@ -14,33 +14,34 @@ use work.sync_pkg.all;
 use work.axi_pkg.all;
 use work.axi_slave_pkg.all;
 use work.axi_slave_private_pkg.all;
+use work.axi_lite_master_pkg.all;
 context work.com_context;
 context work.vunit_context;
 
 entity axi_lite_master is
-  generic (
+  generic(
     bus_handle : bus_master_t
-    );
-  port (
+  );
+  port(
     aclk : in std_logic;
 
     arready : in std_logic;
     arvalid : out std_logic := '0';
-    araddr : out std_logic_vector(address_length(bus_handle)-1 downto 0) := (others => '0');
+    araddr : out std_logic_vector(address_length(bus_handle) - 1 downto 0) := (others => '0');
 
     rready : out std_logic := '0';
     rvalid : in std_logic;
-    rdata : in std_logic_vector(data_length(bus_handle)-1 downto 0);
+    rdata : in std_logic_vector(data_length(bus_handle) - 1 downto 0);
     rresp : in axi_resp_t;
 
     awready : in std_logic;
     awvalid : out std_logic := '0';
-    awaddr : out std_logic_vector(address_length(bus_handle)-1 downto 0) := (others => '0');
+    awaddr : out std_logic_vector(address_length(bus_handle) - 1 downto 0) := (others => '0');
 
     wready : in std_logic;
     wvalid : out std_logic := '0';
-    wdata : out std_logic_vector(data_length(bus_handle)-1 downto 0) := (others => '0');
-    wstrb : out std_logic_vector(byte_enable_length(bus_handle)-1 downto 0) := (others => '0');
+    wdata : out std_logic_vector(data_length(bus_handle) - 1 downto 0) := (others => '0');
+    wstrb : out std_logic_vector(byte_enable_length(bus_handle) - 1 downto 0) := (others => '0');
 
     bvalid : in std_logic;
     bready : out std_logic := '0';

ParseResult:
MOV HdlModuleDec@@axi_lite_master to objs
HdlModuleDec: axi_lite_master
    list: params
        HdlIdDef: bus_handle
            HdlValueId: bus_master_t
            HdlDirection: IN
    list: ports
        HdlIdDef: aclk
            HdlValueId: std_logic
            HdlDirection: IN
        HdlIdDef: arready
            HdlValueId: std_logic
            HdlDirection: IN
        HdlIdDef: arvalid
            HdlValueId: std_logic
            HdlValueInt: 0
            HdlDirection: OUT
        HdlIdDef: araddr
            HdlOp: INDEX
                list: ops
                    HdlValueId: std_logic_vector
                    HdlOp: DOWNTO
                        list: ops
                            HdlOp: SUB
                                list: ops
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: address_length
                                            HdlValueId: bus_handle
                                    HdlValueInt: 1
            list: value
                HdlOp: MAP_ASSOCIATION
                    list: ops
                        type
                        HdlValueInt: 0
            HdlDirection: OUT
        HdlIdDef: rready
            HdlValueId: std_logic
            HdlValueInt: 0
            HdlDirection: OUT
        HdlIdDef: rvalid
            HdlValueId: std_logic
            HdlDirection: IN
        HdlIdDef: rdata
            HdlOp: INDEX
                list: ops
                    HdlValueId: std_logic_vector
                    HdlOp: DOWNTO
                        list: ops
                            HdlOp: SUB
                                list: ops
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: data_length
                                            HdlValueId: bus_handle
                                    HdlValueInt: 1
            HdlDirection: IN
        HdlIdDef: rresp
            HdlValueId: axi_resp_t
            HdlDirection: IN
        HdlIdDef: awready
            HdlValueId: std_logic
            HdlDirection: IN
        HdlIdDef: awvalid
            HdlValueId: std_logic
            HdlValueInt: 0
            HdlDirection: OUT
        HdlIdDef: awaddr
            HdlOp: INDEX
                list: ops
                    HdlValueId: std_logic_vector
                    HdlOp: DOWNTO
                        list: ops
                            HdlOp: SUB
                                list: ops
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: address_length
                                            HdlValueId: bus_handle
                                    HdlValueInt: 1
            list: value
                HdlOp: MAP_ASSOCIATION
                    list: ops
                        type
                        HdlValueInt: 0
            HdlDirection: OUT
        HdlIdDef: wready
            HdlValueId: std_logic
            HdlDirection: IN
        HdlIdDef: wvalid
            HdlValueId: std_logic
            HdlValueInt: 0
            HdlDirection: OUT
        HdlIdDef: wdata
            HdlOp: INDEX
                list: ops
                    HdlValueId: std_logic_vector
                    HdlOp: DOWNTO
                        list: ops
                            HdlOp: SUB
                                list: ops
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: data_length
                                            HdlValueId: bus_handle
                                    HdlValueInt: 1
            list: value
                HdlOp: MAP_ASSOCIATION
                    list: ops
                        type
                        HdlValueInt: 0
            HdlDirection: OUT
        HdlIdDef: wstrb
            HdlOp: INDEX
                list: ops
                    HdlValueId: std_logic_vector
                    HdlOp: DOWNTO
                        list: ops
                            HdlOp: SUB
                                list: ops
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: byte_enable_length
                                            HdlValueId: bus_handle
                                    HdlValueInt: 1
            list: value
                HdlOp: MAP_ASSOCIATION
                    list: ops
                        type
                        HdlValueInt: 0
            HdlDirection: OUT
        HdlIdDef: bvalid
            HdlValueId: std_logic
            HdlDirection: IN
        HdlIdDef: bready
            HdlValueId: std_logic
            HdlValueInt: 0
            HdlDirection: OUT
        HdlIdDef: bresp
            HdlValueId: axi_resp_t
            HdlValueId: axi_resp_okay
            HdlDirection: IN
    list: objs


CommitId: 10220c5fb7cd6c1e095a4b41087c48aa05e30c59
Deprecated external_error flag to test_runner_cleanup
--- a/vunit/vhdl/run/src/run_deprecated_pkg.vhd
+++ b/vunit/vhdl/run/src/run_deprecated_pkg.vhd
@@ -8,22 +8,32 @@ use work.logger_pkg.all;
 use work.checker_pkg.all;
 use work.runner_pkg.all;
 use work.run_types_pkg.all;
+use work.run_pkg.all;
+use work.core_pkg;
 
 package run_deprecated_pkg is
   -- Deprecated interface to better support legacy testbenches.
   procedure test_runner_cleanup (
     signal runner: inout runner_sync_t;
-    constant checker_stat : in checker_stat_t);
+    constant checker_stat : in checker_stat_t;
+    constant external_failure : in boolean := false);
 
 end package run_deprecated_pkg;
 
 package body run_deprecated_pkg is
   procedure test_runner_cleanup (
     signal runner: inout runner_sync_t;
-    constant checker_stat : in checker_stat_t) is
+    constant checker_stat : in checker_stat_t;
+    constant external_failure : in boolean := false) is
   begin
-    warning("Using deprecated procedure test_runner_cleanup with checker_stat input." & LF &
-            "Non-default checkers with failed checks will be recognized without feeding its" & LF &
-            "statistics to test_runner_cleanup");
+    warning("Using deprecated procedure test_runner_cleanup with " &
+            "checker_stat and external_failure input.");
+
+    if external_failure then
+      core_pkg.core_failure("External failure.");
+      return;
+    end if;
+
+    test_runner_cleanup(runner);
   end;
 end package body run_deprecated_pkg;
ParseResult:
INS HdlIdDef@@external_failure to params
HdlIdDef: external_failure
    HdlValueId: boolean
    HdlValueId: false
    HdlDirection: INTERNAL

INS HdlIdDef@@external_failure to params
HdlIdDef: external_failure
    HdlValueId: boolean
    HdlValueId: false
    HdlDirection: INTERNAL

INS HdlStmIf@@ to body
HdlStmIf
    HdlValueId: external_failure
    HdlStmBlock: SEQ
        list: body
            HdlOp: CALL
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlValueId: core_pkg
                            HdlValueId: core_failure
                    str
            HdlStmReturn
    list: elifs

UPD HdlFunctionDef@@test_runner_cleanup to test_runner_cleanup
    INS HdlOp@@CALL to body
    HdlOp: CALL
        list: ops
            HdlValueId: test_runner_cleanup
            HdlValueId: runner

UPD HdlFunctionDef@@test_runner_cleanup to test_runner_cleanup
    UPD HdlOp@@CALL to CALL
        UPD HdlOp@@CONCAT to CONCAT
            UPD HdlOp@@CONCAT to CONCAT
                MOV HdlOp@@CONCAT to ops
                HdlOp: CONCAT
                    list: ops
                        HdlOp: CONCAT
                            list: ops
                                str
                                HdlValueId: LF
                        str
                UPD HdlOp@@CONCAT to CONCAT
                    UPD HdlOp@@CONCAT to CONCAT
                        MOV str@@ to ops
                        str
                        DEL HdlValueId@@LF from ops
                        DEL list@@ops from CONCAT
                    DEL HdlOp@@CONCAT from ops
                DEL HdlValueId@@LF from ops
                DEL list@@ops from CONCAT
            DEL HdlOp@@CONCAT from ops
            DEL str@@ from ops
            DEL list@@ops from CONCAT
        DEL HdlOp@@CONCAT from ops


CommitId: 6bc3c930fc9df5dc8c560a203914e530515f51a1
Fix copyright and code clean
--- a/vunit/vhdl/verification_components/src/wishbone_slave.vhd
+++ b/vunit/vhdl/verification_components/src/wishbone_slave.vhd
@@ -17,10 +18,8 @@ library ieee;
 use ieee.std_logic_1164.all;
 use ieee.numeric_std.all;
 
-library vunit_lib;
-context vunit_lib.vunit_context;
+context work.vunit_context;
 context work.com_context;
-
 use work.memory_pkg.all;
 
 library osvvm;
ParseResult:
DEL HdlLibrary@@vunit_lib from objs


CommitId: 42cd894cb2f54940875fb14c6d3fa04c9b5084f1
Add debug logging to axi_lite_master
--- a/vunit/vhdl/verification_components/src/bus_master_pkg-body.vhd
+++ b/vunit/vhdl/verification_components/src/bus_master_pkg-body.vhd
@@ -29,6 +29,11 @@ package body bus_master_pkg is
             p_logger => logger);
   end;
 
+  function get_logger(bus_handle : bus_master_t) return logger_t is
+  begin
+    return bus_handle.p_logger;
+  end;
+
   impure function data_length(bus_handle : bus_master_t) return natural is
   begin
     return bus_handle.p_data_length;
ParseResult:
INS HdlFunctionDef@@get_logger to objs
HdlFunctionDef: get_logger
    HdlValueId: logger_t
    list: params
        HdlIdDef: bus_handle
            HdlValueId: bus_master_t
            HdlDirection: IN
    list: body
        HdlStmReturn: {'__class__': 'HdlOp', 'fn': 'DOT', 'ops':} 
            HdlOp: DOT
                list: ops
                    HdlValueId: bus_handle
                    HdlValueId: p_logger


CommitId: bfc05566003b11083100b1832e38e5131f738957
fix: files affected by 'length' being renamed to 'len'
--- a/vunit/vhdl/logging/src/logger_pkg-body.vhd
+++ b/vunit/vhdl/logging/src/logger_pkg-body.vhd
@@ -123,7 +123,7 @@ package body logger_pkg is
 
     if log_level_filter = null_ptr then
       -- Only show valid log levels by default
-      log_level_filter := new_integer_vector_ptr(length => n_log_levels, value => log_level_invisible);
+      log_level_filter := new_integer_vector_ptr(len => n_log_levels, value => log_level_invisible);
       for log_level in log_level_t'low to log_level_t'high loop
         if is_valid(log_level) then
           set(log_level_filter, log_level_t'pos(log_level), log_level_visible);

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@ARROW to ARROW
            UPD HdlValueId@@length to len


CommitId: 1a1923390afef703c5f3ac580836021fc8a8e3ec
Merge pull request #434 from bradleyharden/test_modelsim_fixup
--- a/vunit/vhdl/com/src/com_types.vhd
+++ b/vunit/vhdl/com/src/com_types.vhd
@@ -226,7 +226,8 @@ package com_types_pkg is
   impure function is_empty(msg : msg_t) return boolean;
 
   -- Push message into a queue.
-  procedure push(queue : queue_t; value : msg_t);
+  -- The message is set to null to avoid duplicate ownership
+  procedure push(queue : queue_t; variable value : inout msg_t);
 
   -- Pop a message from a queue.
   impure function pop(queue : queue_t) return msg_t;

ParseResult:
UPD HdlIdDef@@value to value
    UPD HdlDirection@@IN to INOUT


CommitId: 1a1923390afef703c5f3ac580836021fc8a8e3ec
Merge pull request #434 from bradleyharden/test_modelsim_fixup
--- a/vunit/vhdl/com/src/com_types.vhd
+++ b/vunit/vhdl/com/src/com_types.vhd
@@ -510,25 +514,28 @@ package body com_types_pkg is
     return length(msg.data) = 0;
   end;
 
-  procedure push(queue : queue_t; value : msg_t) is
+  procedure push(queue : queue_t; variable value : inout msg_t) is
   begin
     push(queue, value.id);
+    push(queue, value.msg_type.p_code);
     push(queue, com_status_t'pos(value.status));
     push(queue, value.sender.id);
     push(queue, value.receiver.id);
     push(queue, value.request_id);
     push_queue_ref(queue, value.data);
+    value := null_msg;
   end;
 
   impure function pop(queue : queue_t) return msg_t is
     variable ret_val : msg_t;
   begin
-    ret_val.id          := pop(queue);
-    ret_val.status      := com_status_t'val(integer'(pop(queue)));
-    ret_val.sender.id   := pop(queue);
+    ret_val.id := pop(queue);
+    ret_val.msg_type := (p_code => pop(queue));
+    ret_val.status := com_status_t'val(integer'(pop(queue)));
+    ret_val.sender.id := pop(queue);
     ret_val.receiver.id := pop(queue);
-    ret_val.request_id  := pop(queue);
-    ret_val.data        := pop_queue_ref(queue);
+    ret_val.request_id := pop(queue);
+    ret_val.data := pop_queue_ref(queue);
 
     return ret_val;
   end;

ParseResult:
UPD HdlFunctionDef@@push to push
    INS HdlOp@@CALL to body
    HdlOp: CALL
        list: ops
            HdlValueId: push
            HdlValueId: queue
            HdlOp: DOT
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlValueId: value
                            HdlValueId: msg_type
                    HdlValueId: p_code

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: null_msg
    HdlValueId: value

INS HdlStmAssign@@ to body
HdlStmAssign
    list: src
        HdlOp: MAP_ASSOCIATION
            list: ops
                HdlValueId: p_code
                HdlOp: INDEX
                    list: ops
                        HdlValueId: pop
                        HdlValueId: queue
    HdlOp: DOT
        list: ops
            HdlValueId: ret_val
            HdlValueId: msg_type

UPD HdlIdDef@@value to value
    UPD HdlDirection@@IN to INOUT


CommitId: 1a1923390afef703c5f3ac580836021fc8a8e3ec
Merge pull request #434 from bradleyharden/test_modelsim_fixup
--- a/vunit/vhdl/com/src/com_types.vhd
+++ b/vunit/vhdl/com/src/com_types.vhd
@@ -727,7 +734,7 @@ package body com_types_pkg is
     return pop(msg.data);
   end;
 
-  procedure push(msg : msg_t; value : integer_vector_ptr_t) is
+  procedure push(msg : msg_t; variable value : inout integer_vector_ptr_t) is
   begin
     push(msg.data, value);
   end;

ParseResult:
UPD HdlIdDef@@value to value
    UPD HdlDirection@@IN to INOUT


CommitId: 1a1923390afef703c5f3ac580836021fc8a8e3ec
Merge pull request #434 from bradleyharden/test_modelsim_fixup
--- a/vunit/vhdl/com/src/com_types.vhd
+++ b/vunit/vhdl/com/src/com_types.vhd
@@ -737,7 +744,7 @@ package body com_types_pkg is
     return pop(msg.data);
   end;
 
-  procedure push(msg : msg_t; value : string_ptr_t) is
+  procedure push(msg : msg_t; variable value : inout string_ptr_t) is
   begin
     push(msg.data, value);
   end;

ParseResult:
UPD HdlIdDef@@value to value
    UPD HdlDirection@@IN to INOUT


CommitId: 1a1923390afef703c5f3ac580836021fc8a8e3ec
Merge pull request #434 from bradleyharden/test_modelsim_fixup
--- a/vunit/vhdl/com/src/com_types.vhd
+++ b/vunit/vhdl/com/src/com_types.vhd
@@ -747,7 +754,7 @@ package body com_types_pkg is
     return pop(msg.data);
   end;
 
-  procedure push(msg : msg_t; value : queue_t) is
+  procedure push(msg : msg_t; variable value : inout queue_t) is
   begin
     push(msg.data, value);
   end;

ParseResult:
UPD HdlIdDef@@value to value
    UPD HdlDirection@@IN to INOUT


CommitId: 1a1923390afef703c5f3ac580836021fc8a8e3ec
Merge pull request #434 from bradleyharden/test_modelsim_fixup
--- a/vunit/vhdl/com/src/com_types.vhd
+++ b/vunit/vhdl/com/src/com_types.vhd
@@ -827,7 +834,7 @@ package body com_types_pkg is
     return pop(msg.data);
   end;
 
-  procedure push(msg      : msg_t; value : msg_t) is
+  procedure push(msg : msg_t; variable value : inout msg_t) is
   begin
     push(msg.data, value);
   end;
ParseResult:
UPD HdlIdDef@@value to value
    UPD HdlDirection@@IN to INOUT


CommitId: 97dadd1ac03a4526b736623b97f34d086b95b4b6
Moved com codecs to datatypes. Removed support for debug codecs.
--- a/vunit/vhdl/data_types/src/queue_pkg.vhd
+++ b/vunit/vhdl/data_types/src/queue_pkg.vhd
@@ -83,6 +85,11 @@ package queue_pkg is
   alias push_queue_ref is push[queue_t, queue_t];
   alias pop_queue_ref is pop[queue_t return queue_t];
 
+  function encode(data : queue_t) return string;
+  function decode(code : string) return queue_t;
+  procedure decode (constant code : string; variable index : inout positive; variable result : out queue_t);
+  alias encode_queue_t is encode[queue_t return string];
+  alias decode_queue_t is decode[string return queue_t];
 end package;
 
 package body queue_pkg is

ParseResult:
INS HdlFunctionDef@@encode to objs
HdlFunctionDef: encode
    HdlValueId: string
    list: params
        HdlIdDef: data
            HdlValueId: queue_t
            HdlDirection: IN
    list: body

INS HdlFunctionDef@@decode to objs
HdlFunctionDef: decode
    HdlValueId: queue_t
    list: params
        HdlIdDef: code
            HdlValueId: string
            HdlDirection: IN
    list: body

INS HdlFunctionDef@@decode to objs
HdlFunctionDef: decode
    list: params
        HdlIdDef: code
            HdlValueId: string
            HdlDirection: INTERNAL
        HdlIdDef: index
            HdlValueId: positive
            HdlDirection: INOUT
        HdlIdDef: result
            HdlValueId: queue_t
            HdlDirection: OUT
    list: body


CommitId: 754cf9896d948cc26aa6dd67b459291564fdc104
fix potential lockup with calling wait_until_idle on a (just) empty queue
--- a/vunit/vhdl/verification_components/src/axi_stream_slave.vhd
+++ b/vunit/vhdl/verification_components/src/axi_stream_slave.vhd
@@ -40,6 +40,7 @@ begin
 
   main : process
     variable request_msg : msg_t;
+    variable dummy_msg   : msg_t;
     variable msg_type    : msg_type_t;
   begin
     receive(net, slave.p_actor, request_msg);

ParseResult:
INS HdlIdDef@@dummy_msg to body
HdlIdDef: dummy_msg
    HdlValueId: msg_t
    HdlDirection: INTERNAL


CommitId: 754cf9896d948cc26aa6dd67b459291564fdc104
fix potential lockup with calling wait_until_idle on a (just) empty queue
--- a/vunit/vhdl/verification_components/src/axi_stream_slave.vhd
+++ b/vunit/vhdl/verification_components/src/axi_stream_slave.vhd
@@ -50,6 +51,9 @@ begin
     elsif msg_type = wait_for_time_msg then
       push(message_queue, request_msg);
     elsif msg_type = wait_until_idle_msg then
+      dummy_msg := request_msg;
+      push(message_queue, dummy_msg);  -- Push a copy onto the queue, to always have a notify even if the queue happened
+                                       --  to be just empty at this moment
       wait on notify_bus_process_done until is_empty(message_queue);
       handle_wait_until_idle(net, msg_type, request_msg);
     else

ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: request_msg
    HdlValueId: dummy_msg

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: push
                HdlValueId: message_queue
                HdlValueId: dummy_msg


CommitId: 754cf9896d948cc26aa6dd67b459291564fdc104
fix potential lockup with calling wait_until_idle on a (just) empty queue
--- a/vunit/vhdl/verification_components/src/axi_stream_slave.vhd
+++ b/vunit/vhdl/verification_components/src/axi_stream_slave.vhd
@@ -79,6 +83,8 @@ begin
       if msg_type = wait_for_time_msg then
         handle_sync_message(net, msg_type, msg);
         wait until rising_edge(aclk);
+      elsif msg_type = wait_until_idle_msg then
+        -- Ignore this message, but expect it
       elsif msg_type = stream_pop_msg or msg_type = pop_axi_stream_msg then
         tready <= '1';
         wait until (tvalid and tready) = '1' and rising_edge(aclk);
ParseResult:
UPD HdlStmIf@@ to 
    INS tuple@@ to elifs
    tuple
        HdlOp: EQ
            list: ops
                HdlValueId: msg_type
                HdlValueId: wait_until_idle_msg
        HdlStmBlock: SEQ
            list: body


CommitId: 564564cf7a426ffc620502f60e82eb65e69b89ef
Fixed string_ops bug.
--- a/vunit/vhdl/string_ops/src/string_ops.vhd
+++ b/vunit/vhdl/string_ops/src/string_ops.vhd
@@ -534,6 +534,10 @@ package body string_ops is
       return start_pos;
     end if;
 
+    if s = "" then
+      return 0;
+    end if;
+
     o := offset(s, start_pos);
     while o <= offset(s, stop_pos) - substring'length + 1 loop
       if slice(s, o, substring'length) = substring then
ParseResult:
INS HdlStmIf@@ to body
HdlStmIf
    HdlOp: EQ
        list: ops
            HdlValueId: s
    HdlStmBlock: SEQ
        list: body
            HdlStmReturn: 0 
                HdlValueInt: 0
    list: elifs


CommitId: bfc05566003b11083100b1832e38e5131f738957
fix: files affected by 'length' being renamed to 'len'
--- a/vunit/vhdl/logging/src/file_pkg.vhd
+++ b/vunit/vhdl/logging/src/file_pkg.vhd
@@ -29,7 +29,7 @@ end package;
 
 package body file_pkg is
 
-  constant next_id : integer_vector_ptr_t := new_integer_vector_ptr(length => 1, value => 0);
+  constant next_id : integer_vector_ptr_t := new_integer_vector_ptr(len => 1, value => 0);
 
   constant id_idx : natural := 0;
   constant open_idx : natural := 1;

ParseResult:
INS HdlIdDef@@next_id to objs

UPD HdlIdDef@@next_id to next_id
    INS HdlValueId@@integer_vector_ptr_t to next_id
    INS HdlOp@@INDEX to next_id
    INS HdlDirection@@INTERNAL to next_id
    UPD HdlOp@@INDEX to INDEX
        INS list@@ops to INDEX
        INS HdlValueId@@new_integer_vector_ptr to ops
        INS HdlOp@@ARROW to ops
        HdlOp: ARROW
            list: ops
                HdlValueId: len
                HdlValueInt: 1

UPD HdlIdDef@@next_id to next_id
    UPD HdlOp@@INDEX to INDEX
        MOV HdlOp@@ARROW to ops
        HdlOp: ARROW
            list: ops
                HdlValueId: value
        DEL HdlValueId@@new_integer_vector_ptr from ops
        DEL HdlOp@@ARROW from ops
        HdlOp: ARROW
            list: ops
                HdlValueId: length
                HdlValueInt: 1
        DEL list@@ops from INDEX
    DEL HdlValueId@@integer_vector_ptr_t from next_id
    DEL HdlOp@@INDEX from next_id
    DEL HdlDirection@@INTERNAL from next_id

DEL HdlIdDef@@next_id from objs


CommitId: bfc05566003b11083100b1832e38e5131f738957
fix: files affected by 'length' being renamed to 'len'
--- a/vunit/vhdl/logging/src/file_pkg.vhd
+++ b/vunit/vhdl/logging/src/file_pkg.vhd
@@ -153,7 +153,7 @@ package body file_pkg is
       id := get(next_id, 0);
       set(next_id, 0, id + 1);
 
-      file_id.p_data := new_integer_vector_ptr(length => file_id_length);
+      file_id.p_data := new_integer_vector_ptr(len => file_id_length);
       set(file_id.p_data, id_idx, id);
       set(file_id.p_data, name_idx, to_integer(new_string_ptr(file_name)));
     else

ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@ARROW to ARROW
            UPD HdlValueId@@length to len


CommitId: 4d38b358430c75bd822e0c6f812d70836d29b3aa
Make memory permission checking off by default.
--- a/vunit/vhdl/bfm/src/axi_read_slave.vhd
+++ b/vunit/vhdl/bfm/src/axi_read_slave.vhd
@@ -88,7 +88,7 @@ begin
         rvalid <= '1';
         for j in 0 to burst.size-1 loop
           idx := (address + j) mod self.data_size;
-          rdata(8*idx+7 downto 8*idx) <= std_logic_vector(to_unsigned(read_byte(memory, address+j), 8));
+          rdata(8*idx+7 downto 8*idx) <= std_logic_vector(to_unsigned(read_byte(memory, address+j, check_permissions => true), 8));
         end loop;
 
         if burst.burst_type = axi_burst_type_incr then
ParseResult:
UPD HdlStmAssign@@ to 
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@INDEX to INDEX
            UPD HdlOp@@INDEX to INDEX
                INS HdlOp@@ARROW to ops
                HdlOp: ARROW
                    list: ops
                        HdlValueId: check_permissions
                        HdlValueId: true


CommitId: 64cebf1dd3ec13127c0042e45805659cc171e3a2
Fix non-blocking partial check
--- a/vunit/vhdl/verification_components/src/axi_stream_pkg.vhd
+++ b/vunit/vhdl/verification_components/src/axi_stream_pkg.vhd
@@ -730,12 +730,6 @@ package body axi_stream_pkg is
     variable got_tdest : std_logic_vector(dest_length(axi_stream)-1 downto 0);
     variable got_tuser : std_logic_vector(user_length(axi_stream)-1 downto 0);
     variable check_msg : msg_t := new_msg(check_axi_stream_msg);
-    variable normalized_data : std_logic_vector(data_length(axi_stream)-1 downto 0) := (others => '0');
-    variable normalized_keep : std_logic_vector(data_length(axi_stream)/8-1 downto 0) := (others => '0');
-    variable normalized_strb : std_logic_vector(data_length(axi_stream)/8-1 downto 0) := (others => '0');
-    variable normalized_id   : std_logic_vector(id_length(axi_stream)-1 downto 0) := (others => '0');
-    variable normalized_dest : std_logic_vector(dest_length(axi_stream)-1 downto 0) := (others => '0');
-    variable normalized_user : std_logic_vector(user_length(axi_stream)-1 downto 0) := (others => '0');
   begin
     if blocking then
       pop_axi_stream(net, axi_stream, got_tdata, got_tlast, got_tkeep, got_tstrb, got_tid, got_tdest, got_tuser);

ParseResult:
DEL HdlIdDef@@normalized_data from body
HdlIdDef: normalized_data
    HdlOp: INDEX
        list: ops
            HdlValueId: std_logic_vector
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: data_length
                                    HdlValueId: axi_stream
                            HdlValueInt: 1
    list: value
        HdlOp: MAP_ASSOCIATION
            list: ops
                type
                HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@normalized_keep from body
HdlIdDef: normalized_keep
    HdlOp: INDEX
        list: ops
            HdlValueId: std_logic_vector
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlOp: DIV
                                list: ops
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: data_length
                                            HdlValueId: axi_stream
                                    HdlValueInt: 8
                            HdlValueInt: 1
    list: value
        HdlOp: MAP_ASSOCIATION
            list: ops
                type
                HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@normalized_strb from body
HdlIdDef: normalized_strb
    HdlOp: INDEX
        list: ops
            HdlValueId: std_logic_vector
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlOp: DIV
                                list: ops
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: data_length
                                            HdlValueId: axi_stream
                                    HdlValueInt: 8
                            HdlValueInt: 1
    list: value
        HdlOp: MAP_ASSOCIATION
            list: ops
                type
                HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@normalized_id from body
HdlIdDef: normalized_id
    HdlOp: INDEX
        list: ops
            HdlValueId: std_logic_vector
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: id_length
                                    HdlValueId: axi_stream
                            HdlValueInt: 1
    list: value
        HdlOp: MAP_ASSOCIATION
            list: ops
                type
                HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@normalized_dest from body
HdlIdDef: normalized_dest
    HdlOp: INDEX
        list: ops
            HdlValueId: std_logic_vector
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: dest_length
                                    HdlValueId: axi_stream
                            HdlValueInt: 1
    list: value
        HdlOp: MAP_ASSOCIATION
            list: ops
                type
                HdlValueInt: 0
    HdlDirection: INTERNAL

DEL HdlIdDef@@normalized_user from body
HdlIdDef: normalized_user
    HdlOp: INDEX
        list: ops
            HdlValueId: std_logic_vector
            HdlOp: DOWNTO
                list: ops
                    HdlOp: SUB
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: user_length
                                    HdlValueId: axi_stream
                            HdlValueInt: 1
    list: value
        HdlOp: MAP_ASSOCIATION
            list: ops
                type
                HdlValueInt: 0
    HdlDirection: INTERNAL


CommitId: 7ba63aadaa8732e4359abd41672a8458858d3cbf
Fixed lint issues in com package.
--- a/vunit/vhdl/com/src/com_string.vhd
+++ b/vunit/vhdl/com/src/com_string.vhd
@@ -86,7 +86,7 @@ package body com_string_pkg is
   function to_detailed_string (
     constant data : real)
     return string is
-    variable f64 : float64;
+    constant f64 : float64 := (others => '0');
   begin
     return to_string(to_float(data, f64));
   end;
ParseResult:
UPD HdlIdDef@@f64 to f64
    INS list@@value to f64
    list: value
        HdlOp: MAP_ASSOCIATION
            list: ops
                type
                HdlValueInt: 0


CommitId: 7ba63aadaa8732e4359abd41672a8458858d3cbf
Fixed lint issues in com package.
--- a/vunit/vhdl/com/src/com_codec.vhd
+++ b/vunit/vhdl/com/src/com_codec.vhd
@@ -34,7 +34,7 @@ package body com_codec_pkg is
   function encode (
     constant data : real)
     return string is
-    variable f64 : float64;
+    constant f64 : float64 := (others => '0');
   begin
     return to_byte_array(to_bv(to_slv(to_float(data, f64))));
   end;

ParseResult:
UPD HdlIdDef@@f64 to f64
    INS list@@value to f64
    list: value
        HdlOp: MAP_ASSOCIATION
            list: ops
                type
                HdlValueInt: 0


CommitId: 7ba63aadaa8732e4359abd41672a8458858d3cbf
Fixed lint issues in com package.
--- a/vunit/vhdl/com/src/com_codec.vhd
+++ b/vunit/vhdl/com/src/com_codec.vhd
@@ -279,7 +279,6 @@ package body com_codec_pkg is
   function encode (
     constant data : string)
     return string is
-    variable length : natural;
   begin
     -- Modelsim sets data'right to 0 which is out of the positive index range used by
     -- strings.
ParseResult:
DEL HdlIdDef@@length from body
HdlIdDef: length
    HdlValueId: natural
    HdlDirection: INTERNAL


CommitId: f6537bb85d5ef051583d49253de4b01f859c3e51
Update com.
--- a/vunit/vhdl/com/src/com_types.vhd
+++ b/vunit/vhdl/com/src/com_types.vhd
@@ -23,7 +25,13 @@ package com_types_pkg is
                         already_a_subscriber_error,
                         not_a_subscriber_error,
                         full_inbox_error,
-                        reply_missing_request_id_error);
+                        reply_missing_request_id_error,
+                        unknown_request_id_error,
+                        deprecated_interface_error,
+                        insufficient_size_error,
+                        duplicate_actor_name_error);
+
+  subtype com_error_t is com_status_t range timeout to duplicate_actor_name_error;
 
   type actor_t is record
     id : natural;

ParseResult:
INS HdlIdDef@@com_error_t to objs
HdlIdDef: com_error_t
    HdlOp: RANGE
        list: ops
            HdlValueId: com_status_t
            HdlOp: TO
                list: ops
                    HdlValueId: timeout
                    HdlValueId: duplicate_actor_name_error
    HdlDirection: INTERNAL


CommitId: f6537bb85d5ef051583d49253de4b01f859c3e51
Update com.
--- a/vunit/vhdl/com/src/com_types.vhd
+++ b/vunit/vhdl/com/src/com_types.vhd
@@ -32,15 +40,29 @@ package com_types_pkg is
 
   subtype message_id_t is natural;
   constant no_message_id_c : message_id_t := 0;
+
   type message_t is record
     id         : message_id_t;
     status     : com_status_t;
     sender     : actor_t;
+    receiver   : actor_t;
     request_id : message_id_t;
     payload    : line;
   end record message_t;
   type message_ptr_t is access message_t;
 
+  subtype msg_data_t is queue_t;
+  type msg_t is record
+    id         : message_id_t;
+    status     : com_status_t;
+    sender     : actor_t;
+    receiver   : actor_t;
+    request_id : message_id_t;
+    data       : msg_data_t;
+  end record msg_t;
+
+  type subscription_traffic_type_t is (published, outbound, inbound);
+
   type receipt_t is record
     status : com_status_t;
     id     : message_id_t;

ParseResult:
INS HdlIdDef@@msg_data_t to objs
HdlIdDef: msg_data_t
    HdlValueId: queue_t
    HdlDirection: INTERNAL

INS HdlIdDef@@msg_t to objs
HdlIdDef: msg_t
    HdlClassDef: value
        HdlClassType: STRUCT
    HdlDirection: INTERNAL

INS HdlIdDef@@subscription_traffic_type_t to objs
HdlIdDef: subscription_traffic_type_t
    HdlEnumDef: value
    HdlDirection: INTERNAL


CommitId: bcdabe4ae13e5e49614f9572232f97c516ca261d
Fix "prefix of array attribute must be an object name"
--- a/vunit/vhdl/data_types/src/codec-2008p.vhd
+++ b/vunit/vhdl/data_types/src/codec-2008p.vhd
@@ -110,7 +110,8 @@ package body codec_2008p_pkg is
   function decode (
     constant code : string)
     return boolean_vector is
-    variable ret_val : boolean_vector(get_range(code)'range) := (others => false);
+    constant ret_range : range_t := get_range(code);
+    variable ret_val : boolean_vector(ret_range'range) := (others => false);
     variable index   : positive := code'left;
   begin
     decode(code, index, ret_val);

ParseResult:
INS HdlIdDef@@ret_range to body

UPD HdlIdDef@@ret_range to ret_range
    INS HdlValueId@@range_t to ret_range
    INS HdlDirection@@INTERNAL to ret_range

UPD HdlIdDef@@ret_val to ret_val
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@APOSTROPHE to APOSTROPHE
            MOV HdlOp@@INDEX to ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: get_range
                    HdlValueId: code

UPD HdlIdDef@@ret_val to ret_val
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@APOSTROPHE to APOSTROPHE
            INS HdlValueId@@ret_range to ops


CommitId: bcdabe4ae13e5e49614f9572232f97c516ca261d
Fix "prefix of array attribute must be an object name"
--- a/vunit/vhdl/data_types/src/codec-2008p.vhd
+++ b/vunit/vhdl/data_types/src/codec-2008p.vhd
@@ -136,7 +137,8 @@ package body codec_2008p_pkg is
   function decode (
     constant code : string)
     return integer_vector is
-    variable ret_val : integer_vector(get_range(code)'range) := (others => integer'left);
+    constant ret_range : range_t := get_range(code);
+    variable ret_val : integer_vector(ret_range'range) := (others => integer'left);
     variable index   : positive := code'left;
   begin
     decode(code, index, ret_val);

ParseResult:
INS HdlIdDef@@ret_range to body

UPD HdlIdDef@@ret_range to ret_range
    INS HdlValueId@@range_t to ret_range
    INS HdlDirection@@INTERNAL to ret_range

UPD HdlIdDef@@ret_val to ret_val
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@APOSTROPHE to APOSTROPHE
            MOV HdlOp@@INDEX to ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: get_range
                    HdlValueId: code

UPD HdlIdDef@@ret_val to ret_val
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@APOSTROPHE to APOSTROPHE
            INS HdlValueId@@ret_range to ops


CommitId: bcdabe4ae13e5e49614f9572232f97c516ca261d
Fix "prefix of array attribute must be an object name"
--- a/vunit/vhdl/data_types/src/codec-2008p.vhd
+++ b/vunit/vhdl/data_types/src/codec-2008p.vhd
@@ -162,7 +164,8 @@ package body codec_2008p_pkg is
   function decode (
     constant code : string)
     return real_vector is
-    variable ret_val : real_vector(get_range(code)'range) := (others => real'left);
+    constant ret_range : range_t := get_range(code);
+    variable ret_val : real_vector(ret_range'range) := (others => real'left);
     variable index   : positive := code'left;
   begin
     decode(code, index, ret_val);

ParseResult:
INS HdlIdDef@@ret_range to body

UPD HdlIdDef@@ret_range to ret_range
    INS HdlValueId@@range_t to ret_range
    INS HdlDirection@@INTERNAL to ret_range

UPD HdlIdDef@@ret_val to ret_val
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@APOSTROPHE to APOSTROPHE
            MOV HdlOp@@INDEX to ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: get_range
                    HdlValueId: code

UPD HdlIdDef@@ret_val to ret_val
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@APOSTROPHE to APOSTROPHE
            INS HdlValueId@@ret_range to ops


CommitId: bcdabe4ae13e5e49614f9572232f97c516ca261d
Fix "prefix of array attribute must be an object name"
--- a/vunit/vhdl/data_types/src/codec-2008p.vhd
+++ b/vunit/vhdl/data_types/src/codec-2008p.vhd
@@ -188,7 +191,8 @@ package body codec_2008p_pkg is
   function decode (
     constant code : string)
     return time_vector is
-    variable ret_val : time_vector(get_range(code)'range) := (others => time'left);
+    constant ret_range : range_t := get_range(code);
+    variable ret_val : time_vector(ret_range'range) := (others => time'left);
     variable index   : positive := code'left;
   begin
     decode(code, index, ret_val);

ParseResult:
INS HdlIdDef@@ret_range to body

UPD HdlIdDef@@ret_range to ret_range
    INS HdlValueId@@range_t to ret_range
    INS HdlDirection@@INTERNAL to ret_range

UPD HdlIdDef@@ret_val to ret_val
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@APOSTROPHE to APOSTROPHE
            MOV HdlOp@@INDEX to ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: get_range
                    HdlValueId: code


CommitId: bcdabe4ae13e5e49614f9572232f97c516ca261d
Fix "prefix of array attribute must be an object name"
--- a/vunit/vhdl/data_types/src/codec-2008p.vhd
+++ b/vunit/vhdl/data_types/src/codec-2008p.vhd
@@ -206,7 +210,8 @@ package body codec_2008p_pkg is
   function decode (
     constant code : string)
     return ufixed is
-    variable ret_val : ufixed(get_range(code)'range);
+    constant ret_range : range_t := get_range(code);
+    variable ret_val : ufixed(ret_range'range);
     variable index   : positive := code'left;
   begin
     decode(code, index, ret_val);

ParseResult:
INS HdlIdDef@@ret_range to body

UPD HdlIdDef@@ret_val to ret_val
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@APOSTROPHE to APOSTROPHE
            MOV HdlOp@@INDEX to ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: get_range
                    HdlValueId: code


CommitId: bcdabe4ae13e5e49614f9572232f97c516ca261d
Fix "prefix of array attribute must be an object name"
--- a/vunit/vhdl/data_types/src/codec-2008p.vhd
+++ b/vunit/vhdl/data_types/src/codec-2008p.vhd
@@ -224,7 +229,8 @@ package body codec_2008p_pkg is
   function decode (
     constant code : string)
     return sfixed is
-    variable ret_val : sfixed(get_range(code)'range);
+    constant ret_range : range_t := get_range(code);
+    variable ret_val : sfixed(ret_range'range);
     variable index   : positive := code'left;
   begin
     decode(code, index, ret_val);

ParseResult:
INS HdlIdDef@@ret_range to body

UPD HdlIdDef@@ret_val to ret_val
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@APOSTROPHE to APOSTROPHE
            MOV HdlOp@@INDEX to ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: get_range
                    HdlValueId: code


CommitId: bcdabe4ae13e5e49614f9572232f97c516ca261d
Fix "prefix of array attribute must be an object name"
--- a/vunit/vhdl/data_types/src/codec-2008p.vhd
+++ b/vunit/vhdl/data_types/src/codec-2008p.vhd
@@ -242,7 +248,8 @@ package body codec_2008p_pkg is
   function decode (
     constant code : string)
     return float is
-    variable ret_val : float(get_range(code)'range);
+    constant ret_range : range_t := get_range(code);
+    variable ret_val : float(ret_range'range);
     variable index   : positive := code'left;
   begin
     decode(code, index, ret_val);
ParseResult:
INS HdlIdDef@@ret_range to body

UPD HdlIdDef@@ret_val to ret_val
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@APOSTROPHE to APOSTROPHE
            MOV HdlOp@@INDEX to ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: get_range
                    HdlValueId: code

UPD HdlIdDef@@ret_val to ret_val
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@APOSTROPHE to APOSTROPHE
            INS HdlValueId@@ret_range to ops


CommitId: b850c6121e5dced4346afe95b939478d53ae9a5d
Fixed overflow problem on GHDL with mcode backend
--- a/vhdl/com/src/com_codec_debug.vhd
+++ b/vhdl/com/src/com_codec_debug.vhd
@@ -71,12 +71,13 @@ package body com_codec_pkg is
     variable resolution        : time;
     variable t, t_part         : time                     := 0 ns;
     variable l, r, sign_offset : integer;
+    variable is_negative : boolean;
   begin
     -- Modelsim can't parse a string representation of time
     -- with a numerical value outside of the integer range (32 bits).
     -- According to standard?
     resolution := time'value("1 " & code_i(space_pos + 1 to code_i'length));
-
+    is_negative := code_i(1) = '-';
     l := space_pos - 9;
     r := space_pos - 1;
     if code_i(1) = '-' then

ParseResult:
INS HdlIdDef@@is_negative to body
HdlIdDef: is_negative
    HdlValueId: boolean
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to body

UPD HdlStmAssign@@ to 
    INS HdlValueId@@is_negative to 


CommitId: b850c6121e5dced4346afe95b939478d53ae9a5d
Fixed overflow problem on GHDL with mcode backend
--- a/vhdl/com/src/com_codec_debug.vhd
+++ b/vhdl/com/src/com_codec_debug.vhd
@@ -94,15 +95,15 @@ package body com_codec_pkg is
         t_part := t_part * 1e9;
       end loop;
 
-      t := t + t_part;
+      if is_negative then
+        t := t - t_part;
+      else
+        t := t + t_part;
+      end if;
       l := l - 9;
       r := r - 9;
     end loop;
 
-    if code_i(1) = '-' then
-      t := -t;
-    end if;
-
     return t;
   end;
 
ParseResult:
UPD HdlStmIf@@ to 
    MOV HdlOp@@EQ to 
    HdlOp: EQ
        list: ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: code_i
                    HdlValueInt: 1
            HdlValueInt: -
    DEL HdlStmBlock@@SEQ from 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlOp: MINUS_UNARY
                    list: ops
                        HdlValueId: t
                HdlValueId: t
    DEL list@@elifs from 

INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    INS HdlValueId@@is_negative to 
    INS HdlStmBlock@@SEQ to 
    HdlStmBlock: SEQ
        list: body
            HdlStmAssign
                HdlOp: SUB
                    list: ops
                        HdlValueId: t
                        HdlValueId: t_part
                HdlValueId: t
    INS list@@elifs to 
    INS HdlStmBlock@@SEQ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS list@@body to SEQ

MOV HdlStmAssign@@ to body
HdlStmAssign
    HdlOp: ADD
        list: ops
            HdlValueId: t
            HdlValueId: t_part
    HdlValueId: t

DEL HdlStmIf@@ from body


CommitId: 97958c90812cae985c4c6f6c7accaa0cad5e85be
Using line instead of 10000 long fixed string for runner_cfg
--- a/vunit/vhdl/run/src/run_types.vhd
+++ b/vunit/vhdl/run/src/run_types.vhd
@@ -18,8 +18,7 @@ package run_types_pkg is
   constant unknown_num_of_test_cases_c : integer := integer'left;
 
   subtype runner_cfg_t is string; -- Subtype deprecated, use string instead
-  constant max_dictionary_length_c : positive := 10000;
-  constant runner_cfg_default : string(1 to max_dictionary_length_c) := "enabled_test_cases : __all__, output path : , active python runner : false" & (75 to max_dictionary_length_c => ' ');
+  constant runner_cfg_default : string := "enabled_test_cases : __all__, output path : , active python runner : false";
   subtype test_cases_t is string;
 
   type runner_phase_unresolved_t is (test_runner_entry, test_runner_setup, test_suite_setup, test_case_setup, test_case, test_case_cleanup, test_suite_cleanup, test_runner_cleanup, test_runner_exit, multiple_drivers);

ParseResult:
UPD HdlIdDef@@runner_cfg_default to runner_cfg_default
    UPD HdlOp@@INDEX to INDEX
        MOV HdlValueId@@string to ops
        HdlValueId: string
        DEL HdlOp@@TO from ops
        HdlOp: TO
            list: ops
                HdlValueInt: 1
                HdlValueId: max_dictionary_length_c
        DEL list@@ops from INDEX
    DEL HdlOp@@INDEX from runner_cfg_default
    DEL HdlOp@@CONCAT from runner_cfg_default
    HdlOp: CONCAT
        list: ops
            str
            HdlOp: MAP_ASSOCIATION
                list: ops
                    HdlOp: TO
                        list: ops
                            HdlValueInt: 75
                            HdlValueId: max_dictionary_length_c
                    HdlValueInt:  

DEL HdlIdDef@@max_dictionary_length_c from objs
HdlIdDef: max_dictionary_length_c
    HdlValueId: positive
    HdlValueInt: 10000
    HdlDirection: INTERNAL


CommitId: 6a8f698ab97323364a785c2b41be231d71a3abfa
Removed error messages from count function. Valid use cases exists. Also allowed in the Python string method from which count was inspired.
--- a/vhdl/string_ops/src/string_ops.vhd
+++ b/vhdl/string_ops/src/string_ops.vhd
@@ -401,7 +400,6 @@ package body string_ops is
       if start = 0 then
         start_pos := s'left;
       elsif not in_range(s, start) then
-        lang_report("Start position outside of string.", error);
         return 0;
       else
         start_pos := start;

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: lang_report
                str
                HdlValueId: error


CommitId: 6a8f698ab97323364a785c2b41be231d71a3abfa
Removed error messages from count function. Valid use cases exists. Also allowed in the Python string method from which count was inspired.
--- a/vhdl/string_ops/src/string_ops.vhd
+++ b/vhdl/string_ops/src/string_ops.vhd
@@ -410,14 +408,12 @@ package body string_ops is
       if stop = 0 then
         stop_pos := s'right;
       elsif not in_range(s, stop) then
-        lang_report("Stop position outside of string.", error);
         return 0;
       else
         stop_pos := stop;
       end if;
 
       if offset(s, start_pos) > offset(s, stop_pos) then
-        lang_report("Negative range.", error);
         return 0;
       end if;
       
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: lang_report
                str
                HdlValueId: error

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        DEL HdlOp@@CALL from body
        HdlOp: CALL
            list: ops
                HdlValueId: lang_report
                str
                HdlValueId: error


CommitId: 7f3877303724e15990ddeb71c3ec3ed2765a5f74
Updated com user guide and example testbench with the publisher/subscriber pattern. Fixed bugs.
--- a/vunit/vhdl/com/src/com.vhd
+++ b/vunit/vhdl/com/src/com.vhd
@@ -149,6 +149,11 @@ package body com_pkg is
     return msg.sender;
   end;
 
+  function receiver(msg : msg_t) return actor_t is
+  begin
+    return msg.receiver;
+  end;
+
   procedure push(msg : msg_t; value : integer) is
   begin
     push(msg.data, value);

ParseResult:
INS HdlFunctionDef@@receiver to objs
HdlFunctionDef: receiver
    HdlValueId: actor_t
    list: params
        HdlIdDef: msg
            HdlValueId: msg_t
            HdlDirection: IN
    list: body
        HdlStmReturn: {'__class__': 'HdlOp', 'fn': 'DOT', 'ops':} 
            HdlOp: DOT
                list: ops
                    HdlValueId: msg
                    HdlValueId: receiver


CommitId: 7f3877303724e15990ddeb71c3ec3ed2765a5f74
Updated com user guide and example testbench with the publisher/subscriber pattern. Fixed bugs.
--- a/vunit/vhdl/com/src/com.vhd
+++ b/vunit/vhdl/com/src/com.vhd
@@ -614,11 +619,16 @@ package body com_pkg is
 
     if msg.sender /= null_actor_c then
       if messenger.has_subscribers(msg.sender, outbound) then
-        wait_on_subscribers(msg.sender, (0 => outbound), timeout);
-        messenger.publish(msg.sender, msg, (0 => outbound));
+        wait_on_subscribers(msg.sender, (0             => outbound), timeout - (now - t_start));
+        messenger.internal_publish(msg.sender, msg, (0 => outbound));
       end if;
     end if;
 
+    if (mailbox_name = inbox) and messenger.has_subscribers(receiver, inbound) then
+      wait_on_subscribers(receiver, (0             => inbound), timeout - (now - t_start));
+      messenger.internal_publish(receiver, msg, (0 => inbound));
+    end if;
+
     notify(net);
     recycle(queue_pool, msg.data);
   end;

ParseResult:
INS HdlStmIf@@ to body

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@CALL to CALL
            INS HdlOp@@SUB to ops
            UPD HdlOp@@SUB to SUB
                INS list@@ops to SUB
                INS HdlOp@@SUB to ops
                HdlOp: SUB
                    list: ops
                        HdlValueId: now
                        HdlValueId: t_start

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@CALL to CALL
            MOV HdlValueId@@timeout to ops
            HdlValueId: timeout
        UPD HdlOp@@CALL to CALL
            UPD HdlOp@@DOT to DOT
                UPD HdlValueId@@publish to internal_publish


CommitId: 7f3877303724e15990ddeb71c3ec3ed2765a5f74
Updated com user guide and example testbench with the publisher/subscriber pattern. Fixed bugs.
--- a/vunit/vhdl/com/src/com.vhd
+++ b/vunit/vhdl/com/src/com.vhd
@@ -667,11 +677,6 @@ package body com_pkg is
       end if;
     end loop;
 
-    if messenger.has_subscribers(receiver, inbound) then
-      wait_on_subscribers(receiver, (0 => inbound), timeout);
-      messenger.publish(receiver, msg, (0 => inbound));
-    end if;
-
     if started_with_full_inbox or messenger.has_subscribers(receiver, inbound) then
       notify(net);
     end if;

ParseResult:
UPD HdlStmIf@@ to 
    MOV HdlOp@@INDEX to 
    HdlOp: INDEX
        list: ops
            HdlOp: DOT
                list: ops
                    HdlValueId: messenger
                    HdlValueId: has_subscribers
            HdlValueId: receiver
            HdlValueId: inbound
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@CALL to CALL
            MOV list@@ to ops
            list
                HdlOp: MAP_ASSOCIATION
                    list: ops
                        HdlValueId: inbound
            DEL HdlValueId@@wait_on_subscribers from ops
            DEL HdlValueId@@receiver from ops
            DEL HdlValueId@@timeout from ops
            DEL list@@ops from CALL
        UPD HdlOp@@CALL to CALL
            MOV list@@ to ops
            list
                HdlOp: MAP_ASSOCIATION
                    list: ops
                        HdlValueId: inbound
            DEL HdlOp@@DOT from ops
            HdlOp: DOT
                list: ops
                    HdlValueId: messenger
                    HdlValueId: publish
            DEL HdlValueId@@receiver from ops
            DEL HdlValueId@@msg from ops
            DEL list@@ops from CALL
        DEL HdlOp@@CALL from body
        DEL HdlOp@@CALL from body
        DEL list@@body from SEQ
    DEL HdlStmBlock@@SEQ from 
    DEL list@@elifs from 

DEL HdlStmIf@@ from body


CommitId: 7f3877303724e15990ddeb71c3ec3ed2765a5f74
Updated com user guide and example testbench with the publisher/subscriber pattern. Fixed bugs.
--- a/vunit/vhdl/com/src/com.vhd
+++ b/vunit/vhdl/com/src/com.vhd
@@ -980,7 +985,7 @@ package body com_pkg is
     msg.id         := messenger.get_first_message_id(receiver);
     msg.request_id := messenger.get_first_message_request_id(receiver);
     msg.sender     := messenger.get_first_message_sender(receiver);
-    msg.receiver   := receiver;
+    msg.receiver   := messenger.get_first_message_receiver(receiver);
     msg.data       := decode(messenger.get_first_message_payload(receiver));
     messenger.delete_first_envelope(receiver);
 

ParseResult:
UPD HdlStmAssign@@ to 
    MOV HdlValueId@@receiver to 
    HdlValueId: receiver


CommitId: e67ac7c9ca4a463d0cc8d4de927d67567c3ebbde
Add stall probability to all axi slave channels.
--- a/vunit/vhdl/verification_components/src/axi_private_pkg.vhd
+++ b/vunit/vhdl/verification_components/src/axi_private_pkg.vhd
@@ -402,16 +435,24 @@ package body axi_private_pkg is
       receive(net, self.get_actor, request_msg);
       msg_type := message_type(request_msg);
 
-      if msg_type = axi_slave_set_address_channel_fifo_depth_msg then
-        self.set_address_channel_fifo_depth(pop(request_msg));
+      if msg_type = axi_slave_set_address_fifo_depth_msg then
+        self.set_address_fifo_depth(pop(request_msg));
         acknowledge(net, request_msg, true);
 
       elsif msg_type = axi_slave_set_write_response_fifo_depth_msg then
         self.set_write_response_fifo_depth(pop(request_msg));
         acknowledge(net, request_msg, true);
 
-      elsif msg_type = axi_slave_set_address_channel_stall_probability_msg then
-        self.set_address_channel_stall_probability(pop_real(request_msg));
+      elsif msg_type = axi_slave_set_address_stall_probability_msg then
+        self.set_address_stall_probability(pop_real(request_msg));
+        acknowledge(net, request_msg, true);
+
+      elsif msg_type = axi_slave_set_data_stall_probability_msg then
+        self.set_data_stall_probability(pop_real(request_msg));
+        acknowledge(net, request_msg, true);
+
+      elsif msg_type = axi_slave_set_write_response_stall_probability_msg then
+        self.set_write_response_stall_probability(pop_real(request_msg));
         acknowledge(net, request_msg, true);
 
       elsif msg_type = axi_slave_configure_4kbyte_boundary_check_msg then
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlOp@@EQ to EQ
        UPD HdlValueId@@axi_slave_set_address_channel_fifo_depth_msg to axi_slave_set_address_fifo_depth_msg
    UPD HdlOp@@EQ to EQ
        UPD HdlValueId@@axi_slave_set_address_channel_stall_probability_msg to axi_slave_set_data_stall_probability_msg
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@CALL to CALL
            UPD HdlOp@@DOT to DOT
                UPD HdlValueId@@set_address_channel_fifo_depth to set_address_fifo_depth
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@CALL to CALL
            UPD HdlOp@@DOT to DOT
                UPD HdlValueId@@set_address_channel_stall_probability to set_data_stall_probability


CommitId: be0d967e83ae9b21420c891c9b9216fde793f1b8
Fixing timeout issue when sending to multiple receivers
--- a/vunit/vhdl/com/src/com.vhd
+++ b/vunit/vhdl/com/src/com.vhd
@@ -516,18 +516,20 @@ package body com_pkg is
     variable msg       : inout msg_t;
     constant timeout   : in    time := max_timeout_c) is
     variable msg_to_send : msg_t;
+    variable t_start : time;
   begin
     if receivers'length = 0 then
       delete(msg);
       return;
     end if;
 
+    t_start := now;
     for i in receivers'range loop
       if i = receivers'right then
-        send(net, receivers(i), msg);
+        send(net, receivers(i), msg, timeout - (now - t_start));
       else
         msg_to_send := copy(msg);
-        send(net, receivers(i), msg_to_send);
+        send(net, receivers(i), msg_to_send, timeout - (now - t_start));
       end if;
     end loop;
   end;
ParseResult:
INS HdlIdDef@@t_start to body
HdlIdDef: t_start
    HdlValueId: time
    HdlDirection: INTERNAL

INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: now
    HdlValueId: t_start

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@CALL to CALL
            INS HdlOp@@SUB to ops
            HdlOp: SUB
                list: ops
                    HdlValueId: timeout
                    HdlOp: SUB
                        list: ops
                            HdlValueId: now
                            HdlValueId: t_start
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@CALL to CALL
            INS HdlOp@@SUB to ops
            HdlOp: SUB
                list: ops
                    HdlValueId: timeout
                    HdlOp: SUB
                        list: ops
                            HdlValueId: now
                            HdlValueId: t_start


CommitId: 3528e7aa1d1ff83f1bdd0506b4a2f98aa84bec1a
Merge pull request #467 from dbhi/fix-ghdl-e
--- a/vunit/vhdl/data_types/src/integer_vector_ptr_pkg-body-93.vhd
+++ b/vunit/vhdl/data_types/src/integer_vector_ptr_pkg-body-93.vhd
@@ -58,7 +58,6 @@ package body integer_vector_ptr_pkg is
   end function;
 
   procedure reallocate(ptr : integer_vector_ptr_t; length : natural; value : integer := 0) is
-    variable old_ptr, new_ptr : integer_vector_access_t;
   begin
     deallocate(ptrs(ptr.index));
     ptrs(ptr.index) := new integer_vector'(0 to length - 1 => value);

ParseResult:
DEL HdlIdDef@@old_ptr from body
HdlIdDef: old_ptr
    HdlValueId: integer_vector_access_t
    HdlDirection: INTERNAL

DEL HdlIdDef@@new_ptr from body
HdlIdDef: new_ptr
    HdlValueId: integer_vector_access_t
    HdlDirection: INTERNAL


CommitId: 84109e778c3b562d1745ea30339a19cd24d1d9e1
Default check logger is named check again
--- a/vunit/vhdl/check/src/checker_pkg.vhd
+++ b/vunit/vhdl/check/src/checker_pkg.vhd
@@ -20,7 +20,6 @@ package checker_pkg is
                               default_log_level : log_level_t := error) return checker_t;
   impure function new_checker(logger            : logger_t;
                               default_log_level : log_level_t := error) return checker_t;
-  impure function new_checker(default_log_level : log_level_t := error) return checker_t;
 
   impure function get_logger(checker            : checker_t) return logger_t;
   impure function get_default_log_level(checker : checker_t) return log_level_t;
ParseResult:
DEL HdlFunctionDef@@new_checker from objs
HdlFunctionDef: new_checker
    HdlValueId: checker_t
    list: params
        HdlIdDef: default_log_level
            HdlValueId: log_level_t
            HdlValueId: error
            HdlDirection: IN
    list: body


CommitId: 3646fec05aeb97ecba35f301c6ac665b2c1e5bd4
Set stop level only for warning, error, failure
--- a/vunit/vhdl/run/src/run.vhd
+++ b/vunit/vhdl/run/src/run.vhd
@@ -44,8 +44,6 @@ package body run_pkg is
     end if;
 
     if not active_python_runner(runner_cfg) then
-      set_stop_level(error);
-    else
       set_stop_level(failure);
     end if;
 

ParseResult:
UPD HdlStmIf@@ to 
    MOV list@@elifs to 
    list: elifs
    DEL HdlStmBlock@@SEQ from 
    HdlStmBlock: SEQ
        list: body
            HdlOp: CALL
                list: ops
                    HdlValueId: set_stop_level
                    HdlValueId: error


CommitId: 3646fec05aeb97ecba35f301c6ac665b2c1e5bd4
Set stop level only for warning, error, failure
--- a/vunit/vhdl/run/src/run.vhd
+++ b/vunit/vhdl/run/src/run.vhd
@@ -117,7 +115,7 @@ package body run_pkg is
           return false;
         end if;
 
-        for level in error to standard_log_level_t'high loop
+        for level in error to alert_log_level_t'high loop
           if is_valid(level) then
             count := get_log_count(child, level);
             if count > 0 then
ParseResult:
UPD HdlStmForIn@@ to 
    UPD HdlOp@@TO to TO
        UPD HdlOp@@APOSTROPHE to APOSTROPHE
            UPD HdlValueId@@standard_log_level_t to alert_log_level_t


CommitId: bcdabe4ae13e5e49614f9572232f97c516ca261d
Fix "prefix of array attribute must be an object name"
--- a/vunit/vhdl/data_types/src/codec.vhd
+++ b/vunit/vhdl/data_types/src/codec.vhd
@@ -517,7 +517,8 @@ package body codec_pkg is
   function decode (
     constant code : string)
     return string is
-    variable ret_val : string(get_range(code)'range) := (others => NUL);
+    constant ret_range : range_t := get_range(code);
+    variable ret_val : string(ret_range'range) := (others => NUL);
     variable index   : positive := code'left;
   begin
     decode(code, index, ret_val);

ParseResult:
INS HdlIdDef@@ret_range to body

UPD HdlIdDef@@ret_range to ret_range
    INS HdlValueId@@range_t to ret_range
    INS HdlDirection@@INTERNAL to ret_range

UPD HdlIdDef@@ret_val to ret_val
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@APOSTROPHE to APOSTROPHE
            MOV HdlOp@@INDEX to ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: get_range
                    HdlValueId: code

UPD HdlIdDef@@ret_val to ret_val
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@APOSTROPHE to APOSTROPHE
            INS HdlValueId@@ret_range to ops


CommitId: bcdabe4ae13e5e49614f9572232f97c516ca261d
Fix "prefix of array attribute must be an object name"
--- a/vunit/vhdl/data_types/src/codec.vhd
+++ b/vunit/vhdl/data_types/src/codec.vhd
@@ -542,7 +543,8 @@ package body codec_pkg is
   function decode (
     constant code : string)
     return bit_vector is
-    variable ret_val : bit_vector(get_range(code)'range) := (others => '0');
+    constant ret_range : range_t := get_range(code);
+    variable ret_val : bit_vector(ret_range'range) := (others => '0');
     variable index   : positive := code'left;
   begin
     decode(code, index, ret_val);

ParseResult:
INS HdlIdDef@@ret_range to body

UPD HdlIdDef@@ret_range to ret_range
    INS HdlValueId@@range_t to ret_range
    INS HdlDirection@@INTERNAL to ret_range

UPD HdlIdDef@@ret_val to ret_val
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@APOSTROPHE to APOSTROPHE
            MOV HdlOp@@INDEX to ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: get_range
                    HdlValueId: code

UPD HdlIdDef@@ret_val to ret_val
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@APOSTROPHE to APOSTROPHE
            INS HdlValueId@@ret_range to ops


CommitId: bcdabe4ae13e5e49614f9572232f97c516ca261d
Fix "prefix of array attribute must be an object name"
--- a/vunit/vhdl/data_types/src/codec.vhd
+++ b/vunit/vhdl/data_types/src/codec.vhd
@@ -560,7 +562,8 @@ package body codec_pkg is
   function decode (
     constant code : string)
     return std_ulogic_vector is
-    variable ret_val : std_ulogic_vector(get_range(code)'range) := (others => 'U');
+    constant ret_range : range_t := get_range(code);
+    variable ret_val : std_ulogic_vector(ret_range'range) := (others => 'U');
     variable index   : positive := code'left;
   begin
     decode(code, index, ret_val);

ParseResult:
INS HdlIdDef@@ret_range to body

UPD HdlIdDef@@ret_range to ret_range
    INS HdlValueId@@range_t to ret_range
    INS HdlDirection@@INTERNAL to ret_range

UPD HdlIdDef@@ret_val to ret_val
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@APOSTROPHE to APOSTROPHE
            MOV HdlOp@@INDEX to ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: get_range
                    HdlValueId: code

UPD HdlIdDef@@ret_val to ret_val
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@APOSTROPHE to APOSTROPHE
            INS HdlValueId@@ret_range to ops


CommitId: bcdabe4ae13e5e49614f9572232f97c516ca261d
Fix "prefix of array attribute must be an object name"
--- a/vunit/vhdl/data_types/src/codec.vhd
+++ b/vunit/vhdl/data_types/src/codec.vhd
@@ -614,7 +617,8 @@ package body codec_pkg is
   function decode (
     constant code : string)
     return ieee.numeric_bit.unsigned is
-    variable ret_val : ieee.numeric_bit.unsigned(get_range(code)'range) := (others => '0');
+    constant ret_range : range_t := get_range(code);
+    variable ret_val : ieee.numeric_bit.unsigned(ret_range'range) := (others => '0');
     variable index   : positive := code'left;
   begin
     decode(code, index, ret_val);

ParseResult:
INS HdlIdDef@@ret_range to body

UPD HdlIdDef@@ret_range to ret_range
    INS HdlValueId@@range_t to ret_range
    INS HdlDirection@@INTERNAL to ret_range

UPD HdlIdDef@@ret_val to ret_val
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@APOSTROPHE to APOSTROPHE
            MOV HdlOp@@INDEX to ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: get_range
                    HdlValueId: code


CommitId: bcdabe4ae13e5e49614f9572232f97c516ca261d
Fix "prefix of array attribute must be an object name"
--- a/vunit/vhdl/data_types/src/codec.vhd
+++ b/vunit/vhdl/data_types/src/codec.vhd
@@ -632,7 +636,8 @@ package body codec_pkg is
   function decode (
     constant code : string)
     return ieee.numeric_bit.signed is
-    variable ret_val : ieee.numeric_bit.signed(get_range(code)'range) := (others => '0');
+    constant ret_range : range_t := get_range(code);
+    variable ret_val : ieee.numeric_bit.signed(ret_range'range) := (others => '0');
     variable index   : positive := code'left;
   begin
     decode(code, index, ret_val);

ParseResult:
INS HdlIdDef@@ret_range to body

UPD HdlIdDef@@ret_val to ret_val
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@APOSTROPHE to APOSTROPHE
            MOV HdlOp@@INDEX to ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: get_range
                    HdlValueId: code


CommitId: bcdabe4ae13e5e49614f9572232f97c516ca261d
Fix "prefix of array attribute must be an object name"
--- a/vunit/vhdl/data_types/src/codec.vhd
+++ b/vunit/vhdl/data_types/src/codec.vhd
@@ -650,7 +655,8 @@ package body codec_pkg is
   function decode (
     constant code : string)
     return ieee.numeric_std.unsigned is
-    variable ret_val : ieee.numeric_std.unsigned(get_range(code)'range) := (others => 'U');
+    constant ret_range : range_t := get_range(code);
+    variable ret_val : ieee.numeric_std.unsigned(ret_range'range) := (others => 'U');
     variable index   : positive := code'left;
   begin
     decode(code, index, ret_val);

ParseResult:
INS HdlIdDef@@ret_range to body

UPD HdlIdDef@@ret_val to ret_val
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@APOSTROPHE to APOSTROPHE
            MOV HdlOp@@INDEX to ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: get_range
                    HdlValueId: code


CommitId: bcdabe4ae13e5e49614f9572232f97c516ca261d
Fix "prefix of array attribute must be an object name"
--- a/vunit/vhdl/data_types/src/codec.vhd
+++ b/vunit/vhdl/data_types/src/codec.vhd
@@ -668,7 +674,8 @@ package body codec_pkg is
   function decode (
     constant code : string)
     return ieee.numeric_std.signed is
-    variable ret_val : ieee.numeric_std.signed(get_range(code)'range) := (others => 'U');
+    constant ret_range : range_t := get_range(code);
+    variable ret_val : ieee.numeric_std.signed(ret_range'range) := (others => 'U');
     variable index   : positive := code'left;
   begin
     decode(code, index, ret_val);
ParseResult:
INS HdlIdDef@@ret_range to body

UPD HdlIdDef@@ret_val to ret_val
    UPD HdlOp@@INDEX to INDEX
        UPD HdlOp@@APOSTROPHE to APOSTROPHE
            MOV HdlOp@@INDEX to ops
            HdlOp: INDEX
                list: ops
                    HdlValueId: get_range
                    HdlValueId: code


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -26,7 +26,7 @@ package check_pkg is
   impure function get_checker_stat return checker_stat_t;
   procedure reset_checker_stat;
 
-  constant check_result_tag_c : string    := "<+/->";
+  constant check_result_tag : string    := "<+/->";
   function result (msg : string := "") return string;
 
   type edge_t is (rising_edge, falling_edge, both_edges);

ParseResult:
INS HdlIdDef@@check_result_tag to objs
HdlIdDef: check_result_tag
    HdlValueId: string
    HdlDirection: INTERNAL

DEL HdlIdDef@@check_result_tag_c from objs
HdlIdDef: check_result_tag_c
    HdlValueId: string
    HdlDirection: INTERNAL


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -40,7 +40,7 @@ package check_pkg is
     signal clock               : in std_logic;
     signal en                  : in std_logic;
     signal expr                : in std_logic;
-    constant msg               : in string      := check_result_tag_c & ".";
+    constant msg               : in string      := check_result_tag & ".";
     constant level             : in log_level_t := null_log_level;
     constant active_clock_edge : in edge_t      := rising_edge;
     constant line_num          : in natural     := 0;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -50,7 +50,7 @@ package check_pkg is
     constant checker   : in  checker_t;
     variable pass      : out boolean;
     constant expr      : in  boolean;
-    constant msg       : in  string      := check_result_tag_c & ".";
+    constant msg       : in  string      := check_result_tag & ".";
     constant level     : in  log_level_t := null_log_level;
     constant line_num  : in  natural     := 0;
     constant file_name : in  string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -58,14 +58,14 @@ package check_pkg is
   procedure check(
     constant checker   : in checker_t;
     constant expr      : in boolean;
-    constant msg       : in string      := check_result_tag_c & ".";
+    constant msg       : in string      := check_result_tag & ".";
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");
 
   procedure check(
     constant expr      : in boolean;
-    constant msg       : in string      := check_result_tag_c & ".";
+    constant msg       : in string      := check_result_tag & ".";
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag

UPD HdlIdDef@@msg to msg
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -73,14 +73,14 @@ package check_pkg is
   procedure check(
     variable pass      : out boolean;
     constant expr      : in  boolean;
-    constant msg       : in  string      := check_result_tag_c & ".";
+    constant msg       : in  string      := check_result_tag & ".";
     constant level     : in  log_level_t := null_log_level;
     constant line_num  : in  natural     := 0;
     constant file_name : in  string      := "");
 
   impure function check(
     constant expr      : in boolean;
-    constant msg       : in string      := check_result_tag_c & ".";
+    constant msg       : in string      := check_result_tag & ".";
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag

UPD HdlIdDef@@msg to msg
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -90,7 +90,7 @@ package check_pkg is
     signal clock               : in std_logic;
     signal en                  : in std_logic;
     signal expr                : in std_logic;
-    constant msg               : in string      := check_result_tag_c & ".";
+    constant msg               : in string      := check_result_tag & ".";
     constant level             : in log_level_t := null_log_level;
     constant active_clock_edge : in edge_t      := rising_edge;
     constant line_num          : in natural     := 0;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -99,7 +99,7 @@ package check_pkg is
   impure function check(
     constant checker   : in checker_t;
     constant expr      : in boolean;
-    constant msg       : in string      := check_result_tag_c & ".";
+    constant msg       : in string      := check_result_tag & ".";
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -110,12 +110,12 @@ package check_pkg is
   -----------------------------------------------------------------------------
   procedure check_passed(
     constant checker   : in checker_t;
-    constant msg       : in string  := check_result_tag_c & ".";
+    constant msg       : in string  := check_result_tag & ".";
     constant line_num  : in natural := 0;
     constant file_name : in string  := "");
 
   procedure check_passed(
-    constant msg       : in string  := check_result_tag_c & ".";
+    constant msg       : in string  := check_result_tag & ".";
     constant line_num  : in natural := 0;
     constant file_name : in string  := "");
 

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag

UPD HdlIdDef@@msg to msg
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -124,13 +124,13 @@ package check_pkg is
   -----------------------------------------------------------------------------
   procedure check_failed(
     constant checker   : in checker_t;
-    constant msg       : in string      := check_result_tag_c & ".";
+    constant msg       : in string      := check_result_tag & ".";
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");
 
   procedure check_failed(
-    constant msg       : in string      := check_result_tag_c & ".";
+    constant msg       : in string      := check_result_tag & ".";
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag

UPD HdlIdDef@@msg to msg
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -143,7 +143,7 @@ package check_pkg is
     signal clock               : in std_logic;
     signal en                  : in std_logic;
     signal expr                : in std_logic;
-    constant msg               : in string      := check_result_tag_c & ".";
+    constant msg               : in string      := check_result_tag & ".";
     constant level             : in log_level_t := null_log_level;
     constant active_clock_edge : in edge_t      := rising_edge;
     constant line_num          : in natural     := 0;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -153,7 +153,7 @@ package check_pkg is
     constant checker   : in  checker_t;
     variable pass      : out boolean;
     constant expr      : in  boolean;
-    constant msg       : in  string      := check_result_tag_c & ".";
+    constant msg       : in  string      := check_result_tag & ".";
     constant level     : in  log_level_t := null_log_level;
     constant line_num  : in  natural     := 0;
     constant file_name : in  string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -161,14 +161,14 @@ package check_pkg is
   procedure check_true(
     constant checker   : in checker_t;
     constant expr      : in boolean;
-    constant msg       : in string      := check_result_tag_c & ".";
+    constant msg       : in string      := check_result_tag & ".";
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");
 
   procedure check_true(
     constant expr      : in boolean;
-    constant msg       : in string      := check_result_tag_c & ".";
+    constant msg       : in string      := check_result_tag & ".";
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag

UPD HdlIdDef@@msg to msg
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -176,14 +176,14 @@ package check_pkg is
   procedure check_true(
     variable pass      : out boolean;
     constant expr      : in  boolean;
-    constant msg       : in  string      := check_result_tag_c & ".";
+    constant msg       : in  string      := check_result_tag & ".";
     constant level     : in  log_level_t := null_log_level;
     constant line_num  : in  natural     := 0;
     constant file_name : in  string      := "");
 
   impure function check_true(
     constant expr      : in boolean;
-    constant msg       : in string      := check_result_tag_c & ".";
+    constant msg       : in string      := check_result_tag & ".";
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag

UPD HdlIdDef@@msg to msg
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -193,7 +193,7 @@ package check_pkg is
     signal clock               : in std_logic;
     signal en                  : in std_logic;
     signal expr                : in std_logic;
-    constant msg               : in string      := check_result_tag_c & ".";
+    constant msg               : in string      := check_result_tag & ".";
     constant level             : in log_level_t := null_log_level;
     constant active_clock_edge : in edge_t      := rising_edge;
     constant line_num          : in natural     := 0;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -202,7 +202,7 @@ package check_pkg is
   impure function check_true(
     constant checker   : in checker_t;
     constant expr      : in boolean;
-    constant msg       : in string      := check_result_tag_c & ".";
+    constant msg       : in string      := check_result_tag & ".";
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -214,7 +214,7 @@ package check_pkg is
   procedure check_false(
     constant checker   : in checker_t;
     constant expr      : in boolean;
-    constant msg       : in string      := check_result_tag_c & ".";
+    constant msg       : in string      := check_result_tag & ".";
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -223,7 +223,7 @@ package check_pkg is
     constant checker   : in  checker_t;
     variable pass      : out boolean;
     constant expr      : in  boolean;
-    constant msg       : in  string      := check_result_tag_c & ".";
+    constant msg       : in  string      := check_result_tag & ".";
     constant level     : in  log_level_t := null_log_level;
     constant line_num  : in  natural     := 0;
     constant file_name : in  string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -233,7 +233,7 @@ package check_pkg is
     signal clock               : in std_logic;
     signal en                  : in std_logic;
     signal expr                : in std_logic;
-    constant msg               : in string      := check_result_tag_c & ".";
+    constant msg               : in string      := check_result_tag & ".";
     constant level             : in log_level_t := null_log_level;
     constant active_clock_edge : in edge_t      := rising_edge;
     constant line_num          : in natural     := 0;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -241,7 +241,7 @@ package check_pkg is
 
   procedure check_false(
     constant expr      : in boolean;
-    constant msg       : in string      := check_result_tag_c & ".";
+    constant msg       : in string      := check_result_tag & ".";
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -249,14 +249,14 @@ package check_pkg is
   procedure check_false(
     variable pass      : out boolean;
     constant expr      : in  boolean;
-    constant msg       : in  string      := check_result_tag_c & ".";
+    constant msg       : in  string      := check_result_tag & ".";
     constant level     : in  log_level_t := null_log_level;
     constant line_num  : in  natural     := 0;
     constant file_name : in  string      := "");
 
   impure function check_false(
     constant expr      : in boolean;
-    constant msg       : in string      := check_result_tag_c & ".";
+    constant msg       : in string      := check_result_tag & ".";
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag

UPD HdlIdDef@@msg to msg
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -266,7 +266,7 @@ package check_pkg is
     signal clock               : in std_logic;
     signal en                  : in std_logic;
     signal expr                : in std_logic;
-    constant msg               : in string      := check_result_tag_c & ".";
+    constant msg               : in string      := check_result_tag & ".";
     constant level             : in log_level_t := null_log_level;
     constant active_clock_edge : in edge_t      := rising_edge;
     constant line_num          : in natural     := 0;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -275,7 +275,7 @@ package check_pkg is
   impure function check_false(
     constant checker   : in checker_t;
     constant expr      : in boolean;
-    constant msg       : in string      := check_result_tag_c & ".";
+    constant msg       : in string      := check_result_tag & ".";
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -290,7 +290,7 @@ package check_pkg is
     signal en                  : in std_logic;
     signal antecedent_expr     : in std_logic;
     signal consequent_expr     : in std_logic;
-    constant msg               : in string      := check_result_tag_c & ".";
+    constant msg               : in string      := check_result_tag & ".";
     constant level             : in log_level_t := null_log_level;
     constant active_clock_edge : in edge_t      := rising_edge;
     constant line_num          : in natural     := 0;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -301,7 +301,7 @@ package check_pkg is
     signal en                  : in std_logic;
     signal antecedent_expr     : in std_logic;
     signal consequent_expr     : in std_logic;
-    constant msg               : in string      := check_result_tag_c & ".";
+    constant msg               : in string      := check_result_tag & ".";
     constant level             : in log_level_t := null_log_level;
     constant active_clock_edge : in edge_t      := rising_edge;
     constant line_num          : in natural     := 0;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -311,7 +311,7 @@ package check_pkg is
     constant checker         : in checker_t;
     constant antecedent_expr : in boolean;
     constant consequent_expr : in boolean;
-    constant msg             : in string      := check_result_tag_c & ".";
+    constant msg             : in string      := check_result_tag & ".";
     constant level           : in log_level_t := null_log_level;
     constant line_num        : in natural     := 0;
     constant file_name       : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -321,7 +321,7 @@ package check_pkg is
     variable pass            : out boolean;
     constant antecedent_expr : in  boolean;
     constant consequent_expr : in  boolean;
-    constant msg             : in  string      := check_result_tag_c & ".";
+    constant msg             : in  string      := check_result_tag & ".";
     constant level           : in  log_level_t := null_log_level;
     constant line_num        : in  natural     := 0;
     constant file_name       : in  string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -329,7 +329,7 @@ package check_pkg is
   procedure check_implication(
     constant antecedent_expr : in boolean;
     constant consequent_expr : in boolean;
-    constant msg             : in string      := check_result_tag_c & ".";
+    constant msg             : in string      := check_result_tag & ".";
     constant level           : in log_level_t := null_log_level;
     constant line_num        : in natural     := 0;
     constant file_name       : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -338,7 +338,7 @@ package check_pkg is
     variable pass            : out boolean;
     constant antecedent_expr : in  boolean;
     constant consequent_expr : in  boolean;
-    constant msg             : in  string      := check_result_tag_c & ".";
+    constant msg             : in  string      := check_result_tag & ".";
     constant level           : in  log_level_t := null_log_level;
     constant line_num        : in  natural     := 0;
     constant file_name       : in  string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -346,7 +346,7 @@ package check_pkg is
   impure function check_implication(
     constant antecedent_expr : in boolean;
     constant consequent_expr : in boolean;
-    constant msg             : in string      := check_result_tag_c & ".";
+    constant msg             : in string      := check_result_tag & ".";
     constant level           : in log_level_t := null_log_level;
     constant line_num        : in natural     := 0;
     constant file_name       : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -356,7 +356,7 @@ package check_pkg is
     constant checker         : in checker_t;
     constant antecedent_expr : in boolean;
     constant consequent_expr : in boolean;
-    constant msg             : in string      := check_result_tag_c & ".";
+    constant msg             : in string      := check_result_tag & ".";
     constant level           : in log_level_t := null_log_level;
     constant line_num        : in natural     := 0;
     constant file_name       : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlOp@@CONCAT to CONCAT
        UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -372,7 +372,7 @@ package check_pkg is
     signal start_event         : in std_logic;
     signal end_event           : in std_logic;
     signal expr                : in std_logic_vector;
-    constant msg               : in string      := check_result_tag_c;
+    constant msg               : in string      := check_result_tag;
     constant level             : in log_level_t := null_log_level;
     constant active_clock_edge : in edge_t      := rising_edge;
     constant allow_restart     : in boolean     := false;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -385,7 +385,7 @@ package check_pkg is
     signal start_event         : in std_logic;
     signal end_event           : in std_logic;
     signal expr                : in std_logic_vector;
-    constant msg               : in string      := check_result_tag_c;
+    constant msg               : in string      := check_result_tag;
     constant level             : in log_level_t := null_log_level;
     constant active_clock_edge : in edge_t      := rising_edge;
     constant allow_restart     : in boolean     := false;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -399,7 +399,7 @@ package check_pkg is
     signal start_event         : in std_logic;
     signal end_event           : in std_logic;
     signal expr                : in std_logic;
-    constant msg               : in string      := check_result_tag_c;
+    constant msg               : in string      := check_result_tag;
     constant level             : in log_level_t := null_log_level;
     constant active_clock_edge : in edge_t      := rising_edge;
     constant allow_restart     : in boolean     := false;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -412,7 +412,7 @@ package check_pkg is
     signal start_event         : in std_logic;
     signal end_event           : in std_logic;
     signal expr                : in std_logic;
-    constant msg               : in string      := check_result_tag_c;
+    constant msg               : in string      := check_result_tag;
     constant level             : in log_level_t := null_log_level;
     constant active_clock_edge : in edge_t      := rising_edge;
     constant allow_restart     : in boolean     := false;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -427,7 +427,7 @@ package check_pkg is
     signal clock               : in std_logic;
     signal en                  : in std_logic;
     signal expr                : in std_logic_vector;
-    constant msg               : in string      := check_result_tag_c;
+    constant msg               : in string      := check_result_tag;
     constant level             : in log_level_t := null_log_level;
     constant active_clock_edge : in edge_t      := rising_edge;
     constant line_num          : in natural     := 0;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -437,7 +437,7 @@ package check_pkg is
     signal clock               : in std_logic;
     signal en                  : in std_logic;
     signal expr                : in std_logic_vector;
-    constant msg               : in string      := check_result_tag_c;
+    constant msg               : in string      := check_result_tag;
     constant level             : in log_level_t := null_log_level;
     constant active_clock_edge : in edge_t      := rising_edge;
     constant line_num          : in natural     := 0;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -446,7 +446,7 @@ package check_pkg is
   procedure check_not_unknown(
     constant checker   : in checker_t;
     constant expr      : in std_logic_vector;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -455,14 +455,14 @@ package check_pkg is
     constant checker   : in  checker_t;
     variable pass      : out boolean;
     constant expr      : in  std_logic_vector;
-    constant msg       : in  string      := check_result_tag_c;
+    constant msg       : in  string      := check_result_tag;
     constant level     : in  log_level_t := null_log_level;
     constant line_num  : in  natural     := 0;
     constant file_name : in  string      := "");
 
   procedure check_not_unknown(
     constant expr      : in std_logic_vector;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag

UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -470,14 +470,14 @@ package check_pkg is
   procedure check_not_unknown(
     variable pass      : out boolean;
     constant expr      : in  std_logic_vector;
-    constant msg       : in  string      := check_result_tag_c;
+    constant msg       : in  string      := check_result_tag;
     constant level     : in  log_level_t := null_log_level;
     constant line_num  : in  natural     := 0;
     constant file_name : in  string      := "");
 
   impure function check_not_unknown(
     constant expr      : in std_logic_vector;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag

UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -486,7 +486,7 @@ package check_pkg is
   impure function check_not_unknown(
     constant checker   : in checker_t;
     constant expr      : in std_logic_vector;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -497,7 +497,7 @@ package check_pkg is
     signal clock               : in std_logic;
     signal en                  : in std_logic;
     signal expr                : in std_logic;
-    constant msg               : in string      := check_result_tag_c;
+    constant msg               : in string      := check_result_tag;
     constant level             : in log_level_t := null_log_level;
     constant active_clock_edge : in edge_t      := rising_edge;
     constant line_num          : in natural     := 0;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -507,7 +507,7 @@ package check_pkg is
     signal clock               : in std_logic;
     signal en                  : in std_logic;
     signal expr                : in std_logic;
-    constant msg               : in string      := check_result_tag_c;
+    constant msg               : in string      := check_result_tag;
     constant level             : in log_level_t := null_log_level;
     constant active_clock_edge : in edge_t      := rising_edge;
     constant line_num          : in natural     := 0;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -516,7 +516,7 @@ package check_pkg is
   procedure check_not_unknown(
     constant checker   : in checker_t;
     constant expr      : in std_logic;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -525,14 +525,14 @@ package check_pkg is
     constant checker   : in  checker_t;
     variable pass      : out boolean;
     constant expr      : in  std_logic;
-    constant msg       : in  string      := check_result_tag_c;
+    constant msg       : in  string      := check_result_tag;
     constant level     : in  log_level_t := null_log_level;
     constant line_num  : in  natural     := 0;
     constant file_name : in  string      := "");
 
   procedure check_not_unknown(
     constant expr      : in std_logic;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag

UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -540,14 +540,14 @@ package check_pkg is
   procedure check_not_unknown(
     variable pass      : out boolean;
     constant expr      : in  std_logic;
-    constant msg       : in  string      := check_result_tag_c;
+    constant msg       : in  string      := check_result_tag;
     constant level     : in  log_level_t := null_log_level;
     constant line_num  : in  natural     := 0;
     constant file_name : in  string      := "");
 
   impure function check_not_unknown(
     constant expr      : in std_logic;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag

UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -556,7 +556,7 @@ package check_pkg is
   impure function check_not_unknown(
     constant checker   : in checker_t;
     constant expr      : in std_logic;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -570,7 +570,7 @@ package check_pkg is
     signal clock               : in std_logic;
     signal en                  : in std_logic;
     signal expr                : in std_logic_vector;
-    constant msg               : in string      := check_result_tag_c;
+    constant msg               : in string      := check_result_tag;
     constant level             : in log_level_t := null_log_level;
     constant active_clock_edge : in edge_t      := rising_edge;
     constant line_num          : in natural     := 0;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -580,7 +580,7 @@ package check_pkg is
     signal clock               : in std_logic;
     signal en                  : in std_logic;
     signal expr                : in std_logic_vector;
-    constant msg               : in string      := check_result_tag_c;
+    constant msg               : in string      := check_result_tag;
     constant level             : in log_level_t := null_log_level;
     constant active_clock_edge : in edge_t      := rising_edge;
     constant line_num          : in natural     := 0;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -590,7 +590,7 @@ package check_pkg is
     constant checker   : in  checker_t;
     variable pass      : out boolean;
     constant expr      : in  std_logic_vector;
-    constant msg       : in  string      := check_result_tag_c;
+    constant msg       : in  string      := check_result_tag;
     constant level     : in  log_level_t := null_log_level;
     constant line_num  : in  natural     := 0;
     constant file_name : in  string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -598,14 +598,14 @@ package check_pkg is
   procedure check_zero_one_hot(
     variable pass      : out boolean;
     constant expr      : in  std_logic_vector;
-    constant msg       : in  string      := check_result_tag_c;
+    constant msg       : in  string      := check_result_tag;
     constant level     : in  log_level_t := null_log_level;
     constant line_num  : in  natural     := 0;
     constant file_name : in  string      := "");
 
   impure function check_zero_one_hot(
     constant expr      : in std_logic_vector;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag

UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -614,14 +614,14 @@ package check_pkg is
   procedure check_zero_one_hot(
     constant checker   : in checker_t;
     constant expr      : in std_logic_vector;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");
 
   procedure check_zero_one_hot(
     constant expr      : in std_logic_vector;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag

UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -629,7 +629,7 @@ package check_pkg is
   impure function check_zero_one_hot(
     constant checker   : in checker_t;
     constant expr      : in std_logic_vector;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -643,7 +643,7 @@ package check_pkg is
     signal clock               : in std_logic;
     signal en                  : in std_logic;
     signal expr                : in std_logic_vector;
-    constant msg               : in string      := check_result_tag_c;
+    constant msg               : in string      := check_result_tag;
     constant level             : in log_level_t := null_log_level;
     constant active_clock_edge : in edge_t      := rising_edge;
     constant line_num          : in natural     := 0;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -653,7 +653,7 @@ package check_pkg is
     signal clock               : in std_logic;
     signal en                  : in std_logic;
     signal expr                : in std_logic_vector;
-    constant msg               : in string      := check_result_tag_c;
+    constant msg               : in string      := check_result_tag;
     constant level             : in log_level_t := null_log_level;
     constant active_clock_edge : in edge_t      := rising_edge;
     constant line_num          : in natural     := 0;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -663,7 +663,7 @@ package check_pkg is
     constant checker   : in  checker_t;
     variable pass      : out boolean;
     constant expr      : in  std_logic_vector;
-    constant msg       : in  string      := check_result_tag_c;
+    constant msg       : in  string      := check_result_tag;
     constant level     : in  log_level_t := null_log_level;
     constant line_num  : in  natural     := 0;
     constant file_name : in  string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -671,14 +671,14 @@ package check_pkg is
   procedure check_one_hot(
     variable pass      : out boolean;
     constant expr      : in  std_logic_vector;
-    constant msg       : in  string      := check_result_tag_c;
+    constant msg       : in  string      := check_result_tag;
     constant level     : in  log_level_t := null_log_level;
     constant line_num  : in  natural     := 0;
     constant file_name : in  string      := "");
 
   impure function check_one_hot(
     constant expr      : in std_logic_vector;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag

UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -687,14 +687,14 @@ package check_pkg is
   procedure check_one_hot(
     constant checker   : in checker_t;
     constant expr      : in std_logic_vector;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");
 
   procedure check_one_hot(
     constant expr      : in std_logic_vector;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag

UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -702,7 +702,7 @@ package check_pkg is
   impure function check_one_hot(
     constant checker   : in checker_t;
     constant expr      : in std_logic_vector;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -717,7 +717,7 @@ package check_pkg is
     signal en                    : in std_logic;
     signal start_event           : in std_logic;
     signal expr                  : in std_logic;
-    constant msg                 : in string      := check_result_tag_c;
+    constant msg                 : in string      := check_result_tag;
     constant num_cks             : in natural     := 1;
     constant allow_overlapping   : in boolean     := true;
     constant allow_missing_start : in boolean     := true;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -731,7 +731,7 @@ package check_pkg is
     signal en                    : in std_logic;
     signal start_event           : in std_logic;
     signal expr                  : in std_logic;
-    constant msg                 : in string      := check_result_tag_c;
+    constant msg                 : in string      := check_result_tag;
     constant num_cks             : in natural     := 1;
     constant allow_overlapping   : in boolean     := true;
     constant allow_missing_start : in boolean     := true;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -748,7 +748,7 @@ package check_pkg is
     signal clock               : in std_logic;
     signal en                  : in std_logic;
     signal event_sequence      : in std_logic_vector;
-    constant msg               : in string          := check_result_tag_c;
+    constant msg               : in string          := check_result_tag;
     constant trigger_event     : in trigger_event_t := penultimate;
     constant level             : in log_level_t     := null_log_level;
     constant active_clock_edge : in edge_t          := rising_edge;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -759,7 +759,7 @@ package check_pkg is
     signal clock               : in std_logic;
     signal en                  : in std_logic;
     signal event_sequence      : in std_logic_vector;
-    constant msg               : in string          := check_result_tag_c;
+    constant msg               : in string          := check_result_tag;
     constant trigger_event     : in trigger_event_t := penultimate;
     constant level             : in log_level_t     := null_log_level;
     constant active_clock_edge : in edge_t          := rising_edge;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -772,7 +772,7 @@ package check_pkg is
   procedure check_relation(
     constant checker     : in checker_t;
     constant expr        : in boolean;
-    constant msg         : in string      := check_result_tag_c;
+    constant msg         : in string      := check_result_tag;
     constant level       : in log_level_t := null_log_level;
     constant context_msg : in string      := "";
     constant line_num    : in natural     := 0;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -782,7 +782,7 @@ package check_pkg is
     constant checker     : in  checker_t;
     variable pass        : out boolean;
     constant expr        : in  boolean;
-    constant msg         : in  string      := check_result_tag_c;
+    constant msg         : in  string      := check_result_tag;
     constant level       : in  log_level_t := null_log_level;
     constant context_msg : in  string      := "";
     constant line_num    : in  natural     := 0;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -790,7 +790,7 @@ package check_pkg is
 
   procedure check_relation(
     constant expr        : in boolean;
-    constant msg         : in string      := check_result_tag_c;
+    constant msg         : in string      := check_result_tag;
     constant level       : in log_level_t := null_log_level;
     constant context_msg : in string      := "";
     constant line_num    : in natural     := 0;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -799,7 +799,7 @@ package check_pkg is
   procedure check_relation(
     variable pass        : out boolean;
     constant expr        : in  boolean;
-    constant msg         : in  string      := check_result_tag_c;
+    constant msg         : in  string      := check_result_tag;
     constant level       : in  log_level_t := null_log_level;
     constant context_msg : in  string      := "";
     constant line_num    : in  natural     := 0;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -807,7 +807,7 @@ package check_pkg is
 
   impure function check_relation(
     constant expr        : in boolean;
-    constant msg         : in string      := check_result_tag_c;
+    constant msg         : in string      := check_result_tag;
     constant level       : in log_level_t := null_log_level;
     constant context_msg : in string      := "";
     constant line_num    : in natural     := 0;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -817,7 +817,7 @@ package check_pkg is
   impure function check_relation(
     constant checker     : in checker_t;
     constant expr        : in boolean;
-    constant msg         : in string      := check_result_tag_c;
+    constant msg         : in string      := check_result_tag;
     constant level       : in log_level_t := null_log_level;
     constant context_msg : in string      := "";
     constant line_num    : in natural     := 0;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -827,7 +827,7 @@ package check_pkg is
   procedure check_relation(
     constant checker     : in checker_t;
     constant expr        : in std_ulogic;
-    constant msg         : in string      := check_result_tag_c;
+    constant msg         : in string      := check_result_tag;
     constant level       : in log_level_t := null_log_level;
     constant context_msg : in string      := "";
     constant line_num    : in natural     := 0;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -837,7 +837,7 @@ package check_pkg is
     constant checker     : in  checker_t;
     variable pass        : out boolean;
     constant expr        : in  std_ulogic;
-    constant msg         : in  string      := check_result_tag_c;
+    constant msg         : in  string      := check_result_tag;
     constant level       : in  log_level_t := null_log_level;
     constant context_msg : in  string      := "";
     constant line_num    : in  natural     := 0;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -845,7 +845,7 @@ package check_pkg is
 
   procedure check_relation(
     constant expr        : in std_ulogic;
-    constant msg         : in string      := check_result_tag_c;
+    constant msg         : in string      := check_result_tag;
     constant level       : in log_level_t := null_log_level;
     constant context_msg : in string      := "";
     constant line_num    : in natural     := 0;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -854,7 +854,7 @@ package check_pkg is
   procedure check_relation(
     variable pass        : out boolean;
     constant expr        : in  std_ulogic;
-    constant msg         : in  string      := check_result_tag_c;
+    constant msg         : in  string      := check_result_tag;
     constant level       : in  log_level_t := null_log_level;
     constant context_msg : in  string      := "";
     constant line_num    : in  natural     := 0;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -862,7 +862,7 @@ package check_pkg is
 
   impure function check_relation(
     constant expr        : in std_ulogic;
-    constant msg         : in string      := check_result_tag_c;
+    constant msg         : in string      := check_result_tag;
     constant level       : in log_level_t := null_log_level;
     constant context_msg : in string      := "";
     constant line_num    : in natural     := 0;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -872,7 +872,7 @@ package check_pkg is
   impure function check_relation(
     constant checker     : in checker_t;
     constant expr        : in std_ulogic;
-    constant msg         : in string      := check_result_tag_c;
+    constant msg         : in string      := check_result_tag;
     constant level       : in log_level_t := null_log_level;
     constant context_msg : in string      := "";
     constant line_num    : in natural     := 0;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -882,7 +882,7 @@ package check_pkg is
   procedure check_relation(
     constant checker     : in checker_t;
     constant expr        : in bit;
-    constant msg         : in string      := check_result_tag_c;
+    constant msg         : in string      := check_result_tag;
     constant level       : in log_level_t := null_log_level;
     constant context_msg : in string      := "";
     constant line_num    : in natural     := 0;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -892,7 +892,7 @@ package check_pkg is
     constant checker     : in  checker_t;
     variable pass        : out boolean;
     constant expr        : in  bit;
-    constant msg         : in  string      := check_result_tag_c;
+    constant msg         : in  string      := check_result_tag;
     constant level       : in  log_level_t := null_log_level;
     constant context_msg : in  string      := "";
     constant line_num    : in  natural     := 0;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -900,7 +900,7 @@ package check_pkg is
 
   procedure check_relation(
     constant expr        : in bit;
-    constant msg         : in string      := check_result_tag_c;
+    constant msg         : in string      := check_result_tag;
     constant level       : in log_level_t := null_log_level;
     constant context_msg : in string      := "";
     constant line_num    : in natural     := 0;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -909,7 +909,7 @@ package check_pkg is
   procedure check_relation(
     variable pass        : out boolean;
     constant expr        : in  bit;
-    constant msg         : in  string      := check_result_tag_c;
+    constant msg         : in  string      := check_result_tag;
     constant level       : in  log_level_t := null_log_level;
     constant context_msg : in  string      := "";
     constant line_num    : in  natural     := 0;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -917,7 +917,7 @@ package check_pkg is
 
   impure function check_relation(
     constant expr        : in bit;
-    constant msg         : in string      := check_result_tag_c;
+    constant msg         : in string      := check_result_tag;
     constant level       : in log_level_t := null_log_level;
     constant context_msg : in string      := "";
     constant line_num    : in natural     := 0;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -927,7 +927,7 @@ package check_pkg is
   impure function check_relation(
     constant checker     : in  checker_t;
     constant expr        : in bit;
-    constant msg         : in string      := check_result_tag_c;
+    constant msg         : in string      := check_result_tag;
     constant level       : in log_level_t := null_log_level;
     constant context_msg : in string      := "";
     constant line_num    : in natural     := 0;

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -940,7 +940,7 @@ package check_pkg is
   procedure check_equal(
     constant got       : in unsigned;
     constant expected  : in unsigned;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -949,7 +949,7 @@ package check_pkg is
     variable pass      : out boolean;
     constant got       : in unsigned;
     constant expected  : in unsigned;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -959,7 +959,7 @@ package check_pkg is
     variable pass      : out boolean;
     constant got       : in unsigned;
     constant expected  : in unsigned;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -968,7 +968,7 @@ package check_pkg is
     constant checker   : in checker_t;
     constant got       : in unsigned;
     constant expected  : in unsigned;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -976,7 +976,7 @@ package check_pkg is
   impure function check_equal(
     constant got       : in unsigned;
     constant expected  : in unsigned;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -986,7 +986,7 @@ package check_pkg is
     constant checker   : in checker_t;
     constant got       : in unsigned;
     constant expected  : in unsigned;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -995,7 +995,7 @@ package check_pkg is
   procedure check_equal(
     constant got       : in unsigned;
     constant expected  : in natural;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1004,7 +1004,7 @@ package check_pkg is
     variable pass      : out boolean;
     constant got       : in unsigned;
     constant expected  : in natural;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1014,7 +1014,7 @@ package check_pkg is
     variable pass      : out boolean;
     constant got       : in unsigned;
     constant expected  : in natural;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1023,7 +1023,7 @@ package check_pkg is
     constant checker   : in checker_t;
     constant got       : in unsigned;
     constant expected  : in natural;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1031,7 +1031,7 @@ package check_pkg is
   impure function check_equal(
     constant got       : in unsigned;
     constant expected  : in natural;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1041,7 +1041,7 @@ package check_pkg is
     constant checker   : in checker_t;
     constant got       : in unsigned;
     constant expected  : in natural;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1050,7 +1050,7 @@ package check_pkg is
   procedure check_equal(
     constant got       : in natural;
     constant expected  : in unsigned;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1059,7 +1059,7 @@ package check_pkg is
     variable pass      : out boolean;
     constant got       : in natural;
     constant expected  : in unsigned;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1069,7 +1069,7 @@ package check_pkg is
     variable pass      : out boolean;
     constant got       : in natural;
     constant expected  : in unsigned;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1078,7 +1078,7 @@ package check_pkg is
     constant checker   : in checker_t;
     constant got       : in natural;
     constant expected  : in unsigned;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1086,7 +1086,7 @@ package check_pkg is
   impure function check_equal(
     constant got       : in natural;
     constant expected  : in unsigned;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1096,7 +1096,7 @@ package check_pkg is
     constant checker   : in checker_t;
     constant got       : in natural;
     constant expected  : in unsigned;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1105,7 +1105,7 @@ package check_pkg is
   procedure check_equal(
     constant got       : in unsigned;
     constant expected  : in std_logic_vector;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1114,7 +1114,7 @@ package check_pkg is
     variable pass      : out boolean;
     constant got       : in unsigned;
     constant expected  : in std_logic_vector;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1124,7 +1124,7 @@ package check_pkg is
     variable pass      : out boolean;
     constant got       : in unsigned;
     constant expected  : in std_logic_vector;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1133,7 +1133,7 @@ package check_pkg is
     constant checker   : in checker_t;
     constant got       : in unsigned;
     constant expected  : in std_logic_vector;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1141,7 +1141,7 @@ package check_pkg is
   impure function check_equal(
     constant got       : in unsigned;
     constant expected  : in std_logic_vector;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1151,7 +1151,7 @@ package check_pkg is
     constant checker   : in checker_t;
     constant got       : in unsigned;
     constant expected  : in std_logic_vector;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1160,7 +1160,7 @@ package check_pkg is
   procedure check_equal(
     constant got       : in std_logic_vector;
     constant expected  : in unsigned;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1169,7 +1169,7 @@ package check_pkg is
     variable pass      : out boolean;
     constant got       : in std_logic_vector;
     constant expected  : in unsigned;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1179,7 +1179,7 @@ package check_pkg is
     variable pass      : out boolean;
     constant got       : in std_logic_vector;
     constant expected  : in unsigned;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1188,7 +1188,7 @@ package check_pkg is
     constant checker   : in checker_t;
     constant got       : in std_logic_vector;
     constant expected  : in unsigned;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1196,7 +1196,7 @@ package check_pkg is
   impure function check_equal(
     constant got       : in std_logic_vector;
     constant expected  : in unsigned;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1206,7 +1206,7 @@ package check_pkg is
     constant checker   : in checker_t;
     constant got       : in std_logic_vector;
     constant expected  : in unsigned;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1215,7 +1215,7 @@ package check_pkg is
   procedure check_equal(
     constant got       : in std_logic_vector;
     constant expected  : in std_logic_vector;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1224,7 +1224,7 @@ package check_pkg is
     variable pass      : out boolean;
     constant got       : in std_logic_vector;
     constant expected  : in std_logic_vector;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1234,7 +1234,7 @@ package check_pkg is
     variable pass      : out boolean;
     constant got       : in std_logic_vector;
     constant expected  : in std_logic_vector;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1243,7 +1243,7 @@ package check_pkg is
     constant checker   : in checker_t;
     constant got       : in std_logic_vector;
     constant expected  : in std_logic_vector;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1251,7 +1251,7 @@ package check_pkg is
   impure function check_equal(
     constant got       : in std_logic_vector;
     constant expected  : in std_logic_vector;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1261,7 +1261,7 @@ package check_pkg is
     constant checker   : in checker_t;
     constant got       : in std_logic_vector;
     constant expected  : in std_logic_vector;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1270,7 +1270,7 @@ package check_pkg is
   procedure check_equal(
     constant got       : in std_logic_vector;
     constant expected  : in natural;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1279,7 +1279,7 @@ package check_pkg is
     variable pass      : out boolean;
     constant got       : in std_logic_vector;
     constant expected  : in natural;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1289,7 +1289,7 @@ package check_pkg is
     variable pass      : out boolean;
     constant got       : in std_logic_vector;
     constant expected  : in natural;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1298,7 +1298,7 @@ package check_pkg is
     constant checker   : in checker_t;
     constant got       : in std_logic_vector;
     constant expected  : in natural;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1306,7 +1306,7 @@ package check_pkg is
   impure function check_equal(
     constant got       : in std_logic_vector;
     constant expected  : in natural;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1316,7 +1316,7 @@ package check_pkg is
     constant checker   : in checker_t;
     constant got       : in std_logic_vector;
     constant expected  : in natural;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1325,7 +1325,7 @@ package check_pkg is
   procedure check_equal(
     constant got       : in natural;
     constant expected  : in std_logic_vector;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1334,7 +1334,7 @@ package check_pkg is
     variable pass      : out boolean;
     constant got       : in natural;
     constant expected  : in std_logic_vector;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1344,7 +1344,7 @@ package check_pkg is
     variable pass      : out boolean;
     constant got       : in natural;
     constant expected  : in std_logic_vector;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1353,7 +1353,7 @@ package check_pkg is
     constant checker   : in checker_t;
     constant got       : in natural;
     constant expected  : in std_logic_vector;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1361,7 +1361,7 @@ package check_pkg is
   impure function check_equal(
     constant got       : in natural;
     constant expected  : in std_logic_vector;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1371,7 +1371,7 @@ package check_pkg is
     constant checker   : in checker_t;
     constant got       : in natural;
     constant expected  : in std_logic_vector;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1380,7 +1380,7 @@ package check_pkg is
   procedure check_equal(
     constant got       : in signed;
     constant expected  : in signed;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1389,7 +1389,7 @@ package check_pkg is
     variable pass      : out boolean;
     constant got       : in signed;
     constant expected  : in signed;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1399,7 +1399,7 @@ package check_pkg is
     variable pass      : out boolean;
     constant got       : in signed;
     constant expected  : in signed;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1408,7 +1408,7 @@ package check_pkg is
     constant checker   : in checker_t;
     constant got       : in signed;
     constant expected  : in signed;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1416,7 +1416,7 @@ package check_pkg is
   impure function check_equal(
     constant got       : in signed;
     constant expected  : in signed;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1426,7 +1426,7 @@ package check_pkg is
     constant checker   : in checker_t;
     constant got       : in signed;
     constant expected  : in signed;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1435,7 +1435,7 @@ package check_pkg is
   procedure check_equal(
     constant got       : in signed;
     constant expected  : in integer;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1444,7 +1444,7 @@ package check_pkg is
     variable pass      : out boolean;
     constant got       : in signed;
     constant expected  : in integer;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1454,7 +1454,7 @@ package check_pkg is
     variable pass      : out boolean;
     constant got       : in signed;
     constant expected  : in integer;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1463,7 +1463,7 @@ package check_pkg is
     constant checker   : in checker_t;
     constant got       : in signed;
     constant expected  : in integer;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1471,7 +1471,7 @@ package check_pkg is
   impure function check_equal(
     constant got       : in signed;
     constant expected  : in integer;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1481,7 +1481,7 @@ package check_pkg is
     constant checker   : in checker_t;
     constant got       : in signed;
     constant expected  : in integer;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1490,7 +1490,7 @@ package check_pkg is
   procedure check_equal(
     constant got       : in integer;
     constant expected  : in signed;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1499,7 +1499,7 @@ package check_pkg is
     variable pass      : out boolean;
     constant got       : in integer;
     constant expected  : in signed;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1509,7 +1509,7 @@ package check_pkg is
     variable pass      : out boolean;
     constant got       : in integer;
     constant expected  : in signed;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1518,7 +1518,7 @@ package check_pkg is
     constant checker   : in checker_t;
     constant got       : in integer;
     constant expected  : in signed;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1526,7 +1526,7 @@ package check_pkg is
   impure function check_equal(
     constant got       : in integer;
     constant expected  : in signed;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1536,7 +1536,7 @@ package check_pkg is
     constant checker   : in checker_t;
     constant got       : in integer;
     constant expected  : in signed;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1545,7 +1545,7 @@ package check_pkg is
   procedure check_equal(
     constant got       : in integer;
     constant expected  : in integer;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1554,7 +1554,7 @@ package check_pkg is
     variable pass      : out boolean;
     constant got       : in integer;
     constant expected  : in integer;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1564,7 +1564,7 @@ package check_pkg is
     variable pass      : out boolean;
     constant got       : in integer;
     constant expected  : in integer;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1573,7 +1573,7 @@ package check_pkg is
     constant checker   : in checker_t;
     constant got       : in integer;
     constant expected  : in integer;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1581,7 +1581,7 @@ package check_pkg is
   impure function check_equal(
     constant got       : in integer;
     constant expected  : in integer;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1591,7 +1591,7 @@ package check_pkg is
     constant checker   : in checker_t;
     constant got       : in integer;
     constant expected  : in integer;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1600,7 +1600,7 @@ package check_pkg is
   procedure check_equal(
     constant got       : in std_logic;
     constant expected  : in std_logic;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1609,7 +1609,7 @@ package check_pkg is
     variable pass      : out boolean;
     constant got       : in std_logic;
     constant expected  : in std_logic;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1619,7 +1619,7 @@ package check_pkg is
     variable pass      : out boolean;
     constant got       : in std_logic;
     constant expected  : in std_logic;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1628,7 +1628,7 @@ package check_pkg is
     constant checker   : in checker_t;
     constant got       : in std_logic;
     constant expected  : in std_logic;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1636,7 +1636,7 @@ package check_pkg is
   impure function check_equal(
     constant got       : in std_logic;
     constant expected  : in std_logic;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1646,7 +1646,7 @@ package check_pkg is
     constant checker   : in checker_t;
     constant got       : in std_logic;
     constant expected  : in std_logic;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1655,7 +1655,7 @@ package check_pkg is
   procedure check_equal(
     constant got       : in std_logic;
     constant expected  : in boolean;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1664,7 +1664,7 @@ package check_pkg is
     variable pass      : out boolean;
     constant got       : in std_logic;
     constant expected  : in boolean;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1674,7 +1674,7 @@ package check_pkg is
     variable pass      : out boolean;
     constant got       : in std_logic;
     constant expected  : in boolean;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1683,7 +1683,7 @@ package check_pkg is
     constant checker   : in checker_t;
     constant got       : in std_logic;
     constant expected  : in boolean;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1691,7 +1691,7 @@ package check_pkg is
   impure function check_equal(
     constant got       : in std_logic;
     constant expected  : in boolean;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1701,7 +1701,7 @@ package check_pkg is
     constant checker   : in checker_t;
     constant got       : in std_logic;
     constant expected  : in boolean;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1710,7 +1710,7 @@ package check_pkg is
   procedure check_equal(
     constant got       : in boolean;
     constant expected  : in std_logic;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1719,7 +1719,7 @@ package check_pkg is
     variable pass      : out boolean;
     constant got       : in boolean;
     constant expected  : in std_logic;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1729,7 +1729,7 @@ package check_pkg is
     variable pass      : out boolean;
     constant got       : in boolean;
     constant expected  : in std_logic;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1738,7 +1738,7 @@ package check_pkg is
     constant checker   : in checker_t;
     constant got       : in boolean;
     constant expected  : in std_logic;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1746,7 +1746,7 @@ package check_pkg is
   impure function check_equal(
     constant got       : in boolean;
     constant expected  : in std_logic;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1756,7 +1756,7 @@ package check_pkg is
     constant checker   : in checker_t;
     constant got       : in boolean;
     constant expected  : in std_logic;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1765,7 +1765,7 @@ package check_pkg is
   procedure check_equal(
     constant got       : in boolean;
     constant expected  : in boolean;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1774,7 +1774,7 @@ package check_pkg is
     variable pass      : out boolean;
     constant got       : in boolean;
     constant expected  : in boolean;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1784,7 +1784,7 @@ package check_pkg is
     variable pass      : out boolean;
     constant got       : in boolean;
     constant expected  : in boolean;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1793,7 +1793,7 @@ package check_pkg is
     constant checker   : in checker_t;
     constant got       : in boolean;
     constant expected  : in boolean;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1801,7 +1801,7 @@ package check_pkg is
   impure function check_equal(
     constant got       : in boolean;
     constant expected  : in boolean;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1811,7 +1811,7 @@ package check_pkg is
     constant checker   : in checker_t;
     constant got       : in boolean;
     constant expected  : in boolean;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1820,7 +1820,7 @@ package check_pkg is
   procedure check_equal(
     constant got       : in string;
     constant expected  : in string;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1829,7 +1829,7 @@ package check_pkg is
     variable pass      : out boolean;
     constant got       : in string;
     constant expected  : in string;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1839,7 +1839,7 @@ package check_pkg is
     variable pass      : out boolean;
     constant got       : in string;
     constant expected  : in string;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1848,7 +1848,7 @@ package check_pkg is
     constant checker   : in checker_t;
     constant got       : in string;
     constant expected  : in string;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1856,7 +1856,7 @@ package check_pkg is
   impure function check_equal(
     constant got       : in string;
     constant expected  : in string;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1866,7 +1866,7 @@ package check_pkg is
     constant checker   : in checker_t;
     constant got       : in string;
     constant expected  : in string;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1875,7 +1875,7 @@ package check_pkg is
   procedure check_equal(
     constant got       : in time;
     constant expected  : in time;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1884,7 +1884,7 @@ package check_pkg is
     variable pass      : out boolean;
     constant got       : in time;
     constant expected  : in time;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1894,7 +1894,7 @@ package check_pkg is
     variable pass      : out boolean;
     constant got       : in time;
     constant expected  : in time;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1903,7 +1903,7 @@ package check_pkg is
     constant checker   : in checker_t;
     constant got       : in time;
     constant expected  : in time;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1911,7 +1911,7 @@ package check_pkg is
   impure function check_equal(
     constant got       : in time;
     constant expected  : in time;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1921,7 +1921,7 @@ package check_pkg is
     constant checker   : in checker_t;
     constant got       : in time;
     constant expected  : in time;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1933,7 +1933,7 @@ package check_pkg is
   procedure check_match(
     constant got       : in unsigned;
     constant expected  : in unsigned;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1942,7 +1942,7 @@ package check_pkg is
     variable pass      : out boolean;
     constant got       : in unsigned;
     constant expected  : in unsigned;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1952,7 +1952,7 @@ package check_pkg is
     variable pass      : out boolean;
     constant got       : in unsigned;
     constant expected  : in unsigned;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1961,7 +1961,7 @@ package check_pkg is
     constant checker   : in checker_t;
     constant got       : in unsigned;
     constant expected  : in unsigned;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1969,7 +1969,7 @@ package check_pkg is
   impure function check_match(
     constant got       : in unsigned;
     constant expected  : in unsigned;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1979,7 +1979,7 @@ package check_pkg is
     constant checker   : in checker_t;
     constant got       : in unsigned;
     constant expected  : in unsigned;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1988,7 +1988,7 @@ package check_pkg is
   procedure check_match(
     constant got       : in std_logic_vector;
     constant expected  : in std_logic_vector;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -1997,7 +1997,7 @@ package check_pkg is
     variable pass      : out boolean;
     constant got       : in std_logic_vector;
     constant expected  : in std_logic_vector;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -2007,7 +2007,7 @@ package check_pkg is
     variable pass      : out boolean;
     constant got       : in std_logic_vector;
     constant expected  : in std_logic_vector;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -2016,7 +2016,7 @@ package check_pkg is
     constant checker   : in checker_t;
     constant got       : in std_logic_vector;
     constant expected  : in std_logic_vector;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -2024,7 +2024,7 @@ package check_pkg is
   impure function check_match(
     constant got       : in std_logic_vector;
     constant expected  : in std_logic_vector;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -2034,7 +2034,7 @@ package check_pkg is
     constant checker   : in checker_t;
     constant got       : in std_logic_vector;
     constant expected  : in std_logic_vector;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -2043,7 +2043,7 @@ package check_pkg is
   procedure check_match(
     constant got       : in signed;
     constant expected  : in signed;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -2052,7 +2052,7 @@ package check_pkg is
     variable pass      : out boolean;
     constant got       : in signed;
     constant expected  : in signed;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -2062,7 +2062,7 @@ package check_pkg is
     variable pass      : out boolean;
     constant got       : in signed;
     constant expected  : in signed;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -2071,7 +2071,7 @@ package check_pkg is
     constant checker   : in checker_t;
     constant got       : in signed;
     constant expected  : in signed;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -2079,7 +2079,7 @@ package check_pkg is
   impure function check_match(
     constant got       : in signed;
     constant expected  : in signed;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -2089,7 +2089,7 @@ package check_pkg is
     constant checker   : in checker_t;
     constant got       : in signed;
     constant expected  : in signed;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -2098,7 +2098,7 @@ package check_pkg is
   procedure check_match(
     constant got       : in std_logic;
     constant expected  : in std_logic;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -2107,7 +2107,7 @@ package check_pkg is
     variable pass      : out boolean;
     constant got       : in std_logic;
     constant expected  : in std_logic;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -2117,7 +2117,7 @@ package check_pkg is
     variable pass      : out boolean;
     constant got       : in std_logic;
     constant expected  : in std_logic;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -2126,7 +2126,7 @@ package check_pkg is
     constant checker   : in checker_t;
     constant got       : in std_logic;
     constant expected  : in std_logic;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "");

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -2134,7 +2134,7 @@ package check_pkg is
   impure function check_match(
     constant got       : in std_logic;
     constant expected  : in std_logic;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")

ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: dc5e12649c01329de9f9e7d3edeee8d12e39ddac
Deprecated constants with _c suffix.
--- a/vunit/vhdl/check/src/check_api.vhd
+++ b/vunit/vhdl/check/src/check_api.vhd
@@ -2144,7 +2144,7 @@ package check_pkg is
     constant checker   : in checker_t;
     constant got       : in std_logic;
     constant expected  : in std_logic;
-    constant msg       : in string      := check_result_tag_c;
+    constant msg       : in string      := check_result_tag;
     constant level     : in log_level_t := null_log_level;
     constant line_num  : in natural     := 0;
     constant file_name : in string      := "")
ParseResult:
UPD HdlIdDef@@msg to msg
    UPD HdlValueId@@check_result_tag_c to check_result_tag


CommitId: 1a1923390afef703c5f3ac580836021fc8a8e3ec
Merge pull request #434 from bradleyharden/test_modelsim_fixup
--- a/vunit/vhdl/verification_components/src/wishbone_master.vhd
+++ b/vunit/vhdl/verification_components/src/wishbone_master.vhd
@@ -74,7 +74,6 @@ begin
           wait until rising_edge(clk);
         end if;
 
-        push(acknowledge_queue, request_msg);
         start_cycle <= not start_cycle;
         cycle_type := msg_type;
 

ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: push
                HdlValueId: acknowledge_queue
                HdlValueId: request_msg


CommitId: 1a1923390afef703c5f3ac580836021fc8a8e3ec
Merge pull request #434 from bradleyharden/test_modelsim_fixup
--- a/vunit/vhdl/verification_components/src/wishbone_master.vhd
+++ b/vunit/vhdl/verification_components/src/wishbone_master.vhd
@@ -95,7 +94,7 @@ begin
         wait until rising_edge(clk) and stall = '0';
         stb <= '0';
 
-        request_msg := null_msg;
+        push(acknowledge_queue, request_msg);
 
       elsif msg_type = wait_until_idle_msg then
         if cycle then
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        MOV HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: push
                HdlValueId: acknowledge_queue
                HdlValueId: request_msg

DEL HdlStmAssign@@ from body
HdlStmAssign
    HdlValueId: null_msg
    HdlValueId: request_msg


CommitId: 713e0f6895157c9490d63a5e6331bfb2d0361c1f
Release 4.0.2, fix push of message and make sure axi_lite_master aligns with clk
--- a/vunit/vhdl/verification_components/src/axi_lite_master.vhd
+++ b/vunit/vhdl/verification_components/src/axi_lite_master.vhd
@@ -18,29 +18,29 @@ context work.com_context;
 context work.vunit_context;
 
 entity axi_lite_master is
-  generic (
+  generic(
     bus_handle : bus_master_t
-    );
-  port (
+  );
+  port(
     aclk : in std_logic;
 
     arready : in std_logic;
     arvalid : out std_logic := '0';
-    araddr : out std_logic_vector(address_length(bus_handle)-1 downto 0) := (others => '0');
+    araddr : out std_logic_vector(address_length(bus_handle) - 1 downto 0) := (others => '0');
 
     rready : out std_logic := '0';
     rvalid : in std_logic;
-    rdata : in std_logic_vector(data_length(bus_handle)-1 downto 0);
+    rdata : in std_logic_vector(data_length(bus_handle) - 1 downto 0);
     rresp : in axi_resp_t;
 
     awready : in std_logic;
     awvalid : out std_logic := '0';
-    awaddr : out std_logic_vector(address_length(bus_handle)-1 downto 0) := (others => '0');
+    awaddr : out std_logic_vector(address_length(bus_handle) - 1 downto 0) := (others => '0');
 
     wready : in std_logic;
     wvalid : out std_logic := '0';
-    wdata : out std_logic_vector(data_length(bus_handle)-1 downto 0) := (others => '0');
-    wstrb : out std_logic_vector(byte_enable_length(bus_handle)-1 downto 0) := (others => '0');
+    wdata : out std_logic_vector(data_length(bus_handle) - 1 downto 0) := (others => '0');
+    wstrb : out std_logic_vector(byte_enable_length(bus_handle) - 1 downto 0) := (others => '0');
 
     bvalid : in std_logic;
     bready : out std_logic := '0';

ParseResult:
MOV HdlModuleDec@@axi_lite_master to objs
HdlModuleDec: axi_lite_master
    list: params
        HdlIdDef: bus_handle
            HdlValueId: bus_master_t
            HdlDirection: IN
    list: ports
        HdlIdDef: aclk
            HdlValueId: std_logic
            HdlDirection: IN
        HdlIdDef: arready
            HdlValueId: std_logic
            HdlDirection: IN
        HdlIdDef: arvalid
            HdlValueId: std_logic
            HdlValueInt: 0
            HdlDirection: OUT
        HdlIdDef: araddr
            HdlOp: INDEX
                list: ops
                    HdlValueId: std_logic_vector
                    HdlOp: DOWNTO
                        list: ops
                            HdlOp: SUB
                                list: ops
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: address_length
                                            HdlValueId: bus_handle
                                    HdlValueInt: 1
            list: value
                HdlOp: MAP_ASSOCIATION
                    list: ops
                        type
                        HdlValueInt: 0
            HdlDirection: OUT
        HdlIdDef: rready
            HdlValueId: std_logic
            HdlValueInt: 0
            HdlDirection: OUT
        HdlIdDef: rvalid
            HdlValueId: std_logic
            HdlDirection: IN
        HdlIdDef: rdata
            HdlOp: INDEX
                list: ops
                    HdlValueId: std_logic_vector
                    HdlOp: DOWNTO
                        list: ops
                            HdlOp: SUB
                                list: ops
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: data_length
                                            HdlValueId: bus_handle
                                    HdlValueInt: 1
            HdlDirection: IN
        HdlIdDef: rresp
            HdlValueId: axi_resp_t
            HdlDirection: IN
        HdlIdDef: awready
            HdlValueId: std_logic
            HdlDirection: IN
        HdlIdDef: awvalid
            HdlValueId: std_logic
            HdlValueInt: 0
            HdlDirection: OUT
        HdlIdDef: awaddr
            HdlOp: INDEX
                list: ops
                    HdlValueId: std_logic_vector
                    HdlOp: DOWNTO
                        list: ops
                            HdlOp: SUB
                                list: ops
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: address_length
                                            HdlValueId: bus_handle
                                    HdlValueInt: 1
            list: value
                HdlOp: MAP_ASSOCIATION
                    list: ops
                        type
                        HdlValueInt: 0
            HdlDirection: OUT
        HdlIdDef: wready
            HdlValueId: std_logic
            HdlDirection: IN
        HdlIdDef: wvalid
            HdlValueId: std_logic
            HdlValueInt: 0
            HdlDirection: OUT
        HdlIdDef: wdata
            HdlOp: INDEX
                list: ops
                    HdlValueId: std_logic_vector
                    HdlOp: DOWNTO
                        list: ops
                            HdlOp: SUB
                                list: ops
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: data_length
                                            HdlValueId: bus_handle
                                    HdlValueInt: 1
            list: value
                HdlOp: MAP_ASSOCIATION
                    list: ops
                        type
                        HdlValueInt: 0
            HdlDirection: OUT
        HdlIdDef: wstrb
            HdlOp: INDEX
                list: ops
                    HdlValueId: std_logic_vector
                    HdlOp: DOWNTO
                        list: ops
                            HdlOp: SUB
                                list: ops
                                    HdlOp: INDEX
                                        list: ops
                                            HdlValueId: byte_enable_length
                                            HdlValueId: bus_handle
                                    HdlValueInt: 1
            list: value
                HdlOp: MAP_ASSOCIATION
                    list: ops
                        type
                        HdlValueInt: 0
            HdlDirection: OUT
        HdlIdDef: bvalid
            HdlValueId: std_logic
            HdlDirection: IN
        HdlIdDef: bready
            HdlValueId: std_logic
            HdlValueInt: 0
            HdlDirection: OUT
        HdlIdDef: bresp
            HdlValueId: axi_resp_t
            HdlValueId: axi_resp_okay
            HdlDirection: IN
    list: objs


CommitId: f6537bb85d5ef051583d49253de4b01f859c3e51
Update com.
--- a/vunit/vhdl/com/src/com_std_codec_builder.vhd
+++ b/vunit/vhdl/com/src/com_std_codec_builder.vhd
@@ -8,6 +8,9 @@
 
 library vunit_lib;
 context vunit_lib.vunit_context;
+use work.queue_pkg.all;
+use work.string_ptr_pkg.all;
+use work.integer_vector_ptr_pkg.all;
 
 library ieee;
 use ieee.std_logic_1164.all;

ParseResult:
INS HdlLibrary@@vunit_lib to objs

INS HdlLibrary@@ieee to objs

DEL HdlLibrary@@vunit_lib from objs

DEL HdlLibrary@@ieee from objs


CommitId: f6537bb85d5ef051583d49253de4b01f859c3e51
Update com.
--- a/vunit/vhdl/com/src/com_std_codec_builder.vhd
+++ b/vunit/vhdl/com/src/com_std_codec_builder.vhd
@@ -136,6 +139,15 @@ package com_std_codec_builder_pkg is
     constant code   :       string;
     variable index  : inout positive;
     variable result : out   float);
+  procedure decode (constant code : string; variable index : inout positive; variable result : out queue_t);
+  procedure decode (
+    constant code   : string;
+    variable index : inout positive;
+    variable result : out integer_vector_ptr_t);
+  procedure decode (
+    constant code   : string;
+    variable index : inout positive;
+    variable result : out string_ptr_t);
   function encode_array_header (
     constant range_left1   : string;
     constant range_right1  : string;

ParseResult:
INS HdlFunctionDef@@decode to objs
HdlFunctionDef: decode
    list: params
        HdlIdDef: code
            HdlValueId: string
            HdlDirection: INTERNAL
        HdlIdDef: index
            HdlValueId: positive
            HdlDirection: INOUT
        HdlIdDef: result
            HdlValueId: queue_t
            HdlDirection: OUT
    list: body

INS HdlFunctionDef@@decode to objs
HdlFunctionDef: decode
    list: params
        HdlIdDef: code
            HdlValueId: string
            HdlDirection: INTERNAL
        HdlIdDef: index
            HdlValueId: positive
            HdlDirection: INOUT
        HdlIdDef: result
            HdlValueId: integer_vector_ptr_t
            HdlDirection: OUT
    list: body

INS HdlFunctionDef@@decode to objs
HdlFunctionDef: decode
    list: params
        HdlIdDef: code
            HdlValueId: string
            HdlDirection: INTERNAL
        HdlIdDef: index
            HdlValueId: positive
            HdlDirection: INOUT
        HdlIdDef: result
            HdlValueId: string_ptr_t
            HdlDirection: OUT
    list: body


CommitId: 3646fec05aeb97ecba35f301c6ac665b2c1e5bd4
Set stop level only for warning, error, failure
--- a/vunit/vhdl/logging/src/logger_pkg-body.vhd
+++ b/vunit/vhdl/logging/src/logger_pkg-body.vhd
@@ -322,10 +310,6 @@ package body logger_pkg is
     return (p_data => to_integer_vector_ptr(get(children, idx)));
   end;
 
-
-  constant stop_count_unset : integer := 0;
-  constant stop_count_infinite : integer := integer'high;
-
   procedure p_set_stop_count(logger : logger_t;
                              log_level : log_level_t;
                              value : natural;

ParseResult:
MOV HdlIdDef@@stop_count_unset to objs
HdlIdDef: stop_count_unset
    HdlValueId: integer
    HdlValueInt: 0
    HdlDirection: INTERNAL

MOV HdlIdDef@@stop_count_infinite to objs
HdlIdDef: stop_count_infinite
    HdlValueId: integer
    HdlOp: APOSTROPHE
        list: ops
            HdlValueId: integer
            HdlValueId: high
    HdlDirection: INTERNAL


CommitId: 754cf9896d948cc26aa6dd67b459291564fdc104
fix potential lockup with calling wait_until_idle on a (just) empty queue
--- a/vunit/vhdl/verification_components/src/axi_stream_master.vhd
+++ b/vunit/vhdl/verification_components/src/axi_stream_master.vhd
@@ -45,6 +45,7 @@ begin
 
   main : process
     variable request_msg : msg_t;
+    variable dummy_msg   : msg_t;
     variable msg_type    : msg_type_t;
   begin
     receive(net, master.p_actor, request_msg);

ParseResult:
INS HdlIdDef@@dummy_msg to body
HdlIdDef: dummy_msg
    HdlValueId: msg_t
    HdlDirection: INTERNAL


CommitId: 754cf9896d948cc26aa6dd67b459291564fdc104
fix potential lockup with calling wait_until_idle on a (just) empty queue
--- a/vunit/vhdl/verification_components/src/axi_stream_master.vhd
+++ b/vunit/vhdl/verification_components/src/axi_stream_master.vhd
@@ -55,6 +56,9 @@ begin
     elsif msg_type = wait_for_time_msg then
       push(message_queue, request_msg);
     elsif msg_type = wait_until_idle_msg then
+      dummy_msg := request_msg;
+      push(message_queue, dummy_msg);  -- Push a copy onto the queue, to always have a notify even if the queue happened
+                                       --  to be just empty at this moment
       wait on notify_bus_process_done until is_empty(message_queue);
       handle_wait_until_idle(net, msg_type, request_msg);
     else

ParseResult:
INS HdlStmAssign@@ to body
HdlStmAssign
    HdlValueId: request_msg
    HdlValueId: dummy_msg

UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        INS HdlOp@@CALL to body
        HdlOp: CALL
            list: ops
                HdlValueId: push
                HdlValueId: message_queue
                HdlValueId: dummy_msg


CommitId: 754cf9896d948cc26aa6dd67b459291564fdc104
fix potential lockup with calling wait_until_idle on a (just) empty queue
--- a/vunit/vhdl/verification_components/src/axi_stream_master.vhd
+++ b/vunit/vhdl/verification_components/src/axi_stream_master.vhd
@@ -89,7 +93,8 @@ begin
           handle_sync_message(net, msg_type, msg);
           -- Re-align with the clock when a wait for time message was handled, because this breaks edge alignment.
           wait until rising_edge(aclk);
-
+        elsif msg_type = wait_until_idle_msg then
+          -- Ignore this message, but expect it
         elsif msg_type = stream_push_msg or msg_type = push_axi_stream_msg then
           tvalid <= '1';
           tdata <= pop_std_ulogic_vector(msg);
ParseResult:
UPD HdlStmIf@@ to 
    INS tuple@@ to elifs
    tuple
        HdlOp: EQ
            list: ops
                HdlValueId: msg_type
                HdlValueId: wait_until_idle_msg
        HdlStmBlock: SEQ
            list: body


CommitId: 5d375b49571f7acd747622e08fc12fa59cfad11b
Not writing error.csv to current working directory per default, rather using the output path
--- a/vhdl/run/src/run.vhd
+++ b/vhdl/run/src/run.vhd
@@ -49,7 +49,8 @@ package body run_pkg is
                      checker_cfg.logger_cfg.log_separator,
                      true);
       else
-        checker_init(stop_level => error);
+        checker_init(stop_level => error,
+                     file_name => get(runner_cfg, "output path") & "error.csv");
       end if;
     end if;
 
ParseResult:
UPD HdlStmIf@@ to 
    UPD HdlStmBlock@@SEQ to SEQ
        UPD HdlOp@@CALL to CALL
            INS HdlOp@@ARROW to ops
            HdlOp: ARROW
                list: ops
                    HdlValueId: file_name
                    HdlOp: CONCAT
                        list: ops
                            HdlOp: INDEX
                                list: ops
                                    HdlValueId: get
                                    HdlValueId: runner_cfg
                                    str
                            str


CommitId: 10220c5fb7cd6c1e095a4b41087c48aa05e30c59
Deprecated external_error flag to test_runner_cleanup
--- a/vunit/vhdl/run/src/run.vhd
+++ b/vunit/vhdl/run/src/run.vhd
@@ -91,8 +91,7 @@ package body run_pkg is
   end test_runner_setup;
 
   procedure test_runner_cleanup (
-    signal runner: inout runner_sync_t;
-    constant external_failure : in boolean := false) is
+    signal runner: inout runner_sync_t) is
 
   begin
     set_phase(runner_state, test_runner_cleanup);

ParseResult:
DEL HdlIdDef@@external_failure from params
HdlIdDef: external_failure
    HdlValueId: boolean
    HdlValueId: false
    HdlDirection: INTERNAL


CommitId: 10220c5fb7cd6c1e095a4b41087c48aa05e30c59
Deprecated external_error flag to test_runner_cleanup
--- a/vunit/vhdl/run/src/run.vhd
+++ b/vunit/vhdl/run/src/run.vhd
@@ -110,11 +109,6 @@ package body run_pkg is
       return;
     end if;
 
-    if external_failure then
-      core_pkg.core_failure("External failure.");
-      return;
-    end if;
-
     runner.exit_without_errors <= true;
     runner.locks(test_runner_setup to test_runner_cleanup) <= (others => (false, false));
     wait for 0 ns;
ParseResult:
DEL HdlStmIf@@ from body
HdlStmIf
    HdlValueId: external_failure
    HdlStmBlock: SEQ
        list: body
            HdlOp: CALL
                list: ops
                    HdlOp: DOT
                        list: ops
                            HdlValueId: core_pkg
                            HdlValueId: core_failure
                    str
            HdlStmReturn
    list: elifs


CommitId: e35a18787c5002568e03642ef3d347860deaf4fe
Fixed lint issues in dictionary package.
--- a/vunit/vhdl/dictionary/src/dictionary.vhd
+++ b/vunit/vhdl/dictionary/src/dictionary.vhd
@@ -34,7 +34,6 @@ package body dictionary is
   function len (
     constant d : frozen_dictionary_t)
     return natural is
-    variable key_value_pairs : lines_t;
   begin
     return count(replace(d, "::", "__escaped_colon__"), ":");
   end;
ParseResult:
DEL HdlIdDef@@key_value_pairs from body
HdlIdDef: key_value_pairs
    HdlValueId: lines_t
    HdlDirection: INTERNAL


CommitId: 79f4e1238c9864b01157d7ab546b720ad48c0081
Make fail_on_warning first parameter of test_runner_cleanup.
--- a/vunit/vhdl/run/src/run_api.vhd
+++ b/vunit/vhdl/run/src/run_api.vhd
@@ -54,9 +54,9 @@ package run_pkg is
 
   procedure test_runner_cleanup (
     signal runner: inout runner_sync_t;
+    fail_on_warning : boolean := false;
     allow_disabled_errors : boolean := false;
-    allow_disabled_failures : boolean := false;
-    fail_on_warning : boolean := false);
+    allow_disabled_failures : boolean := false);
 
   impure function test_suite_error (
     constant err : boolean)
ParseResult:
MOV HdlIdDef@@fail_on_warning to params
HdlIdDef: fail_on_warning
    HdlValueId: boolean
    HdlValueId: false
    HdlDirection: IN


